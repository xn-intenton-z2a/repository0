The REST API is now versioned. For more information, see "About API versioning."GitHub REST API documentation Create integrations, retrieve data, and automate your workflows with the GitHub REST API.Overview Quickstart Start hereView all About the REST APIGet oriented to the REST API documentation.Getting started with the REST APILearn how to use the GitHub REST API.Authenticating to the REST APIYou can authenticate to the REST API to access more endpoints and have a higher rate limit.Best practices for using the REST APIFollow these best practices when using GitHub's API.PopularRate limits for the REST APILearn about REST API rate limits, how to avoid exceeding them, and what to do if you do exceed them.Troubleshooting the REST APILearn how to diagnose and resolve common problems for the REST API.Scripting with the REST API and JavaScriptWrite a script using the Octokit.js SDK to interact with the REST API.Keeping your API credentials secureFollow these best practices to keep your API credentials and tokens secure.What's newView all Credential revocation API to revoke exposed PATs is now generally availableApril 29Dependabot API now contains has:patch in general availabilityApril 29Check if private vulnerability reporting is enabled via REST APIMarch 08GuidesDelivering deploymentsUsing the Deployments REST API, you can build custom tooling that interacts with your server and a third-party app.@GitHubUsing the REST API to interact with checksYou can use the REST API to build GitHub Apps that run powerful checks against code changes in a repository. You can create apps that perform continuous integration, code linting, or code scanning services and provide detailed feedback on commits.@GitHubUsing pagination in the REST APILearn how to navigate through paginated responses from the REST API.@GitHubExplore guides All REST API docsAbout the REST APIAbout the REST APIComparing GitHub's REST API and GraphQL APIAPI VersionsBreaking changesAbout the OpenAPI description for the REST APIUsing the REST APIGetting started with the REST APIRate limits for the REST APIUsing pagination in the REST APILibraries for the REST APIBest practices for using the REST APITroubleshooting the REST APITimezones and the REST APIUsing CORS and JSONP to make cross-origin requestsIssue event typesGitHub event typesAuthenticating to the REST APIAuthenticating to the REST APIKeeping your API credentials secureEndpoints available for GitHub App installation access tokensEndpoints available for GitHub App user access tokensEndpoints available for fine-grained personal access tokensPermissions required for GitHub AppsPermissions required for fine-grained personal access tokensGuidesScripting with the REST API and JavaScriptScripting with the REST API and RubyDiscovering resources for a userDelivering deploymentsRendering data as graphsWorking with commentsBuilding a CI serverUsing the REST API to interact with your Git databaseUsing the REST API to interact with checksEncrypting secrets for the REST APIREST API endpoints for GitHub ActionsREST API endpoints for GitHub Actions artifactsREST API endpoints for GitHub Actions cacheGitHub-hosted runnersREST API endpoints for GitHub Actions OIDCREST API endpoints for GitHub Actions permissionsREST API endpoints for GitHub Actions SecretsREST API endpoints for self-hosted runner groupsREST API endpoints for self-hosted runnersREST API endpoints for GitHub Actions variablesREST API endpoints for workflow jobsREST API endpoints for workflow runsREST API endpoints for workflowsREST API endpoints for activityREST API endpoints for eventsREST API endpoints for feedsREST API endpoints for notificationsREST API endpoints for starringREST API endpoints for watchingREST API endpoints for appsREST API endpoints for GitHub AppsREST API endpoints for GitHub App installationsREST API endpoints for GitHub MarketplaceREST API endpoints for OAuth authorizationsREST API endpoints for GitHub App webhooksREST API endpoints for billingREST API endpoints for billingEnhanced billing platformREST API endpoints for branches and their settingsREST API endpoints for branchesREST API endpoints for protected branchesREST API endpoints for security campaignsREST API endpoints for security campaignsREST API endpoints for checksREST API endpoints for check runsREST API endpoints for check suitesREST API endpoints for GitHub ClassroomREST API endpoints for GitHub ClassroomREST API endpoints for code scanningREST API endpoints for code scanningSecurity settingsConfigurationsREST API endpoints for codes of conductREST API endpoints for codes of conductREST API endpoints for CodespacesREST API endpoints for CodespacesREST API endpoints for Codespaces organizationsREST API endpoints for Codespaces organization secretsREST API endpoints for Codespaces machinesREST API endpoints for Codespaces repository secretsREST API endpoints for Codespaces user secretsREST API endpoints for collaboratorsREST API endpoints for collaboratorsREST API endpoints for repository invitationsREST API endpoints for commitsREST API endpoints for commitsREST API endpoints for commit commentsREST API endpoints for commit statusesREST API endpoints for CopilotREST API endpoints for Copilot metricsREST API endpoints for Copilot user managementCredentialsRevocationREST API endpoints for DependabotREST API endpoints for Dependabot alertsREST API endpoints for Dependabot secretsREST API endpoints for the dependency graphREST API endpoints for dependency reviewREST API endpoints for dependency submissionREST API endpoints for software bill of materials (SBOM)REST API endpoints for deploy keysREST API endpoints for deploy keysREST API endpoints for deploymentsREST API endpoints for deployment branch policiesREST API endpoints for deploymentsREST API endpoints for deployment environmentsREST API endpoints for protection rulesREST API endpoints for deployment statusesREST API endpoints for emojisREST API endpoints for emojisREST API endpoints for gists and gist commentsREST API endpoints for gistsREST API endpoints for gist commentsREST API endpoints for Git databaseREST API endpoints for Git blobsREST API endpoints for Git commitsREST API endpoints for Git referencesREST API endpoints for Git tagsREST API endpoints for Git treesREST API endpoints for gitignoreREST API endpoints for gitignoreREST API endpoints for interactionsREST API endpoints for organization interactionsREST API endpoints for repository interactionsREST API endpoints for user interactionsREST API endpoints for issuesREST API endpoints for issue assigneesREST API endpoints for issue commentsREST API endpoints for issue eventsREST API endpoints for issuesREST API endpoints for labelsREST API endpoints for milestonesREST API endpoints for sub-issuesREST API endpoints for timeline eventsREST API endpoints for licensesREST API endpoints for licensesREST API endpoints for MarkdownREST API endpoints for MarkdownREST API endpoints for meta dataREST API endpoints for meta dataREST API endpoints for metricsREST API endpoints for community metricsREST API endpoints for repository statisticsREST API endpoints for repository trafficREST API endpoints for migrationsREST API endpoints for organization migrationsREST API endpoints for source importsREST API endpoints for user migrationsREST API endpoints for organizationsREST API endpoints for API InsightsREST API endpoints for blocking usersREST API endpoints for custom propertiesREST API endpoints for issue typesREST API endpoints for organization membersREST API endpoints for network configurationsREST API endpoints for organization rolesREST API endpoints for organizationsREST API endpoints for outside collaboratorsREST API endpoints for personal access tokensREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for security managersREST API endpoints for organization webhooksREST API endpoints for packagesREST API endpoints for packagesREST API endpoints for GitHub PagesREST API endpoints for GitHub PagesPrivate registriesOrganization configurationsREST API endpoints for Projects (classic)REST API endpoints for Projects (classic)REST API endpoints for Project (classic) cardsREST API endpoints for Project (classic) collaboratorsREST API endpoints for Project (classic) columnsREST API endpoints for pull requestsREST API endpoints for pull requestsREST API endpoints for pull request review commentsREST API endpoints for review requestsREST API endpoints for pull request reviewsREST API endpoints for rate limitsREST API endpoints for rate limitsREST API endpoints for reactionsREST API endpoints for reactionsREST API endpoints for releases and release assetsREST API endpoints for releasesREST API endpoints for release assetsREST API endpoints for repositoriesREST API endpoints for repository autolinksREST API endpoints for repository contentsREST API endpoints for custom propertiesREST API endpoints for forksREST API endpoints for repositoriesREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for repository tagsREST API endpoints for repository webhooksREST API endpoints for searchREST API endpoints for searchREST API endpoints for secret scanningREST API endpoints for secret scanningREST API endpoints for security advisoriesREST API endpoints for global security advisoriesREST API endpoints for repository security advisoriesREST API endpoints for teamsREST API endpoints for teamsREST API endpoints for team discussion commentsREST API endpoints for team discussionsREST API endpoints for team membersREST API endpoints for usersREST API endpoints for artifact attestationsREST API endpoints for blocking usersREST API endpoints for emailsREST API endpoints for followersREST API endpoints for GPG keysREST API endpoints for Git SSH keysREST API endpoints for social accountsREST API endpoints for SSH signing keysREST API endpoints for users\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."GitHub REST API documentation Create integrations, retrieve data, and automate your workflows with the GitHub REST API.Overview Quickstart Start hereView all About the REST APIGet oriented to the REST API documentation.Getting started with the REST APILearn how to use the GitHub REST API.Authenticating to the REST APIYou can authenticate to the REST API to access more endpoints and have a higher rate limit.Best practices for using the REST APIFollow these best practices when using GitHub's API.PopularRate limits for the REST APILearn about REST API rate limits, how to avoid exceeding them, and what to do if you do exceed them.Troubleshooting the REST APILearn how to diagnose and resolve common problems for the REST API.Scripting with the REST API and JavaScriptWrite a script using the Octokit.js SDK to interact with the REST API.Keeping your API credentials secureFollow these best practices to keep your API credentials and tokens secure.What's newView all Credential revocation API to revoke exposed PATs is now generally availableApril 29Dependabot API now contains has:patch in general availabilityApril 29Check if private vulnerability reporting is enabled via REST APIMarch 08GuidesDelivering deploymentsUsing the Deployments REST API, you can build custom tooling that interacts with your server and a third-party app.@GitHubUsing the REST API to interact with checksYou can use the REST API to build GitHub Apps that run powerful checks against code changes in a repository. You can create apps that perform continuous integration, code linting, or code scanning services and provide detailed feedback on commits.@GitHubUsing pagination in the REST APILearn how to navigate through paginated responses from the REST API.@GitHubExplore guides All REST API docsAbout the REST APIAbout the REST APIComparing GitHub's REST API and GraphQL APIAPI VersionsBreaking changesAbout the OpenAPI description for the REST APIUsing the REST APIGetting started with the REST APIRate limits for the REST APIUsing pagination in the REST APILibraries for the REST APIBest practices for using the REST APITroubleshooting the REST APITimezones and the REST APIUsing CORS and JSONP to make cross-origin requestsIssue event typesGitHub event typesAuthenticating to the REST APIAuthenticating to the REST APIKeeping your API credentials secureEndpoints available for GitHub App installation access tokensEndpoints available for GitHub App user access tokensEndpoints available for fine-grained personal access tokensPermissions required for GitHub AppsPermissions required for fine-grained personal access tokensGuidesScripting with the REST API and JavaScriptScripting with the REST API and RubyDiscovering resources for a userDelivering deploymentsRendering data as graphsWorking with commentsBuilding a CI serverUsing the REST API to interact with your Git databaseUsing the REST API to interact with checksEncrypting secrets for the REST APIREST API endpoints for GitHub ActionsREST API endpoints for GitHub Actions artifactsREST API endpoints for GitHub Actions cacheGitHub-hosted runnersREST API endpoints for GitHub Actions OIDCREST API endpoints for GitHub Actions permissionsREST API endpoints for GitHub Actions SecretsREST API endpoints for self-hosted runner groupsREST API endpoints for self-hosted runnersREST API endpoints for GitHub Actions variablesREST API endpoints for workflow jobsREST API endpoints for workflow runsREST API endpoints for workflowsREST API endpoints for activityREST API endpoints for eventsREST API endpoints for feedsREST API endpoints for notificationsREST API endpoints for starringREST API endpoints for watchingREST API endpoints for appsREST API endpoints for GitHub AppsREST API endpoints for GitHub App installationsREST API endpoints for GitHub MarketplaceREST API endpoints for OAuth authorizationsREST API endpoints for GitHub App webhooksREST API endpoints for billingREST API endpoints for billingEnhanced billing platformREST API endpoints for branches and their settingsREST API endpoints for branchesREST API endpoints for protected branchesREST API endpoints for security campaignsREST API endpoints for security campaignsREST API endpoints for checksREST API endpoints for check runsREST API endpoints for check suitesREST API endpoints for GitHub ClassroomREST API endpoints for GitHub ClassroomREST API endpoints for code scanningREST API endpoints for code scanningSecurity settingsConfigurationsREST API endpoints for codes of conductREST API endpoints for codes of conductREST API endpoints for CodespacesREST API endpoints for CodespacesREST API endpoints for Codespaces organizationsREST API endpoints for Codespaces organization secretsREST API endpoints for Codespaces machinesREST API endpoints for Codespaces repository secretsREST API endpoints for Codespaces user secretsREST API endpoints for collaboratorsREST API endpoints for collaboratorsREST API endpoints for repository invitationsREST API endpoints for commitsREST API endpoints for commitsREST API endpoints for commit commentsREST API endpoints for commit statusesREST API endpoints for CopilotREST API endpoints for Copilot metricsREST API endpoints for Copilot user managementCredentialsRevocationREST API endpoints for DependabotREST API endpoints for Dependabot alertsREST API endpoints for Dependabot secretsREST API endpoints for the dependency graphREST API endpoints for dependency reviewREST API endpoints for dependency submissionREST API endpoints for software bill of materials (SBOM)REST API endpoints for deploy keysREST API endpoints for deploy keysREST API endpoints for deploymentsREST API endpoints for deployment branch policiesREST API endpoints for deploymentsREST API endpoints for deployment environmentsREST API endpoints for protection rulesREST API endpoints for deployment statusesREST API endpoints for emojisREST API endpoints for emojisREST API endpoints for gists and gist commentsREST API endpoints for gistsREST API endpoints for gist commentsREST API endpoints for Git databaseREST API endpoints for Git blobsREST API endpoints for Git commitsREST API endpoints for Git referencesREST API endpoints for Git tagsREST API endpoints for Git treesREST API endpoints for gitignoreREST API endpoints for gitignoreREST API endpoints for interactionsREST API endpoints for organization interactionsREST API endpoints for repository interactionsREST API endpoints for user interactionsREST API endpoints for issuesREST API endpoints for issue assigneesREST API endpoints for issue commentsREST API endpoints for issue eventsREST API endpoints for issuesREST API endpoints for labelsREST API endpoints for milestonesREST API endpoints for sub-issuesREST API endpoints for timeline eventsREST API endpoints for licensesREST API endpoints for licensesREST API endpoints for MarkdownREST API endpoints for MarkdownREST API endpoints for meta dataREST API endpoints for meta dataREST API endpoints for metricsREST API endpoints for community metricsREST API endpoints for repository statisticsREST API endpoints for repository trafficREST API endpoints for migrationsREST API endpoints for organization migrationsREST API endpoints for source importsREST API endpoints for user migrationsREST API endpoints for organizationsREST API endpoints for API InsightsREST API endpoints for blocking usersREST API endpoints for custom propertiesREST API endpoints for issue typesREST API endpoints for organization membersREST API endpoints for network configurationsREST API endpoints for organization rolesREST API endpoints for organizationsREST API endpoints for outside collaboratorsREST API endpoints for personal access tokensREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for security managersREST API endpoints for organization webhooksREST API endpoints for packagesREST API endpoints for packagesREST API endpoints for GitHub PagesREST API endpoints for GitHub PagesPrivate registriesOrganization configurationsREST API endpoints for Projects (classic)REST API endpoints for Projects (classic)REST API endpoints for Project (classic) cardsREST API endpoints for Project (classic) collaboratorsREST API endpoints for Project (classic) columnsREST API endpoints for pull requestsREST API endpoints for pull requestsREST API endpoints for pull request review commentsREST API endpoints for review requestsREST API endpoints for pull request reviewsREST API endpoints for rate limitsREST API endpoints for rate limitsREST API endpoints for reactionsREST API endpoints for reactionsREST API endpoints for releases and release assetsREST API endpoints for releasesREST API endpoints for release assetsREST API endpoints for repositoriesREST API endpoints for repository autolinksREST API endpoints for repository contentsREST API endpoints for custom propertiesREST API endpoints for forksREST API endpoints for repositoriesREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for repository tagsREST API endpoints for repository webhooksREST API endpoints for searchREST API endpoints for searchREST API endpoints for secret scanningREST API endpoints for secret scanningREST API endpoints for security advisoriesREST API endpoints for global security advisoriesREST API endpoints for repository security advisoriesREST API endpoints for teamsREST API endpoints for teamsREST API endpoints for team discussion commentsREST API endpoints for team discussionsREST API endpoints for team membersREST API endpoints for usersREST API endpoints for artifact attestationsREST API endpoints for blocking usersREST API endpoints for emailsREST API endpoints for followersREST API endpoints for GPG keysREST API endpoints for Git SSH keysREST API endpoints for social accountsREST API endpoints for SSH signing keysREST API endpoints for users\n\n\n\nGitHub DocsHelp for wherever you are on your GitHub journey.Get startedGet startedMigrationsAccount and profileAuthenticationBilling and paymentsSite policyCollaborative codingCodespacesRepositoriesPull requestsGitHub DiscussionsGitHub CopilotGitHub CopilotGet code suggestionsPrompt engineeringChat in GitHubCopilot Chat CookbookExtensions quickstartCI/CD and DevOpsGitHub ActionsGitHub PackagesGitHub PagesSecuritySecure codingSecret scanningSupply chain securityDependabotCode scanningSecurity advisoriesClient appsGitHub CLIGitHub MobileGitHub DesktopProject managementGitHub IssuesProjectsSearch on GitHubEnterprise and TeamsOrganizationsSecure your organizationEnterprise onboardingEnterprise administratorsGitHub Well-ArchitectedDevelopersAppsREST APIGraphQL APIWebhooksBuild Copilot ExtensionsGitHub ModelsCommunityBuilding communitiesGitHub SponsorsGitHub EducationGitHub for NonprofitsGitHub SupportContribute to GitHub DocsMore docsCodeQL query writingElectronnpmGetting startedSet up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.Connecting to GitHub with SSHYou can connect to GitHub using the Secure Shell Protocol (SSH), which provides a secure channel over an unsecured network.Creating and managing repositoriesYou can create a repository on GitHub to store and collaborate on your project's files, then manage the repository's name and location.Basic writing and formatting syntaxCreate sophisticated formatting for your prose and code on GitHub with simple syntax.PopularAbout pull requestsLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.Authentication documentationKeep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Managing remote repositoriesLearn to work with your local repositories on your computer and remote repositories hosted on GitHub.\n\n\n\nREST API/QuickstartQuickstart for GitHub REST APILearn how to get started with the GitHub REST API.Tool navigationGitHub CLIcurlJavaScriptIn this articleIntroductionUsing GitHub CLI in the command lineUsing GitHub CLI in GitHub ActionsUsing Octokit.jsUsing Octokit.js in GitHub ActionsUsing curl in the command lineUsing curl commands in GitHub ActionsNext stepsIntroduction
This article describes how to quickly get started with the GitHub REST API using GitHub CLI, curl, or JavaScript. For a more detailed guide, see Getting started with the REST API.

Using GitHub CLI in the command line
GitHub CLI is the easiest way to use the GitHub REST API from the command line.


Install GitHub CLI on macOS, Windows, or Linux. For more information, see Installation in the GitHub CLI repository.


To authenticate to GitHub, run the following command from your terminal.
gh auth login



Select where you want to authenticate to:

If you access GitHub at GitHub.com, select GitHub.com.
If you access GitHub at a different domain, select Other, then enter your hostname (for example: octocorp.ghe.com).



Follow the rest of the on-screen prompts.
GitHub CLI automatically stores your Git credentials for you when you choose HTTPS as your preferred protocol for Git operations and answer "yes" to the prompt asking if you would like to authenticate to Git with your GitHub credentials. This can be useful as it allows you to use Git commands like git push and git pull without needing to set up a separate credential manager or use SSH.


Make a request using the GitHub CLI api subcommand, followed by the path. Use the --method or -X flag to specify the method. For more information, see the GitHub CLI api documentation.
This example makes a request to the "Get Octocat" endpoint, which uses the method GET and the path /octocat. For the full reference documentation for this endpoint, see REST API endpoints for meta data.
Shellgh api /octocat --method GET
gh api /octocat --method GET



Using GitHub CLI in GitHub Actions
You can also use GitHub CLI in your GitHub Actions workflows. For more information, see Using GitHub CLI in workflows.
Authenticating with an access token
Instead of using the gh auth login command, pass an access token as an environment variable called GH_TOKEN. GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
The following example workflow uses the List repository issues endpoint, and requests a list of issues in the octocat/Spoon-Knife repository.
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues
on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
YAMLon:
  workflow_dispatch:
jobs:
  track_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues
on:
  workflow_dispatch:
jobs:
  track_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues





Using Octokit.js
You can use Octokit.js to interact with the GitHub REST API in your JavaScript scripts. For more information, see Scripting with the REST API and JavaScript.


Create an access token. For example, create a personal access token or a GitHub App user access token. You will use this token to authenticate your request, so you should give it any scopes or permissions that are required to access that endpoint. For more information, see Authenticating to the REST API or Identifying and authorizing users for GitHub Apps.
Warning

Treat your access token like a password.
To keep your token secure, you can store your token as a secret and run your script through GitHub Actions. For more information, see the Using Octokit.js in GitHub Actions section.

You can also store your token as a Codespaces secret and run your script in Codespaces. For more information, see Managing encrypted secrets for your codespaces.

If these options are not possible, consider using another CLI service to store your token securely.



Install octokit. For example, npm install octokit. For other ways to install or load octokit, see the Octokit.js README.


Import octokit in your script. For example, import { Octokit } from "octokit";. For other ways to import octokit, see the Octokit.js README.


Create an instance of Octokit with your token. Replace YOUR-TOKEN with your token.
JavaScriptconst octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});
const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});



Use octokit.request to execute your request. Send the HTTP method and path as the first argument. Specify any path, query, and body parameters in an object as the second argument. For more information about parameters, see Getting started with the REST API.
For example, in the following request the HTTP method is GET, the path is /repos/{owner}/{repo}/issues, and the parameters are owner: "octocat" and repo: "Spoon-Knife".
JavaScriptawait octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
});
await octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
});



Using Octokit.js in GitHub Actions
You can also execute your JavaScript scripts in your GitHub Actions workflows. For more information, see Workflow syntax for GitHub Actions.
Authenticating with an access token
GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
The following example workflow:

Checks out the repository content
Sets up Node.js
Installs octokit
Stores the value of GITHUB_TOKEN as an environment variable called TOKEN and runs .github/actions-scripts/use-the-api.mjs, which can access that environment variable as process.env.TOKEN

on:
  workflow_dispatch:
jobs:
  use_api_via_script:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - name: Check out repo content
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16.17.0'
          cache: npm

      - name: Install dependencies
        run: npm install octokit

      - name: Run script
        run: |
          node .github/actions-scripts/use-the-api.mjs
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

The following is an example JavaScript script with the file path .github/actions-scripts/use-the-api.mjs.
import { Octokit } from "octokit"

const octokit = new Octokit({ 
  auth: process.env.TOKEN
});

try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
      owner: "octocat",
      repo: "Spoon-Knife",
    });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the App API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
on:
  workflow_dispatch:
jobs:
  use_api_via_script:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo content
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16.17.0'
          cache: npm

      - name: Install dependencies
        run: npm install octokit

      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Run script
        run: |
          node .github/actions-scripts/use-the-api.mjs
        env:
          TOKEN: ${{ steps.generate-token.outputs.token }}






Using curl in the command line
Note

If you want to make API requests from the command line, GitHub recommends that you use GitHub CLI, which simplifies authentication and requests. For more information about getting started with the REST API using GitHub CLI, see the GitHub CLI version of this article.



Install curl if it isn't already installed on your machine. To check if curl is installed, execute curl --version in the command line. If the output provides information about the version of curl, that means curl is installed. If you get a message similar to command not found: curl, you need to download and install curl. For more information, see the curl project download page.


Create an access token. For example, create a personal access token or a GitHub App user access token. You will use this token to authenticate your request, so you should give it any scopes or permissions that are required to access the endpoint. For more information, see Authenticating to the REST API.
Warning

Treat your access token like a password.
To keep your token secure, you can store your token as a Codespaces secret and use the command line through Codespaces. For more information, see Managing encrypted secrets for your codespaces.


You can also use GitHub CLI instead of curl. GitHub CLI will take care of authentication for you. For more information, see the GitHub CLI version of this page.
If these options are not possible, consider using another CLI service to store your token securely.



Use the curl command to make your request. Pass your token in an Authorization header. Replace YOUR-TOKEN with your token.
Shellcurl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN"
curl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN"

Note

In most cases, you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer.



Using curl commands in GitHub Actions
You can also use curl commands in your GitHub Actions workflows.
Authenticating with an access token
GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"
on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the App API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about storing secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"

on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"





Next steps
For a more detailed guide, see Getting started with the REST API.\n\n\n\nREST API/About the REST API/About the REST APIAbout the REST APIGet oriented to the REST API documentation.In this articleGetting started with the REST APIFurther readingYou can use GitHub's API to build scripts and applications that automate processes, integrate with GitHub, and extend GitHub. For example, you could use the API to triage issues, build an analytics dashboard, or manage releases.
Each REST API endpoint is documented individually, and the endpoints are categorized by the resource that they primarily affect. For example, you can find endpoints relating to issues in REST API endpoints for issues.
Getting started with the REST API
If you are new to REST APIs, you may find it helpful to refer to the Quickstart or Getting Started guide for an introduction. For more information, see:

Quickstart for GitHub REST API
Getting started with the REST API

If you are familiar with REST APIs but new to GitHub's REST API, you may find it helpful to refer to the authentication documentation. For more information, see:

Authenticating to the REST API

If you are building scripts or applications that use the REST API, you may find some of the following guides helpful. For examples of scripting with the REST API, see:

Scripting with the REST API and JavaScript
Scripting with the REST API and Ruby
Building a GitHub App that responds to webhook events
Building a CLI with a GitHub App
Automatically redelivering failed deliveries for a repository webhook

For a list of libraries to facilitate scripting with the REST API, see Libraries for the REST API.
If you are building scripts or applications that use the REST API, you might also be interested in using webhooks to get notified about events or a GitHub App to access resources on behalf of a user or in an organization. For more information, see About webhooks and Deciding when to build a GitHub App.
Further reading

Comparing GitHub's REST API and GraphQL API
Best practices for using the REST API
Keeping your API credentials secure
Troubleshooting the REST API\n\n\n\nREST API/About the REST API/Comparing GitHub's APIsComparing GitHub's REST API and GraphQL APILearn about GitHub's APIs to extend and customize your GitHub experience.In this articleAbout GitHub's APIsChoosing the GraphQL APIChoosing the REST APIAbout GitHub's APIs
GitHub provides two APIs: a REST API and a GraphQL API. You can interact with both APIs using GitHub CLI, curl, the official Octokit libraries, and third party libraries. Occasionally, a feature may be supported on one API but not the other.
You should use the API that best aligns with your needs and that you are most comfortable using. You don't need to exclusively use one API over the other. Node IDs let you move between the REST API and GraphQL API. For more information, see Using global node IDs.
This article discusses the benefits of each API. For more information about the GraphQL API, see About the GraphQL API. For more information about the REST API, see About the REST API.
Choosing the GraphQL API
The GraphQL API returns exactly the data that you request. GraphQL also returns the data in a pre-known structure based on your request. In contrast, the REST API returns more data than you requested and returns it in a pre-determined structure. You can also accomplish the equivalent of multiple REST API request in a single GraphQL request. The ability to make fewer requests and fetch less data makes GraphQL appealing to developers of mobile applications.
For example, to get the GitHub login of ten of your followers, and the login of ten followers of each of your followers, you can send a single request like:
{
  viewer {
    followers(first: 10) {
      nodes {
        login
        followers(first: 10) {
          nodes {
            login
          }
        }
      }
    }
  }
}

The response will be a JSON object that follows the structure of your request.
In contrast, to get this same information from the REST API, you would need to first make a request to GET /user/followers. The API would return the login of each follower, along with other data about the followers that you don't need. Then, for each follower, you would need to make a request to GET /users/{username}/followers. In total, you would need to make 11 requests to get the same information that you could get from a single GraphQL request, and you would receive excess data.
Choosing the REST API
Because REST APIs have been around for longer than GraphQL APIs, some developers are more comfortable with the REST API. Since REST APIs use standard HTTP verbs and concepts, many developers are already familiar with the basic concepts to use the REST API.
For example, to create an issue in the octocat/Spoon-Knife repository, you would need to send a request to POST /repos/octocat/Spoon-Knife/issues with a JSON request body:
{
  "title": "Bug with feature X",
  "body": "If you do A, then B happens"
}

In contrast, to make an issue using the GraphQL API, you would need to get the node ID of the octocat/Spoon-Knife repository and then send a request like:
mutation {
  createIssue(
    input: {
      repositoryId: "MDEwOlJlcG9zaXRvcnkxMzAwMTky"
      title: "Bug with feature X"
      body: "If you do A, then B happens"}
  ) {
    issue {
      number
      url
    }
  }
}\n\n\n\nREST API/About the REST API/API VersionsAPI VersionsLearn how to specify which REST API version to use whenever you make a request to the REST API.In this articleAbout API versioningSpecifying an API versionUpgrading to a new API versionSupported API versionsAbout API versioning
The GitHub REST API is versioned. The API version name is based on the date when the API version was released. For example, the API version 2022-11-28 was released on Mon, 28 Nov 2022.
Any breaking changes will be released in a new API version. Breaking changes are changes that can potentially break an integration. Breaking changes include:

Removing an entire operation
Removing or renaming a parameter
Removing or renaming a response field
Adding a new required parameter
Making a previously optional parameter required
Changing the type of a parameter or response field
Removing enum values
Adding a new validation rule to an existing parameter
Changing authentication or authorization requirements

Any additive (non-breaking) changes will be available in all supported API versions. Additive changes are changes that should not break an integration. Additive changes include:

Adding an operation
Adding an optional parameter
Adding an optional request header
Adding a response field
Adding a response header
Adding enum values

When a new REST API version is released, the previous API version will be supported for at least 24 more months following the release of the new API version.
Specifying an API version
You should use the X-GitHub-Api-Version header to specify an API version. For example:
curl --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/zen

Requests without the X-GitHub-Api-Version header will default to use the 2022-11-28 version.
If you specify an API version that is no longer supported, you will receive a 400 error.
Upgrading to a new API version
Before upgrading to a new REST API version, you should read the changelog of breaking changes for the new API version to understand what breaking changes are included and to learn more about how to upgrade to that specific API version. For more information, see Breaking changes.
When you update your integration to specify the new API version in the X-GitHub-Api-Version header, you'll also need to make any changes required for your integration to work with the new API version.
Once your integration is updated, test your integration to verify that it works with the new API version.
Supported API versions
The following REST API versions are currently supported:
2022-11-28
You can also make an API request to get all of the supported API versions. For more information, see REST API endpoints for meta data.\n\n\n\nREST API/About the REST API/Breaking changesBreaking changesLearn about breaking changes that were introduced in each REST API version.In this articleAbout breaking changes in the REST APIUpgrading to a new API versionBreaking changes for 2022-11-28About breaking changes in the REST API
The GitHub REST API is versioned. The API version name is based on the date when the API version was released. For example, the API version 2022-11-28 was released on Mon, 28 Nov 2022.
Any breaking changes will be released in a new API version. Breaking changes are changes that can potentially break an integration. Breaking changes include:

Removing an entire operation
Removing or renaming a parameter
Removing or renaming a response field
Adding a new required parameter
Making a previously optional parameter required
Changing the type of a parameter or response field
Removing enum values
Adding a new validation rule to an existing parameter
Changing authentication or authorization requirements

Any additive (non-breaking) changes will be available in all supported API versions. Additive changes are changes that should not break an integration. Additive changes include:

Adding an operation
Adding an optional parameter
Adding an optional request header
Adding a response field
Adding a response header
Adding enum values

When a new REST API version is released, the previous API version will be supported for at least 24 more months following the release of the new API version.
For more information about API versions, see API Versions.
Upgrading to a new API version
Before upgrading to a new REST API version, you should read the section on this page that corresponds to the new API version to understand what breaking changes are included and to learn more about how to upgrade to that API version.
When you update your integration to specify the new API version in the X-GitHub-Api-Version header, you'll also need to make any changes required for your integration to work with the new API version.
Once your integration is updated, test your integration to verify that it works with the new API version.
Breaking changes for 2022-11-28
Version 2022-11-28 is the first version of the GitHub REST API after date-based versioning was introduced. This version does not include any breaking changes.\n\n\n\nREST API/About the REST API/OpenAPI descriptionAbout the OpenAPI description for the REST APIThe GitHub REST API is fully described in an OpenAPI compliant document.In this articleAbout OpenAPIAbout GitHub's OpenAPI descriptionUsing the GitHub OpenAPI descriptionAbout OpenAPI
OpenAPI is a specification for describing REST API interfaces. It describes the API without requiring access to the source code or additional documentation. The specification is both human and machine readable. For more information, see the OpenAPI specification documentation.
About GitHub's OpenAPI description
GitHub's OpenAPI description of the REST API is publicly available. You can find the description in the open source github/rest-api-description repository.
GitHub provides both 3.0 and 3.1 OpenAPI descriptions.
For each description, there is a version for each product: GitHub Free/GitHub Pro/GitHub Team (api.github.com), GitHub Enterprise Cloud (ghec), and each version of GitHub Enterprise Server (ghes-X.X).
For each product, if date-based versioning is supported, there is also a description for each date-based version. For more information, see API Versions.
Each description is available in a bundled or in a dereferenced format. The bundled format uses $ref to refer to OpenAPI components that are shared between endpoints. The dereferenced format includes the fully expanded description.
Using the GitHub OpenAPI description
Because the OpenAPI description is machine readable, you can use it to do things like:

Generate libraries to facilitate using the REST API
Validate and test an integration that uses the REST API
Explore and interact with the REST API using third-party tools, such as Insomnia or Postman

For example, GitHub uses the OpenAPI description to generate the Octokit SDKs. GitHub also uses the OpenAPI description to generate the REST API reference documentation for each endpoint.\n\n\n\nREST API/Using the REST API/Getting startedGetting started with the REST APILearn how to use the GitHub REST API.Tool navigationGitHub CLIcurlJavaScriptIn this articleIntroductionAbout requests to the REST APIMaking a requestUsing the responseNext stepsIntroduction
This article describes how to use the GitHub REST API with GitHub CLI, curl, or JavaScript. For a quickstart guide, see Quickstart for GitHub REST API.


About requests to the REST API
This section describes the elements that make up an API request:

HTTP method
Path
Headers
Media types
Authentication
Parameters

Every request to the REST API includes an HTTP method and a path. Depending on the REST API endpoint, you might also need to specify request headers, authentication information, query parameters, or body parameters.
The REST API reference documentation describes the HTTP method, path, and parameters for every endpoint. It also displays example requests and responses for each endpoint. For more information, see the REST reference documentation.
HTTP method
The HTTP method of an endpoint defines the type of action it performs on a given resource. Some common HTTP methods are GET, POST, DELETE, and PATCH. The REST API reference documentation provides the HTTP method for every endpoint.
For example, the HTTP method for the "List repository issues" endpoint is GET."
Where possible, the GitHub REST API strives to use an appropriate HTTP method for each action.

GET: Used for retrieving resources.
POST: Used for creating resources.
PATCH: Used for updating properties of resources.
PUT: Used for replacing resources or collections of resources.
DELETE: Used for deleting resources.

Path
Each endpoint has a path. The REST API reference documentation gives the path for every endpoint. For example, the path for the "List repository issues" endpoint is /repos/{owner}/{repo}/issues.
The curly brackets {} in a path denote path parameters that you need to specify. Path parameters modify the endpoint path and are required in your request. For example, the path parameters for the "List repository issues" endpoint are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to request a list of issues, and replace {owner} with the name of the account that owns the repository.
Headers
Headers provide extra information about the request and the desired response. Following are some examples of headers that you can use in your requests to the GitHub REST API. For an example of a request that uses headers, see Making a request.
Accept
Most GitHub REST API endpoints specify that you should pass an Accept header with a value of application/vnd.github+json. The value of the Accept header is a media type. For more information about media types, see Media types.
X-GitHub-Api-Version
You should use this header to specify a version of the REST API to use for your request. For more information, see API Versions.
User-Agent
All API requests must include a valid User-Agent header. The User-Agent header identifies the user or application that is making the request.

By default, GitHub CLI sends a valid User-Agent header. However, GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.


By default, curl sends a valid User-Agent header. However GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.


If you use the Octokit.js SDK, the SDK will send a valid User-Agent header for you. However, GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.

The following is an example User-Agent for an app named Awesome-Octocat-App:
User-Agent: Awesome-Octocat-App

Requests with no User-Agent header will be rejected. If you provide an invalid User-Agent header, you will receive a 403 Forbidden response.

Media types
You can specify one or more media types by adding them to the Accept header of your request. For more information about the Accept header, see Accept.
Media types specify the format of the data you want to consume from the API. Media types are specific to resources, allowing them to change independently and support formats that other resources don't. The documentation for each GitHub REST API endpoint will describe the media types that it supports. For more information, see the GitHub REST API documentation.
The most common media types supported by the GitHub REST API are application/vnd.github+json and application/json.
There are custom media types that you can use with some endpoints. For example, the REST API to manage commits and pull requests support the media types diff, patch, and sha. The media types full, raw, text, or html are used by some other endpoints.
All custom media types for GitHub look like this: application/vnd.github.PARAM+json, where PARAM is the name of the media type. For example, to specify the raw media type, you would use application/vnd.github.raw+json.
For an example of a request that uses media types, see Making a request.
Authentication
Many endpoints require authentication or return additional information if you are authenticated. Additionally, you can make more requests per hour when you are authenticated.

To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow. For more information, see Authenticating to the REST API.
For an example of a request that uses an authentication token, see Making a request.
Note

If you don't want to create a token, you can use GitHub CLI. GitHub CLI will take care of authentication for you, and help keep your account secure. For more information, see the GitHub CLI version of this page.

Warning

Treat your access token the same way you would treat your passwords or other sensitive credentials. For more information, see Keeping your API credentials secure.



Although some REST API endpoints are accessible without authentication, GitHub CLI requires you to authenticate before you can use the api subcommand to make an API request. Use the auth login subcommand to authenticate to GitHub. For more information, see Making a request.


To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow. For more information, see Authenticating to the REST API.
For an example of a request that uses an authentication token, see Making a request.
Warning

Treat your access token the same way you would treat your passwords or other sensitive credentials. For more information, see Keeping your API credentials secure.


Parameters
Many API methods require or allow you to send additional information in parameters in your request. There are a few different types of parameters: Path parameters, body parameters, and query parameters.
Path parameters
Path parameters modify the endpoint path. These parameters are required in your request. For more information, see Path.
Body parameters
Body parameters allow you to pass additional data to the API. These parameters can be optional or required, depending on the endpoint. For example, a body parameter may allow you to specify an issue title when creating a new issue, or specify certain settings when enabling or disabling a feature. The documentation for each GitHub REST API endpoint will describe the body parameters that it supports. For more information, see the GitHub REST API documentation.
For example, the "Create an issue" endpoint requires that you specify a title for the new issue in your request. It also allows you to optionally specify other information, such as text to put in the issue body, users to assign to the new issue, or labels to apply to the new issue. For an example of a request that uses body parameters, see Making a request.
You must authenticate your request to pass body parameters. For more information, see Authenticating.
Query parameters
Query parameters allow you to control what data is returned for a request. These parameters are usually optional. The documentation for each GitHub REST API endpoint will describe any query parameters that it supports. For more information, see the GitHub REST API documentation.
For example, the "List public events" endpoint returns thirty issues by default. You can use the per_page query parameter to return two issues instead of 30. You can use the page query parameter to fetch only the first page of results. For an example of a request that uses query parameters, see Making a request.
Making a request

This section demonstrates how to make an authenticated request to the GitHub REST API using GitHub CLI.
1. Setup
Install GitHub CLI on macOS, Windows, or Linux. For more information, see Installation in the GitHub CLI repository.
2. Authenticate


To authenticate to GitHub, run the following command from your terminal.
gh auth login

You can use the --scopes option to specify what scopes you want. If you want to authenticate with a token that you created, you can use the --with-token option. For more information, see the GitHub CLI auth login documentation.


Select where you want to authenticate to:

If you access GitHub at GitHub.com, select GitHub.com.
If you access GitHub at a different domain, select Other, then enter your hostname (for example: octocorp.ghe.com).



Follow the rest of the on-screen prompts.
GitHub CLI automatically stores your Git credentials for you when you choose HTTPS as your preferred protocol for Git operations and answer "yes" to the prompt asking if you would like to authenticate to Git with your GitHub credentials. This can be useful as it allows you to use Git commands like git push and git pull without needing to set up a separate credential manager or use SSH.


3. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


4. Make a request with GitHub CLI
Use the GitHub CLI api subcommand to make your API request. For more information, see the GitHub CLI api documentation.
In your request, specify the following options and values:


--method followed by the HTTP method and the path of the endpoint. For more information, see HTTP method and Path.


--header:

Accept: Pass the media type in an Accept header. To pass multiple media types in an Accept header, separate the media types with a comma: Accept: application/vnd.github+json,application/vnd.github.diff. For more information, see Accept and Media types.
X-GitHub-Api-Version: Pass the API version in a X-GitHub-Api-Version header. For more information, see X-GitHub-Api-Version.



-f or -F followed by any body parameters or query parameters in key=value format. Use the -F option to pass a parameter that is a number, Boolean, or null. Use the -f option to pass string parameters.
Some endpoints use query parameters that are arrays. To send an array in the query string, use the query parameter once per array item, and append [] after the query parameter name. For example, to provide an array of two repository IDs, use -f repository_ids[]=REPOSITORY_A_ID -f repository_ids[]=REPOSITORY_B_ID.
If you do not need to specify any body parameters or query parameters in your request, omit this option. For more information, see Body parameters and Query parameters. For examples, see Example request using body parameters and Example request using query parameters.


Example request
The following example request uses the "Get Octocat" endpoint to return the octocat as ASCII art.
Shellgh api --method GET /octocat \
--header 'Accept: application/vnd.github+json' \
--header "X-GitHub-Api-Version: 2022-11-28"
gh api --method GET /octocat \
--header 'Accept: application/vnd.github+json' \
--header "X-GitHub-Api-Version: 2022-11-28"

Example request using query parameters
The "List public events" endpoint returns thirty issues by default. The following example uses the per_page query parameter to return two issues instead of 30, and the page query parameter to fetch only the first page of results.
Shellgh api --method GET /events -F per_page=2 -F page=1
--header 'Accept: application/vnd.github+json' \
gh api --method GET /events -F per_page=2 -F page=1
--header 'Accept: application/vnd.github+json' \

Example request using body parameters
The following example uses the "Create an issue" endpoint to create a new issue in the octocat/Spoon-Knife repository. In the response, find the html_url of your issue, and navigate to your issue in the browser.
Shellgh api --method POST /repos/octocat/Spoon-Knife/issues \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
-f title='Created with the REST API' \
-f body='This is a test issue created by the REST API' \
gh api --method POST /repos/octocat/Spoon-Knife/issues \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
-f title='Created with the REST API' \
-f body='This is a test issue created by the REST API' \



This section demonstrates how to make an authenticated request to the GitHub REST API using curl.
1. Setup
You must have curl installed on your machine. To check if curl is already installed, run curl --version on the command line.

If the output provides information about the version of curl, that means curl is installed.
If you get a message similar to command not found: curl, that means curl is not installed. Download and install curl. For more information, see the curl download page.

2. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


3. Create authentication credentials
Create an access token to authenticate your request. You can save your token and use it for multiple requests. Give the token any scopes or permissions that are required to access the endpoint. You will send this token in an Authorization header with your request. For more information, see Authentication.
4. Make a curl request
Use the curl command to make your request. For more information, see the curl documentation.
Specify the following options and values in your request:


--request or -X followed by the HTTP method as the value. For more information, see HTTP method.


--url followed by the full path as the value. The full path is a URL that includes the base URL for the GitHub REST API (https://api.github.com) and the path of the endpoint, like this: https://api.github.com/PATH. Replace PATH with the path of the endpoint. For more information, see Path.
To use query parameters, add a ? to the end of the path, then append your query parameter name and value in the form parameter_name=value. Separate multiple query parameters with &. If you need to send an array in the query string, use the query parameter once per array item, and append [] after the query parameter name. For example, to provide an array of two repository IDs, use ?repository_ids[]=REPOSITORY_A_ID&repository_ids[]=REPOSITORY_B_ID. For more information, see Query parameters. For an example, see Example request using query parameters.


--header or -H:

Accept: Pass the media type in an Accept header. To pass multiple media types in an Accept header, separate the media types with a comma, for example: Accept: application/vnd.github+json,application/vnd.github.diff. For more information, see Accept and Media types.
X-GitHub-Api-Version: Pass the API version in a X-GitHub-Api-Version header. For more information, see X-GitHub-Api-Version.
Authorization: Pass your authentication token in an Authorization header. Note that in most cases you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer. For more information, see Authentication. For an example of a request that uses an Authorization header, see Example request using body parameters.



--data or -d followed by any body parameters within a JSON object. If you do not need to specify any body parameters in your request, omit this option. For more information, see Body parameters. For an example, see Example request using body parameters.


Example request
The following example request uses the "Get Octocat" endpoint to return the octocat as ASCII art.
Shellcurl --request GET \
--url "https://api.github.com/octocat" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28"
curl --request GET \
--url "https://api.github.com/octocat" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28"

Example request using query parameters
The "List public events" endpoint returns thirty issues by default. The following example uses the per_page query parameter to return two issues instead of 30, and the page query parameter to fetch only the first page of results.
Shellcurl --request GET \
--url "https://api.github.com/events?per_page=2&page=1" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/events
curl --request GET \
--url "https://api.github.com/events?per_page=2&page=1" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/events

Example request using body parameters
The following example uses the Create an issue endpoint to create a new issue in the octocat/Spoon-Knife repository. Replace YOUR-TOKEN with the authentication token you created in a previous step.
Note

If you are using a fine-grained personal access token, you must replace octocat/Spoon-Knife with a repository that you own or that is owned by an organization that you are a member of. Your token must have access to that repository and have read and write permissions for repository issues. For more information, see Managing your personal access tokens.

Shellcurl \
--request POST \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--header "Authorization: Bearer YOUR-TOKEN" \
--data '{
  "title": "Created with the REST API",
  "body": "This is a test issue created by the REST API"
}'
curl \
--request POST \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--header "Authorization: Bearer YOUR-TOKEN" \
--data '{
  "title": "Created with the REST API",
  "body": "This is a test issue created by the REST API"
}'



This section demonstrates how to make a request to the GitHub REST API using JavaScript and Octokit.js. For a more detailed guide, see Scripting with the REST API and JavaScript.
1. Setup
You must install octokit to use the Octokit.js library shown in the following examples.

Install octokit. For example, npm install octokit. For other ways to install or load octokit, see the Octokit.js README.

2. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


3. Create an access token
Create an access token to authenticate your request. You can save your token and use it for multiple requests. Give the token any scopes or permissions that are required to access the endpoint. You will send this token in an Authorization header with your request. For more information, see Authentication.
4. Make a request with Octokit.js


Import octokit in your script. For example, import { Octokit } from "octokit";. For other ways to import octokit, see the Octokit.js README.


Create an instance of Octokit with your token. Replace YOUR-TOKEN with your token.
JavaScriptconst octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});
const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});



Use octokit.request to execute your request.

Send the HTTP method and path as the first argument to the request method. For more information, see HTTP method and Path.
Specify all path, query, and body parameters in an object as the second argument to the request method. For more information, see Parameters.

In the following example request, the HTTP method is POST, the path is /repos/{owner}/{repo}/issues, the path parameters are owner: "octocat" and repo: "Spoon-Knife", and the body parameters are title: "Created with the REST API" and body: "This is a test issue created by the REST API".
Note

If you are using a fine-grained personal access token, you must replace octocat/Spoon-Knife with a repository that you own or that is owned by an organization that you are a member of. Your token must have access to that repository and have read and write permissions for repository issues. For more information, see Managing your personal access tokens.

JavaScriptawait octokit.request("POST /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  title: "Created with the REST API",
  body: "This is a test issue created by the REST API",
});
await octokit.request("POST /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  title: "Created with the REST API",
  body: "This is a test issue created by the REST API",
});

The request method automatically passes the Accept: application/vnd.github+json header. To pass additional headers or a different Accept header, add a headers property to the object that is passed as a second argument. The value of the headers property is an object with the header names as keys and header values as values.
For example, the following code will send a content-type header with a value of text/plain and a X-GitHub-Api-Version header with a value of 2022-11-28.
JavaScriptawait octokit.request("GET /octocat", {
  headers: {
    "content-type": "text/plain",
    "X-GitHub-Api-Version": "2022-11-28",
  },
});
await octokit.request("GET /octocat", {
  headers: {
    "content-type": "text/plain",
    "X-GitHub-Api-Version": "2022-11-28",
  },
});




Using the response
After you make a request, the API will return the response status code, response headers, and potentially a response body.
About the response code and headers
Every request will return an HTTP status code that indicates the success of the response. For more information about response codes, see the MDN HTTP response status code documentation.
Additionally, the response will include headers that give more details about the response. Headers that start with X- or x- are custom to GitHub. For example, the x-ratelimit-remaining and x-ratelimit-reset headers tell you how many requests you can make in a time period.

To view the status code and headers, use the --include or --i option when you send your request.
For example, this request gets a list of issues in the octocat/Spoon-Knife repository:
gh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/octocat/Spoon-Knife/issues \
-F per_page=2 --include

And it returns a response code and headers that look something like this:
HTTP/2.0 200 OK
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset
Cache-Control: private, max-age=60, s-maxage=60
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Thu, 04 Aug 2022 19:56:41 GMT
Etag: W/"a63dfbcfdb73621e9d2e89551edcf9856731ced534bd7f1e114a5da1f5f73418"
Link: <https://api.github.com/repositories/1300192/issues?per_page=1&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=1&page=14817>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, Accept-Encoding, Accept, X-Requested-With
X-Accepted-Oauth-Scopes: repo
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Api-Version-Selected: 2022-08-09
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: 1C73:26D4:E2E500:1EF78F4:62EC2479
X-Oauth-Client-Id: 178c6fc778ccc68e1d6a
X-Oauth-Scopes: gist, read:org, repo, workflow
X-Ratelimit-Limit: 15000
X-Ratelimit-Remaining: 14996
X-Ratelimit-Reset: 1659645499
X-Ratelimit-Resource: core
X-Ratelimit-Used: 4
X-Xss-Protection: 0

In this example, the response code is 200, which indicates a successful request.


When you make a request with Octokit.js, the request method returns a promise. If the request was successful, the promise resolves to an object that includes the HTTP status code of the response (status) and the response headers (headers). If an error occurs, the promise resolves to an object that includes the HTTP status code of the response (status) and the response headers (response.headers).
You can use a try/catch block to catch an error if it occurs. For example, if the request in the following script is successful, the script will log the status code and the value of the x-ratelimit-remaining header. If the request was not successful, the script will log the status code, the value of the x-ratelimit-remaining header, and the error message.
In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
JavaScripttry {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  console.log(`Success! Status: ${result.status}. Rate limit remaining: ${result.headers["x-ratelimit-remaining"]}`)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Rate limit remaining: ${error.headers["x-ratelimit-remaining"]}. Message: ${error.response.data.message}`)
}
try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  console.log(`Success! Status: ${result.status}. Rate limit remaining: ${result.headers["x-ratelimit-remaining"]}`)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Rate limit remaining: ${error.headers["x-ratelimit-remaining"]}. Message: ${error.response.data.message}`)
}



To view the status code and headers, use the --include or --i option when you send your request.
For example, this request gets a list of issues in the octocat/Spoon-Knife repository:
curl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" \
--include

And it returns a response code and headers that look something like this:
HTTP/2 200
server: GitHub.com
date: Thu, 04 Aug 2022 20:07:51 GMT
content-type: application/json; charset=utf-8
cache-control: public, max-age=60, s-maxage=60
vary: Accept, Accept-Encoding, Accept, X-Requested-With
etag: W/"7fceb7e8c958d3ec4d02524b042578dcc7b282192e6c939070f4a70390962e18"
x-github-media-type: github.v3; format=json
link: <https://api.github.com/repositories/1300192/issues?per_page=2&sort=updated&direction=asc&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=2&sort=updated&direction=asc&page=7409>; rel="last"
access-control-expose-headers: ETag, Link, Location, Retry-After, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset
access-control-allow-origin: *
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-frame-options: deny
x-content-type-options: nosniff
x-xss-protection: 0
referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
content-security-policy: default-src 'none'
x-ratelimit-limit: 15000
x-ratelimit-remaining: 14996
x-ratelimit-reset: 1659645535
x-ratelimit-resource: core
x-ratelimit-used: 4
accept-ranges: bytes
content-length: 4936
x-github-request-id: 14E0:4BC6:F1B8BA:208E317:62EC2715

In this example, the response code is 200, which indicates a successful request.

About the response body
Many endpoints will return a response body. Unless otherwise specified, the response body is in JSON format. Blank fields are included as null instead of being omitted. All timestamps return in UTC time, ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Unlike the GraphQL API where you specify what information you want, the REST API typically returns more information than you need. If desired, you can parse the response to pull out specific pieces of information.

For example, you can use > to redirect the response to a file. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
Shellgh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/REPO-OWNER/REPO-NAME/issues \
-F per_page=2 > data.json
gh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/REPO-OWNER/REPO-NAME/issues \
-F per_page=2 > data.json

Then you can use jq to get the title and author ID of each issue:
Shelljq '.[] | {title: .title, authorID: .user.id}' data.json
jq '.[] | {title: .title, authorID: .user.id}' data.json

The previous two commands return something like:
{
  "title": "Update index.html",
  "authorID": 10701255
}
{
  "title": "Edit index file",
  "authorID": 53709285
}

For more information about jq, see the jq documentation.


For example, you can get the title and author ID of each issue. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
JavaScripttry {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}
try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}



For example, you can use > to redirect the response to a file. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
Shellcurl --request GET \
--url "https://api.github.com/repos/REPO-OWNER/REPO-NAME/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" > data.json
curl --request GET \
--url "https://api.github.com/repos/REPO-OWNER/REPO-NAME/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" > data.json

Then you can use jq to get the title and author ID of each issue:
Shelljq '.[] | {title: .title, authorID: .user.id}' data.json
jq '.[] | {title: .title, authorID: .user.id}' data.json

The previous two commands return something like:
{
  "title": "Update index.html",
  "authorID": 10701255
}
{
  "title": "Edit index file",
  "authorID": 53709285
}

For more information about jq, see the jq documentation.

Detailed versus summary representations
A response can include all attributes for a resource or only a subset of attributes, depending on whether you fetch an individual resource or a list of resources.

When you fetch an individual resource, like a specific repository, the response will typically include all attributes for that resource. This is the "detailed" representation of the resource.
When you fetch a list of resources, like a list of multiple repositories, the response will only include a subset of the attributes for each resource. This is the "summary" representation of the resource.

Note that authorization sometimes influences the amount of detail included in a representation.
The reason for this is because some attributes are computationally expensive for the API to provide, so GitHub excludes those attributes from the summary representation. To obtain those attributes, you can fetch the detailed representation.
The documentation provides an example response for each API method. The example response illustrates all attributes that are returned by that method.
Hypermedia
All resources may have one or more *_url properties linking to other resources. These are meant to provide explicit URLs so that proper API clients don't need to construct URLs on their own. It is highly recommended that API clients use these. Doing so will make future upgrades of the API easier for developers. All URLs are expected to be proper RFC 6570 URI templates.
You can then expand these templates using something like the uri_template gem:
>> tmpl = URITemplate.new('/notifications{?since,all,participating}')
>> tmpl.expand
=> "/notifications"

>> tmpl.expand all: 1
=> "/notifications?all=1"

>> tmpl.expand all: 1, participating: 1
=> "/notifications?all=1&participating=1"

Next steps
This article demonstrated how to list and create issues in a repository. For more practice, try to comment on an issue, edit the title of an issue, or close an issue. For more information, see the "Create an issue comment" endpoint and the "Update an issue" endpoint.
For more information about other endpoints that you can use, see the REST reference documentation.\n\n\n\nREST API/Using the REST API/Rate limitsRate limits for the REST APILearn about REST API rate limits, how to avoid exceeding them, and what to do if you do exceed them.In this articleAbout primary rate limitsAbout secondary rate limitsChecking the status of your rate limitExceeding the rate limitStaying under the rate limitGetting a higher rate limitAbout primary rate limits
GitHub limits the number of REST API requests that you can make within a specific amount of time. This limit helps prevent abuse and denial-of-service attacks, and ensures that the API remains available for all users.
Some endpoints, like the search endpoints, have more restrictive limits. For more information about these endpoints, see REST API endpoints for rate limits. The GraphQL API also has a separate primary rate limit. See Rate limits and node limits for the GraphQL API.
In general, you can calculate your primary rate limit for the REST API based on your method of authentication, as described below.
Primary rate limit for unauthenticated users
You can make unauthenticated requests if you are only fetching public data. Unauthenticated requests are associated with the originating IP address, not with the user or application that made the request.
The primary rate limit for unauthenticated requests is 60 requests per hour.
Primary rate limit for authenticated users
You can use a personal access token to make API requests. Additionally, you can authorize a GitHub App or OAuth app, which can then make API requests on your behalf.
All of these requests count towards your personal rate limit of 5,000 requests per hour. Requests made on your behalf by a GitHub App that is owned by a GitHub Enterprise Cloud organization have a higher rate limit of 15,000 requests per hour. Similarly, requests made on your behalf by a OAuth app that is owned or approved by a GitHub Enterprise Cloud organization have a higher rate limit of 15,000 requests per hour if you are a member of the GitHub Enterprise Cloud organization.
Primary rate limit for GitHub App installations
GitHub Apps authenticating with an installation access token use the installation's minimum rate limit of 5,000 requests per hour. If the installation is on a GitHub Enterprise Cloud organization, the installation has a rate limit of 15,000 requests per hour.
For installations that are not on a GitHub Enterprise Cloud organization, the rate limit for the installation will scale with the number of users and repositories. Installations that have more than 20 repositories receive another 50 requests per hour for each repository. Installations that are on an organization that have more than 20 users receive another 50 requests per hour for each user. The rate limit cannot increase beyond 12,500 requests per hour.
Primary rate limits for GitHub App user access tokens (as opposed to installation access tokens) are dictated by the primary rate limits for the authenticated user. This rate limit is combined with any requests that another GitHub App or OAuth app makes on that user's behalf and any requests that the user makes with a personal access token. See Primary rate limit for authenticated users.
Primary rate limit for OAuth apps
Primary rate limits for OAuth access tokens generated by a OAuth app are dictated by the primary rate limits for authenticated users. This rate limit is combined with any requests that another GitHub App or OAuth app makes on that user's behalf and any requests that the user makes with a personal access token. See Primary rate limit for authenticated users.
OAuth apps can also use their client ID and client secret to fetch public data. For example:
curl -u YOUR_CLIENT_ID:YOUR_CLIENT_SECRET -I https://api.github.com/meta

For these requests, the rate limit is 5,000 requests per hour per OAuth app. If the app is owned by a GitHub Enterprise Cloud organization, the rate limit is 15,000 requests per hour.
Note

Never include your app's client secret in client-side code or in code that runs on a user device. The client secret can be used to generate OAuth access tokens for users who have authorized your app, so you should always keep the client secret secure.

Primary rate limit for GITHUB_TOKEN in GitHub Actions
You can use the built-in GITHUB_TOKEN to authenticate requests in GitHub Actions workflows. See Automatic token authentication.
The rate limit for GITHUB_TOKEN is 1,000 requests per hour per repository. For requests to resources that belong to a GitHub Enterprise Cloud account, the limit is 15,000 requests per hour per repository.
About secondary rate limits
In addition to primary rate limits, GitHub enforces secondary rate limits in order to prevent abuse and keep the API available for all users.
You may encounter a secondary rate limit if you:

Make too many concurrent requests. No more than 100 concurrent requests are allowed. This limit is shared across the REST API and GraphQL API.
Make too many requests to a single endpoint per minute. No more than 900 points per minute are allowed for REST API endpoints, and no more than 2,000 points per minute are allowed for the GraphQL API endpoint. For more information about points, see Calculating points for the secondary rate limit.
Make too many requests per minute. No more than 90 seconds of CPU time per 60 seconds of real time is allowed. No more than 60 seconds of this CPU time may be for the GraphQL API. You can roughly estimate the CPU time by measuring the total response time for your API requests.
Make too many requests that consume excessive compute resources in a short period of time.
Create too much content on GitHub in a short amount of time. In general, no more than 80 content-generating requests per minute and no more than 500 content-generating requests per hour are allowed. Some endpoints have lower content creation limits. Content creation limits include actions taken on the GitHub web interface as well as via the REST API and GraphQL API.

These secondary rate limits are subject to change without notice. You may also encounter a secondary rate limit for undisclosed reasons.
Calculating points for the secondary rate limit
Some secondary rate limits are determined by the point values of requests. For GraphQL requests, these point values are separate from the point value calculations for the primary rate limit.

























RequestPointsGraphQL requests without mutations1GraphQL requests with mutations5Most REST API GET, HEAD, and OPTIONS requests1Most REST API POST, PATCH, PUT, or DELETE requests5
Some REST API endpoints have a different point cost that is not shared publicly.
Checking the status of your rate limit
You can use the headers that are sent with each response to determine the current status of your primary rate limit.





























Header nameDescriptionx-ratelimit-limitThe maximum number of requests that you can make per hourx-ratelimit-remainingThe number of requests remaining in the current rate limit windowx-ratelimit-usedThe number of requests you have made in the current rate limit windowx-ratelimit-resetThe time at which the current rate limit window resets, in UTC epoch secondsx-ratelimit-resourceThe rate limit resource that the request counted against. For more information about the different resources, see REST API endpoints for rate limits.
You can also call the GET /rate_limit endpoint to check your rate limit. Calling this endpoint does not count against your primary rate limit, but it can count against your secondary rate limit. See REST API endpoints for rate limits. When possible, you should use the rate limit response headers instead of calling the API to check your rate limit.
There is not a way to check the status of your secondary rate limit.
Exceeding the rate limit
If you exceed your primary rate limit, you will receive a 403 or 429 response, and the x-ratelimit-remaining header will be 0. You should not retry your request until after the time specified by the x-ratelimit-reset header.
If you exceed a secondary rate limit, you will receive a 403 or 429 response and an error message that indicates that you exceeded a secondary rate limit. If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed. If the x-ratelimit-remaining header is 0, you should not retry your request until after the time, in UTC epoch seconds, specified by the x-ratelimit-reset header. Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.
Continuing to make requests while you are rate limited may result in the banning of your integration.
Staying under the rate limit
You should follow best practices to help you stay under the rate limits. See Best practices for using the REST API.
Getting a higher rate limit
If you want a higher primary rate limit, consider making authenticated requests instead of unauthenticated requests. Authenticated requests have a significantly higher rate limit than unauthenticated requests.
If you are using a personal access token for automation in your organization, consider whether a GitHub App will work instead. The rate limit for GitHub Apps using an installation access token scales with the number of repositories and number of organization users. See About creating GitHub Apps.
If you are using GitHub Apps or OAuth apps, consider upgrading to GitHub Enterprise Cloud. GitHub Apps or OAuth apps have higher rate limits for organizations that use GitHub Enterprise Cloud.\n\n\n\nREST API/Using the REST API/PaginationUsing pagination in the REST APILearn how to navigate through paginated responses from the REST API.In this articleAbout paginationUsing link headersChanging the number of items per pageScripting with paginationAbout pagination
When a response from the REST API would include many results, GitHub will paginate the results and return a subset of the results. For example, GET /repos/octocat/Spoon-Knife/issues will only return 30 issues from the octocat/Spoon-Knife repository even though the repository includes over 1600 open issues. This makes the response easier to handle for servers and for people.
You can use the link header from the response to request additional pages of data. If an endpoint supports the per_page query parameter, you can control how many results are returned on a page.
This article demonstrates how to request additional pages of results for paginated responses, how to change the number of results returned on each page, and how to write a script to fetch multiple pages of results.
Using link headers
When a response is paginated, the response headers will include a link header. If the endpoint does not support pagination, or if all results fit on a single page, the link header will be omitted.
The link header contains URLs that you can use to fetch additional pages of results. For example, the previous, next, first, and last page of results.
To see the response headers for a particular endpoint, you can use curl, GitHub CLI, or a library you're using to make requests. To see the response headers if you are using a library to make requests, follow the documentation for that library. To see the response headers if you are using curl or GitHub CLI, pass the --include flag with your request. For example:
curl --include --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json"

If the response is paginated, the link header will look something like this:
link: <https://api.github.com/repositories/1300192/issues?page=2>; rel="prev", <https://api.github.com/repositories/1300192/issues?page=4>; rel="next", <https://api.github.com/repositories/1300192/issues?page=515>; rel="last", <https://api.github.com/repositories/1300192/issues?page=1>; rel="first"

The link header provides the URL for the previous, next, first, and last page of results:

The URL for the previous page is followed by rel="prev".
The URL for the next page is followed by rel="next".
The URL for the last page is followed by rel="last".
The URL for the first page is followed by rel="first".

In some cases, only a subset of these links are available. For example, the link to the previous page won't be included if you are on the first page of results, and the link to the last page won't be included if it can't be calculated.
You can use the URLs from the link header to request another page of results. For example, to request the last page of results based on the previous example:
curl --include --request GET \
--url "https://api.github.com/repositories/1300192/issues?page=515" \
--header "Accept: application/vnd.github+json"

The URLs in the link header use query parameters to indicate which page of results to return. The query parameters in the link URLs may differ between endpoints, however each paginated endpoint will use the page, before/after, or since query parameters. (Some endpoints use the since parameter for something other than pagination.) In all cases, you can use the URLs in the link header to fetch additional pages of results. For more information about query parameters see Getting started with the REST API.
Changing the number of items per page
If an endpoint supports the per_page query parameter, then you can control how many results are returned on a page. For more information about query parameters see Getting started with the REST API.
For example, this request uses the per_page query parameter to return two items per page:
curl --include --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues?per_page=2" \
--header "Accept: application/vnd.github+json"

The per_page parameter will automatically be included in the link header. For example:
link: <https://api.github.com/repositories/1300192/issues?per_page=2&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=2&page=7715>; rel="last"

Scripting with pagination
Instead of manually copying URLs from the link header, you can write a script to fetch multiple pages of results.
The following examples use JavaScript and GitHub's Octokit.js library. For more information about Octokit.js, see Getting started with the REST API and the Octokit.js README.
Example using the Octokit.js pagination method
To fetch paginated results with Octokit.js, you can use octokit.paginate(). octokit.paginate() will fetch the next page of results until it reaches the last page and then return all of the results as a single array. A few endpoints return paginated results as array in an object, as opposed to returning the paginated results as an array. octokit.paginate() always returns an array of items even if the raw result was an object.
For example, this script gets all of the issues from the octocat/Spoon-Knife repository. Although it requests 100 issues at a time, the function won't return until the last page of data is reached.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ });

const data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  per_page: 100,
  headers: {
    "X-GitHub-Api-Version": "2022-11-28",
  },
});

console.log(data)
import { Octokit } from "octokit";

const octokit = new Octokit({ });

const data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  per_page: 100,
  headers: {
    "X-GitHub-Api-Version": "2022-11-28",
  },
});

console.log(data)

You can pass an optional map function to octokit.paginate() to end pagination before the last page is reached or to reduce memory usage by keeping only a subset of the response. You can also use octokit.paginate.iterator() to iterate through a single page at a time instead of requesting every page. For more information, see the Octokit.js documentation.
Example creating a pagination method
If you are using another language or library that doesn't have a pagination method, you can build your own pagination method. This example still uses the Octokit.js library to make requests, but does not rely on octokit.paginate().
The getPaginatedData function makes a request to an endpoint with octokit.request(). The data from the response is processed by parseData, which handles cases where no data is returned or cases where the data that is returned is an object instead of an array. The processed data is then appended to a list that contains all of the paginated data collected so far. If the response includes a link header and if the link header includes a link for the next page, then the function uses a RegEx pattern (nextPattern) to get the URL for the next page. The function then repeats the previous steps, now using this new URL. Once the link header no longer includes a link to the next page, all of the results are returned.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ });

async function getPaginatedData(url) {
  const nextPattern = /(?<=<)([\S]*)(?=>; rel="Next")/i;
  let pagesRemaining = true;
  let data = [];

  while (pagesRemaining) {
    const response = await octokit.request(`GET ${url}`, {
      per_page: 100,
      headers: {
        "X-GitHub-Api-Version":
          "2022-11-28",
      },
    });

    const parsedData = parseData(response.data)
    data = [...data, ...parsedData];

    const linkHeader = response.headers.link;

    pagesRemaining = linkHeader && linkHeader.includes(`rel=\"next\"`);

    if (pagesRemaining) {
      url = linkHeader.match(nextPattern)[0];
    }
  }

  return data;
}

function parseData(data) {
  // If the data is an array, return that
    if (Array.isArray(data)) {
      return data
    }

  // Some endpoints respond with 204 No Content instead of empty array
  //   when there is no data. In that case, return an empty array.
  if (!data) {
    return []
  }

  // Otherwise, the array of items that we want is in an object
  // Delete keys that don't include the array of items
  delete data.incomplete_results;
  delete data.repository_selection;
  delete data.total_count;
  // Pull out the array of items
  const namespaceKey = Object.keys(data)[0];
  data = data[namespaceKey];

  return data;
}

const data = await getPaginatedData("/repos/octocat/Spoon-Knife/issues");

console.log(data);
import { Octokit } from "octokit";

const octokit = new Octokit({ });

async function getPaginatedData(url) {
  const nextPattern = /(?<=<)([\S]*)(?=>; rel="Next")/i;
  let pagesRemaining = true;
  let data = [];

  while (pagesRemaining) {
    const response = await octokit.request(`GET ${url}`, {
      per_page: 100,
      headers: {
        "X-GitHub-Api-Version":
          "2022-11-28",
      },
    });

    const parsedData = parseData(response.data)
    data = [...data, ...parsedData];

    const linkHeader = response.headers.link;

    pagesRemaining = linkHeader && linkHeader.includes(`rel=\"next\"`);

    if (pagesRemaining) {
      url = linkHeader.match(nextPattern)[0];
    }
  }

  return data;
}

function parseData(data) {
  // If the data is an array, return that
    if (Array.isArray(data)) {
      return data
    }

  // Some endpoints respond with 204 No Content instead of empty array
  //   when there is no data. In that case, return an empty array.
  if (!data) {
    return []
  }

  // Otherwise, the array of items that we want is in an object
  // Delete keys that don't include the array of items
  delete data.incomplete_results;
  delete data.repository_selection;
  delete data.total_count;
  // Pull out the array of items
  const namespaceKey = Object.keys(data)[0];
  data = data[namespaceKey];

  return data;
}

const data = await getPaginatedData("/repos/octocat/Spoon-Knife/issues");

console.log(data);\n\n\n\nREST API/Using the REST API/LibrariesLibraries for the REST APIYou can use the official Octokit libraries and other third-party libraries to extend and simplify how you use the GitHub API.In this articleAbout librariesOfficial GitHub librariesThird-party librariesAbout libraries
You can use libraries to extend and simplify the way your application interacts with GitHub's API. Each library provides pre-built code for a specific programming language. After integrating a library into your project, you can use the pre-built code modules to interact with GitHub's API via a specific programming language.
GitHub maintains official Octokit libraries for some languages. There are also third-party libraries that you can use with GitHub's API, which are not maintained by GitHub.
Official GitHub libraries
GitHub maintains these official client libraries for the GitHub API. These repositories are open source, and community contributions are welcome.
For more information, see Scripting with the REST API and JavaScript and Scripting with the REST API and Ruby.

JavaScript: octokit.js
Ruby: octokit.rb
.NET: octokit.net
Terraform: terraform-provider-github

Third-party libraries
The following are examples of third-party libraries that you can use to interact with the GitHub API in various programming languages.
These third-party libraries are not maintained by GitHub. Libraries provided by third parties are governed by separate terms of service, privacy policy, and support documentation.
Clojure

Tentacles: clj-commons/tentacles

Dart

github.dart: SpinlockLabs/github.dart

Emacs Lisp

gh.el: sigma/gh.el

Go

go-github: google/go-github

Haskell

haskell-github: haskell-github/github

Java

GitHub API for Java, an object oriented representation of the GitHub API: hub4j/github-api
JCabi GitHub API, based on Java7 JSON API (JSR-353), simplifies tests with a runtime GitHub stub, and covers the entire API: github.jcabi.com (Personal Website)

JavaScript

NodeJS GitHub library: pksunkara/octonode
Github.js wrapper around the GitHub API: github-tools/github
Promise-Based CoffeeScript library for the Browser or NodeJS: philschatz/github-client

Julia

GitHub.jl: JuliaWeb/GitHub.jl

OCaml

ocaml-github: mirage/ocaml-github

Perl

Pithub: plu/Pithub
Net::GitHub: fayland/perl-net-github

PHP

PHP GitHub API: KnpLabs/php-github-api
GitHub Joomla! Package: joomla-framework/github-api
GitHub bridge for Laravel: GrahamCampbell/Laravel-GitHub

PowerShell

PowerShellForGitHub: microsoft/PowerShellForGitHub

Python

gidgethub: gidgethub/gidgethub
ghapi: fastai/ghapi
PyGithub: PyGithub/PyGithub
libsaas: duckboard/libsaas
github3.py: sigmavirus24/github3.py
agithub: mozilla/agithub
github-flask: github-flask (Official Website)
githubkit: yanyongyu/githubkit
octokit.py: khornberg/octokit.py

Ruby

GitHub API Gem: piotrmurach/github

Rust

Octocrab: XAMPPRocky/octocrab
Octocat: octocat-rs/octocat-rs

Scala

Github4s: 47deg/github4s

Shell

ok.sh: whiteinge/ok.sh\n\n\n\nREST API/Using the REST API/Best practicesBest practices for using the REST APIFollow these best practices when using GitHub's API.In this articleAvoid pollingMake authenticated requestsAvoid concurrent requestsPause between mutative requestsHandle rate limit errors appropriatelyFollow redirectsDo not manually parse URLsUse conditional requests if appropriateDo not ignore errorsFurther readingAvoid polling
You should subscribe to webhook events instead of polling the API for data. This will help your integration stay within the API rate limit. For more information, see Webhooks documentation.
Make authenticated requests
Authenticated requests have a higher primary rate limit than unauthenticated requests. To avoid exceeding the rate limit, you should make authenticated requests. For more information, see Rate limits for the REST API.
Avoid concurrent requests
To avoid exceeding secondary rate limits, you should make requests serially instead of concurrently. To achieve this, you can implement a queue system for requests.
Pause between mutative requests
If you are making a large number of POST, PATCH, PUT, or DELETE requests, wait at least one second between each request. This will help you avoid secondary rate limits.
Handle rate limit errors appropriately
If you receive a rate limit error, you should stop making requests temporarily according to these guidelines:

If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed.
If the x-ratelimit-remaining header is 0, you should not make another request until after the time specified by the x-ratelimit-reset header. The x-ratelimit-reset header is in UTC epoch seconds.
Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.

Continuing to make requests while you are rate limited may result in the banning of your integration.
Follow redirects
The GitHub REST API uses HTTP redirection where appropriate. You should assume that any
request may result in a redirection. Receiving an HTTP redirection is not an error, and you should follow the redirect.
A 301 status code indicates permanent redirection. You should repeat your request to the URL specified by the location header. Additionally, you should update your code to use this URL for future requests.
A 302 or 307 status code indicates temporary redirection. You should repeat your request to the URL specified by the location header. However, you should not update your code to use this URL for future requests.
Other redirection status codes may be used in accordance with HTTP specifications.
Do not manually parse URLs
Many API endpoints return URL values for fields in the response body. You should not try to parse these URLs or to predict the structure of future URLs. This can cause your integration to break if GitHub changes the structure of the URL in the future. Instead, you should look for a field that contains the information that you need. For example, the endpoint to create an issue returns an html_url field with a value like https://github.com/octocat/Hello-World/issues/1347 and a number field with a value like 1347. If you need to know the number of the issue, use the number field instead of parsing the html_url field.
Similarly, you should not try to manually construct pagination queries. Instead, you should use the link headers to determine what pages of results you can request. For more information, see Using pagination in the REST API.
Use conditional requests if appropriate
Most endpoints return an etag header, and many endpoints return a last-modified header. You can use the values of these headers to make conditional GET requests. If the response has not changed, you will receive a 304 Not Modified response. Making a conditional request does not count against your primary rate limit if a 304 response is returned and the request was made while correctly authorized with an Authorization header.
For example, if a previous request returned an etag header value of 644b5b0155e6404a9cc4bd9d8b1ae730, you can use the if-none-match header in a future request:
curl -H "Authorization: Bearer YOUR-TOKEN" https://api.github.com/meta --include --header 'if-none-match: "644b5b0155e6404a9cc4bd9d8b1ae730"'

For example, if a previous request returned a last-modified header value of Wed, 25 Oct 2023 19:17:59 GMT, you can use the if-modified-since header in a future request:
curl -H "Authorization: Bearer YOUR-TOKEN" https://api.github.com/repos/github/docs --include --header 'if-modified-since: Wed, 25 Oct 2023 19:17:59 GMT'

Conditional requests for unsafe methods, such as POST, PUT, PATCH, and DELETE are not supported unless otherwise noted in the documentation for a specific endpoint.
Do not ignore errors
You should not ignore repeated 4xx and 5xx error codes. Instead, you should ensure that you are correctly interacting with the API. For example, if an endpoint requests a string and you are passing it a numeric value, you will receive a validation error. Similarly, attempting to access an unauthorized or nonexistent endpoint will result in a 4xx error.
Intentionally ignoring repeated validation errors may result in the suspension of your app for abuse.
Further reading

Best practices for using webhooks
Best practices for creating a GitHub App\n\n\n\nREST API/Using the REST API/TroubleshootingTroubleshooting the REST APILearn how to diagnose and resolve common problems for the REST API.In this articleRate limit errors404 Not Found for an existing resourceMissing resultsRequires authentication when using basic authenticationTimeoutsResource not accessibleProblems parsing JSONBody should be a JSON objectInvalid requestValidation FailedNot a supported versionUser agent requiredOther errorsFurther readingRate limit errors
GitHub enforces rate limits to ensure that the API stays available for all users. For more information, see Rate limits for the REST API.
If you exceed your primary rate limit, you will receive a 403 Forbidden or 429 Too Many Requests  response, and the x-ratelimit-remaining header will be 0. If you exceed a secondary rate limit, you will receive a 403 Forbidden or 429 Too Many Requests  response and an error message that indicates that you exceeded a secondary rate limit.
If you receive a rate limit error, you should stop making requests temporarily according to these guidelines:

If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed.
If the x-ratelimit-remaining header is 0, you should not make another request until after the time specified by the x-ratelimit-reset header. The x-ratelimit-reset header is in UTC epoch seconds.
Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.

Continuing to make requests while you are rate limited may result in the banning of your integration.
For more information about how to avoid exceeding the rate limits, see Best practices for using the REST API.
404 Not Found for an existing resource
If you make a request to access a private resource and your request isn't properly authenticated, you will receive a 404 Not Found response. GitHub uses a 404 Not Found response instead of a 403 Forbidden response to avoid confirming the existence of private repositories.
If you get a 404 Not Found response when you know that the resource that you are requesting exists, you should check your authentication. For example:

If you are using a personal access token (classic), you should ensure that:

The token has the scopes that are required to use the endpoint. For more information, see Scopes for OAuth apps and Managing your personal access tokens.
The owner of the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a fine-grained personal access token, you should ensure that:

The token has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The resource owner that was specified for the token matches the owner of the resource that the endpoint will affect. For more information, see Managing your personal access tokens.
The token has access to any private repositories that the endpoint will affect. For more information, see Managing your personal access tokens.
The owner of the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a GitHub App installation access token, you should ensure that:

The GitHub App has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The endpoint is only affecting resources owned by the account where the GitHub App is installed.
The GitHub App has access to any repositories that the endpoint will affect.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a GitHub App user access token, you should ensure that:

The GitHub App has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The user that authorized the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The GitHub App has access to any repositories that the endpoint will affect.
The user has access to any repositories that the endpoint will affect.
The user has approved any updated permissions for your GitHub App. For more information, see Approving updated permissions for a GitHub App.


If you are using an OAuth app user access token, you should ensure that:

The token has the scopes that are required to use the endpoint. For more information, see Scopes for OAuth apps.
The user that authorized the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The organization has not blocked OAuth app access, if you are using an endpoint that will affect resources owned by an organization. App owners cannot see whether their app is blocked, but they can instruct users of the app to check this. For more information, see About OAuth app access restrictions.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using GITHUB_TOKEN in a GitHub Actions workflow, you should ensure that:

The endpoint is only affecting resources owned by the repository where the workflow is running. If you need to access resources outside of that repository, such as resources owned by an organization or resources owned by another repository, you should use a personal access token or an access token for a GitHub App.



For more information about authentication, see Authenticating to the REST API.
You should also check for typos in your URL. For example, adding a trailing slash to the endpoint will result in a 404 Not Found. You can refer to the reference documentation for the endpoint to confirm that you have the correct URL.
Additionally, any path parameters must be URL encoded. For example, any slashes in the parameter value must be replaced with %2F. If you don't properly encode any slashes in the parameter name, the endpoint URL will be misinterpreted.
Missing results
Most endpoints that return a list of resources support pagination. For most of these endpoints, only the first 30 resources are returned by default. In order to see all of the resources, you need to paginate through the results. For more information, see Using pagination in the REST API.
If you are using pagination correctly and still do not see all of the results that you expect, you should confirm that the authentication credentials that you used have access to all of the expected resources. For example, if you are using a GitHub App installation access token, if the installation was only granted access to a subset of repositories in an organization, any request for all repositories in that organization will return only the repositories that the app installation can access.
Requires authentication when using basic authentication
Basic authentication with your username and password is not supported. Instead, you should use a personal access token or an access token for a GitHub App or OAuth app. For more information, see Authenticating to the REST API.
Timeouts
If GitHub takes more than 10 seconds to process an API request, GitHub will terminate the request and you will receive a timeout response and a "Server Error" message.
GitHub reserves the right to change the timeout window to protect the speed and reliability of the API.
You can check the status of the REST API at githubstatus.com to determine whether the timeout is due to a problem with the API. You can also try to simplify your request or try your request later. For example, if you are requesting 100 items on a page, you can try requesting fewer items.
Resource not accessible
If you are using a GitHub App or fine-grained personal access token and you receive a "Resource not accessible by integration" or "Resource not accessible by personal access token" error, then your token has insufficient permissions. For more information about the required permissions, see the documentation for the endpoint.
You can use the X-Accepted-GitHub-Permissions header to identify the permissions that are required to access the REST API endpoint.
The value of the X-Accepted-GitHub-Permissions header is a comma separated list of the permissions that are required to use the endpoint. Occasionally, you can choose from multiple permission sets. In these cases, multiple comma-separated lists will be separated by a semicolon.
For example:

X-Accepted-GitHub-Permissions: contents=read means that your GitHub App or fine-grained personal access token needs read access to the contents permission.
X-Accepted-GitHub-Permissions: pull_requests=write,contents=read means that your GitHub App or fine-grained personal access token needs write access to the pull request permission and read access to the contents permission.
X-Accepted-GitHub-Permissions: pull_requests=read,contents=read; issues=read,contents=read means that your GitHub App or fine-grained personal access token needs either read access to the pull request permission and read access to the contents permission, or read access to the issues permission and read access to the contents permission.

Problems parsing JSON
If you send invalid JSON in the request body, you may receive a 400 Bad Request response and a "Problems parsing JSON" error message. You can use a linter or JSON validator to help you identify errors in your JSON.
Body should be a JSON object
If the endpoint expects a JSON object and you do not format your request body as a JSON object, you may receive a 400 Bad Request response and a "Body should be a JSON object" error message.
Invalid request
If you omit required parameters or you use the wrong type for a parameter, you may receive a 422 Unprocessable Entity response and an "Invalid request" error message. For example, you will get this error if you specify a parameter value as an array but the endpoint is expecting a string. You can refer to the reference documentation for the endpoint to verify that you are using the correct parameter types and that you are including all of the required parameters.
Validation Failed
If your request could not be processed, you may receive a 422 Unprocessable Entity response and a "Validation Failed" error message. The response body will include an errors property, which includes a code property to help you diagnose the problem.

































CodeDescriptionmissingA resource does not exist.missing_fieldA parameter that was required was not specified. Review the documentation for the endpoint to see what parameters are required.invalidThe formatting of a parameter is invalid. Review the endpoint documentation for more specific information.already_existsAnother resource has the same value as one of your parameters. This can happen in resources that must have some unique key (such as label names).unprocessableThe parameters that were provided were invalid.customRefer to the message property to diagnose the error.
Not a supported version
You should use the X-GitHub-Api-Version header to specify an API version. For example:
curl --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/zen

If you specify a version that does not exist, you will receive a 400 Bad Request error and a message about the version not being supported.
For more information, see API Versions.
User agent required
Requests without a valid User-Agent header will be rejected. You should use your username or the name of your application for the User-Agent value.
curl sends a valid User-Agent header by default.
Other errors
If you observe an error that is not addressed here, you should refer to the error message that the API gives you. Most error messages will provide a clue about what is wrong and a link to relevant documentation.
If you observe unexpected failures, you can use githubstatus.com or the GitHub status API to check for incidents affecting the API.
Further reading

Best practices for using the REST API
Troubleshooting webhooks
Best practices for creating a GitHub App\n\n\n\nREST API/Using the REST API/TimezonesTimezones and the REST APISome REST API endpoints allow you to specify timezone information with your request.Some requests that create new data, such as creating a new commit, allow you to provide timezone information when specifying or generating timestamps.
Note that these rules apply only to data passed to the API, not to data returned by the API. Timestamps returned by the API are in UTC time, ISO 8601 format.
Determining the timezone for a request
To determine timezone information for applicable API calls, we apply these rules in order of priority:

Explicitly providing an ISO 8601 timestamp with timezone information
Using the Time-Zone header
Using the last known timezone for the user
Defaulting to UTC without other timezone information

Explicitly providing an ISO 8601 timestamp with timezone information
For API calls that allow for a timestamp to be specified, we use that exact timestamp. These timestamps look something like 2014-02-27T15:05:06+01:00.
An example of this is the API to manage commits. For more information, see REST API endpoints for Git commits.
Using the Time-Zone header
It is possible to supply a Time-Zone header, which defines a timezone according to the list of names from the Olson database.
curl -H "Time-Zone: Europe/Amsterdam" -X POST https://api.github.com/repos/github-linguist/linguist/contents/new_file.md

This means that we generate a timestamp for the moment your API call is made, in the timezone this header defines.
For example, the API to manage contents generates a git commit for each addition or change, and it uses the current time as the timestamp. For more information, see REST API endpoints for repository contents. The Time-Zone header will determine the timezone used for generating that current timestamp.
Using the last known timezone for the user
If no Time-Zone header is specified and you make an authenticated call to the API, we use the last known timezone for the authenticated user. The last known timezone is updated whenever you browse the GitHub website.
Defaulting to UTC without other timezone information
If the steps above don't result in any information, we use UTC as the timezone.\n\n\n\nREST API/Using the REST API/CORS and JSONPUsing CORS and JSONP to make cross-origin requestsYou can make API requests across domains using cross-origin resource sharing (CORS) and JSONP callbacks.In this articleAbout cross-origin requestsCross-origin resource sharing (CORS)JSON-P callbacksAbout cross-origin requests
A cross-origin request is a request made to a different domain than the one originating the request. For security reasons, most web browsers block cross-origin requests. However, you can use cross-origin resource sharing (CORS) and JSONP callbacks to make cross-origin requests.
Cross-origin resource sharing (CORS)
The REST API supports cross-origin resource sharing (CORS) for AJAX requests from any origin. For more information, see the CORS W3C Recommendation and the HTML 5 Security Guide
Here's a sample request sent from a browser hitting
http://example.com:
$ curl -I https://api.github.com -H "Origin: http://example.com"
HTTP/2 302
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval

This is what the CORS preflight request looks like:
$ curl -I https://api.github.com -H "Origin: http://example.com" -X OPTIONS
HTTP/2 204
Access-Control-Allow-Origin: *
Access-Control-Allow-Headers: Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-Requested-With
Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE
Access-Control-Expose-Headers: ETag, Link, x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Access-Control-Max-Age: 86400

JSON-P callbacks
You can send a ?callback parameter to any GET call to have the results
wrapped in a JSON function. This is typically used when browsers want to embed GitHub content in web pages and avoid cross-domain problems. The response includes the same data output as the regular API, plus the relevant HTTP Header information.
$ curl https://api.github.com?callback=foo

> /**/foo({
>   "meta": {
>     "status": 200,
>     "x-ratelimit-limit": "5000",
>     "x-ratelimit-remaining": "4966",
>     "x-ratelimit-reset": "1372700873",
>     "Link": [ // pagination headers and other links
>       ["https://api.github.com?page=2", {"rel": "next"}]
>     ]
>   },
>   "data": {
>     // the data
>   }
> })

You can write a JavaScript handler to process the callback. Here's a minimal example you can try:
<html>
<head>
<script type="text/javascript">
function foo(response) {
  var meta = response.meta;
  var data = response.data;
  console.log(meta);
  console.log(data);
}

var script = document.createElement('script');
script.src = 'https://api.github.com?callback=foo';

document.getElementsByTagName('head')[0].appendChild(script);
</script>
</head>

<body>
  <p>Open up your browser's console.</p>
</body>
</html>

All of the headers have the same string value as the HTTP Headers, except Link. Link headers are pre-parsed for you and come through as an array of [url, options] tuples.
For example, a link that looks like this:
Link: <url1>; rel="next", <url2>; rel="foo"; bar="baz"

will look like this in the Callback output:
{
  "Link": [
    [
      "url1",
      {
        "rel": "next"
      }
    ],
    [
      "url2",
      {
        "rel": "foo",
        "bar": "baz"
      }
    ]
  ]
}\n\n\n\nREST API/Using the REST API/Issue event typesIssue event typesFor the REST APIs for issue events and timeline events, learn about each event type, the triggering action on GitHub, and each event's unique properties.In this articleIssue event object common propertiesassignedautomatic_base_change_failedautomatic_base_change_succeededbase_ref_changedclosedcommentedcommittedconnectedconvert_to_draftconverted_to_discussioncross-referenceddemilestoneddeployeddeployment_environment_changeddisconnectedhead_ref_deletedhead_ref_restoredhead_ref_force_pushedlabeledlockedmentionedmarked_as_duplicatemergedmilestonedpinnedready_for_reviewreferencedrenamedreopenedreview_dismissedreview_requestedreview_request_removedreviewedsubscribedtransferredunassignedunlabeledunlockedunmarked_as_duplicateunpinnedunsubscribeduser_blockedIssue events are triggered by activity in issues and pull requests and are available in the REST API for Issue events and Timeline events. Each event type specifies whether the event is available in the REST API for issue events or timeline events.
GitHub's REST API considers every pull request to be an issue, but not every issue is a pull request. For this reason, the Issue Events and Timeline Events endpoints may return both issues and pull requests in the response. Pull requests have a pull_request property in the issue object. Because pull requests are issues, issue and pull request numbers do not overlap in a repository. For example, if you open your first issue in a repository, the number will be 1. If you then open a pull request, the number will be 2. Each event type specifies if the event occurs in pull request, issues, or both.
Issue event object common properties
Issue events all have the same object structure, except events that are only available in the REST API for timeline events. Some events also include additional properties that provide more context about the event resources. Refer to the specific event for details about any properties that differ from this object format.


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
assigned
The issue or pull request was assigned to a user.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for assigned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.assigneeobjectThe person assigned to this issue.assignerobjectThe person who performed the assignment for this issue. This field is available in the REST API for issue events but not the REST API for timeline events.
automatic_base_change_failed
GitHub unsuccessfully attempted to automatically change the base branch of the pull request.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for automatic_base_change_failed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
automatic_base_change_succeeded
GitHub successfully attempted to automatically change the base branch of the pull request.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for automatic_base_change_succeeded


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
base_ref_changed
The base reference branch of the pull request changed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for base_ref_changed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
closed
The issue or pull request was closed. When the commit_id is present, it identifies the commit that closed the issue using "closes / fixes" syntax. For more information about the syntax, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for closed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
commented
A comment was added to the issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for commented
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.






































































NameTypeDescriptionurlstringThe REST API URL to retrieve the issue comment.html_urlstringThe HTML URL of the issue comment.issue_urlstringThe HTML URL of the issue.idintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.userobjectThe person who commented on the issue.created_atstringThe timestamp indicating when the comment was added.updated_atstringThe timestamp indicating when the comment was updated or created, if the comment is never updated.author_associationstringThe permissions the user has in the issue's repository. For example, the value would be "OWNER" if the owner of repository created a comment.bodystringThe comment body text.eventstringThe event value is "commented".actorobjectThe person who generated the event.
committed
A commit was added to the pull request's HEAD branch.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for committed
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.

































































NameTypeDescriptionshastringThe SHA of the commit in the pull request.node_idstringThe Global Node ID of the event.urlstringThe REST API URL to retrieve the commit.html_urlstringThe HTML URL of the commit.authorobjectThe person who authored the commit.committerobjectThe person who committed the commit on behalf of the author.treeobjectThe Git tree of the commit.messagestringThe commit message.parentsarray of objectsA list of parent commits.verificationobjectThe result of verifying the commit's signature. For more information, see REST API endpoints for Git commits.eventstringThe event value is "committed".
connected
The issue or pull request was linked to another issue or pull request. For more information, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for connected


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
convert_to_draft
The pull request was converted to draft mode.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for convert_to_draft


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
converted_to_discussion
The issue was closed and converted to a discussion.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for converted_to_discussion


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
cross-referenced
The issue or pull request was referenced from another issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for cross-referenced
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.













































NameTypeDescriptionactorobjectThe person who generated the event.created_atstringThe timestamp indicating when the cross-reference was added.updated_atstringThe timestamp indicating when the cross-reference was updated or created, if the cross-reference is never updated.sourceobjectThe issue or pull request that added a cross-reference.source[type]stringThis value will always be "issue" because pull requests are of type issue. Only cross-reference events triggered by issues or pull requests are returned in the REST API for timeline events. To determine if the issue that triggered the event is a pull request, you can check if the source[issue][pull_request] object exists.source[issue]objectThe issue object that added the cross-reference.eventstringThe event value is "cross-referenced".
demilestoned
The issue or pull request was removed from a milestone.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for demilestoned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.milestoneobjectThe milestone object.milestone[title]stringThe title of the milestone.
deployed
The pull request was deployed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for deployed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
deployment_environment_changed
The pull request deployment environment was changed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for deployment_environment_changed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
disconnected
The issue or pull request was unlinked from another issue or pull request. For more information, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for disconnected


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
head_ref_deleted
The pull request's HEAD branch was deleted.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for head_ref_deleted


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
head_ref_restored
The pull request's HEAD branch was restored to the last known commit.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

head_ref_force_pushed
The pull request's HEAD branch was force pushed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for head_ref_force_pushed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
labeled
A label was added to the issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for labeled

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.labelobjectThe label added or removed from the issuelabel[name]stringThe name of the label.label[color]stringThe hex color code.
locked
The issue or pull request was locked.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for locked























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.lock_reasonstringThe reason an issue or pull request conversation was locked, if one was provided.
mentioned
The actor was @mentioned in an issue or pull request body.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for mentioned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
marked_as_duplicate
A user with write permissions marked an issue as a duplicate of another issue, or a pull request as a duplicate of another pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for marked_as_duplicate


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
merged
The pull request was merged. The commit_id attribute is the SHA1 of the HEAD commit that was merged. The commit_repository is always the same as the main repository.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for merged


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
milestoned
The issue or pull request was added to a milestone.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for milestoned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.milestoneobjectThe milestone object.milestone[title]stringThe title of the milestone.
pinned
The issue was pinned.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for pinned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
ready_for_review
A draft pull request was marked as ready for review.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for ready_for_review


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
referenced
The issue was referenced from a commit message. The commit_id attribute is the commit SHA1 of where that happened and the commit_repository is where that commit was pushed.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for referenced


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
renamed
The issue or pull request title was changed.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for renamed

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.renameobjectThe name details.rename[from]stringThe previous name.rename[to]stringThe new name.
reopened
The issue or pull request was reopened.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for reopened


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
review_dismissed
The pull request review was dismissed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_dismissed











































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.dismissed_reviewobjectThe information for the dismissed review.dismissed_review[state]stringThe state the pull request was in when it was dismissed. Can be one of: commented, approved, or changes_requested.dismissed_review[review_id]stringThe unique identifier of the pull request's review.dismissed_review[dismissal_message]stringThe message the user included when dismissing the review.dismissed_review[dismissal_commit_id]stringThe unique identifier of the commit that dismissed the review if one exists.
review_requested
A pull request review was requested.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_requested




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.requested_reviewerobjectThe person requested to review the pull request.review_requesterobjectThe person who requested a review.
review_request_removed
A pull request review request was removed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_request_removed




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.requested_reviewerobjectThe person requested to review the pull request.review_requesterobjectThe person who requested a review.
reviewed
The pull request was reviewed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for reviewed
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.






































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.userobjectThe person who commented on the issue.bodystringThe review summary text.commit_idstringThe SHA of the latest commit in the pull request at the time of the review.submitted_atstringThe timestamp indicating when the review was submitted.statestringThe state of the submitted review. Can be one of: commented, changes_requested, approved or dismissed.html_urlstringThe HTML URL of the review.pull_request_urlstringThe REST API URL to retrieve the pull request.author_associationstringThe permissions the user has in the issue's repository. For example, the value would be "OWNER" if the owner of repository created a comment._linksobjectThe html_url and pull_request_url.eventstringThe event value is "reviewed".
subscribed
Someone subscribed to receive notifications for an issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for subscribed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
transferred
The issue was transferred to another repository.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for transferred


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unassigned
A user was unassigned from the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unassigned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.assigneeobjectThe person unassigned from this issue.assignerobjectThe person who performed the unassignment for this issue. This field is available in the REST API for issue events but not the REST API for timeline events.
unlabeled
A label was removed from the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unlabeled

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.labelobjectThe label added or removed from the issuelabel[name]stringThe name of the label.label[color]stringThe hex color code.
unlocked
The issue was unlocked.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unlocked























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.lock_reasonstringThe reason an issue or pull request conversation was locked, if one was provided.
unmarked_as_duplicate
An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unmarked_as_duplicate


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unpinned
The issue was unpinned.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for unpinned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unsubscribed
Someone unsubscribed from receiving notifications for an issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unsubscribed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
user_blocked
An organization owner blocked a user from the organization. This was done through one of the blocked user's comments on the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for user_blocked


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.\n\n\n\nREST API/Using the REST API/GitHub event typesGitHub event typesFor the GitHub Events API, learn about each event type, the triggering action on GitHub, and each event's unique properties.In this articleEvent object common propertiesCommitCommentEventCreateEventDeleteEventForkEventGollumEventIssueCommentEventIssuesEventMemberEventPublicEventPullRequestEventPullRequestReviewEventPullRequestReviewCommentEventPullRequestReviewThreadEventPushEventReleaseEventSponsorshipEventWatchEventThe Events API can return different types of events triggered by activity on GitHub. Each event response contains shared properties, but has a unique payload object determined by its event type. The Event object common properties describes the properties shared by all events, and each event type describes the payload properties that are unique to the specific event.
Event object common properties
The event objects returned from the Events API endpoints have the same structure.
























































































































Event API attribute nameTypeDescriptionidintegerUnique identifier for the event.typestringThe type of event. Events uses PascalCase for the name.actorobjectThe user that triggered the event.actor.idintegerThe unique identifier for the actor.actor.loginstringThe username of the actor.actor.display_loginstringThe specific display format of the username.actor.gravatar_idstringThe unique identifier of the Gravatar profile for the actor.actor.urlstringThe REST API URL used to retrieve the user object, which includes additional user information.actor.avatar_urlstringThe URL of the actor's profile image.repoobjectThe repository object where the event occurred.repo.idintegerThe unique identifier of the repository.repo.namestringThe name of the repository, which includes the owner and repository name. For example, octocat/hello-world is the name of the hello-world repository owned by the octocat personal account.repo.urlstringThe REST API URL used to retrieve the repository object, which includes additional repository information.payloadobjectThe event payload object is unique to the event type. See the event type below for the event API payload object.publicbooleanWhether the event is visible to all users.created_atstringThe date and time when the event was triggered. It is formatted according to ISO 8601.orgobjectThe organization that was chosen by the actor to perform action that triggers the event.The property appears in the event object only if it is applicable.org.idintegerThe unique identifier for the organization.org.loginstringThe name of the organization.org.gravatar_idstringThe unique identifier of the Gravatar profile for the organization.org.urlstringThe REST API URL used to retrieve the organization object, which includes additional organization information.org.avatar_urlstringThe URL of the organization's profile image.
Example WatchEvent event object
This example shows the format of the WatchEvent response when using the Events API.
HTTP/2 200
Link: <https://api.github.com/resource?page=2>; rel="next",
      <https://api.github.com/resource?page=5>; rel="last"

[
  {
    "type": "WatchEvent",
    "public": false,
    "payload": {
    },
    "repo": {
      "id": 3,
      "name": "octocat/Hello-World",
      "url": "https://api.github.com/repos/octocat/Hello-World"
    },
    "actor": {
      "id": 1,
      "login": "octocat",
      "gravatar_id": "",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "url": "https://api.github.com/users/octocat"
    },
    "org": {
      "id": 1,
      "login": "github",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/github",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif"
    },
    "created_at": "2011-09-06T17:26:27Z",
    "id": "12345"
  }
]

CommitCommentEvent
A commit comment is created. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for commit comments.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for CommitCommentEvent




















KeyTypeDescriptionactionstringThe action performed. Can be created.commentobjectThe commit comment resource.
CreateEvent
A Git branch or tag is created. For more information, see REST API endpoints for Git database.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for CreateEvent



































KeyTypeDescriptionrefstringThe git ref resource, or null if ref_type is repository.ref_typestringThe type of Git ref object created in the repository. Can be either branch, tag, or repository.master_branchstringThe name of the repository's default branch (usually main).descriptionstringThe repository's current description.pusher_typestringCan be either user or a deploy key.
DeleteEvent
A Git branch or tag is deleted. For more information, see the REST API endpoints for Git database REST API.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for DeleteEvent




















KeyTypeDescriptionrefstringThe git ref resource.ref_typestringThe type of Git ref object deleted in the repository. Can be either branch or tag.
ForkEvent
A user forks a repository. For more information, see REST API endpoints for repositories.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for ForkEvent















KeyTypeDescriptionforkeeobjectThe created repository resource.
GollumEvent
A wiki page is created or updated. For more information, see About wikis.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for GollumEvent








































KeyTypeDescriptionpagesarrayThe pages that were updated.pages[][page_name]stringThe name of the page.pages[][title]stringThe current page title.pages[][action]stringThe action that was performed on the page. Can be created or edited.pages[][sha]stringThe latest commit SHA of the page.pages[][html_url]stringPoints to the HTML wiki page.
IssueCommentEvent
Activity related to an issue or pull request comment. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for issues.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for IssueCommentEvent



































KeyTypeDescriptionactionstringThe action that was performed on the comment. Can be one of created, edited, or deleted.changesobjectThe changes to the comment if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.issueobjectThe issue the comment belongs to.commentobjectThe comment itself.
IssuesEvent
Activity related to an issue. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for issues.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for IssuesEvent













































KeyTypeDescriptionactionstringThe action that was performed. Can be one of opened, edited, closed, reopened, assigned, unassigned, labeled, or unlabeled.issueobjectThe issue itself.changesobjectThe changes to the issue if the action was edited.changes[title][from]stringThe previous version of the title if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.assigneeobjectThe optional user who was assigned or unassigned from the issue.labelobjectThe optional label that was added or removed from the issue.
MemberEvent
Activity related to repository collaborators. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for collaborators.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for MemberEvent






























KeyTypeDescriptionactionstringThe action that was performed. Can be added to indicate a user accepted an invitation to a repository.memberobjectThe user that was added.changesobjectThe changes to the collaborator permissions if the action was edited.changes[old_permission][from]stringThe previous permissions of the collaborator if the action was edited.
PublicEvent
When a private repository is made public.
Event payload object for PublicEvent
This event returns an empty payload object.
PullRequestEvent
Activity related to pull requests. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestEvent













































KeyTypeDescriptionactionstringThe action that was performed. Can be one of opened, edited, closed, reopened, assigned, unassigned, review_requested, review_request_removed, labeled, unlabeled, and synchronize.numberintegerThe pull request number.changesobjectThe changes to the comment if the action was edited.changes[title][from]stringThe previous version of the title if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.pull_requestobjectThe pull request itself.reasonstringThe reason the pull request was removed from a merge queue if the action was dequeued.
PullRequestReviewEvent
Activity related to pull request reviews. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewEvent

























KeyTypeDescriptionactionstringThe action that was performed. Can be created.pull_requestobjectThe pull request the review pertains to.reviewobjectThe review that was affected.
PullRequestReviewCommentEvent
Activity related to pull request review comments in the pull request's unified diff. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewCommentEvent



































KeyTypeDescriptionactionstringThe action that was performed on the comment. Can be created.changesobjectThe changes to the comment if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.pull_requestobjectThe pull request the comment belongs to.commentobjectThe comment itself.
PullRequestReviewThreadEvent
Activity related to a comment thread on a pull request being marked as resolved or unresolved. The type of activity is specified in the action property of the payload object.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewThreadEvent

























KeyTypeDescriptionactionstringThe action that was performed. Can be one of:resolved - A comment thread on a pull request was marked as resolved.unresolved - A previously resolved comment thread on a pull request was marked as unresolved.pull_requestobjectThe pull request the thread pertains to.threadobjectThe thread that was affected.
PushEvent
One or more commits are pushed to a repository branch or tag.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PushEvent
















































































KeyTypeDescriptionpush_idintegerUnique identifier for the push.sizeintegerThe number of commits in the push.distinct_sizeintegerThe number of distinct commits in the push.refstringThe full git ref that was pushed. Example: refs/heads/main.headstringThe SHA of the most recent commit on ref after the push.beforestringThe SHA of the most recent commit on ref before the push.commitsarrayAn array of commit objects describing the pushed commits. (The array includes a maximum of 20 commits. If necessary, you can use the Commits API to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries.)commits[][sha]stringThe SHA of the commit.commits[][message]stringThe commit message.commits[][author]objectThe git author of the commit.commits[][author][name]stringThe git author's name.commits[][author][email]stringThe git author's email address.commits[][url]urlURL that points to the commit API resource.commits[][distinct]booleanWhether this commit is distinct from any that have been pushed before.
ReleaseEvent
Activity related to a release. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for releases and release assets REST API.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for ReleaseEvent






























KeyTypeDescriptionactionstringThe action that was performed. Can be published.changes[body][from]stringThe previous version of the body if the action was edited.changes[name][from]stringThe previous version of the name if the action was edited.releaseobjectThe release object.
SponsorshipEvent
Activity related to a sponsorship listing. The type of activity is specified in the action property of the payload object. For more information, see About GitHub Sponsors.
Event payload object for SponsorshipEvent






























KeyTypeDescriptionactionstringThe action that was performed. This can be created.effective_datestringThe pending_cancellation and pending_tier_change event types will include the date the cancellation or tier change will take effect.changes[tier][from]objectThe tier_changed and pending_tier_change will include the original tier before the change or pending change. For more information, see the pending tier change payload.changes[privacy_level][from]stringThe edited event types include the details about the change when someone edits a sponsorship to change the privacy.
WatchEvent
When someone stars a repository. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for activity.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for WatchEvent















KeyTypeDescriptionactionstringThe action that was performed. Currently, can only be started.\n\n\n\nREST API/Authentication/AuthenticatingAuthenticating to the REST APIYou can authenticate to the REST API to access more endpoints and have a higher rate limit.In this articleAbout authenticationAuthenticating with a personal access tokenAuthenticating with a token generated by an appAuthenticating in a GitHub Actions workflowAuthenticating with username and passwordFurther readingAbout authentication
Many REST API endpoints require authentication or return additional information if you are authenticated. Additionally, you can make more requests per hour when you are authenticated.
To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow.
After creating a token, you can authenticate your request by sending the token in the Authorization header of your request. For example, in the following request, replace YOUR-TOKEN with a reference to your token:
curl --request GET \
--url "https://api.github.com/octocat" \
--header "Authorization: Bearer YOUR-TOKEN" \
--header "X-GitHub-Api-Version: 2022-11-28"

Note

In most cases, you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer.

Failed login limit
If you try to use a REST API endpoint without a token or with a token that has insufficient permissions, you will receive a 404 Not Found or 403 Forbidden response. Authenticating with invalid credentials will initially return a 401 Unauthorized response.
After detecting several requests with invalid credentials within a short period, the API will temporarily reject all authentication attempts for that user (including ones with valid credentials) with a 403 Forbidden response. For more information, see Rate limits for the REST API.
Authenticating with a personal access token
If you want to use the GitHub REST API for personal use, you can create a personal access token. If possible, GitHub recommends that you use a fine-grained personal access token instead of a personal access token (classic). For more information about creating a personal access token, see Managing your personal access tokens.
If you are using a fine-grained personal access token, your fine-grained personal access token requires specific permissions in order to access each REST API endpoint. The REST API reference document for each endpoint states whether the endpoint works with fine-grained personal access tokens and states what permissions are required in order for the token to use the endpoint. Some endpoints may require multiple permissions, and some endpoints may require one of multiple permissions. For an overview of which REST API endpoints a fine-grained personal access token can access with each permission, see Permissions required for fine-grained personal access tokens.
If you are using a personal access token (classic), it requires specific scopes in order to access each REST API endpoint. For general guidance about what scopes to choose, see Scopes for OAuth apps.
Personal access tokens and SAML SSO
If you use a personal access token (classic) to access an organization that enforces SAML single sign-on (SSO) for authentication, you will need to authorize your token after creation. Fine-grained personal access tokens are authorized during token creation, before access to the organization is granted. For more information, see Authorizing a personal access token for use with SAML single sign-on.
If you do not authorize your personal access token (classic) for SAML SSO before you try to use it to access a single organization that enforces SAML SSO, you may receive a 404 Not Found or a 403 Forbidden error. If you receive a 403 Forbidden error, the X-GitHub-SSO header will include a URL that you can follow to authorize your token. The URL expires after one hour.
If you do not authorize your personal access token (classic) for SAML SSO before you try to use it to access multiple organizations, the API will not return results from the organizations that require SAML SSO and the X-GitHub-SSO header will indicate the ID of the organizations that require SAML SSO authorization of your personal access token (classic). For example: X-GitHub-SSO: partial-results; organizations=21955855,20582480.
Authenticating with a token generated by an app
If you want to use the API for an organization or on behalf of another user, GitHub recommends that you use a GitHub App. For more information, see About authentication with a GitHub App.
The REST API reference documentation for each endpoint states whether the endpoint works with GitHub Apps and states what permissions are required in order for the app to use the endpoint. Some endpoints may require multiple permissions, and some endpoints may require one of multiple permissions. For an overview of which REST API endpoints a GitHub App can access with each permission, see Permissions required for GitHub Apps.
You can also create an OAuth token with an OAuth app to access the REST API. However, GitHub recommends that you use a GitHub App instead. GitHub Apps allow more control over the access and permission that the app has.
Access tokens created by apps are automatically authorized for SAML SSO.
Using basic authentication
Some REST API endpoints for GitHub Apps and OAuth apps require you to use basic authentication to access the endpoint. You will use the app's client ID as the username and the app's client secret as the password.
For example:
curl --request POST \
--url "https://api.github.com/applications/YOUR_CLIENT_ID/token" \
--user "YOUR_CLIENT_ID:YOUR_CLIENT_SECRET" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--data '{
  "access_token": "ACCESS_TOKEN_TO_CHECK"
}'

The client ID and client secret are associated with the app, not with the owner of the app or a user who authorized the app. They are used to perform operations on behalf of the app, such as creating access tokens.
If you are the owner of a GitHub App or OAuth app, or if you are an app manager for a GitHub App, you can find the client ID and generate a client secret on the settings page for your app. To navigate to your app's settings page:

In the upper-right corner of any page on GitHub, click your profile photo.
Navigate to your account settings.

For an app owned by a personal account, click Settings.
For an app owned by an organization:

Click Your organizations.
To the right of the organization, click Settings.




In the left sidebar, click  Developer settings.
In the left sidebar, click GitHub Apps or OAuth apps.
For GitHub Apps, to the right of the GitHub App you want to access, click Edit. For OAuth apps, click the app that you want to access.
Next to Client ID, you will see the client ID for your app.
Next to Client secrets, click Generate a new client secret to generate a client secret for your app.

Authenticating in a GitHub Actions workflow
If you want to use the API in a GitHub Actions workflow, GitHub recommends that you authenticate with the built-in GITHUB_TOKEN instead of creating a token. You can grant permissions to the GITHUB_TOKEN with the permissions key. For more information, see Automatic token authentication.
If this is not possible, you can store your token as a secret and use the name of your secret in your GitHub Actions workflow. For more information about secrets, see Using secrets in GitHub Actions.
Authenticating in a GitHub Actions workflow using GitHub CLI
To make an authenticated request to the API in a GitHub Actions workflow using GitHub CLI, you can store the value of GITHUB_TOKEN as an environment variable, and use the run keyword to execute the GitHub CLI api subcommand. For more information about the run keyword, see Workflow syntax for GitHub Actions.
In the following example workflow, replace PATH with the path of the endpoint. For more information about the path, see Getting started with the REST API.
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api /PATH

Authenticating in a GitHub Actions workflow using curl
To make an authenticated request to the API in a GitHub Actions workflow using curl, you can store the value of GITHUB_TOKEN as an environment variable, and use the run keyword to execute a curl request to the API. For more information about the run keyword, see Workflow syntax for GitHub Actions.
In the following example workflow, replace PATH with the path of the endpoint. For more information about the path, see Getting started with the REST API.
YAMLjobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/PATH" \
          --header "Authorization: Bearer $GH_TOKEN"
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/PATH" \
          --header "Authorization: Bearer $GH_TOKEN"

Authenticating in a GitHub Actions workflow using JavaScript
For an example of how to authenticate in a GitHub Actions workflow using JavaScript, see Scripting with the REST API and JavaScript.
Authenticating with username and password
Authentication with username and password is not supported. If you try to authenticate with user name and password, you will receive a 4xx error.
Further reading

Keeping your API credentials secure
Getting started with the REST API\n\n\n\nREST API/Authentication/Keeping API credentials secureKeeping your API credentials secureFollow these best practices to keep your API credentials and tokens secure.In this articleChoose an appropriate authentication methodLimit the permissions of your credentialsStore your authentication credentials securelyLimit who can access your authentication credentialsUse authentication credentials securely in your codePrepare a remediation planChoose an appropriate authentication method
You should choose an authentication method that is appropriate for the task you want to accomplish.

To use the API for personal use, you can create a personal access token.
To use the API on behalf of an organization or another user, you should create a GitHub App.
To use the API in a GitHub Actions workflow, you should authenticate with the built-in GITHUB_TOKEN.

For more information, see About authentication to GitHub.
Limit the permissions of your credentials
When creating a personal access token, only select the minimum permissions or scopes needed, and set an expiration date for the minimum amount of time you'll need to use the token. GitHub recommends that you use fine-grained personal access tokens instead of personal access tokens (classic). For more information, see Managing your personal access tokens.
A token has the same capabilities to access resources and perform actions on those resources that the owner of the token has, and is further limited by any scopes or permissions granted to the token. A token cannot grant additional access capabilities to a user.
When creating a GitHub App, select the minimum permissions that your GitHub App will need. For more information, see Best practices for creating a GitHub App.
When authenticating with GITHUB_TOKEN in a GitHub Actions workflow, only give the minimum amount of permissions needed. For more information, see Automatic token authentication.
Store your authentication credentials securely
Treat authentication credentials the same way you would treat your passwords or other sensitive credentials.

Don't share authentication credentials using an unencrypted messaging or email system.
Don't pass your personal access token as plain text in the command line. For more information, see Managing your personal access tokens.
Don't push unencrypted authentication credentials like tokens or keys to any repository, even if the repository is private. Instead consider using a GitHub Actions secret or Codespaces secret. For more information, see Using secrets in GitHub Actions and Managing your account-specific secrets for GitHub Codespaces.
You can use secret scanning to discover tokens, private keys, and other secrets that were pushed to a repository, or to block future pushes that contain secrets. For more information, see About secret scanning.

Limit who can access your authentication credentials
Don't share your personal access token with others. Instead of sharing a personal access token, consider creating a GitHub App. For more information, see About creating GitHub Apps.
If you need to share credentials with a team, store the credentials in a secure shared system. For example, you could store and share passwords securely using 1Password, or you could store keys in Azure KeyVault and manage access with your IAM (Identity and access management).
If you're creating a GitHub Actions workflow that needs to access the API, you can store your credentials in an encrypted secret, and access the encrypted secret from the workflow. For more information, see Using secrets in GitHub Actions and Making authenticated API requests with a GitHub App in a GitHub Actions workflow.
Use authentication credentials securely in your code
Never hardcode authentication credentials like tokens, keys, or app-related secrets into your code. Instead, consider using a secret manager such as Azure Key Vault or HashiCorp Vault. For more information about securing GitHub App credentials, see Best practices for creating a GitHub App.
If you find another user's personal access token exposed on GitHub or elsewhere, you can submit a revocation request through the REST API. See Revocation.
When using a personal access token in a script, consider storing your token as a GitHub Actions secret and running your script through GitHub Actions. You can also store your token as a Codespaces secret and run your script in Codespaces. For more information, see Using secrets in GitHub Actions and Managing your account-specific secrets for GitHub Codespaces.
If none of these options are possible, you can store authentication credentials in a .env file. Make sure to encrypt your .env file, and never push it to any repository.
Prepare a remediation plan
You should create a plan to handle any security breaches in a timely manner. In the event that your token or other authentication credential is leaked, you will need to:

Generate a new credential.
Replace the old credential with the new one everywhere that you are storing or accessing the credential.
Delete the old compromised credential.

For information about rotating compromised credentials for a GitHub App, see Best practices for creating a GitHub App.
For information about creating and deleting personal access tokens, see Managing your personal access tokens.\n\n\n\nREST API/Authentication/Endpoints for GitHub App installation tokensEndpoints available for GitHub App installation access tokensYour GitHub App can make requests to the following REST endpoints with an installation access token.Who can use this feature?You can use an installation access token to access these endpoints using your GitHub App. For more information, see Authenticating as a GitHub App installation.In this articleactionsactivityappsbillingbranchescampaignscheckscode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgitgitignoreinteractionsissueslicensesmarkdownmetametricsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rulePOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /users/{username}/eventsGET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /installation/repositoriesDELETE /installation/tokenbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitescode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}collaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsissuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}POST /orgs/{org}/packages/{package_type}/{package_name}/restoreGET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restoreGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}POST /user/packages/{package_type}/{package_name}/restoreGET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restoreGET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}POST /users/{username}/packages/{package_type}/{package_name}/restoreGET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restorepagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}usersGET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Endpoints for GitHub App user tokensEndpoints available for GitHub App user access tokensYour GitHub App can make requests to the following REST endpoints with a user access token.Who can use this feature?You can use a user access token to access these endpoints using your GitHub App. For more information, see Authenticating with a GitHub App on behalf of a user.In this articleactionsactivityappsbillingbranchescampaignschecksclassroomcode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgistsgitgitignoreinteractionsissueslicensesmarkdownmetametricsmigrationsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /user/starredGET /user/starred/{owner}/{repo}PUT /user/starred/{owner}/{repo}DELETE /user/starred/{owner}/{repo}GET /user/subscriptionsGET /users/{username}/eventsGET /users/{username}/events/orgs/{org}GET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /user/installationsGET /user/installations/{installation_id}/repositoriesGET /user/marketplace_purchasesGET /user/marketplace_purchases/stubbedbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storageGET /users/{username}/settings/billing/actionsGET /users/{username}/settings/billing/packagesGET /users/{username}/settings/billing/shared-storageGET /users/{username}/settings/billing/usagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitesclassroomGET /assignments/{assignment_id}GET /assignments/{assignment_id}/accepted_assignmentsGET /assignments/{assignment_id}/gradesGET /classroomsGET /classrooms/{classroom_id}GET /classrooms/{classroom_id}/assignmentscode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespacesPOST /repos/{owner}/{repo}/codespacesGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/newGET /repos/{owner}/{repo}/codespaces/permissions_checkGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}POST /repos/{owner}/{repo}/pulls/{pull_number}/codespacesGET /user/codespacesPOST /user/codespacesGET /user/codespaces/secretsGET /user/codespaces/secrets/public-keyGET /user/codespaces/secrets/{secret_name}PUT /user/codespaces/secrets/{secret_name}DELETE /user/codespaces/secrets/{secret_name}GET /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /user/codespaces/{codespace_name}PATCH /user/codespaces/{codespace_name}DELETE /user/codespaces/{codespace_name}POST /user/codespaces/{codespace_name}/exportsGET /user/codespaces/{codespace_name}/exports/{export_id}GET /user/codespaces/{codespace_name}/machinesPOST /user/codespaces/{codespace_name}/publishPOST /user/codespaces/{codespace_name}/startPOST /user/codespaces/{codespace_name}/stopcollaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}GET /user/repository_invitationsPATCH /user/repository_invitations/{invitation_id}DELETE /user/repository_invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgistsGET /gistsPOST /gistsGET /gists/publicGET /gists/starredGET /gists/{gist_id}PATCH /gists/{gist_id}DELETE /gists/{gist_id}GET /gists/{gist_id}/commentsPOST /gists/{gist_id}/commentsGET /gists/{gist_id}/comments/{comment_id}PATCH /gists/{gist_id}/comments/{comment_id}DELETE /gists/{gist_id}/comments/{comment_id}GET /gists/{gist_id}/commitsGET /gists/{gist_id}/forksPOST /gists/{gist_id}/forksGET /gists/{gist_id}/starPUT /gists/{gist_id}/starDELETE /gists/{gist_id}/starGET /gists/{gist_id}/{sha}GET /users/{username}/gistsgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsGET /user/interaction-limitsPUT /user/interaction-limitsDELETE /user/interaction-limitsissuesGET /issuesGET /orgs/{org}/issuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsGET /user/issueslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsmigrationsGET /repos/{owner}/{repo}/importPUT /repos/{owner}/{repo}/importPATCH /repos/{owner}/{repo}/importDELETE /repos/{owner}/{repo}/importGET /repos/{owner}/{repo}/import/authorsPATCH /repos/{owner}/{repo}/import/authors/{author_id}GET /repos/{owner}/{repo}/import/large_filesPATCH /repos/{owner}/{repo}/import/lfsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}PUT /orgs/{org}/public_members/{username}DELETE /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /user/memberships/orgsGET /user/memberships/orgs/{org}PATCH /user/memberships/orgs/{org}GET /user/orgsGET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}GET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}GET /user/docker/conflictsGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}GET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}GET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}GET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}pagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsPOST /repos/{owner}/{repo}/transferGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /user/reposPOST /user/reposGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypassesGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}GET /user/teamsusersGET /userPATCH /userGET /user/blocksGET /user/blocks/{username}PUT /user/blocks/{username}DELETE /user/blocks/{username}PATCH /user/email/visibilityGET /user/emailsPOST /user/emailsDELETE /user/emailsGET /user/followersGET /user/followingGET /user/following/{username}PUT /user/following/{username}DELETE /user/following/{username}GET /user/gpg_keysPOST /user/gpg_keysGET /user/gpg_keys/{gpg_key_id}DELETE /user/gpg_keys/{gpg_key_id}GET /user/keysPOST /user/keysGET /user/keys/{key_id}DELETE /user/keys/{key_id}GET /user/public_emailsGET /user/social_accountsPOST /user/social_accountsDELETE /user/social_accountsGET /user/ssh_signing_keysPOST /user/ssh_signing_keysGET /user/ssh_signing_keys/{ssh_signing_key_id}DELETE /user/ssh_signing_keys/{ssh_signing_key_id}GET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Endpoints for fine-grained PATsEndpoints available for fine-grained personal access tokensYour fine-grained personal access token can make requests to the following REST endpoints.In this articleactionsactivityappsbillingbranchescampaignschecksclassroomcode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgistsgitgitignoreinteractionsissueslicensesmarkdownmetametricsmigrationsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /user/starredGET /user/starred/{owner}/{repo}PUT /user/starred/{owner}/{repo}DELETE /user/starred/{owner}/{repo}GET /user/subscriptionsGET /users/{username}/eventsGET /users/{username}/events/orgs/{org}GET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /user/installationsGET /user/installations/{installation_id}/repositoriesGET /user/marketplace_purchasesGET /user/marketplace_purchases/stubbedbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storageGET /users/{username}/settings/billing/actionsGET /users/{username}/settings/billing/packagesGET /users/{username}/settings/billing/shared-storageGET /users/{username}/settings/billing/usagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitesclassroomGET /assignments/{assignment_id}GET /assignments/{assignment_id}/accepted_assignmentsGET /assignments/{assignment_id}/gradesGET /classroomsGET /classrooms/{classroom_id}GET /classrooms/{classroom_id}/assignmentscode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespacesPOST /repos/{owner}/{repo}/codespacesGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/newGET /repos/{owner}/{repo}/codespaces/permissions_checkGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}POST /repos/{owner}/{repo}/pulls/{pull_number}/codespacesGET /user/codespacesPOST /user/codespacesGET /user/codespaces/secretsGET /user/codespaces/secrets/public-keyGET /user/codespaces/secrets/{secret_name}PUT /user/codespaces/secrets/{secret_name}DELETE /user/codespaces/secrets/{secret_name}GET /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /user/codespaces/{codespace_name}PATCH /user/codespaces/{codespace_name}DELETE /user/codespaces/{codespace_name}POST /user/codespaces/{codespace_name}/exportsGET /user/codespaces/{codespace_name}/exports/{export_id}GET /user/codespaces/{codespace_name}/machinesPOST /user/codespaces/{codespace_name}/publishPOST /user/codespaces/{codespace_name}/startPOST /user/codespaces/{codespace_name}/stopcollaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}GET /user/repository_invitationsPATCH /user/repository_invitations/{invitation_id}DELETE /user/repository_invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgistsGET /gistsPOST /gistsGET /gists/publicGET /gists/starredGET /gists/{gist_id}PATCH /gists/{gist_id}DELETE /gists/{gist_id}GET /gists/{gist_id}/commentsPOST /gists/{gist_id}/commentsGET /gists/{gist_id}/comments/{comment_id}PATCH /gists/{gist_id}/comments/{comment_id}DELETE /gists/{gist_id}/comments/{comment_id}GET /gists/{gist_id}/commitsGET /gists/{gist_id}/forksPOST /gists/{gist_id}/forksGET /gists/{gist_id}/starPUT /gists/{gist_id}/starDELETE /gists/{gist_id}/starGET /gists/{gist_id}/{sha}GET /users/{username}/gistsgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsGET /user/interaction-limitsPUT /user/interaction-limitsDELETE /user/interaction-limitsissuesGET /issuesGET /orgs/{org}/issuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsGET /user/issueslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsmigrationsGET /repos/{owner}/{repo}/importPUT /repos/{owner}/{repo}/importPATCH /repos/{owner}/{repo}/importDELETE /repos/{owner}/{repo}/importGET /repos/{owner}/{repo}/import/authorsPATCH /repos/{owner}/{repo}/import/authors/{author_id}GET /repos/{owner}/{repo}/import/large_filesPATCH /repos/{owner}/{repo}/import/lfsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}PUT /orgs/{org}/public_members/{username}DELETE /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /user/memberships/orgsGET /user/memberships/orgs/{org}PATCH /user/memberships/orgs/{org}GET /user/orgsGET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}GET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}GET /user/docker/conflictsGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}GET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}GET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}GET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}pagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsPOST /repos/{owner}/{repo}/transferGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /user/reposPOST /user/reposGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypassesGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}GET /user/teamsusersGET /userPATCH /userGET /user/blocksGET /user/blocks/{username}PUT /user/blocks/{username}DELETE /user/blocks/{username}PATCH /user/email/visibilityGET /user/emailsPOST /user/emailsDELETE /user/emailsGET /user/followersGET /user/followingGET /user/following/{username}PUT /user/following/{username}DELETE /user/following/{username}GET /user/gpg_keysPOST /user/gpg_keysGET /user/gpg_keys/{gpg_key_id}DELETE /user/gpg_keys/{gpg_key_id}GET /user/keysPOST /user/keysGET /user/keys/{key_id}DELETE /user/keys/{key_id}GET /user/public_emailsGET /user/social_accountsPOST /user/social_accountsDELETE /user/social_accountsGET /user/ssh_signing_keysPOST /user/ssh_signing_keysGET /user/ssh_signing_keys/{ssh_signing_key_id}DELETE /user/ssh_signing_keys/{ssh_signing_key_id}GET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Permissions for GitHub AppsPermissions required for GitHub AppsFor each permission granted to a GitHub App, these are the REST API endpoints that the app can use.In this articleAbout GitHub App permissionsOrganization permissions for "API Insights"Organization permissions for "Administration"Organization permissions for "Blocking users"Organization permissions for "Campaigns"Organization permissions for "Custom organization roles"Organization permissions for "Custom properties"Organization permissions for "Events"Organization permissions for "GitHub Copilot Business"Organization permissions for "Issue Types"Organization permissions for "Members"Organization permissions for "Network configurations"Organization permissions for "Organization codespaces secrets"Organization permissions for "Organization codespaces settings"Organization permissions for "Organization codespaces"Organization permissions for "Organization dependabot secrets"Organization permissions for "Organization private registries"Organization permissions for "Personal access token requests"Organization permissions for "Personal access tokens"Organization permissions for "Projects"Organization permissions for "Secrets"Organization permissions for "Self-hosted runners"Organization permissions for "Team discussions"Organization permissions for "Variables"Organization permissions for "Webhooks"Repository permissions for "Actions"Repository permissions for "Administration"Repository permissions for "Attestations"Repository permissions for "Checks"Repository permissions for "Code scanning alerts"Repository permissions for "Codespaces lifecycle admin"Repository permissions for "Codespaces metadata"Repository permissions for "Codespaces secrets"Repository permissions for "Codespaces"Repository permissions for "Commit statuses"Repository permissions for "Contents"Repository permissions for "Custom properties"Repository permissions for "Dependabot alerts"Repository permissions for "Dependabot secrets"Repository permissions for "Deployments"Repository permissions for "Environments"Repository permissions for "Issues"Repository permissions for "Metadata"Repository permissions for "Pages"Repository permissions for "Projects"Repository permissions for "Pull requests"Repository permissions for "Repository security advisories"Repository permissions for "Secret scanning alerts"Repository permissions for "Secrets"Repository permissions for "Variables"Repository permissions for "Webhooks"Repository permissions for "Workflows"User permissions for "Block another user"User permissions for "Codespaces user secrets"User permissions for "Email addresses"User permissions for "Followers"User permissions for "GPG keys"User permissions for "Gists"User permissions for "Git SSH keys"User permissions for "Interaction limits"User permissions for "Plan"User permissions for "Profile"User permissions for "SSH signing keys"User permissions for "Starring"User permissions for "Watching"About GitHub App permissions
GitHub Apps are created with a set of permissions. Permissions define what resources the GitHub App can access via the API. For more information, see Choosing permissions for a GitHub App.
To help you choose the correct permissions, you will receive the X-Accepted-GitHub-Permissions header in the REST API response. The header will tell you what permissions are required in order to access the endpoint. For more information, see Troubleshooting the REST API.
These permissions are required to access private resources. Some endpoints can also be used to access public resources without these permissions. To see whether an endpoint can access public resources without a permission, see the documentation for that endpoint.
Some endpoints require more than one permission. Other endpoints work with any one permission from a set of permissions. In these cases, the "Additional permissions" column will include a checkmark. For full details about the permissions that are required to use the endpoint, see the documentation for that endpoint.Organization permissions for "API Insights"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/subject-statsreadUATIATGET /orgs/{org}/insights/api/summary-statsreadUATIATGET /orgs/{org}/insights/api/summary-stats/users/{user_id}readUATIATGET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/time-statsreadUATIATGET /orgs/{org}/insights/api/time-stats/users/{user_id}readUATIATGET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/user-stats/{user_id}readUATIATOrganization permissions for "Administration"EndpointAccessToken typesAdditional permissionsPATCH /orgs/{org}writeUATIATDELETE /orgs/{org}writeUATIATPOST /orgs/{org}/actions/hosted-runnerswriteUATIATPATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writeUATIATDELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writeUATIATPUT /orgs/{org}/actions/oidc/customization/subwriteUATIATPUT /orgs/{org}/actions/permissionswriteUATIATPUT /orgs/{org}/actions/permissions/repositorieswriteUATIATPUT /orgs/{org}/actions/permissions/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/permissions/selected-actionswriteUATIATPUT /orgs/{org}/actions/permissions/workflowwriteUATIATGET /orgs/{org}/code-security/configurationswriteUATIATPOST /orgs/{org}/code-security/configurationswriteUATIATGET /orgs/{org}/code-security/configurations/defaultswriteUATIATDELETE /orgs/{org}/code-security/configurations/detachwriteUATIATGET /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATPATCH /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATDELETE /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATPOST /orgs/{org}/code-security/configurations/{configuration_id}/attachwriteUATIATPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultswriteUATIATGET /orgs/{org}/code-security/configurations/{configuration_id}/repositorieswriteUATIATPOST /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/interaction-limitswriteUATIATDELETE /orgs/{org}/interaction-limitswriteUATIATGET /orgs/{org}/rulesetswriteUATIATPOST /orgs/{org}/rulesetswriteUATIATGET /orgs/{org}/rulesets/rule-suiteswriteUATIATGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}writeUATIATGET /orgs/{org}/rulesets/{ruleset_id}writeUATIATPUT /orgs/{org}/rulesets/{ruleset_id}writeUATIATDELETE /orgs/{org}/rulesets/{ruleset_id}writeUATIATGET /orgs/{org}/rulesets/{ruleset_id}/historywriteUATIATGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}writeUATIATPUT /orgs/{org}/security-managers/teams/{team_slug}writeUATIATDELETE /orgs/{org}/security-managers/teams/{team_slug}writeUATIATPOST /orgs/{org}/{security_product}/{enablement}writeUATIATGET /organizations/{org}/settings/billing/usagereadUATIATGET /orgs/{org}/actions/cache/usagereadUATIATGET /orgs/{org}/actions/cache/usage-by-repositoryreadUATIATGET /orgs/{org}/actions/hosted-runnersreadUATIATGET /orgs/{org}/actions/hosted-runners/images/github-ownedreadUATIATGET /orgs/{org}/actions/hosted-runners/images/partnerreadUATIATGET /orgs/{org}/actions/hosted-runners/limitsreadUATIATGET /orgs/{org}/actions/hosted-runners/machine-sizesreadUATIATGET /orgs/{org}/actions/hosted-runners/platformsreadUATIATGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}readUATIATGET /orgs/{org}/actions/oidc/customization/subreadUATIATGET /orgs/{org}/actions/permissionsreadUATIATGET /orgs/{org}/actions/permissions/repositoriesreadUATIATGET /orgs/{org}/actions/permissions/selected-actionsreadUATIATGET /orgs/{org}/actions/permissions/workflowreadUATIATGET /orgs/{org}/copilot/billingreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/installationsreadUATIATGET /orgs/{org}/interaction-limitsreadUATIATGET /orgs/{org}/members/{username}/copilotreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/security-managersreadUATIATGET /orgs/{org}/settings/billing/actionsreadUATIATGET /orgs/{org}/settings/billing/packagesreadUATIATGET /orgs/{org}/settings/billing/shared-storagereadUATIATGET /orgs/{org}/team/{team_slug}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Blocking users"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/blocks/{username}writeUATIATDELETE /orgs/{org}/blocks/{username}writeUATIATGET /orgs/{org}/blocksreadUATIATGET /orgs/{org}/blocks/{username}readUATIATOrganization permissions for "Campaigns"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/campaignswriteUATIATPATCH /orgs/{org}/campaigns/{campaign_number}writeUATIATDELETE /orgs/{org}/campaigns/{campaign_number}writeUATIATGET /orgs/{org}/campaignsreadUATIATGET /orgs/{org}/campaigns/{campaign_number}readUATIATOrganization permissions for "Custom organization roles"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/organization-rolesreadUATIATGET /orgs/{org}/organization-roles/{role_id}readUATIATOrganization permissions for "Custom properties"EndpointAccessToken typesAdditional permissionsPATCH /orgs/{org}/properties/schemaadminUATIATPUT /orgs/{org}/properties/schema/{custom_property_name}adminUATIATDELETE /orgs/{org}/properties/schema/{custom_property_name}adminUATIATPATCH /orgs/{org}/properties/valueswriteUATIATGET /orgs/{org}/properties/schemareadUATIATGET /orgs/{org}/properties/schema/{custom_property_name}readUATIATGET /orgs/{org}/properties/valuesreadUATIATOrganization permissions for "Events"EndpointAccessToken typesAdditional permissionsGET /users/{username}/events/orgs/{org}readUATOrganization permissions for "GitHub Copilot Business"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billingreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/copilotreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/team/{team_slug}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Issue Types"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/issue-typeswriteUATIATPUT /orgs/{org}/issue-types/{issue_type_id}writeUATIATDELETE /orgs/{org}/issue-types/{issue_type_id}writeUATIATGET /orgs/{org}/issue-typesreadUATIATOrganization permissions for "Members"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/invitationswriteUATIATDELETE /orgs/{org}/invitations/{invitation_id}writeUATIATDELETE /orgs/{org}/members/{username}writeUATIATPUT /orgs/{org}/memberships/{username}writeUATIATDELETE /orgs/{org}/memberships/{username}writeUATIATDELETE /orgs/{org}/organization-roles/teams/{team_slug}writeUATIATPUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/users/{username}writeUATIATPUT /orgs/{org}/organization-roles/users/{username}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/users/{username}/{role_id}writeUATIATPUT /orgs/{org}/outside_collaborators/{username}writeUATIATDELETE /orgs/{org}/outside_collaborators/{username}writeUATIATPUT /orgs/{org}/public_members/{username}writeUATDELETE /orgs/{org}/public_members/{username}writeUATPOST /orgs/{org}/teamswriteUATIATPUT /teams/{team_id}/members/{username}writeUATIATDELETE /teams/{team_id}/members/{username}writeUATIATPATCH /user/memberships/orgs/{org}writeUATGET /orgs/{org}/failed_invitationsreadUATIATGET /orgs/{org}/invitationsreadUATIATGET /orgs/{org}/invitations/{invitation_id}/teamsreadUATIATGET /orgs/{org}/membersreadUATIATGET /orgs/{org}/members/{username}readUATIATGET /orgs/{org}/memberships/{username}readUATIATGET /orgs/{org}/organization-roles/{role_id}/teamsreadUATIATGET /orgs/{org}/organization-roles/{role_id}/usersreadUATIATGET /orgs/{org}/outside_collaboratorsreadUATIATGET /orgs/{org}/public_membersreadUATIATGET /orgs/{org}/public_members/{username}readUATIATGET /orgs/{org}/teamsreadUATIATGET /orgs/{org}/teams/{team_slug}/projectsreadUATIATGET /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /teams/{team_id}/members/{username}readUATIATGET /user/memberships/orgs/{org}readUATOrganization permissions for "Network configurations"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/settings/network-configurationswriteUATIATPATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}writeUATIATDELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}writeUATIATGET /orgs/{org}/settings/network-configurationsreadUATIATGET /orgs/{org}/settings/network-configurations/{network_configuration_id}readUATIATGET /orgs/{org}/settings/network-settings/{network_settings_id}readUATIATOrganization permissions for "Organization codespaces secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/codespaces/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/codespaces/secrets/{secret_name}writeUATIATPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespaces/secretsreadUATIATGET /orgs/{org}/codespaces/secrets/public-keyreadUATIATGET /orgs/{org}/codespaces/secrets/{secret_name}readUATIATGET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Organization codespaces settings"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/codespaces/accesswriteUATIATPOST /orgs/{org}/codespaces/access/selected_userswriteUATIATDELETE /orgs/{org}/codespaces/access/selected_userswriteUATIATOrganization permissions for "Organization codespaces"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Organization dependabot secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/dependabot/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/dependabot/secrets/{secret_name}writeUATIATPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/dependabot/secretsreadUATIATGET /orgs/{org}/dependabot/secrets/public-keyreadUATIATGET /orgs/{org}/dependabot/secrets/{secret_name}readUATIATGET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Organization private registries"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/private-registrieswriteUATIATPATCH /orgs/{org}/private-registries/{secret_name}writeUATIATDELETE /orgs/{org}/private-registries/{secret_name}writeUATIATGET /orgs/{org}/private-registriesreadUATIATGET /orgs/{org}/private-registries/public-keyreadUATIATGET /orgs/{org}/private-registries/{secret_name}readUATIATOrganization permissions for "Personal access token requests"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/personal-access-token-requestswriteUATIATPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}writeUATIATGET /orgs/{org}/personal-access-token-requestsreadUATIATGET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesreadUATIATOrganization permissions for "Personal access tokens"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/personal-access-tokenswriteUATIATPOST /orgs/{org}/personal-access-tokens/{pat_id}writeUATIATGET /orgs/{org}/personal-access-tokensreadUATIATGET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesreadUATIATOrganization permissions for "Projects"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorsadminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionadminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/projectswriteUATIATPATCH /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/projectsreadUATIATGET /projects/columns/cards/{card_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/actions/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/actions/secrets/{secret_name}writeUATIATPUT /orgs/{org}/actions/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/secretsreadUATIATGET /orgs/{org}/actions/secrets/public-keyreadUATIATGET /orgs/{org}/actions/secrets/{secret_name}readUATIATGET /orgs/{org}/actions/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Self-hosted runners"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/actions/runner-groupswriteUATIATPATCH /orgs/{org}/actions/runner-groups/{runner_group_id}writeUATIATDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}writeUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositorieswriteUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnerswriteUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writeUATIATDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writeUATIATPOST /orgs/{org}/actions/runners/generate-jitconfigwriteUATIATPOST /orgs/{org}/actions/runners/registration-tokenwriteUATIATPOST /orgs/{org}/actions/runners/remove-tokenwriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}writeUATIATPOST /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATPUT /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}writeUATIATGET /orgs/{org}/actions/runner-groupsreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}readUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersreadUATIATGET /orgs/{org}/actions/runnersreadUATIATGET /orgs/{org}/actions/runners/downloadsreadUATIATGET /orgs/{org}/actions/runners/{runner_id}readUATIATGET /orgs/{org}/actions/runners/{runner_id}/labelsreadUATIATOrganization permissions for "Team discussions"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}writeUATIATDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}writeUATIATOrganization permissions for "Variables"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/actions/variableswriteUATIATPATCH /orgs/{org}/actions/variables/{name}writeUATIATDELETE /orgs/{org}/actions/variables/{name}writeUATIATPUT /orgs/{org}/actions/variables/{name}/repositorieswriteUATIATPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/variablesreadUATIATGET /orgs/{org}/actions/variables/{name}readUATIATGET /orgs/{org}/actions/variables/{name}/repositoriesreadUATIATOrganization permissions for "Webhooks"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/hookswriteUATIATPATCH /orgs/{org}/hooks/{hook_id}writeUATIATDELETE /orgs/{org}/hooks/{hook_id}writeUATIATPATCH /orgs/{org}/hooks/{hook_id}/configwriteUATIATPOST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswriteUATIATPOST /orgs/{org}/hooks/{hook_id}/pingswriteUATIATGET /orgs/{org}/hooksreadUATIATGET /orgs/{org}/hooks/{hook_id}readUATIATGET /orgs/{org}/hooks/{hook_id}/configreadUATIATGET /orgs/{org}/hooks/{hook_id}/deliveriesreadUATIATGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}readUATIATRepository permissions for "Actions"EndpointAccessToken typesAdditional permissionsDELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}writeUATIATDELETE /repos/{owner}/{repo}/actions/cacheswriteUATIATDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}writeUATIATPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunwriteUATIATPUT /repos/{owner}/{repo}/actions/oidc/customization/subwriteUATIATDELETE /repos/{owner}/{repo}/actions/runs/{run_id}writeUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approvewriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelwriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelwriteUATIATDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logswriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunwriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobswriteUATIATPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablewriteUATIATPOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatcheswriteUATIATPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enablewriteUATIATGET /repos/{owner}/{repo}/actions/artifactsreadUATIATGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}readUATIATGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}readUATIATGET /repos/{owner}/{repo}/actions/cache/usagereadUATIATGET /repos/{owner}/{repo}/actions/cachesreadUATIATGET /repos/{owner}/{repo}/actions/jobs/{job_id}readUATIATGET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsreadUATIATGET /repos/{owner}/{repo}/actions/oidc/customization/subreadUATIATGET /repos/{owner}/{repo}/actions/runsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}readUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}readUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingreadUATIATGET /repos/{owner}/{repo}/actions/workflowsreadUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}readUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsreadUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingreadUATIATGET /repos/{owner}/{repo}/environmentsreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}readUATIATRepository permissions for "Administration"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/reposwriteUATIATPATCH /repos/{owner}/{repo}writeUATIATDELETE /repos/{owner}/{repo}writeUATIATPUT /repos/{owner}/{repo}/actions/permissionswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/accesswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/selected-actionswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/workflowwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/registration-tokenwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/remove-tokenwriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}writeUATIATPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}writeUATIATPOST /repos/{owner}/{repo}/autolinkswriteUATIATDELETE /repos/{owner}/{repo}/autolinks/{autolink_id}writeUATIATPUT /repos/{owner}/{repo}/automated-security-fixeswriteUATIATDELETE /repos/{owner}/{repo}/automated-security-fixeswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protectionwriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protectionwriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswriteUATIATPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswriteUATIATPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATPATCH /repos/{owner}/{repo}/code-scanning/default-setupwriteUATIATPUT /repos/{owner}/{repo}/collaborators/{username}writeUATIATDELETE /repos/{owner}/{repo}/collaborators/{username}writeUATIATPUT /repos/{owner}/{repo}/environments/{environment_name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policieswriteUATIATPUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_ruleswriteUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}writeUATIATPOST /repos/{owner}/{repo}/forkswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/interaction-limitswriteUATIATDELETE /repos/{owner}/{repo}/interaction-limitswriteUATIATPATCH /repos/{owner}/{repo}/invitations/{invitation_id}writeUATIATDELETE /repos/{owner}/{repo}/invitations/{invitation_id}writeUATIATPOST /repos/{owner}/{repo}/keyswriteUATIATDELETE /repos/{owner}/{repo}/keys/{key_id}writeUATIATPOST /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pages/healthwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/private-vulnerability-reportingwriteUATIATDELETE /repos/{owner}/{repo}/private-vulnerability-reportingwriteUATIATPOST /repos/{owner}/{repo}/rulesetswriteUATIATGET /repos/{owner}/{repo}/rulesets/rule-suiteswriteUATIATGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}writeUATIATPUT /repos/{owner}/{repo}/rulesets/{ruleset_id}writeUATIATDELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}writeUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historywriteUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}writeUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forkswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/tags/protectionwriteUATIATDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}writeUATIATPUT /repos/{owner}/{repo}/topicswriteUATIATPOST /repos/{owner}/{repo}/transferwriteUATPUT /repos/{owner}/{repo}/vulnerability-alertswriteUATIATDELETE /repos/{owner}/{repo}/vulnerability-alertswriteUATIATPOST /repos/{template_owner}/{template_repo}/generatewriteUATIATPOST /user/reposwriteUATPATCH /user/repository_invitations/{invitation_id}writeUATDELETE /user/repository_invitations/{invitation_id}writeUATGET /repos/{owner}/{repo}/actions/permissionsreadUATIATGET /repos/{owner}/{repo}/actions/permissions/accessreadUATIATGET /repos/{owner}/{repo}/actions/permissions/selected-actionsreadUATIATGET /repos/{owner}/{repo}/actions/permissions/workflowreadUATIATGET /repos/{owner}/{repo}/actions/runnersreadUATIATGET /repos/{owner}/{repo}/actions/runners/downloadsreadUATIATGET /repos/{owner}/{repo}/actions/runners/{runner_id}readUATIATGET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsreadUATIATGET /repos/{owner}/{repo}/autolinksreadUATIATGET /repos/{owner}/{repo}/autolinks/{autolink_id}readUATIATGET /repos/{owner}/{repo}/automated-security-fixesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protectionreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersreadUATIATGET /repos/{owner}/{repo}/code-scanning/default-setupreadUATIATGET /repos/{owner}/{repo}/code-security-configurationreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsreadUATIATGET /repos/{owner}/{repo}/interaction-limitsreadUATIATGET /repos/{owner}/{repo}/invitationsreadUATIATGET /repos/{owner}/{repo}/keysreadUATIATGET /repos/{owner}/{repo}/keys/{key_id}readUATIATGET /repos/{owner}/{repo}/tags/protectionreadUATIATGET /repos/{owner}/{repo}/teamsreadUATIATGET /repos/{owner}/{repo}/traffic/clonesreadUATIATGET /repos/{owner}/{repo}/traffic/popular/pathsreadUATIATGET /repos/{owner}/{repo}/traffic/popular/referrersreadUATIATGET /repos/{owner}/{repo}/traffic/viewsreadUATIATGET /repos/{owner}/{repo}/vulnerability-alertsreadUATIATGET /user/repository_invitationsreadUATRepository permissions for "Attestations"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/attestationswriteUATIATGET /repos/{owner}/{repo}/attestations/{subject_digest}readUATIATRepository permissions for "Checks"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/check-runswriteUATIATPATCH /repos/{owner}/{repo}/check-runs/{check_run_id}writeUATIATPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestwriteUATIATPOST /repos/{owner}/{repo}/check-suiteswriteUATIATPATCH /repos/{owner}/{repo}/check-suites/preferenceswriteUATIATPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestwriteUATIATGET /repos/{owner}/{repo}/check-runs/{check_run_id}readUATIATGET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsreadUATIATGET /repos/{owner}/{repo}/check-suites/{check_suite_id}readUATIATGET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/check-runsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/check-suitesreadUATIATRepository permissions for "Code scanning alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixwriteUATIATDELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/sarifswriteUATIATGET /orgs/{org}/code-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/code-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}readUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixreadUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesreadUATIATGET /repos/{owner}/{repo}/code-scanning/analysesreadUATIATGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}readUATIATGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}readUATIATRepository permissions for "Codespaces lifecycle admin"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /user/codespaces/{codespace_name}/exportswriteUATPOST /user/codespaces/{codespace_name}/startwriteUATPOST /user/codespaces/{codespace_name}/stopwriteUATGET /user/codespaces/{codespace_name}/exports/{export_id}readUATRepository permissions for "Codespaces metadata"EndpointAccessToken typesAdditional permissionsGET /repos/{owner}/{repo}/codespaces/devcontainersreadUATIATGET /repos/{owner}/{repo}/codespaces/machinesreadUATIATGET /user/codespaces/{codespace_name}/machinesreadUATRepository permissions for "Codespaces secrets"EndpointAccessToken typesAdditional permissionsGET /repos/{owner}/{repo}/codespaces/secretswriteUATIATGET /repos/{owner}/{repo}/codespaces/secrets/public-keywriteUATIATGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATPUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATRepository permissions for "Codespaces"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/codespaceswriteUATGET /repos/{owner}/{repo}/codespaces/newwriteUATGET /repos/{owner}/{repo}/codespaces/permissions_checkwriteUATPOST /repos/{owner}/{repo}/pulls/{pull_number}/codespaceswriteUATPOST /user/codespaceswriteUATPATCH /user/codespaces/{codespace_name}writeUATDELETE /user/codespaces/{codespace_name}writeUATPOST /user/codespaces/{codespace_name}/publishwriteUATGET /orgs/{org}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/codespacesreadUATGET /user/codespacesreadUATGET /user/codespaces/{codespace_name}readUATRepository permissions for "Commit statuses"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/statuses/{sha}writeUATIATGET /repos/{owner}/{repo}/commits/{ref}/statusreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/statusesreadUATIATRepository permissions for "Contents"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/branches/{branch}/renamewriteUATIATPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitswriteUATIATDELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyseswriteUATIATPATCH /repos/{owner}/{repo}/comments/{comment_id}writeUATIATDELETE /repos/{owner}/{repo}/comments/{comment_id}writeUATIATPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}writeUATIATPUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/dependency-graph/snapshotswriteUATIATPOST /repos/{owner}/{repo}/dispatcheswriteUATIATPOST /repos/{owner}/{repo}/git/blobswriteUATIATPOST /repos/{owner}/{repo}/git/commitswriteUATIATPOST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/git/refs/{ref}writeUATIATPOST /repos/{owner}/{repo}/git/tagswriteUATIATPOST /repos/{owner}/{repo}/git/treeswriteUATIATPUT /repos/{owner}/{repo}/importwriteUATPATCH /repos/{owner}/{repo}/importwriteUATDELETE /repos/{owner}/{repo}/importwriteUATPATCH /repos/{owner}/{repo}/import/authors/{author_id}writeUATPATCH /repos/{owner}/{repo}/import/lfswriteUATPOST /repos/{owner}/{repo}/merge-upstreamwriteUATIATPOST /repos/{owner}/{repo}/mergeswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/mergewriteUATIATPOST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}writeUATIATDELETE /repos/{owner}/{repo}/releases/assets/{asset_id}writeUATIATPOST /repos/{owner}/{repo}/releases/generate-noteswriteUATIATPATCH /repos/{owner}/{repo}/releases/{release_id}writeUATIATDELETE /repos/{owner}/{repo}/releases/{release_id}writeUATIATPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasseswriteUATGET /repos/{owner}/{repo}/activityreadUATIATGET /repos/{owner}/{repo}/branchesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/databasesreadUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}readUATIATGET /repos/{owner}/{repo}/codeowners/errorsreadUATIATGET /repos/{owner}/{repo}/commitsreadUATIATGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headreadUATIATPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}readUATIATGET /repos/{owner}/{repo}/community/profilereadUATIATGET /repos/{owner}/{repo}/compare/{basehead}readUATIATGET /repos/{owner}/{repo}/contents/{path}readUATIATGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}readUATIATGET /repos/{owner}/{repo}/dependency-graph/sbomreadUATIATPOST /repos/{owner}/{repo}/forksreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/git/blobs/{file_sha}readUATIATGET /repos/{owner}/{repo}/git/commits/{commit_sha}readUATIATGET /repos/{owner}/{repo}/git/matching-refs/{ref}readUATIATGET /repos/{owner}/{repo}/git/ref/{ref}readUATIATGET /repos/{owner}/{repo}/git/tags/{tag_sha}readUATIATGET /repos/{owner}/{repo}/git/trees/{tree_sha}readUATIATGET /repos/{owner}/{repo}/importreadUATGET /repos/{owner}/{repo}/import/authorsreadUATGET /repos/{owner}/{repo}/import/large_filesreadUATGET /repos/{owner}/{repo}/pulls/{pull_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/releasesreadUATIATGET /repos/{owner}/{repo}/releases/assets/{asset_id}readUATIATGET /repos/{owner}/{repo}/releases/latestreadUATIATGET /repos/{owner}/{repo}/releases/tags/{tag}readUATIATGET /repos/{owner}/{repo}/releases/{release_id}readUATIATGET /repos/{owner}/{repo}/releases/{release_id}/assetsreadUATIATGET /repos/{owner}/{repo}/tarball/{ref}readUATIATGET /repos/{owner}/{repo}/zipball/{ref}readUATIATRepository permissions for "Custom properties"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/properties/valueswriteUATIATRepository permissions for "Dependabot alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}writeUATIATGET /orgs/{org}/dependabot/alertsreadUATIATGET /repos/{owner}/{repo}/dependabot/alertsreadUATIATGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}readUATIATRepository permissions for "Dependabot secrets"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeUATIATGET /repos/{owner}/{repo}/dependabot/secretsreadUATIATGET /repos/{owner}/{repo}/dependabot/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}readUATIATRepository permissions for "Deployments"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rulewriteIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentswriteUATIATPOST /repos/{owner}/{repo}/deploymentswriteUATIATDELETE /repos/{owner}/{repo}/deployments/{deployment_id}writeUATIATPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statuseswriteUATIATGET /repos/{owner}/{repo}/deploymentsreadUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}readUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesreadUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}readUATIATRepository permissions for "Environments"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/variableswriteUATIATPATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secretsreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/variablesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}readUATIATRepository permissions for "Issues"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/issueswriteUATIATPATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}writeUATIATPATCH /repos/{owner}/{repo}/issues/{issue_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}writeUATIATDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issuewriteUATIATPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issueswriteUATIATPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritywriteUATIATPOST /repos/{owner}/{repo}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assigneesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issuesreadUATIATGET /repos/{owner}/{repo}/issues/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/issues/eventsreadUATIATGET /repos/{owner}/{repo}/issues/events/{event_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}readUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsreadUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesreadUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Metadata"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/actions/permissions/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/reposreadUATIATGET /repos/{owner}/{repo}readUATIATGET /repos/{owner}/{repo}/collaboratorsreadUATIATGET /repos/{owner}/{repo}/collaborators/{username}readUATIATGET /repos/{owner}/{repo}/collaborators/{username}/permissionreadUATIATGET /repos/{owner}/{repo}/commentsreadUATIATGET /repos/{owner}/{repo}/comments/{comment_id}readUATIATGET /repos/{owner}/{repo}/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadUATIATGET /repos/{owner}/{repo}/contributorsreadUATIATGET /repos/{owner}/{repo}/eventsreadUATIATGET /repos/{owner}/{repo}/forksreadUATIATGET /repos/{owner}/{repo}/languagesreadUATIATGET /repos/{owner}/{repo}/licensereadUATIATGET /repos/{owner}/{repo}/private-vulnerability-reportingreadUATIATGET /repos/{owner}/{repo}/properties/valuesreadUATIATGET /repos/{owner}/{repo}/rules/branches/{branch}readUATIATGET /repos/{owner}/{repo}/rulesetsreadUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}readUATIATGET /repos/{owner}/{repo}/stargazersreadUATIATGET /repos/{owner}/{repo}/stats/code_frequencyreadUATIATGET /repos/{owner}/{repo}/stats/commit_activityreadUATIATGET /repos/{owner}/{repo}/stats/contributorsreadUATIATGET /repos/{owner}/{repo}/stats/participationreadUATIATGET /repos/{owner}/{repo}/stats/punch_cardreadUATIATGET /repos/{owner}/{repo}/subscribersreadUATIATGET /repos/{owner}/{repo}/tagsreadUATIATGET /repos/{owner}/{repo}/topicsreadUATIATGET /repositoriesreadUATIATGET /search/labelsreadUATIATPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/installations/{installation_id}/repositoriesreadUATGET /user/reposreadUATGET /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/reposreadUATIATRepository permissions for "Pages"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pages/buildswriteUATIATPOST /repos/{owner}/{repo}/pages/deploymentswriteUATIATPOST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelwriteUATIATGET /repos/{owner}/{repo}/pages/healthwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pagesreadUATIATGET /repos/{owner}/{repo}/pages/buildsreadUATIATGET /repos/{owner}/{repo}/pages/builds/latestreadUATIATGET /repos/{owner}/{repo}/pages/builds/{build_id}readUATIATGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}readUATIATRepository permissions for "Projects"EndpointAccessToken typesAdditional permissionsPATCH /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/projectswriteUATIATGET /projects/columns/cards/{card_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/projectsreadUATIATRepository permissions for "Pull requests"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/issues/{issue_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pullswriteUATIATPATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}writeUATIATDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}writeUATIATPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}writeUATIATPATCH /repos/{owner}/{repo}/pulls/{pull_number}writeUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replieswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswriteUATIATDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writeUATIATDELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writeUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchwriteUATIATGET /repos/{owner}/{repo}/assigneesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/commits/{commit_sha}/pullsreadUATIATGET /repos/{owner}/{repo}/issues/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/events/{event_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pullsreadUATIATGET /repos/{owner}/{repo}/pulls/commentsreadUATIATGET /repos/{owner}/{repo}/pulls/comments/{comment_id}readUATIATGET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/filesreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/mergereadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}readUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsreadUATIATRepository permissions for "Repository security advisories"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/security-advisorieswriteUATIATPOST /repos/{owner}/{repo}/security-advisorieswriteUATIATPOST /repos/{owner}/{repo}/security-advisories/reportswriteUATIATPATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}writeUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvewriteUATIATGET /repos/{owner}/{repo}/security-advisoriesreadUATIATGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}readUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Secret scanning alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}writeUATIATGET /orgs/{org}/secret-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}readUATIATGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/scan-historyreadUATIATRepository permissions for "Secrets"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/actions/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}writeUATIATGET /repos/{owner}/{repo}/actions/organization-secretsreadUATIATGET /repos/{owner}/{repo}/actions/secretsreadUATIATGET /repos/{owner}/{repo}/actions/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/actions/secrets/{secret_name}readUATIATRepository permissions for "Variables"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/actions/variableswriteUATIATPATCH /repos/{owner}/{repo}/actions/variables/{name}writeUATIATDELETE /repos/{owner}/{repo}/actions/variables/{name}writeUATIATGET /repos/{owner}/{repo}/actions/organization-variablesreadUATIATGET /repos/{owner}/{repo}/actions/variablesreadUATIATGET /repos/{owner}/{repo}/actions/variables/{name}readUATIATRepository permissions for "Webhooks"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/hookswriteUATIATPATCH /repos/{owner}/{repo}/hooks/{hook_id}writeUATIATDELETE /repos/{owner}/{repo}/hooks/{hook_id}writeUATIATPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configwriteUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswriteUATIATGET /repos/{owner}/{repo}/hooksreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}readUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/configreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}readUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsreadUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsreadUATIATRepository permissions for "Workflows"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.User permissions for "Block another user"EndpointAccessToken typesAdditional permissionsPUT /user/blocks/{username}writeUATDELETE /user/blocks/{username}writeUATGET /user/blocksreadUATGET /user/blocks/{username}readUATUser permissions for "Codespaces user secrets"EndpointAccessToken typesAdditional permissionsPUT /user/codespaces/secrets/{secret_name}writeUATDELETE /user/codespaces/secrets/{secret_name}writeUATPUT /user/codespaces/secrets/{secret_name}/repositorieswriteUATPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/codespaces/secretsreadUATGET /user/codespaces/secrets/public-keyreadUATGET /user/codespaces/secrets/{secret_name}readUATGET /user/codespaces/secrets/{secret_name}/repositoriesreadUATUser permissions for "Email addresses"EndpointAccessToken typesAdditional permissionsPATCH /user/email/visibilitywriteUATPOST /user/emailswriteUATDELETE /user/emailswriteUATGET /user/emailsreadUATGET /user/public_emailsreadUATUser permissions for "Followers"EndpointAccessToken typesAdditional permissionsPUT /user/following/{username}writeUATDELETE /user/following/{username}writeUATGET /user/followersreadUATGET /user/followingreadUATGET /user/following/{username}readUATUser permissions for "GPG keys"EndpointAccessToken typesAdditional permissionsPOST /user/gpg_keyswriteUATDELETE /user/gpg_keys/{gpg_key_id}writeUATGET /user/gpg_keysreadUATGET /user/gpg_keys/{gpg_key_id}readUATUser permissions for "Gists"EndpointAccessToken typesAdditional permissionsPOST /gistswriteUATPATCH /gists/{gist_id}writeUATDELETE /gists/{gist_id}writeUATPOST /gists/{gist_id}/commentswriteUATPATCH /gists/{gist_id}/comments/{comment_id}writeUATDELETE /gists/{gist_id}/comments/{comment_id}writeUATPOST /gists/{gist_id}/forkswriteUATPUT /gists/{gist_id}/starwriteUATDELETE /gists/{gist_id}/starwriteUATUser permissions for "Git SSH keys"EndpointAccessToken typesAdditional permissionsPOST /user/keyswriteUATDELETE /user/keys/{key_id}writeUATGET /user/keysreadUATGET /user/keys/{key_id}readUATGET /users/{username}/keysreadUATIATUser permissions for "Interaction limits"EndpointAccessToken typesAdditional permissionsPUT /user/interaction-limitswriteUATDELETE /user/interaction-limitswriteUATGET /user/interaction-limitsreadUATUser permissions for "Plan"EndpointAccessToken typesAdditional permissionsGET /users/{username}/settings/billing/actionsreadUATGET /users/{username}/settings/billing/packagesreadUATGET /users/{username}/settings/billing/shared-storagereadUATGET /users/{username}/settings/billing/usagereadUATUser permissions for "Profile"EndpointAccessToken typesAdditional permissionsPATCH /userwriteUATPOST /user/social_accountswriteUATDELETE /user/social_accountswriteUATUser permissions for "SSH signing keys"EndpointAccessToken typesAdditional permissionsPOST /user/ssh_signing_keyswriteUATDELETE /user/ssh_signing_keys/{ssh_signing_key_id}writeUATGET /user/ssh_signing_keysreadUATGET /user/ssh_signing_keys/{ssh_signing_key_id}readUATUser permissions for "Starring"EndpointAccessToken typesAdditional permissionsPUT /user/starred/{owner}/{repo}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/starredreadUATGET /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/starredreadUATIATUser permissions for "Watching"EndpointAccessToken typesAdditional permissionsGET /user/subscriptionsreadUATGET /users/{username}/subscriptionsreadUATIAT\n\n\n\n