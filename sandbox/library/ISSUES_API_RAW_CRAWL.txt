The REST API is now versioned. For more information, see "About API versioning."REST API/IssuesREST API endpoints for issuesUse the REST API to view and manage issues, including issue assignees, comments, labels, and milestones.REST API endpoints for issuesList issues assigned to the authenticated userList organization issues assigned to the authenticated userList repository issuesCreate an issueGet an issueUpdate an issueLock an issueUnlock an issueList user account issues assigned to the authenticated userREST API endpoints for issue assigneesList assigneesCheck if a user can be assignedAdd assignees to an issueRemove assignees from an issueCheck if a user can be assigned to a issueREST API endpoints for issue commentsList issue comments for a repositoryGet an issue commentUpdate an issue commentDelete an issue commentList issue commentsCreate an issue commentREST API endpoints for issue eventsList issue events for a repositoryGet an issue eventList issue eventsREST API endpoints for labelsList labels for an issueAdd labels to an issueSet labels for an issueRemove all labels from an issueRemove a label from an issueList labels for a repositoryCreate a labelGet a labelUpdate a labelDelete a labelList labels for issues in a milestoneREST API endpoints for milestonesList milestonesCreate a milestoneGet a milestoneUpdate a milestoneDelete a milestoneREST API endpoints for sub-issuesRemove sub-issueList sub-issuesAdd sub-issueReprioritize sub-issueREST API endpoints for timeline eventsList timeline events for an issue\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/IssuesREST API endpoints for issuesUse the REST API to view and manage issues, including issue assignees, comments, labels, and milestones.REST API endpoints for issuesList issues assigned to the authenticated userList organization issues assigned to the authenticated userList repository issuesCreate an issueGet an issueUpdate an issueLock an issueUnlock an issueList user account issues assigned to the authenticated userREST API endpoints for issue assigneesList assigneesCheck if a user can be assignedAdd assignees to an issueRemove assignees from an issueCheck if a user can be assigned to a issueREST API endpoints for issue commentsList issue comments for a repositoryGet an issue commentUpdate an issue commentDelete an issue commentList issue commentsCreate an issue commentREST API endpoints for issue eventsList issue events for a repositoryGet an issue eventList issue eventsREST API endpoints for labelsList labels for an issueAdd labels to an issueSet labels for an issueRemove all labels from an issueRemove a label from an issueList labels for a repositoryCreate a labelGet a labelUpdate a labelDelete a labelList labels for issues in a milestoneREST API endpoints for milestonesList milestonesCreate a milestoneGet a milestoneUpdate a milestoneDelete a milestoneREST API endpoints for sub-issuesRemove sub-issueList sub-issuesAdd sub-issueReprioritize sub-issueREST API endpoints for timeline eventsList timeline events for an issue\n\n\n\nGitHub DocsHelp for wherever you are on your GitHub journey.Get startedGet startedMigrationsAccount and profileAuthenticationBilling and paymentsSite policyCollaborative codingCodespacesRepositoriesPull requestsGitHub DiscussionsGitHub CopilotGitHub CopilotGet code suggestionsPrompt engineeringChat in GitHubCopilot Chat CookbookExtensions quickstartCI/CD and DevOpsGitHub ActionsGitHub PackagesGitHub PagesSecuritySecure codingSecret scanningSupply chain securityDependabotCode scanningSecurity advisoriesClient appsGitHub CLIGitHub MobileGitHub DesktopProject managementGitHub IssuesProjectsSearch on GitHubEnterprise and TeamsOrganizationsSecure your organizationEnterprise onboardingEnterprise administratorsGitHub Well-ArchitectedDevelopersAppsREST APIGraphQL APIWebhooksBuild Copilot ExtensionsGitHub ModelsCommunityBuilding communitiesGitHub SponsorsGitHub EducationGitHub for NonprofitsGitHub SupportContribute to GitHub DocsMore docsCodeQL query writingElectronnpmGetting startedSet up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.Connecting to GitHub with SSHYou can connect to GitHub using the Secure Shell Protocol (SSH), which provides a secure channel over an unsecured network.Creating and managing repositoriesYou can create a repository on GitHub to store and collaborate on your project's files, then manage the repository's name and location.Basic writing and formatting syntaxCreate sophisticated formatting for your prose and code on GitHub with simple syntax.PopularAbout pull requestsLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.Authentication documentationKeep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Managing remote repositoriesLearn to work with your local repositories on your computer and remote repositories hosted on GitHub.\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."GitHub REST API documentation Create integrations, retrieve data, and automate your workflows with the GitHub REST API.Overview Quickstart Start hereView all About the REST APIGet oriented to the REST API documentation.Getting started with the REST APILearn how to use the GitHub REST API.Authenticating to the REST APIYou can authenticate to the REST API to access more endpoints and have a higher rate limit.Best practices for using the REST APIFollow these best practices when using GitHub's API.PopularRate limits for the REST APILearn about REST API rate limits, how to avoid exceeding them, and what to do if you do exceed them.Troubleshooting the REST APILearn how to diagnose and resolve common problems for the REST API.Scripting with the REST API and JavaScriptWrite a script using the Octokit.js SDK to interact with the REST API.Keeping your API credentials secureFollow these best practices to keep your API credentials and tokens secure.What's newView all Check if private vulnerability reporting is enabled via REST APIMarch 08New limits on scoped token creation for GitHub AppsFebruary 23Upcoming changes to repository insightsNovember 29GuidesDelivering deploymentsUsing the Deployments REST API, you can build custom tooling that interacts with your server and a third-party app.@GitHubUsing the REST API to interact with checksYou can use the REST API to build GitHub Apps that run powerful checks against code changes in a repository. You can create apps that perform continuous integration, code linting, or code scanning services and provide detailed feedback on commits.@GitHubUsing pagination in the REST APILearn how to navigate through paginated responses from the REST API.@GitHubExplore guides All REST API docsAbout the REST APIAbout the REST APIComparing GitHub's REST API and GraphQL APIAPI VersionsBreaking changesAbout the OpenAPI description for the REST APIUsing the REST APIGetting started with the REST APIRate limits for the REST APIUsing pagination in the REST APILibraries for the REST APIBest practices for using the REST APITroubleshooting the REST APITimezones and the REST APIUsing CORS and JSONP to make cross-origin requestsIssue event typesGitHub event typesAuthenticating to the REST APIAuthenticating to the REST APIKeeping your API credentials secureEndpoints available for GitHub App installation access tokensEndpoints available for GitHub App user access tokensEndpoints available for fine-grained personal access tokensPermissions required for GitHub AppsPermissions required for fine-grained personal access tokensGuidesScripting with the REST API and JavaScriptScripting with the REST API and RubyDiscovering resources for a userDelivering deploymentsRendering data as graphsWorking with commentsBuilding a CI serverUsing the REST API to interact with your Git databaseUsing the REST API to interact with checksEncrypting secrets for the REST APIREST API endpoints for GitHub ActionsREST API endpoints for GitHub Actions artifactsREST API endpoints for GitHub Actions cacheGitHub-hosted runnersREST API endpoints for GitHub Actions OIDCREST API endpoints for GitHub Actions permissionsREST API endpoints for GitHub Actions SecretsREST API endpoints for self-hosted runner groupsREST API endpoints for self-hosted runnersREST API endpoints for GitHub Actions variablesREST API endpoints for workflow jobsREST API endpoints for workflow runsREST API endpoints for workflowsREST API endpoints for activityREST API endpoints for eventsREST API endpoints for feedsREST API endpoints for notificationsREST API endpoints for starringREST API endpoints for watchingREST API endpoints for appsREST API endpoints for GitHub AppsREST API endpoints for GitHub App installationsREST API endpoints for GitHub MarketplaceREST API endpoints for OAuth authorizationsREST API endpoints for GitHub App webhooksREST API endpoints for billingREST API endpoints for billingEnhanced billing platformREST API endpoints for branches and their settingsREST API endpoints for branchesREST API endpoints for protected branchesREST API endpoints for security campaignsREST API endpoints for security campaignsREST API endpoints for checksREST API endpoints for check runsREST API endpoints for check suitesREST API endpoints for GitHub ClassroomREST API endpoints for GitHub ClassroomREST API endpoints for code scanningREST API endpoints for code scanningSecurity settingsConfigurationsREST API endpoints for codes of conductREST API endpoints for codes of conductREST API endpoints for CodespacesREST API endpoints for CodespacesREST API endpoints for Codespaces organizationsREST API endpoints for Codespaces organization secretsREST API endpoints for Codespaces machinesREST API endpoints for Codespaces repository secretsREST API endpoints for Codespaces user secretsREST API endpoints for collaboratorsREST API endpoints for collaboratorsREST API endpoints for repository invitationsREST API endpoints for commitsREST API endpoints for commitsREST API endpoints for commit commentsREST API endpoints for commit statusesREST API endpoints for CopilotREST API endpoints for Copilot metricsREST API endpoints for Copilot user managementCredentialsRevocationREST API endpoints for DependabotREST API endpoints for Dependabot alertsREST API endpoints for Dependabot secretsREST API endpoints for the dependency graphREST API endpoints for dependency reviewREST API endpoints for dependency submissionREST API endpoints for software bill of materials (SBOM)REST API endpoints for deploy keysREST API endpoints for deploy keysREST API endpoints for deploymentsREST API endpoints for deployment branch policiesREST API endpoints for deploymentsREST API endpoints for deployment environmentsREST API endpoints for protection rulesREST API endpoints for deployment statusesREST API endpoints for emojisREST API endpoints for emojisREST API endpoints for gists and gist commentsREST API endpoints for gistsREST API endpoints for gist commentsREST API endpoints for Git databaseREST API endpoints for Git blobsREST API endpoints for Git commitsREST API endpoints for Git referencesREST API endpoints for Git tagsREST API endpoints for Git treesREST API endpoints for gitignoreREST API endpoints for gitignoreREST API endpoints for interactionsREST API endpoints for organization interactionsREST API endpoints for repository interactionsREST API endpoints for user interactionsREST API endpoints for issuesREST API endpoints for issue assigneesREST API endpoints for issue commentsREST API endpoints for issue eventsREST API endpoints for issuesREST API endpoints for labelsREST API endpoints for milestonesREST API endpoints for sub-issuesREST API endpoints for timeline eventsREST API endpoints for licensesREST API endpoints for licensesREST API endpoints for MarkdownREST API endpoints for MarkdownREST API endpoints for meta dataREST API endpoints for meta dataREST API endpoints for metricsREST API endpoints for community metricsREST API endpoints for repository statisticsREST API endpoints for repository trafficREST API endpoints for migrationsREST API endpoints for organization migrationsREST API endpoints for source importsREST API endpoints for user migrationsREST API endpoints for organizationsREST API endpoints for API InsightsREST API endpoints for blocking usersREST API endpoints for custom propertiesREST API endpoints for issue typesREST API endpoints for organization membersREST API endpoints for network configurationsREST API endpoints for organization rolesREST API endpoints for organizationsREST API endpoints for outside collaboratorsREST API endpoints for personal access tokensREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for security managersREST API endpoints for organization webhooksREST API endpoints for packagesREST API endpoints for packagesREST API endpoints for GitHub PagesREST API endpoints for GitHub PagesPrivate registriesOrganization configurationsREST API endpoints for Projects (classic)REST API endpoints for Projects (classic)REST API endpoints for Project (classic) cardsREST API endpoints for Project (classic) collaboratorsREST API endpoints for Project (classic) columnsREST API endpoints for pull requestsREST API endpoints for pull requestsREST API endpoints for pull request review commentsREST API endpoints for review requestsREST API endpoints for pull request reviewsREST API endpoints for rate limitsREST API endpoints for rate limitsREST API endpoints for reactionsREST API endpoints for reactionsREST API endpoints for releases and release assetsREST API endpoints for releasesREST API endpoints for release assetsREST API endpoints for repositoriesREST API endpoints for repository autolinksREST API endpoints for repository contentsREST API endpoints for custom propertiesREST API endpoints for forksREST API endpoints for repositoriesREST API endpoints for rule suitesREST API endpoints for rulesREST API endpoints for repository tagsREST API endpoints for repository webhooksREST API endpoints for searchREST API endpoints for searchREST API endpoints for secret scanningREST API endpoints for secret scanningREST API endpoints for security advisoriesREST API endpoints for global security advisoriesREST API endpoints for repository security advisoriesREST API endpoints for teamsREST API endpoints for teamsREST API endpoints for team discussion commentsREST API endpoints for team discussionsREST API endpoints for team membersREST API endpoints for usersREST API endpoints for artifact attestationsREST API endpoints for blocking usersREST API endpoints for emailsREST API endpoints for followersREST API endpoints for GPG keysREST API endpoints for Git SSH keysREST API endpoints for social accountsREST API endpoints for SSH signing keysREST API endpoints for users\n\n\n\nREST API/QuickstartQuickstart for GitHub REST APILearn how to get started with the GitHub REST API.Tool navigationGitHub CLIcurlJavaScriptIn this articleIntroductionUsing GitHub CLI in the command lineUsing GitHub CLI in GitHub ActionsUsing Octokit.jsUsing Octokit.js in GitHub ActionsUsing curl in the command lineUsing curl commands in GitHub ActionsNext stepsIntroduction
This article describes how to quickly get started with the GitHub REST API using GitHub CLI, curl, or JavaScript. For a more detailed guide, see Getting started with the REST API.

Using GitHub CLI in the command line
GitHub CLI is the easiest way to use the GitHub REST API from the command line.


Install GitHub CLI on macOS, Windows, or Linux. For more information, see Installation in the GitHub CLI repository.


To authenticate to GitHub, run the following command from your terminal.
gh auth login



Select where you want to authenticate to:

If you access GitHub at GitHub.com, select GitHub.com.
If you access GitHub at a different domain, select Other, then enter your hostname (for example: octocorp.ghe.com).



Follow the rest of the on-screen prompts.
GitHub CLI automatically stores your Git credentials for you when you choose HTTPS as your preferred protocol for Git operations and answer "yes" to the prompt asking if you would like to authenticate to Git with your GitHub credentials. This can be useful as it allows you to use Git commands like git push and git pull without needing to set up a separate credential manager or use SSH.


Make a request using the GitHub CLI api subcommand, followed by the path. Use the --method or -X flag to specify the method. For more information, see the GitHub CLI api documentation.
This example makes a request to the "Get Octocat" endpoint, which uses the method GET and the path /octocat. For the full reference documentation for this endpoint, see REST API endpoints for meta data.
Shellgh api /octocat --method GET
gh api /octocat --method GET



Using GitHub CLI in GitHub Actions
You can also use GitHub CLI in your GitHub Actions workflows. For more information, see Using GitHub CLI in workflows.
Authenticating with an access token
Instead of using the gh auth login command, pass an access token as an environment variable called GH_TOKEN. GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
The following example workflow uses the List repository issues endpoint, and requests a list of issues in the octocat/Spoon-Knife repository.
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues
on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
YAMLon:
  workflow_dispatch:
jobs:
  track_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues
on:
  workflow_dispatch:
jobs:
  track_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api https://api.github.com/repos/octocat/Spoon-Knife/issues





Using Octokit.js
You can use Octokit.js to interact with the GitHub REST API in your JavaScript scripts. For more information, see Scripting with the REST API and JavaScript.


Create an access token. For example, create a personal access token or a GitHub App user access token. You will use this token to authenticate your request, so you should give it any scopes or permissions that are required to access that endpoint. For more information, see Authenticating to the REST API or Identifying and authorizing users for GitHub Apps.
Warning

Treat your access token like a password.
To keep your token secure, you can store your token as a secret and run your script through GitHub Actions. For more information, see the Using Octokit.js in GitHub Actions section.

You can also store your token as a Codespaces secret and run your script in Codespaces. For more information, see Managing encrypted secrets for your codespaces.

If these options are not possible, consider using another CLI service to store your token securely.



Install octokit. For example, npm install octokit. For other ways to install or load octokit, see the Octokit.js README.


Import octokit in your script. For example, import { Octokit } from "octokit";. For other ways to import octokit, see the Octokit.js README.


Create an instance of Octokit with your token. Replace YOUR-TOKEN with your token.
JavaScriptconst octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});
const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});



Use octokit.request to execute your request. Send the HTTP method and path as the first argument. Specify any path, query, and body parameters in an object as the second argument. For more information about parameters, see Getting started with the REST API.
For example, in the following request the HTTP method is GET, the path is /repos/{owner}/{repo}/issues, and the parameters are owner: "octocat" and repo: "Spoon-Knife".
JavaScriptawait octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
});
await octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
});



Using Octokit.js in GitHub Actions
You can also execute your JavaScript scripts in your GitHub Actions workflows. For more information, see Workflow syntax for GitHub Actions.
Authenticating with an access token
GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
The following example workflow:

Checks out the repository content
Sets up Node.js
Installs octokit
Stores the value of GITHUB_TOKEN as an environment variable called TOKEN and runs .github/actions-scripts/use-the-api.mjs, which can access that environment variable as process.env.TOKEN

on:
  workflow_dispatch:
jobs:
  use_api_via_script:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - name: Check out repo content
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16.17.0'
          cache: npm

      - name: Install dependencies
        run: npm install octokit

      - name: Run script
        run: |
          node .github/actions-scripts/use-the-api.mjs
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

The following is an example JavaScript script with the file path .github/actions-scripts/use-the-api.mjs.
import { Octokit } from "octokit"

const octokit = new Octokit({ 
  auth: process.env.TOKEN
});

try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
      owner: "octocat",
      repo: "Spoon-Knife",
    });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the App API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
on:
  workflow_dispatch:
jobs:
  use_api_via_script:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo content
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16.17.0'
          cache: npm

      - name: Install dependencies
        run: npm install octokit

      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Run script
        run: |
          node .github/actions-scripts/use-the-api.mjs
        env:
          TOKEN: ${{ steps.generate-token.outputs.token }}






Using curl in the command line
Note

If you want to make API requests from the command line, GitHub recommends that you use GitHub CLI, which simplifies authentication and requests. For more information about getting started with the REST API using GitHub CLI, see the GitHub CLI version of this article.



Install curl if it isn't already installed on your machine. To check if curl is installed, execute curl --version in the command line. If the output provides information about the version of curl, that means curl is installed. If you get a message similar to command not found: curl, you need to download and install curl. For more information, see the curl project download page.


Create an access token. For example, create a personal access token or a GitHub App user access token. You will use this token to authenticate your request, so you should give it any scopes or permissions that are required to access the endpoint. For more information, see Authenticating to the REST API.
Warning

Treat your access token like a password.
To keep your token secure, you can store your token as a Codespaces secret and use the command line through Codespaces. For more information, see Managing encrypted secrets for your codespaces.


You can also use GitHub CLI instead of curl. GitHub CLI will take care of authentication for you. For more information, see the GitHub CLI version of this page.
If these options are not possible, consider using another CLI service to store your token securely.



Use the curl command to make your request. Pass your token in an Authorization header. Replace YOUR-TOKEN with your token.
Shellcurl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN"
curl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN"

Note

In most cases, you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer.



Using curl commands in GitHub Actions
You can also use curl commands in your GitHub Actions workflows.
Authenticating with an access token
GitHub recommends that you use the built-in GITHUB_TOKEN instead of creating a token. If this is not possible, store your token as a secret and replace GITHUB_TOKEN in the example below with the name of your secret. For more information about GITHUB_TOKEN, see Automatic token authentication. For more information about secrets, see Using secrets in GitHub Actions.
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"
on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"

Authenticating with a GitHub App
If you are authenticating with a GitHub App, you can create an installation access token within your workflow:


Store your GitHub App's ID as a configuration variable. In the following example, replace APP_ID with the name of the configuration variable. You can find your app ID on the settings page for your app or through the App API. For more information, see REST API endpoints for GitHub Apps. For more information about configuration variables, see Store information in variables.


Generate a private key for your app. Store the contents of the resulting file as a secret. (Store the entire contents of the file, including -----BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY-----.) In the following example, replace APP_PEM with the name of the secret. For more information, see Managing private keys for GitHub Apps. For more information about storing secrets, see Using secrets in GitHub Actions.


Add a step to generate a token, and use that token instead of GITHUB_TOKEN. Note that this token will expire after 60 minutes. For example:
YAMLon:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"

on:
  workflow_dispatch:
jobs:
  use_api:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Use API
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          curl --request GET \
          --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer $GH_TOKEN"





Next steps
For a more detailed guide, see Getting started with the REST API.\n\n\n\nREST API/About the REST API/About the REST APIAbout the REST APIGet oriented to the REST API documentation.In this articleGetting started with the REST APIFurther readingYou can use GitHub's API to build scripts and applications that automate processes, integrate with GitHub, and extend GitHub. For example, you could use the API to triage issues, build an analytics dashboard, or manage releases.
Each REST API endpoint is documented individually, and the endpoints are categorized by the resource that they primarily affect. For example, you can find endpoints relating to issues in REST API endpoints for issues.
Getting started with the REST API
If you are new to REST APIs, you may find it helpful to refer to the Quickstart or Getting Started guide for an introduction. For more information, see:

Quickstart for GitHub REST API
Getting started with the REST API

If you are familiar with REST APIs but new to GitHub's REST API, you may find it helpful to refer to the authentication documentation. For more information, see:

Authenticating to the REST API

If you are building scripts or applications that use the REST API, you may find some of the following guides helpful. For examples of scripting with the REST API, see:

Scripting with the REST API and JavaScript
Scripting with the REST API and Ruby
Building a GitHub App that responds to webhook events
Building a CLI with a GitHub App
Automatically redelivering failed deliveries for a repository webhook

For a list of libraries to facilitate scripting with the REST API, see Libraries for the REST API.
If you are building scripts or applications that use the REST API, you might also be interested in using webhooks to get notified about events or a GitHub App to access resources on behalf of a user or in an organization. For more information, see About webhooks and Deciding when to build a GitHub App.
Further reading

Comparing GitHub's REST API and GraphQL API
Best practices for using the REST API
Keeping your API credentials secure
Troubleshooting the REST API\n\n\n\nREST API/About the REST API/Comparing GitHub's APIsComparing GitHub's REST API and GraphQL APILearn about GitHub's APIs to extend and customize your GitHub experience.In this articleAbout GitHub's APIsChoosing the GraphQL APIChoosing the REST APIAbout GitHub's APIs
GitHub provides two APIs: a REST API and a GraphQL API. You can interact with both APIs using GitHub CLI, curl, the official Octokit libraries, and third party libraries. Occasionally, a feature may be supported on one API but not the other.
You should use the API that best aligns with your needs and that you are most comfortable using. You don't need to exclusively use one API over the other. Node IDs let you move between the REST API and GraphQL API. For more information, see Using global node IDs.
This article discusses the benefits of each API. For more information about the GraphQL API, see About the GraphQL API. For more information about the REST API, see About the REST API.
Choosing the GraphQL API
The GraphQL API returns exactly the data that you request. GraphQL also returns the data in a pre-known structure based on your request. In contrast, the REST API returns more data than you requested and returns it in a pre-determined structure. You can also accomplish the equivalent of multiple REST API request in a single GraphQL request. The ability to make fewer requests and fetch less data makes GraphQL appealing to developers of mobile applications.
For example, to get the GitHub login of ten of your followers, and the login of ten followers of each of your followers, you can send a single request like:
{
  viewer {
    followers(first: 10) {
      nodes {
        login
        followers(first: 10) {
          nodes {
            login
          }
        }
      }
    }
  }
}

The response will be a JSON object that follows the structure of your request.
In contrast, to get this same information from the REST API, you would need to first make a request to GET /user/followers. The API would return the login of each follower, along with other data about the followers that you don't need. Then, for each follower, you would need to make a request to GET /users/{username}/followers. In total, you would need to make 11 requests to get the same information that you could get from a single GraphQL request, and you would receive excess data.
Choosing the REST API
Because REST APIs have been around for longer than GraphQL APIs, some developers are more comfortable with the REST API. Since REST APIs use standard HTTP verbs and concepts, many developers are already familiar with the basic concepts to use the REST API.
For example, to create an issue in the octocat/Spoon-Knife repository, you would need to send a request to POST /repos/octocat/Spoon-Knife/issues with a JSON request body:
{
  "title": "Bug with feature X",
  "body": "If you do A, then B happens"
}

In contrast, to make an issue using the GraphQL API, you would need to get the node ID of the octocat/Spoon-Knife repository and then send a request like:
mutation {
  createIssue(
    input: {
      repositoryId: "MDEwOlJlcG9zaXRvcnkxMzAwMTky"
      title: "Bug with feature X"
      body: "If you do A, then B happens"}
  ) {
    issue {
      number
      url
    }
  }
}\n\n\n\nREST API/About the REST API/API VersionsAPI VersionsLearn how to specify which REST API version to use whenever you make a request to the REST API.In this articleAbout API versioningSpecifying an API versionUpgrading to a new API versionSupported API versionsAbout API versioning
The GitHub REST API is versioned. The API version name is based on the date when the API version was released. For example, the API version 2022-11-28 was released on Mon, 28 Nov 2022.
Any breaking changes will be released in a new API version. Breaking changes are changes that can potentially break an integration. Breaking changes include:

Removing an entire operation
Removing or renaming a parameter
Removing or renaming a response field
Adding a new required parameter
Making a previously optional parameter required
Changing the type of a parameter or response field
Removing enum values
Adding a new validation rule to an existing parameter
Changing authentication or authorization requirements

Any additive (non-breaking) changes will be available in all supported API versions. Additive changes are changes that should not break an integration. Additive changes include:

Adding an operation
Adding an optional parameter
Adding an optional request header
Adding a response field
Adding a response header
Adding enum values

When a new REST API version is released, the previous API version will be supported for at least 24 more months following the release of the new API version.
Specifying an API version
You should use the X-GitHub-Api-Version header to specify an API version. For example:
curl --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/zen

Requests without the X-GitHub-Api-Version header will default to use the 2022-11-28 version.
If you specify an API version that is no longer supported, you will receive a 400 error.
Upgrading to a new API version
Before upgrading to a new REST API version, you should read the changelog of breaking changes for the new API version to understand what breaking changes are included and to learn more about how to upgrade to that specific API version. For more information, see Breaking changes.
When you update your integration to specify the new API version in the X-GitHub-Api-Version header, you'll also need to make any changes required for your integration to work with the new API version.
Once your integration is updated, test your integration to verify that it works with the new API version.
Supported API versions
The following REST API versions are currently supported:
2022-11-28
You can also make an API request to get all of the supported API versions. For more information, see REST API endpoints for meta data.\n\n\n\nREST API/About the REST API/Breaking changesBreaking changesLearn about breaking changes that were introduced in each REST API version.In this articleAbout breaking changes in the REST APIUpgrading to a new API versionBreaking changes for 2022-11-28About breaking changes in the REST API
The GitHub REST API is versioned. The API version name is based on the date when the API version was released. For example, the API version 2022-11-28 was released on Mon, 28 Nov 2022.
Any breaking changes will be released in a new API version. Breaking changes are changes that can potentially break an integration. Breaking changes include:

Removing an entire operation
Removing or renaming a parameter
Removing or renaming a response field
Adding a new required parameter
Making a previously optional parameter required
Changing the type of a parameter or response field
Removing enum values
Adding a new validation rule to an existing parameter
Changing authentication or authorization requirements

Any additive (non-breaking) changes will be available in all supported API versions. Additive changes are changes that should not break an integration. Additive changes include:

Adding an operation
Adding an optional parameter
Adding an optional request header
Adding a response field
Adding a response header
Adding enum values

When a new REST API version is released, the previous API version will be supported for at least 24 more months following the release of the new API version.
For more information about API versions, see API Versions.
Upgrading to a new API version
Before upgrading to a new REST API version, you should read the section on this page that corresponds to the new API version to understand what breaking changes are included and to learn more about how to upgrade to that API version.
When you update your integration to specify the new API version in the X-GitHub-Api-Version header, you'll also need to make any changes required for your integration to work with the new API version.
Once your integration is updated, test your integration to verify that it works with the new API version.
Breaking changes for 2022-11-28
Version 2022-11-28 is the first version of the GitHub REST API after date-based versioning was introduced. This version does not include any breaking changes.\n\n\n\nREST API/About the REST API/OpenAPI descriptionAbout the OpenAPI description for the REST APIThe GitHub REST API is fully described in an OpenAPI compliant document.In this articleAbout OpenAPIAbout GitHub's OpenAPI descriptionUsing the GitHub OpenAPI descriptionAbout OpenAPI
OpenAPI is a specification for describing REST API interfaces. It describes the API without requiring access to the source code or additional documentation. The specification is both human and machine readable. For more information, see the OpenAPI specification documentation.
About GitHub's OpenAPI description
GitHub's OpenAPI description of the REST API is publicly available. You can find the description in the open source github/rest-api-description repository.
GitHub provides both 3.0 and 3.1 OpenAPI descriptions.
For each description, there is a version for each product: GitHub Free/GitHub Pro/GitHub Team (api.github.com), GitHub Enterprise Cloud (ghec), and each version of GitHub Enterprise Server (ghes-X.X).
For each product, if date-based versioning is supported, there is also a description for each date-based version. For more information, see API Versions.
Each description is available in a bundled or in a dereferenced format. The bundled format uses $ref to refer to OpenAPI components that are shared between endpoints. The dereferenced format includes the fully expanded description.
Using the GitHub OpenAPI description
Because the OpenAPI description is machine readable, you can use it to do things like:

Generate libraries to facilitate using the REST API
Validate and test an integration that uses the REST API
Explore and interact with the REST API using third-party tools, such as Insomnia or Postman

For example, GitHub uses the OpenAPI description to generate the Octokit SDKs. GitHub also uses the OpenAPI description to generate the REST API reference documentation for each endpoint.\n\n\n\nREST API/Using the REST API/Getting startedGetting started with the REST APILearn how to use the GitHub REST API.Tool navigationGitHub CLIcurlJavaScriptIn this articleIntroductionAbout requests to the REST APIMaking a requestUsing the responseNext stepsIntroduction
This article describes how to use the GitHub REST API with GitHub CLI, curl, or JavaScript. For a quickstart guide, see Quickstart for GitHub REST API.


About requests to the REST API
This section describes the elements that make up an API request:

HTTP method
Path
Headers
Media types
Authentication
Parameters

Every request to the REST API includes an HTTP method and a path. Depending on the REST API endpoint, you might also need to specify request headers, authentication information, query parameters, or body parameters.
The REST API reference documentation describes the HTTP method, path, and parameters for every endpoint. It also displays example requests and responses for each endpoint. For more information, see the REST reference documentation.
HTTP method
The HTTP method of an endpoint defines the type of action it performs on a given resource. Some common HTTP methods are GET, POST, DELETE, and PATCH. The REST API reference documentation provides the HTTP method for every endpoint.
For example, the HTTP method for the "List repository issues" endpoint is GET."
Where possible, the GitHub REST API strives to use an appropriate HTTP method for each action.

GET: Used for retrieving resources.
POST: Used for creating resources.
PATCH: Used for updating properties of resources.
PUT: Used for replacing resources or collections of resources.
DELETE: Used for deleting resources.

Path
Each endpoint has a path. The REST API reference documentation gives the path for every endpoint. For example, the path for the "List repository issues" endpoint is /repos/{owner}/{repo}/issues.
The curly brackets {} in a path denote path parameters that you need to specify. Path parameters modify the endpoint path and are required in your request. For example, the path parameters for the "List repository issues" endpoint are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to request a list of issues, and replace {owner} with the name of the account that owns the repository.
Headers
Headers provide extra information about the request and the desired response. Following are some examples of headers that you can use in your requests to the GitHub REST API. For an example of a request that uses headers, see Making a request.
Accept
Most GitHub REST API endpoints specify that you should pass an Accept header with a value of application/vnd.github+json. The value of the Accept header is a media type. For more information about media types, see Media types.
X-GitHub-Api-Version
You should use this header to specify a version of the REST API to use for your request. For more information, see API Versions.
User-Agent
All API requests must include a valid User-Agent header. The User-Agent header identifies the user or application that is making the request.

By default, GitHub CLI sends a valid User-Agent header. However, GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.


By default, curl sends a valid User-Agent header. However GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.


If you use the Octokit.js SDK, the SDK will send a valid User-Agent header for you. However, GitHub recommends using your GitHub username, or the name of your application, for the User-Agent header value. This allows GitHub to contact you if there are problems.

The following is an example User-Agent for an app named Awesome-Octocat-App:
User-Agent: Awesome-Octocat-App

Requests with no User-Agent header will be rejected. If you provide an invalid User-Agent header, you will receive a 403 Forbidden response.

Media types
You can specify one or more media types by adding them to the Accept header of your request. For more information about the Accept header, see Accept.
Media types specify the format of the data you want to consume from the API. Media types are specific to resources, allowing them to change independently and support formats that other resources don't. The documentation for each GitHub REST API endpoint will describe the media types that it supports. For more information, see the GitHub REST API documentation.
The most common media types supported by the GitHub REST API are application/vnd.github+json and application/json.
There are custom media types that you can use with some endpoints. For example, the REST API to manage commits and pull requests support the media types diff, patch, and sha. The media types full, raw, text, or html are used by some other endpoints.
All custom media types for GitHub look like this: application/vnd.github.PARAM+json, where PARAM is the name of the media type. For example, to specify the raw media type, you would use application/vnd.github.raw+json.
For an example of a request that uses media types, see Making a request.
Authentication
Many endpoints require authentication or return additional information if you are authenticated. Additionally, you can make more requests per hour when you are authenticated.

To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow. For more information, see Authenticating to the REST API.
For an example of a request that uses an authentication token, see Making a request.
Note

If you don't want to create a token, you can use GitHub CLI. GitHub CLI will take care of authentication for you, and help keep your account secure. For more information, see the GitHub CLI version of this page.

Warning

Treat your access token the same way you would treat your passwords or other sensitive credentials. For more information, see Keeping your API credentials secure.



Although some REST API endpoints are accessible without authentication, GitHub CLI requires you to authenticate before you can use the api subcommand to make an API request. Use the auth login subcommand to authenticate to GitHub. For more information, see Making a request.


To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow. For more information, see Authenticating to the REST API.
For an example of a request that uses an authentication token, see Making a request.
Warning

Treat your access token the same way you would treat your passwords or other sensitive credentials. For more information, see Keeping your API credentials secure.


Parameters
Many API methods require or allow you to send additional information in parameters in your request. There are a few different types of parameters: Path parameters, body parameters, and query parameters.
Path parameters
Path parameters modify the endpoint path. These parameters are required in your request. For more information, see Path.
Body parameters
Body parameters allow you to pass additional data to the API. These parameters can be optional or required, depending on the endpoint. For example, a body parameter may allow you to specify an issue title when creating a new issue, or specify certain settings when enabling or disabling a feature. The documentation for each GitHub REST API endpoint will describe the body parameters that it supports. For more information, see the GitHub REST API documentation.
For example, the "Create an issue" endpoint requires that you specify a title for the new issue in your request. It also allows you to optionally specify other information, such as text to put in the issue body, users to assign to the new issue, or labels to apply to the new issue. For an example of a request that uses body parameters, see Making a request.
You must authenticate your request to pass body parameters. For more information, see Authenticating.
Query parameters
Query parameters allow you to control what data is returned for a request. These parameters are usually optional. The documentation for each GitHub REST API endpoint will describe any query parameters that it supports. For more information, see the GitHub REST API documentation.
For example, the "List public events" endpoint returns thirty issues by default. You can use the per_page query parameter to return two issues instead of 30. You can use the page query parameter to fetch only the first page of results. For an example of a request that uses query parameters, see Making a request.
Making a request

This section demonstrates how to make an authenticated request to the GitHub REST API using GitHub CLI.
1. Setup
Install GitHub CLI on macOS, Windows, or Linux. For more information, see Installation in the GitHub CLI repository.
2. Authenticate


To authenticate to GitHub, run the following command from your terminal.
gh auth login

You can use the --scopes option to specify what scopes you want. If you want to authenticate with a token that you created, you can use the --with-token option. For more information, see the GitHub CLI auth login documentation.


Select where you want to authenticate to:

If you access GitHub at GitHub.com, select GitHub.com.
If you access GitHub at a different domain, select Other, then enter your hostname (for example: octocorp.ghe.com).



Follow the rest of the on-screen prompts.
GitHub CLI automatically stores your Git credentials for you when you choose HTTPS as your preferred protocol for Git operations and answer "yes" to the prompt asking if you would like to authenticate to Git with your GitHub credentials. This can be useful as it allows you to use Git commands like git push and git pull without needing to set up a separate credential manager or use SSH.


3. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


4. Make a request with GitHub CLI
Use the GitHub CLI api subcommand to make your API request. For more information, see the GitHub CLI api documentation.
In your request, specify the following options and values:


--method followed by the HTTP method and the path of the endpoint. For more information, see HTTP method and Path.


--header:

Accept: Pass the media type in an Accept header. To pass multiple media types in an Accept header, separate the media types with a comma: Accept: application/vnd.github+json,application/vnd.github.diff. For more information, see Accept and Media types.
X-GitHub-Api-Version: Pass the API version in a X-GitHub-Api-Version header. For more information, see X-GitHub-Api-Version.



-f or -F followed by any body parameters or query parameters in key=value format. Use the -F option to pass a parameter that is a number, Boolean, or null. Use the -f option to pass string parameters.
Some endpoints use query parameters that are arrays. To send an array in the query string, use the query parameter once per array item, and append [] after the query parameter name. For example, to provide an array of two repository IDs, use -f repository_ids[]=REPOSITORY_A_ID -f repository_ids[]=REPOSITORY_B_ID.
If you do not need to specify any body parameters or query parameters in your request, omit this option. For more information, see Body parameters and Query parameters. For examples, see Example request using body parameters and Example request using query parameters.


Example request
The following example request uses the "Get Octocat" endpoint to return the octocat as ASCII art.
Shellgh api --method GET /octocat \
--header 'Accept: application/vnd.github+json' \
--header "X-GitHub-Api-Version: 2022-11-28"
gh api --method GET /octocat \
--header 'Accept: application/vnd.github+json' \
--header "X-GitHub-Api-Version: 2022-11-28"

Example request using query parameters
The "List public events" endpoint returns thirty issues by default. The following example uses the per_page query parameter to return two issues instead of 30, and the page query parameter to fetch only the first page of results.
Shellgh api --method GET /events -F per_page=2 -F page=1
--header 'Accept: application/vnd.github+json' \
gh api --method GET /events -F per_page=2 -F page=1
--header 'Accept: application/vnd.github+json' \

Example request using body parameters
The following example uses the "Create an issue" endpoint to create a new issue in the octocat/Spoon-Knife repository. In the response, find the html_url of your issue, and navigate to your issue in the browser.
Shellgh api --method POST /repos/octocat/Spoon-Knife/issues \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
-f title='Created with the REST API' \
-f body='This is a test issue created by the REST API' \
gh api --method POST /repos/octocat/Spoon-Knife/issues \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
-f title='Created with the REST API' \
-f body='This is a test issue created by the REST API' \



This section demonstrates how to make an authenticated request to the GitHub REST API using curl.
1. Setup
You must have curl installed on your machine. To check if curl is already installed, run curl --version on the command line.

If the output provides information about the version of curl, that means curl is installed.
If you get a message similar to command not found: curl, that means curl is not installed. Download and install curl. For more information, see the curl download page.

2. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


3. Create authentication credentials
Create an access token to authenticate your request. You can save your token and use it for multiple requests. Give the token any scopes or permissions that are required to access the endpoint. You will send this token in an Authorization header with your request. For more information, see Authentication.
4. Make a curl request
Use the curl command to make your request. For more information, see the curl documentation.
Specify the following options and values in your request:


--request or -X followed by the HTTP method as the value. For more information, see HTTP method.


--url followed by the full path as the value. The full path is a URL that includes the base URL for the GitHub REST API (https://api.github.com) and the path of the endpoint, like this: https://api.github.com/PATH. Replace PATH with the path of the endpoint. For more information, see Path.
To use query parameters, add a ? to the end of the path, then append your query parameter name and value in the form parameter_name=value. Separate multiple query parameters with &. If you need to send an array in the query string, use the query parameter once per array item, and append [] after the query parameter name. For example, to provide an array of two repository IDs, use ?repository_ids[]=REPOSITORY_A_ID&repository_ids[]=REPOSITORY_B_ID. For more information, see Query parameters. For an example, see Example request using query parameters.


--header or -H:

Accept: Pass the media type in an Accept header. To pass multiple media types in an Accept header, separate the media types with a comma, for example: Accept: application/vnd.github+json,application/vnd.github.diff. For more information, see Accept and Media types.
X-GitHub-Api-Version: Pass the API version in a X-GitHub-Api-Version header. For more information, see X-GitHub-Api-Version.
Authorization: Pass your authentication token in an Authorization header. Note that in most cases you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer. For more information, see Authentication. For an example of a request that uses an Authorization header, see Example request using body parameters.



--data or -d followed by any body parameters within a JSON object. If you do not need to specify any body parameters in your request, omit this option. For more information, see Body parameters. For an example, see Example request using body parameters.


Example request
The following example request uses the "Get Octocat" endpoint to return the octocat as ASCII art.
Shellcurl --request GET \
--url "https://api.github.com/octocat" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28"
curl --request GET \
--url "https://api.github.com/octocat" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28"

Example request using query parameters
The "List public events" endpoint returns thirty issues by default. The following example uses the per_page query parameter to return two issues instead of 30, and the page query parameter to fetch only the first page of results.
Shellcurl --request GET \
--url "https://api.github.com/events?per_page=2&page=1" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/events
curl --request GET \
--url "https://api.github.com/events?per_page=2&page=1" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/events

Example request using body parameters
The following example uses the Create an issue endpoint to create a new issue in the octocat/Spoon-Knife repository. Replace YOUR-TOKEN with the authentication token you created in a previous step.
Note

If you are using a fine-grained personal access token, you must replace octocat/Spoon-Knife with a repository that you own or that is owned by an organization that you are a member of. Your token must have access to that repository and have read and write permissions for repository issues. For more information, see Managing your personal access tokens.

Shellcurl \
--request POST \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--header "Authorization: Bearer YOUR-TOKEN" \
--data '{
  "title": "Created with the REST API",
  "body": "This is a test issue created by the REST API"
}'
curl \
--request POST \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--header "Authorization: Bearer YOUR-TOKEN" \
--data '{
  "title": "Created with the REST API",
  "body": "This is a test issue created by the REST API"
}'



This section demonstrates how to make a request to the GitHub REST API using JavaScript and Octokit.js. For a more detailed guide, see Scripting with the REST API and JavaScript.
1. Setup
You must install octokit to use the Octokit.js library shown in the following examples.

Install octokit. For example, npm install octokit. For other ways to install or load octokit, see the Octokit.js README.

2. Choose an endpoint for your request


Choose an endpoint to make a request to. You can explore GitHub's REST API documentation to discover endpoints that you can use to interact with GitHub.


Identify the HTTP method and path of the endpoint. You will send these with your request. For more information, see HTTP method and Path.
For example, the "Create an issue" endpoint uses the HTTP method POST and the path /repos/{owner}/{repo}/issues.


Identify any required path parameters. Required path parameters appear in curly brackets {} in the path of the endpoint. Replace each parameter placeholder with the desired value. For more information, see Path.
For example, the "Create an issue" endpoint uses the path /repos/{owner}/{repo}/issues, and the path parameters are {owner} and {repo}. To use this path in your API request, replace {repo} with the name of the repository where you would like to create a new issue, and replace {owner} with the name of the account that owns the repository.


3. Create an access token
Create an access token to authenticate your request. You can save your token and use it for multiple requests. Give the token any scopes or permissions that are required to access the endpoint. You will send this token in an Authorization header with your request. For more information, see Authentication.
4. Make a request with Octokit.js


Import octokit in your script. For example, import { Octokit } from "octokit";. For other ways to import octokit, see the Octokit.js README.


Create an instance of Octokit with your token. Replace YOUR-TOKEN with your token.
JavaScriptconst octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});
const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN'
});



Use octokit.request to execute your request.

Send the HTTP method and path as the first argument to the request method. For more information, see HTTP method and Path.
Specify all path, query, and body parameters in an object as the second argument to the request method. For more information, see Parameters.

In the following example request, the HTTP method is POST, the path is /repos/{owner}/{repo}/issues, the path parameters are owner: "octocat" and repo: "Spoon-Knife", and the body parameters are title: "Created with the REST API" and body: "This is a test issue created by the REST API".
Note

If you are using a fine-grained personal access token, you must replace octocat/Spoon-Knife with a repository that you own or that is owned by an organization that you are a member of. Your token must have access to that repository and have read and write permissions for repository issues. For more information, see Managing your personal access tokens.

JavaScriptawait octokit.request("POST /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  title: "Created with the REST API",
  body: "This is a test issue created by the REST API",
});
await octokit.request("POST /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  title: "Created with the REST API",
  body: "This is a test issue created by the REST API",
});

The request method automatically passes the Accept: application/vnd.github+json header. To pass additional headers or a different Accept header, add a headers property to the object that is passed as a second argument. The value of the headers property is an object with the header names as keys and header values as values.
For example, the following code will send a content-type header with a value of text/plain and a X-GitHub-Api-Version header with a value of 2022-11-28.
JavaScriptawait octokit.request("GET /octocat", {
  headers: {
    "content-type": "text/plain",
    "X-GitHub-Api-Version": "2022-11-28",
  },
});
await octokit.request("GET /octocat", {
  headers: {
    "content-type": "text/plain",
    "X-GitHub-Api-Version": "2022-11-28",
  },
});




Using the response
After you make a request, the API will return the response status code, response headers, and potentially a response body.
About the response code and headers
Every request will return an HTTP status code that indicates the success of the response. For more information about response codes, see the MDN HTTP response status code documentation.
Additionally, the response will include headers that give more details about the response. Headers that start with X- or x- are custom to GitHub. For example, the x-ratelimit-remaining and x-ratelimit-reset headers tell you how many requests you can make in a time period.

To view the status code and headers, use the --include or --i option when you send your request.
For example, this request gets a list of issues in the octocat/Spoon-Knife repository:
gh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/octocat/Spoon-Knife/issues \
-F per_page=2 --include

And it returns a response code and headers that look something like this:
HTTP/2.0 200 OK
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset
Cache-Control: private, max-age=60, s-maxage=60
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Thu, 04 Aug 2022 19:56:41 GMT
Etag: W/"a63dfbcfdb73621e9d2e89551edcf9856731ced534bd7f1e114a5da1f5f73418"
Link: <https://api.github.com/repositories/1300192/issues?per_page=1&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=1&page=14817>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, Accept-Encoding, Accept, X-Requested-With
X-Accepted-Oauth-Scopes: repo
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Api-Version-Selected: 2022-08-09
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: 1C73:26D4:E2E500:1EF78F4:62EC2479
X-Oauth-Client-Id: 178c6fc778ccc68e1d6a
X-Oauth-Scopes: gist, read:org, repo, workflow
X-Ratelimit-Limit: 15000
X-Ratelimit-Remaining: 14996
X-Ratelimit-Reset: 1659645499
X-Ratelimit-Resource: core
X-Ratelimit-Used: 4
X-Xss-Protection: 0

In this example, the response code is 200, which indicates a successful request.


When you make a request with Octokit.js, the request method returns a promise. If the request was successful, the promise resolves to an object that includes the HTTP status code of the response (status) and the response headers (headers). If an error occurs, the promise resolves to an object that includes the HTTP status code of the response (status) and the response headers (response.headers).
You can use a try/catch block to catch an error if it occurs. For example, if the request in the following script is successful, the script will log the status code and the value of the x-ratelimit-remaining header. If the request was not successful, the script will log the status code, the value of the x-ratelimit-remaining header, and the error message.
In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
JavaScripttry {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  console.log(`Success! Status: ${result.status}. Rate limit remaining: ${result.headers["x-ratelimit-remaining"]}`)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Rate limit remaining: ${error.headers["x-ratelimit-remaining"]}. Message: ${error.response.data.message}`)
}
try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  console.log(`Success! Status: ${result.status}. Rate limit remaining: ${result.headers["x-ratelimit-remaining"]}`)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Rate limit remaining: ${error.headers["x-ratelimit-remaining"]}. Message: ${error.response.data.message}`)
}



To view the status code and headers, use the --include or --i option when you send your request.
For example, this request gets a list of issues in the octocat/Spoon-Knife repository:
curl --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" \
--include

And it returns a response code and headers that look something like this:
HTTP/2 200
server: GitHub.com
date: Thu, 04 Aug 2022 20:07:51 GMT
content-type: application/json; charset=utf-8
cache-control: public, max-age=60, s-maxage=60
vary: Accept, Accept-Encoding, Accept, X-Requested-With
etag: W/"7fceb7e8c958d3ec4d02524b042578dcc7b282192e6c939070f4a70390962e18"
x-github-media-type: github.v3; format=json
link: <https://api.github.com/repositories/1300192/issues?per_page=2&sort=updated&direction=asc&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=2&sort=updated&direction=asc&page=7409>; rel="last"
access-control-expose-headers: ETag, Link, Location, Retry-After, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset
access-control-allow-origin: *
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-frame-options: deny
x-content-type-options: nosniff
x-xss-protection: 0
referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
content-security-policy: default-src 'none'
x-ratelimit-limit: 15000
x-ratelimit-remaining: 14996
x-ratelimit-reset: 1659645535
x-ratelimit-resource: core
x-ratelimit-used: 4
accept-ranges: bytes
content-length: 4936
x-github-request-id: 14E0:4BC6:F1B8BA:208E317:62EC2715

In this example, the response code is 200, which indicates a successful request.

About the response body
Many endpoints will return a response body. Unless otherwise specified, the response body is in JSON format. Blank fields are included as null instead of being omitted. All timestamps return in UTC time, ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Unlike the GraphQL API where you specify what information you want, the REST API typically returns more information than you need. If desired, you can parse the response to pull out specific pieces of information.

For example, you can use > to redirect the response to a file. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
Shellgh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/REPO-OWNER/REPO-NAME/issues \
-F per_page=2 > data.json
gh api \
--header 'Accept: application/vnd.github+json' \
--method GET /repos/REPO-OWNER/REPO-NAME/issues \
-F per_page=2 > data.json

Then you can use jq to get the title and author ID of each issue:
Shelljq '.[] | {title: .title, authorID: .user.id}' data.json
jq '.[] | {title: .title, authorID: .user.id}' data.json

The previous two commands return something like:
{
  "title": "Update index.html",
  "authorID": 10701255
}
{
  "title": "Edit index file",
  "authorID": 53709285
}

For more information about jq, see the jq documentation.


For example, you can get the title and author ID of each issue. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
JavaScripttry {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}
try {
  const result = await octokit.request("GET /repos/{owner}/{repo}/issues", {
    owner: "REPO-OWNER",
    repo: "REPO-NAME",
    per_page: 2,
  });

  const titleAndAuthor = result.data.map(issue => {title: issue.title, authorID: issue.user.id})

  console.log(titleAndAuthor)

} catch (error) {
  console.log(`Error! Status: ${error.status}. Message: ${error.response.data.message}`)
}



For example, you can use > to redirect the response to a file. In the following example, replace REPO-OWNER with the name of the account that owns the repository, and REPO-NAME with the name of the repository.
Shellcurl --request GET \
--url "https://api.github.com/repos/REPO-OWNER/REPO-NAME/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" > data.json
curl --request GET \
--url "https://api.github.com/repos/REPO-OWNER/REPO-NAME/issues?per_page=2" \
--header "Accept: application/vnd.github+json" \
--header "Authorization: Bearer YOUR-TOKEN" > data.json

Then you can use jq to get the title and author ID of each issue:
Shelljq '.[] | {title: .title, authorID: .user.id}' data.json
jq '.[] | {title: .title, authorID: .user.id}' data.json

The previous two commands return something like:
{
  "title": "Update index.html",
  "authorID": 10701255
}
{
  "title": "Edit index file",
  "authorID": 53709285
}

For more information about jq, see the jq documentation.

Detailed versus summary representations
A response can include all attributes for a resource or only a subset of attributes, depending on whether you fetch an individual resource or a list of resources.

When you fetch an individual resource, like a specific repository, the response will typically include all attributes for that resource. This is the "detailed" representation of the resource.
When you fetch a list of resources, like a list of multiple repositories, the response will only include a subset of the attributes for each resource. This is the "summary" representation of the resource.

Note that authorization sometimes influences the amount of detail included in a representation.
The reason for this is because some attributes are computationally expensive for the API to provide, so GitHub excludes those attributes from the summary representation. To obtain those attributes, you can fetch the detailed representation.
The documentation provides an example response for each API method. The example response illustrates all attributes that are returned by that method.
Hypermedia
All resources may have one or more *_url properties linking to other resources. These are meant to provide explicit URLs so that proper API clients don't need to construct URLs on their own. It is highly recommended that API clients use these. Doing so will make future upgrades of the API easier for developers. All URLs are expected to be proper RFC 6570 URI templates.
You can then expand these templates using something like the uri_template gem:
>> tmpl = URITemplate.new('/notifications{?since,all,participating}')
>> tmpl.expand
=> "/notifications"

>> tmpl.expand all: 1
=> "/notifications?all=1"

>> tmpl.expand all: 1, participating: 1
=> "/notifications?all=1&participating=1"

Next steps
This article demonstrated how to list and create issues in a repository. For more practice, try to comment on an issue, edit the title of an issue, or close an issue. For more information, see the "Create an issue comment" endpoint and the "Update an issue" endpoint.
For more information about other endpoints that you can use, see the REST reference documentation.\n\n\n\nREST API/Using the REST API/Rate limitsRate limits for the REST APILearn about REST API rate limits, how to avoid exceeding them, and what to do if you do exceed them.In this articleAbout primary rate limitsAbout secondary rate limitsChecking the status of your rate limitExceeding the rate limitStaying under the rate limitGetting a higher rate limitAbout primary rate limits
GitHub limits the number of REST API requests that you can make within a specific amount of time. This limit helps prevent abuse and denial-of-service attacks, and ensures that the API remains available for all users.
Some endpoints, like the search endpoints, have more restrictive limits. For more information about these endpoints, see REST API endpoints for rate limits. The GraphQL API also has a separate primary rate limit. See Rate limits and node limits for the GraphQL API.
In general, you can calculate your primary rate limit for the REST API based on your method of authentication, as described below.
Primary rate limit for unauthenticated users
You can make unauthenticated requests if you are only fetching public data. Unauthenticated requests are associated with the originating IP address, not with the user or application that made the request.
The primary rate limit for unauthenticated requests is 60 requests per hour.
Primary rate limit for authenticated users
You can use a personal access token to make API requests. Additionally, you can authorize a GitHub App or OAuth app, which can then make API requests on your behalf.
All of these requests count towards your personal rate limit of 5,000 requests per hour. Requests made on your behalf by a GitHub App that is owned by a GitHub Enterprise Cloud organization have a higher rate limit of 15,000 requests per hour. Similarly, requests made on your behalf by a OAuth app that is owned or approved by a GitHub Enterprise Cloud organization have a higher rate limit of 15,000 requests per hour if you are a member of the GitHub Enterprise Cloud organization.
Primary rate limit for GitHub App installations
GitHub Apps authenticating with an installation access token use the installation's minimum rate limit of 5,000 requests per hour. If the installation is on a GitHub Enterprise Cloud organization, the installation has a rate limit of 15,000 requests per hour.
For installations that are not on a GitHub Enterprise Cloud organization, the rate limit for the installation will scale with the number of users and repositories. Installations that have more than 20 repositories receive another 50 requests per hour for each repository. Installations that are on an organization that have more than 20 users receive another 50 requests per hour for each user. The rate limit cannot increase beyond 12,500 requests per hour.
Primary rate limits for GitHub App user access tokens (as opposed to installation access tokens) are dictated by the primary rate limits for the authenticated user. This rate limit is combined with any requests that another GitHub App or OAuth app makes on that user's behalf and any requests that the user makes with a personal access token. See Primary rate limit for authenticated users.
Primary rate limit for OAuth apps
Primary rate limits for OAuth access tokens generated by a OAuth app are dictated by the primary rate limits for authenticated users. This rate limit is combined with any requests that another GitHub App or OAuth app makes on that user's behalf and any requests that the user makes with a personal access token. See Primary rate limit for authenticated users.
OAuth apps can also use their client ID and client secret to fetch public data. For example:
curl -u YOUR_CLIENT_ID:YOUR_CLIENT_SECRET -I https://api.github.com/meta

For these requests, the rate limit is 5,000 requests per hour per OAuth app. If the app is owned by a GitHub Enterprise Cloud organization, the rate limit is 15,000 requests per hour.
Note

Never include your app's client secret in client-side code or in code that runs on a user device. The client secret can be used to generate OAuth access tokens for users who have authorized your app, so you should always keep the client secret secure.

Primary rate limit for GITHUB_TOKEN in GitHub Actions
You can use the built-in GITHUB_TOKEN to authenticate requests in GitHub Actions workflows. See Automatic token authentication.
The rate limit for GITHUB_TOKEN is 1,000 requests per hour per repository. For requests to resources that belong to a GitHub Enterprise Cloud account, the limit is 15,000 requests per hour per repository.
About secondary rate limits
In addition to primary rate limits, GitHub enforces secondary rate limits in order to prevent abuse and keep the API available for all users.
You may encounter a secondary rate limit if you:

Make too many concurrent requests. No more than 100 concurrent requests are allowed. This limit is shared across the REST API and GraphQL API.
Make too many requests to a single endpoint per minute. No more than 900 points per minute are allowed for REST API endpoints, and no more than 2,000 points per minute are allowed for the GraphQL API endpoint. For more information about points, see Calculating points for the secondary rate limit.
Make too many requests per minute. No more than 90 seconds of CPU time per 60 seconds of real time is allowed. No more than 60 seconds of this CPU time may be for the GraphQL API. You can roughly estimate the CPU time by measuring the total response time for your API requests.
Make too many requests that consume excessive compute resources in a short period of time.
Create too much content on GitHub in a short amount of time. In general, no more than 80 content-generating requests per minute and no more than 500 content-generating requests per hour are allowed. Some endpoints have lower content creation limits. Content creation limits include actions taken on the GitHub web interface as well as via the REST API and GraphQL API.

These secondary rate limits are subject to change without notice. You may also encounter a secondary rate limit for undisclosed reasons.
Calculating points for the secondary rate limit
Some secondary rate limits are determined by the point values of requests. For GraphQL requests, these point values are separate from the point value calculations for the primary rate limit.

























RequestPointsGraphQL requests without mutations1GraphQL requests with mutations5Most REST API GET, HEAD, and OPTIONS requests1Most REST API POST, PATCH, PUT, or DELETE requests5
Some REST API endpoints have a different point cost that is not shared publicly.
Checking the status of your rate limit
You can use the headers that are sent with each response to determine the current status of your primary rate limit.





























Header nameDescriptionx-ratelimit-limitThe maximum number of requests that you can make per hourx-ratelimit-remainingThe number of requests remaining in the current rate limit windowx-ratelimit-usedThe number of requests you have made in the current rate limit windowx-ratelimit-resetThe time at which the current rate limit window resets, in UTC epoch secondsx-ratelimit-resourceThe rate limit resource that the request counted against. For more information about the different resources, see REST API endpoints for rate limits.
You can also call the GET /rate_limit endpoint to check your rate limit. Calling this endpoint does not count against your primary rate limit, but it can count against your secondary rate limit. See REST API endpoints for rate limits. When possible, you should use the rate limit response headers instead of calling the API to check your rate limit.
There is not a way to check the status of your secondary rate limit.
Exceeding the rate limit
If you exceed your primary rate limit, you will receive a 403 or 429 response, and the x-ratelimit-remaining header will be 0. You should not retry your request until after the time specified by the x-ratelimit-reset header.
If you exceed a secondary rate limit, you will receive a 403 or 429 response and an error message that indicates that you exceeded a secondary rate limit. If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed. If the x-ratelimit-remaining header is 0, you should not retry your request until after the time, in UTC epoch seconds, specified by the x-ratelimit-reset header. Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.
Continuing to make requests while you are rate limited may result in the banning of your integration.
Staying under the rate limit
You should follow best practices to help you stay under the rate limits. See Best practices for using the REST API.
Getting a higher rate limit
If you want a higher primary rate limit, consider making authenticated requests instead of unauthenticated requests. Authenticated requests have a significantly higher rate limit than unauthenticated requests.
If you are using a personal access token for automation in your organization, consider whether a GitHub App will work instead. The rate limit for GitHub Apps using an installation access token scales with the number of repositories and number of organization users. See About creating GitHub Apps.
If you are using GitHub Apps or OAuth apps, consider upgrading to GitHub Enterprise Cloud. GitHub Apps or OAuth apps have higher rate limits for organizations that use GitHub Enterprise Cloud.\n\n\n\nREST API/Using the REST API/PaginationUsing pagination in the REST APILearn how to navigate through paginated responses from the REST API.In this articleAbout paginationUsing link headersChanging the number of items per pageScripting with paginationAbout pagination
When a response from the REST API would include many results, GitHub will paginate the results and return a subset of the results. For example, GET /repos/octocat/Spoon-Knife/issues will only return 30 issues from the octocat/Spoon-Knife repository even though the repository includes over 1600 open issues. This makes the response easier to handle for servers and for people.
You can use the link header from the response to request additional pages of data. If an endpoint supports the per_page query parameter, you can control how many results are returned on a page.
This article demonstrates how to request additional pages of results for paginated responses, how to change the number of results returned on each page, and how to write a script to fetch multiple pages of results.
Using link headers
When a response is paginated, the response headers will include a link header. If the endpoint does not support pagination, or if all results fit on a single page, the link header will be omitted.
The link header contains URLs that you can use to fetch additional pages of results. For example, the previous, next, first, and last page of results.
To see the response headers for a particular endpoint, you can use curl, GitHub CLI, or a library you're using to make requests. To see the response headers if you are using a library to make requests, follow the documentation for that library. To see the response headers if you are using curl or GitHub CLI, pass the --include flag with your request. For example:
curl --include --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
--header "Accept: application/vnd.github+json"

If the response is paginated, the link header will look something like this:
link: <https://api.github.com/repositories/1300192/issues?page=2>; rel="prev", <https://api.github.com/repositories/1300192/issues?page=4>; rel="next", <https://api.github.com/repositories/1300192/issues?page=515>; rel="last", <https://api.github.com/repositories/1300192/issues?page=1>; rel="first"

The link header provides the URL for the previous, next, first, and last page of results:

The URL for the previous page is followed by rel="prev".
The URL for the next page is followed by rel="next".
The URL for the last page is followed by rel="last".
The URL for the first page is followed by rel="first".

In some cases, only a subset of these links are available. For example, the link to the previous page won't be included if you are on the first page of results, and the link to the last page won't be included if it can't be calculated.
You can use the URLs from the link header to request another page of results. For example, to request the last page of results based on the previous example:
curl --include --request GET \
--url "https://api.github.com/repositories/1300192/issues?page=515" \
--header "Accept: application/vnd.github+json"

The URLs in the link header use query parameters to indicate which page of results to return. The query parameters in the link URLs may differ between endpoints, however each paginated endpoint will use the page, before/after, or since query parameters. (Some endpoints use the since parameter for something other than pagination.) In all cases, you can use the URLs in the link header to fetch additional pages of results. For more information about query parameters see Getting started with the REST API.
Changing the number of items per page
If an endpoint supports the per_page query parameter, then you can control how many results are returned on a page. For more information about query parameters see Getting started with the REST API.
For example, this request uses the per_page query parameter to return two items per page:
curl --include --request GET \
--url "https://api.github.com/repos/octocat/Spoon-Knife/issues?per_page=2" \
--header "Accept: application/vnd.github+json"

The per_page parameter will automatically be included in the link header. For example:
link: <https://api.github.com/repositories/1300192/issues?per_page=2&page=2>; rel="next", <https://api.github.com/repositories/1300192/issues?per_page=2&page=7715>; rel="last"

Scripting with pagination
Instead of manually copying URLs from the link header, you can write a script to fetch multiple pages of results.
The following examples use JavaScript and GitHub's Octokit.js library. For more information about Octokit.js, see Getting started with the REST API and the Octokit.js README.
Example using the Octokit.js pagination method
To fetch paginated results with Octokit.js, you can use octokit.paginate(). octokit.paginate() will fetch the next page of results until it reaches the last page and then return all of the results as a single array. A few endpoints return paginated results as array in an object, as opposed to returning the paginated results as an array. octokit.paginate() always returns an array of items even if the raw result was an object.
For example, this script gets all of the issues from the octocat/Spoon-Knife repository. Although it requests 100 issues at a time, the function won't return until the last page of data is reached.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ });

const data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  per_page: 100,
  headers: {
    "X-GitHub-Api-Version": "2022-11-28",
  },
});

console.log(data)
import { Octokit } from "octokit";

const octokit = new Octokit({ });

const data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "octocat",
  repo: "Spoon-Knife",
  per_page: 100,
  headers: {
    "X-GitHub-Api-Version": "2022-11-28",
  },
});

console.log(data)

You can pass an optional map function to octokit.paginate() to end pagination before the last page is reached or to reduce memory usage by keeping only a subset of the response. You can also use octokit.paginate.iterator() to iterate through a single page at a time instead of requesting every page. For more information, see the Octokit.js documentation.
Example creating a pagination method
If you are using another language or library that doesn't have a pagination method, you can build your own pagination method. This example still uses the Octokit.js library to make requests, but does not rely on octokit.paginate().
The getPaginatedData function makes a request to an endpoint with octokit.request(). The data from the response is processed by parseData, which handles cases where no data is returned or cases where the data that is returned is an object instead of an array. The processed data is then appended to a list that contains all of the paginated data collected so far. If the response includes a link header and if the link header includes a link for the next page, then the function uses a RegEx pattern (nextPattern) to get the URL for the next page. The function then repeats the previous steps, now using this new URL. Once the link header no longer includes a link to the next page, all of the results are returned.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ });

async function getPaginatedData(url) {
  const nextPattern = /(?<=<)([\S]*)(?=>; rel="Next")/i;
  let pagesRemaining = true;
  let data = [];

  while (pagesRemaining) {
    const response = await octokit.request(`GET ${url}`, {
      per_page: 100,
      headers: {
        "X-GitHub-Api-Version":
          "2022-11-28",
      },
    });

    const parsedData = parseData(response.data)
    data = [...data, ...parsedData];

    const linkHeader = response.headers.link;

    pagesRemaining = linkHeader && linkHeader.includes(`rel=\"next\"`);

    if (pagesRemaining) {
      url = linkHeader.match(nextPattern)[0];
    }
  }

  return data;
}

function parseData(data) {
  // If the data is an array, return that
    if (Array.isArray(data)) {
      return data
    }

  // Some endpoints respond with 204 No Content instead of empty array
  //   when there is no data. In that case, return an empty array.
  if (!data) {
    return []
  }

  // Otherwise, the array of items that we want is in an object
  // Delete keys that don't include the array of items
  delete data.incomplete_results;
  delete data.repository_selection;
  delete data.total_count;
  // Pull out the array of items
  const namespaceKey = Object.keys(data)[0];
  data = data[namespaceKey];

  return data;
}

const data = await getPaginatedData("/repos/octocat/Spoon-Knife/issues");

console.log(data);
import { Octokit } from "octokit";

const octokit = new Octokit({ });

async function getPaginatedData(url) {
  const nextPattern = /(?<=<)([\S]*)(?=>; rel="Next")/i;
  let pagesRemaining = true;
  let data = [];

  while (pagesRemaining) {
    const response = await octokit.request(`GET ${url}`, {
      per_page: 100,
      headers: {
        "X-GitHub-Api-Version":
          "2022-11-28",
      },
    });

    const parsedData = parseData(response.data)
    data = [...data, ...parsedData];

    const linkHeader = response.headers.link;

    pagesRemaining = linkHeader && linkHeader.includes(`rel=\"next\"`);

    if (pagesRemaining) {
      url = linkHeader.match(nextPattern)[0];
    }
  }

  return data;
}

function parseData(data) {
  // If the data is an array, return that
    if (Array.isArray(data)) {
      return data
    }

  // Some endpoints respond with 204 No Content instead of empty array
  //   when there is no data. In that case, return an empty array.
  if (!data) {
    return []
  }

  // Otherwise, the array of items that we want is in an object
  // Delete keys that don't include the array of items
  delete data.incomplete_results;
  delete data.repository_selection;
  delete data.total_count;
  // Pull out the array of items
  const namespaceKey = Object.keys(data)[0];
  data = data[namespaceKey];

  return data;
}

const data = await getPaginatedData("/repos/octocat/Spoon-Knife/issues");

console.log(data);\n\n\n\nREST API/Using the REST API/LibrariesLibraries for the REST APIYou can use the official Octokit libraries and other third-party libraries to extend and simplify how you use the GitHub API.In this articleAbout librariesOfficial GitHub librariesThird-party librariesAbout libraries
You can use libraries to extend and simplify the way your application interacts with GitHub's API. Each library provides pre-built code for a specific programming language. After integrating a library into your project, you can use the pre-built code modules to interact with GitHub's API via a specific programming language.
GitHub maintains official Octokit libraries for some languages. There are also third-party libraries that you can use with GitHub's API, which are not maintained by GitHub.
Official GitHub libraries
GitHub maintains these official client libraries for the GitHub API. These repositories are open source, and community contributions are welcome.
For more information, see Scripting with the REST API and JavaScript and Scripting with the REST API and Ruby.

JavaScript: octokit.js
Ruby: octokit.rb
.NET: octokit.net
Terraform: terraform-provider-github

Third-party libraries
The following are examples of third-party libraries that you can use to interact with the GitHub API in various programming languages.
These third-party libraries are not maintained by GitHub. Libraries provided by third parties are governed by separate terms of service, privacy policy, and support documentation.
Clojure

Tentacles: clj-commons/tentacles

Dart

github.dart: SpinlockLabs/github.dart

Emacs Lisp

gh.el: sigma/gh.el

Go

go-github: google/go-github

Haskell

haskell-github: haskell-github/github

Java

GitHub API for Java, an object oriented representation of the GitHub API: hub4j/github-api
JCabi GitHub API, based on Java7 JSON API (JSR-353), simplifies tests with a runtime GitHub stub, and covers the entire API: github.jcabi.com (Personal Website)

JavaScript

NodeJS GitHub library: pksunkara/octonode
Github.js wrapper around the GitHub API: github-tools/github
Promise-Based CoffeeScript library for the Browser or NodeJS: philschatz/github-client

Julia

GitHub.jl: JuliaWeb/GitHub.jl

OCaml

ocaml-github: mirage/ocaml-github

Perl

Pithub: plu/Pithub
Net::GitHub: fayland/perl-net-github

PHP

PHP GitHub API: KnpLabs/php-github-api
GitHub Joomla! Package: joomla-framework/github-api
GitHub bridge for Laravel: GrahamCampbell/Laravel-GitHub

PowerShell

PowerShellForGitHub: microsoft/PowerShellForGitHub

Python

gidgethub: gidgethub/gidgethub
ghapi: fastai/ghapi
PyGithub: PyGithub/PyGithub
libsaas: duckboard/libsaas
github3.py: sigmavirus24/github3.py
agithub: mozilla/agithub
github-flask: github-flask (Official Website)
githubkit: yanyongyu/githubkit
octokit.py: khornberg/octokit.py

Ruby

GitHub API Gem: piotrmurach/github

Rust

Octocrab: XAMPPRocky/octocrab
Octocat: octocat-rs/octocat-rs

Scala

Github4s: 47deg/github4s

Shell

ok.sh: whiteinge/ok.sh\n\n\n\nREST API/Using the REST API/Best practicesBest practices for using the REST APIFollow these best practices when using GitHub's API.In this articleAvoid pollingMake authenticated requestsAvoid concurrent requestsPause between mutative requestsHandle rate limit errors appropriatelyFollow redirectsDo not manually parse URLsUse conditional requests if appropriateDo not ignore errorsFurther readingAvoid polling
You should subscribe to webhook events instead of polling the API for data. This will help your integration stay within the API rate limit. For more information, see Webhooks documentation.
Make authenticated requests
Authenticated requests have a higher primary rate limit than unauthenticated requests. To avoid exceeding the rate limit, you should make authenticated requests. For more information, see Rate limits for the REST API.
Avoid concurrent requests
To avoid exceeding secondary rate limits, you should make requests serially instead of concurrently. To achieve this, you can implement a queue system for requests.
Pause between mutative requests
If you are making a large number of POST, PATCH, PUT, or DELETE requests, wait at least one second between each request. This will help you avoid secondary rate limits.
Handle rate limit errors appropriately
If you receive a rate limit error, you should stop making requests temporarily according to these guidelines:

If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed.
If the x-ratelimit-remaining header is 0, you should not make another request until after the time specified by the x-ratelimit-reset header. The x-ratelimit-reset header is in UTC epoch seconds.
Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.

Continuing to make requests while you are rate limited may result in the banning of your integration.
Follow redirects
The GitHub REST API uses HTTP redirection where appropriate. You should assume that any
request may result in a redirection. Receiving an HTTP redirection is not an error, and you should follow the redirect.
A 301 status code indicates permanent redirection. You should repeat your request to the URL specified by the location header. Additionally, you should update your code to use this URL for future requests.
A 302 or 307 status code indicates temporary redirection. You should repeat your request to the URL specified by the location header. However, you should not update your code to use this URL for future requests.
Other redirection status codes may be used in accordance with HTTP specifications.
Do not manually parse URLs
Many API endpoints return URL values for fields in the response body. You should not try to parse these URLs or to predict the structure of future URLs. This can cause your integration to break if GitHub changes the structure of the URL in the future. Instead, you should look for a field that contains the information that you need. For example, the endpoint to create an issue returns an html_url field with a value like https://github.com/octocat/Hello-World/issues/1347 and a number field with a value like 1347. If you need to know the number of the issue, use the number field instead of parsing the html_url field.
Similarly, you should not try to manually construct pagination queries. Instead, you should use the link headers to determine what pages of results you can request. For more information, see Using pagination in the REST API.
Use conditional requests if appropriate
Most endpoints return an etag header, and many endpoints return a last-modified header. You can use the values of these headers to make conditional GET requests. If the response has not changed, you will receive a 304 Not Modified response. Making a conditional request does not count against your primary rate limit if a 304 response is returned and the request was made while correctly authorized with an Authorization header.
For example, if a previous request returned an etag header value of 644b5b0155e6404a9cc4bd9d8b1ae730, you can use the if-none-match header in a future request:
curl -H "Authorization: Bearer YOUR-TOKEN" https://api.github.com/meta --include --header 'if-none-match: "644b5b0155e6404a9cc4bd9d8b1ae730"'

For example, if a previous request returned a last-modified header value of Wed, 25 Oct 2023 19:17:59 GMT, you can use the if-modified-since header in a future request:
curl -H "Authorization: Bearer YOUR-TOKEN" https://api.github.com/repos/github/docs --include --header 'if-modified-since: Wed, 25 Oct 2023 19:17:59 GMT'

Conditional requests for unsafe methods, such as POST, PUT, PATCH, and DELETE are not supported unless otherwise noted in the documentation for a specific endpoint.
Do not ignore errors
You should not ignore repeated 4xx and 5xx error codes. Instead, you should ensure that you are correctly interacting with the API. For example, if an endpoint requests a string and you are passing it a numeric value, you will receive a validation error. Similarly, attempting to access an unauthorized or nonexistent endpoint will result in a 4xx error.
Intentionally ignoring repeated validation errors may result in the suspension of your app for abuse.
Further reading

Best practices for using webhooks
Best practices for creating a GitHub App\n\n\n\nREST API/Using the REST API/TroubleshootingTroubleshooting the REST APILearn how to diagnose and resolve common problems for the REST API.In this articleRate limit errors404 Not Found for an existing resourceMissing resultsRequires authentication when using basic authenticationTimeoutsResource not accessibleProblems parsing JSONBody should be a JSON objectInvalid requestValidation FailedNot a supported versionUser agent requiredOther errorsFurther readingRate limit errors
GitHub enforces rate limits to ensure that the API stays available for all users. For more information, see Rate limits for the REST API.
If you exceed your primary rate limit, you will receive a 403 Forbidden or 429 Too Many Requests  response, and the x-ratelimit-remaining header will be 0. If you exceed a secondary rate limit, you will receive a 403 Forbidden or 429 Too Many Requests  response and an error message that indicates that you exceeded a secondary rate limit.
If you receive a rate limit error, you should stop making requests temporarily according to these guidelines:

If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed.
If the x-ratelimit-remaining header is 0, you should not make another request until after the time specified by the x-ratelimit-reset header. The x-ratelimit-reset header is in UTC epoch seconds.
Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.

Continuing to make requests while you are rate limited may result in the banning of your integration.
For more information about how to avoid exceeding the rate limits, see Best practices for using the REST API.
404 Not Found for an existing resource
If you make a request to access a private resource and your request isn't properly authenticated, you will receive a 404 Not Found response. GitHub uses a 404 Not Found response instead of a 403 Forbidden response to avoid confirming the existence of private repositories.
If you get a 404 Not Found response when you know that the resource that you are requesting exists, you should check your authentication. For example:

If you are using a personal access token (classic), you should ensure that:

The token has the scopes that are required to use the endpoint. For more information, see Scopes for OAuth apps and Managing your personal access tokens.
The owner of the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a fine-grained personal access token, you should ensure that:

The token has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The resource owner that was specified for the token matches the owner of the resource that the endpoint will affect. For more information, see Managing your personal access tokens.
The token has access to any private repositories that the endpoint will affect. For more information, see Managing your personal access tokens.
The owner of the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a GitHub App installation access token, you should ensure that:

The GitHub App has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The endpoint is only affecting resources owned by the account where the GitHub App is installed.
The GitHub App has access to any repositories that the endpoint will affect.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using a GitHub App user access token, you should ensure that:

The GitHub App has the permissions that are required to use the endpoint. For more information about the required permissions, see the documentation for the endpoint.
The user that authorized the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The GitHub App has access to any repositories that the endpoint will affect.
The user has access to any repositories that the endpoint will affect.
The user has approved any updated permissions for your GitHub App. For more information, see Approving updated permissions for a GitHub App.


If you are using an OAuth app user access token, you should ensure that:

The token has the scopes that are required to use the endpoint. For more information, see Scopes for OAuth apps.
The user that authorized the token has any permissions that are required to use the endpoint. For example, if an endpoint can only be used by organization owners, only users that are owners of the affected organization can use the endpoint.
The organization has not blocked OAuth app access, if you are using an endpoint that will affect resources owned by an organization. App owners cannot see whether their app is blocked, but they can instruct users of the app to check this. For more information, see About OAuth app access restrictions.
The token has not been expired or revoked. For more information, see Token expiration and revocation.


If you are using GITHUB_TOKEN in a GitHub Actions workflow, you should ensure that:

The endpoint is only affecting resources owned by the repository where the workflow is running. If you need to access resources outside of that repository, such as resources owned by an organization or resources owned by another repository, you should use a personal access token or an access token for a GitHub App.



For more information about authentication, see Authenticating to the REST API.
You should also check for typos in your URL. For example, adding a trailing slash to the endpoint will result in a 404 Not Found. You can refer to the reference documentation for the endpoint to confirm that you have the correct URL.
Additionally, any path parameters must be URL encoded. For example, any slashes in the parameter value must be replaced with %2F. If you don't properly encode any slashes in the parameter name, the endpoint URL will be misinterpreted.
Missing results
Most endpoints that return a list of resources support pagination. For most of these endpoints, only the first 30 resources are returned by default. In order to see all of the resources, you need to paginate through the results. For more information, see Using pagination in the REST API.
If you are using pagination correctly and still do not see all of the results that you expect, you should confirm that the authentication credentials that you used have access to all of the expected resources. For example, if you are using a GitHub App installation access token, if the installation was only granted access to a subset of repositories in an organization, any request for all repositories in that organization will return only the repositories that the app installation can access.
Requires authentication when using basic authentication
Basic authentication with your username and password is not supported. Instead, you should use a personal access token or an access token for a GitHub App or OAuth app. For more information, see Authenticating to the REST API.
Timeouts
If GitHub takes more than 10 seconds to process an API request, GitHub will terminate the request and you will receive a timeout response and a "Server Error" message.
GitHub reserves the right to change the timeout window to protect the speed and reliability of the API.
You can check the status of the REST API at githubstatus.com to determine whether the timeout is due to a problem with the API. You can also try to simplify your request or try your request later. For example, if you are requesting 100 items on a page, you can try requesting fewer items.
Resource not accessible
If you are using a GitHub App or fine-grained personal access token and you receive a "Resource not accessible by integration" or "Resource not accessible by personal access token" error, then your token has insufficient permissions. For more information about the required permissions, see the documentation for the endpoint.
You can use the X-Accepted-GitHub-Permissions header to identify the permissions that are required to access the REST API endpoint.
The value of the X-Accepted-GitHub-Permissions header is a comma separated list of the permissions that are required to use the endpoint. Occasionally, you can choose from multiple permission sets. In these cases, multiple comma-separated lists will be separated by a semicolon.
For example:

X-Accepted-GitHub-Permissions: contents=read means that your GitHub App or fine-grained personal access token needs read access to the contents permission.
X-Accepted-GitHub-Permissions: pull_requests=write,contents=read means that your GitHub App or fine-grained personal access token needs write access to the pull request permission and read access to the contents permission.
X-Accepted-GitHub-Permissions: pull_requests=read,contents=read; issues=read,contents=read means that your GitHub App or fine-grained personal access token needs either read access to the pull request permission and read access to the contents permission, or read access to the issues permission and read access to the contents permission.

Problems parsing JSON
If you send invalid JSON in the request body, you may receive a 400 Bad Request response and a "Problems parsing JSON" error message. You can use a linter or JSON validator to help you identify errors in your JSON.
Body should be a JSON object
If the endpoint expects a JSON object and you do not format your request body as a JSON object, you may receive a 400 Bad Request response and a "Body should be a JSON object" error message.
Invalid request
If you omit required parameters or you use the wrong type for a parameter, you may receive a 422 Unprocessable Entity response and an "Invalid request" error message. For example, you will get this error if you specify a parameter value as an array but the endpoint is expecting a string. You can refer to the reference documentation for the endpoint to verify that you are using the correct parameter types and that you are including all of the required parameters.
Validation Failed
If your request could not be processed, you may receive a 422 Unprocessable Entity response and a "Validation Failed" error message. The response body will include an errors property, which includes a code property to help you diagnose the problem.

































CodeDescriptionmissingA resource does not exist.missing_fieldA parameter that was required was not specified. Review the documentation for the endpoint to see what parameters are required.invalidThe formatting of a parameter is invalid. Review the endpoint documentation for more specific information.already_existsAnother resource has the same value as one of your parameters. This can happen in resources that must have some unique key (such as label names).unprocessableThe parameters that were provided were invalid.customRefer to the message property to diagnose the error.
Not a supported version
You should use the X-GitHub-Api-Version header to specify an API version. For example:
curl --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/zen

If you specify a version that does not exist, you will receive a 400 Bad Request error and a message about the version not being supported.
For more information, see API Versions.
User agent required
Requests without a valid User-Agent header will be rejected. You should use your username or the name of your application for the User-Agent value.
curl sends a valid User-Agent header by default.
Other errors
If you observe an error that is not addressed here, you should refer to the error message that the API gives you. Most error messages will provide a clue about what is wrong and a link to relevant documentation.
If you observe unexpected failures, you can use githubstatus.com or the GitHub status API to check for incidents affecting the API.
Further reading

Best practices for using the REST API
Troubleshooting webhooks
Best practices for creating a GitHub App\n\n\n\nREST API/Using the REST API/TimezonesTimezones and the REST APISome REST API endpoints allow you to specify timezone information with your request.Some requests that create new data, such as creating a new commit, allow you to provide timezone information when specifying or generating timestamps.
Note that these rules apply only to data passed to the API, not to data returned by the API. Timestamps returned by the API are in UTC time, ISO 8601 format.
Determining the timezone for a request
To determine timezone information for applicable API calls, we apply these rules in order of priority:

Explicitly providing an ISO 8601 timestamp with timezone information
Using the Time-Zone header
Using the last known timezone for the user
Defaulting to UTC without other timezone information

Explicitly providing an ISO 8601 timestamp with timezone information
For API calls that allow for a timestamp to be specified, we use that exact timestamp. These timestamps look something like 2014-02-27T15:05:06+01:00.
An example of this is the API to manage commits. For more information, see REST API endpoints for Git commits.
Using the Time-Zone header
It is possible to supply a Time-Zone header, which defines a timezone according to the list of names from the Olson database.
curl -H "Time-Zone: Europe/Amsterdam" -X POST https://api.github.com/repos/github-linguist/linguist/contents/new_file.md

This means that we generate a timestamp for the moment your API call is made, in the timezone this header defines.
For example, the API to manage contents generates a git commit for each addition or change, and it uses the current time as the timestamp. For more information, see REST API endpoints for repository contents. The Time-Zone header will determine the timezone used for generating that current timestamp.
Using the last known timezone for the user
If no Time-Zone header is specified and you make an authenticated call to the API, we use the last known timezone for the authenticated user. The last known timezone is updated whenever you browse the GitHub website.
Defaulting to UTC without other timezone information
If the steps above don't result in any information, we use UTC as the timezone.\n\n\n\nREST API/Using the REST API/CORS and JSONPUsing CORS and JSONP to make cross-origin requestsYou can make API requests across domains using cross-origin resource sharing (CORS) and JSONP callbacks.In this articleAbout cross-origin requestsCross-origin resource sharing (CORS)JSON-P callbacksAbout cross-origin requests
A cross-origin request is a request made to a different domain than the one originating the request. For security reasons, most web browsers block cross-origin requests. However, you can use cross-origin resource sharing (CORS) and JSONP callbacks to make cross-origin requests.
Cross-origin resource sharing (CORS)
The REST API supports cross-origin resource sharing (CORS) for AJAX requests from any origin. For more information, see the CORS W3C Recommendation and the HTML 5 Security Guide
Here's a sample request sent from a browser hitting
http://example.com:
$ curl -I https://api.github.com -H "Origin: http://example.com"
HTTP/2 302
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval

This is what the CORS preflight request looks like:
$ curl -I https://api.github.com -H "Origin: http://example.com" -X OPTIONS
HTTP/2 204
Access-Control-Allow-Origin: *
Access-Control-Allow-Headers: Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-Requested-With
Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE
Access-Control-Expose-Headers: ETag, Link, x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Access-Control-Max-Age: 86400

JSON-P callbacks
You can send a ?callback parameter to any GET call to have the results
wrapped in a JSON function. This is typically used when browsers want to embed GitHub content in web pages and avoid cross-domain problems. The response includes the same data output as the regular API, plus the relevant HTTP Header information.
$ curl https://api.github.com?callback=foo

> /**/foo({
>   "meta": {
>     "status": 200,
>     "x-ratelimit-limit": "5000",
>     "x-ratelimit-remaining": "4966",
>     "x-ratelimit-reset": "1372700873",
>     "Link": [ // pagination headers and other links
>       ["https://api.github.com?page=2", {"rel": "next"}]
>     ]
>   },
>   "data": {
>     // the data
>   }
> })

You can write a JavaScript handler to process the callback. Here's a minimal example you can try:
<html>
<head>
<script type="text/javascript">
function foo(response) {
  var meta = response.meta;
  var data = response.data;
  console.log(meta);
  console.log(data);
}

var script = document.createElement('script');
script.src = 'https://api.github.com?callback=foo';

document.getElementsByTagName('head')[0].appendChild(script);
</script>
</head>

<body>
  <p>Open up your browser's console.</p>
</body>
</html>

All of the headers have the same string value as the HTTP Headers, except Link. Link headers are pre-parsed for you and come through as an array of [url, options] tuples.
For example, a link that looks like this:
Link: <url1>; rel="next", <url2>; rel="foo"; bar="baz"

will look like this in the Callback output:
{
  "Link": [
    [
      "url1",
      {
        "rel": "next"
      }
    ],
    [
      "url2",
      {
        "rel": "foo",
        "bar": "baz"
      }
    ]
  ]
}\n\n\n\nREST API/Using the REST API/Issue event typesIssue event typesFor the REST APIs for issue events and timeline events, learn about each event type, the triggering action on GitHub, and each event's unique properties.In this articleIssue event object common propertiesassignedautomatic_base_change_failedautomatic_base_change_succeededbase_ref_changedclosedcommentedcommittedconnectedconvert_to_draftconverted_to_discussioncross-referenceddemilestoneddeployeddeployment_environment_changeddisconnectedhead_ref_deletedhead_ref_restoredhead_ref_force_pushedlabeledlockedmentionedmarked_as_duplicatemergedmilestonedpinnedready_for_reviewreferencedrenamedreopenedreview_dismissedreview_requestedreview_request_removedreviewedsubscribedtransferredunassignedunlabeledunlockedunmarked_as_duplicateunpinnedunsubscribeduser_blockedIssue events are triggered by activity in issues and pull requests and are available in the REST API for Issue events and Timeline events. Each event type specifies whether the event is available in the REST API for issue events or timeline events.
GitHub's REST API considers every pull request to be an issue, but not every issue is a pull request. For this reason, the Issue Events and Timeline Events endpoints may return both issues and pull requests in the response. Pull requests have a pull_request property in the issue object. Because pull requests are issues, issue and pull request numbers do not overlap in a repository. For example, if you open your first issue in a repository, the number will be 1. If you then open a pull request, the number will be 2. Each event type specifies if the event occurs in pull request, issues, or both.
Issue event object common properties
Issue events all have the same object structure, except events that are only available in the REST API for timeline events. Some events also include additional properties that provide more context about the event resources. Refer to the specific event for details about any properties that differ from this object format.


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
assigned
The issue or pull request was assigned to a user.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for assigned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.assigneeobjectThe person assigned to this issue.assignerobjectThe person who performed the assignment for this issue. This field is available in the REST API for issue events but not the REST API for timeline events.
automatic_base_change_failed
GitHub unsuccessfully attempted to automatically change the base branch of the pull request.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for automatic_base_change_failed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
automatic_base_change_succeeded
GitHub successfully attempted to automatically change the base branch of the pull request.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for automatic_base_change_succeeded


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
base_ref_changed
The base reference branch of the pull request changed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for base_ref_changed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
closed
The issue or pull request was closed. When the commit_id is present, it identifies the commit that closed the issue using "closes / fixes" syntax. For more information about the syntax, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for closed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
commented
A comment was added to the issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for commented
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.






































































NameTypeDescriptionurlstringThe REST API URL to retrieve the issue comment.html_urlstringThe HTML URL of the issue comment.issue_urlstringThe HTML URL of the issue.idintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.userobjectThe person who commented on the issue.created_atstringThe timestamp indicating when the comment was added.updated_atstringThe timestamp indicating when the comment was updated or created, if the comment is never updated.author_associationstringThe permissions the user has in the issue's repository. For example, the value would be "OWNER" if the owner of repository created a comment.bodystringThe comment body text.eventstringThe event value is "commented".actorobjectThe person who generated the event.
committed
A commit was added to the pull request's HEAD branch.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for committed
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.

































































NameTypeDescriptionshastringThe SHA of the commit in the pull request.node_idstringThe Global Node ID of the event.urlstringThe REST API URL to retrieve the commit.html_urlstringThe HTML URL of the commit.authorobjectThe person who authored the commit.committerobjectThe person who committed the commit on behalf of the author.treeobjectThe Git tree of the commit.messagestringThe commit message.parentsarray of objectsA list of parent commits.verificationobjectThe result of verifying the commit's signature. For more information, see REST API endpoints for Git commits.eventstringThe event value is "committed".
connected
The issue or pull request was linked to another issue or pull request. For more information, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for connected


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
convert_to_draft
The pull request was converted to draft mode.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for convert_to_draft


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
converted_to_discussion
The issue was closed and converted to a discussion.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for converted_to_discussion


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
cross-referenced
The issue or pull request was referenced from another issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for cross-referenced
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.













































NameTypeDescriptionactorobjectThe person who generated the event.created_atstringThe timestamp indicating when the cross-reference was added.updated_atstringThe timestamp indicating when the cross-reference was updated or created, if the cross-reference is never updated.sourceobjectThe issue or pull request that added a cross-reference.source[type]stringThis value will always be "issue" because pull requests are of type issue. Only cross-reference events triggered by issues or pull requests are returned in the REST API for timeline events. To determine if the issue that triggered the event is a pull request, you can check if the source[issue][pull_request] object exists.source[issue]objectThe issue object that added the cross-reference.eventstringThe event value is "cross-referenced".
demilestoned
The issue or pull request was removed from a milestone.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for demilestoned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.milestoneobjectThe milestone object.milestone[title]stringThe title of the milestone.
deployed
The pull request was deployed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for deployed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
deployment_environment_changed
The pull request deployment environment was changed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for deployment_environment_changed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
disconnected
The issue or pull request was unlinked from another issue or pull request. For more information, see Linking a pull request to an issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for disconnected


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
head_ref_deleted
The pull request's HEAD branch was deleted.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for head_ref_deleted


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
head_ref_restored
The pull request's HEAD branch was restored to the last known commit.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

head_ref_force_pushed
The pull request's HEAD branch was force pushed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for head_ref_force_pushed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
labeled
A label was added to the issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for labeled

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.labelobjectThe label added or removed from the issuelabel[name]stringThe name of the label.label[color]stringThe hex color code.
locked
The issue or pull request was locked.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for locked























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.lock_reasonstringThe reason an issue or pull request conversation was locked, if one was provided.
mentioned
The actor was @mentioned in an issue or pull request body.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for mentioned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
marked_as_duplicate
A user with write permissions marked an issue as a duplicate of another issue, or a pull request as a duplicate of another pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for marked_as_duplicate


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
merged
The pull request was merged. The commit_id attribute is the SHA1 of the HEAD commit that was merged. The commit_repository is always the same as the main repository.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for merged


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
milestoned
The issue or pull request was added to a milestone.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for milestoned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.milestoneobjectThe milestone object.milestone[title]stringThe title of the milestone.
pinned
The issue was pinned.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for pinned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
ready_for_review
A draft pull request was marked as ready for review.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for ready_for_review


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
referenced
The issue was referenced from a commit message. The commit_id attribute is the commit SHA1 of where that happened and the commit_repository is where that commit was pushed.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for referenced


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
renamed
The issue or pull request title was changed.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for renamed

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.renameobjectThe name details.rename[from]stringThe previous name.rename[to]stringThe new name.
reopened
The issue or pull request was reopened.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for reopened


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
review_dismissed
The pull request review was dismissed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_dismissed











































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.dismissed_reviewobjectThe information for the dismissed review.dismissed_review[state]stringThe state the pull request was in when it was dismissed. Can be one of: commented, approved, or changes_requested.dismissed_review[review_id]stringThe unique identifier of the pull request's review.dismissed_review[dismissal_message]stringThe message the user included when dismissing the review.dismissed_review[dismissal_commit_id]stringThe unique identifier of the commit that dismissed the review if one exists.
review_requested
A pull request review was requested.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_requested




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.requested_reviewerobjectThe person requested to review the pull request.review_requesterobjectThe person who requested a review.
review_request_removed
A pull request review request was removed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for review_request_removed




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.requested_reviewerobjectThe person requested to review the pull request.review_requesterobjectThe person who requested a review.
reviewed
The pull request was reviewed.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsPull requests

Properties for reviewed
This events properties do not use the same structure as the issue event object common properties. The following properties are returned for this event.






































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.userobjectThe person who commented on the issue.bodystringThe review summary text.commit_idstringThe SHA of the latest commit in the pull request at the time of the review.submitted_atstringThe timestamp indicating when the review was submitted.statestringThe state of the submitted review. Can be one of: commented, changes_requested, approved or dismissed.html_urlstringThe HTML URL of the review.pull_request_urlstringThe REST API URL to retrieve the pull request.author_associationstringThe permissions the user has in the issue's repository. For example, the value would be "OWNER" if the owner of repository created a comment._linksobjectThe html_url and pull_request_url.eventstringThe event value is "reviewed".
subscribed
Someone subscribed to receive notifications for an issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for subscribed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
transferred
The issue was transferred to another repository.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for transferred


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unassigned
A user was unassigned from the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unassigned




























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.assigneeobjectThe person unassigned from this issue.assignerobjectThe person who performed the unassignment for this issue. This field is available in the REST API for issue events but not the REST API for timeline events.
unlabeled
A label was removed from the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unlabeled

































































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.labelobjectThe label added or removed from the issuelabel[name]stringThe name of the label.label[color]stringThe hex color code.
unlocked
The issue was unlocked.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unlocked























































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.lock_reasonstringThe reason an issue or pull request conversation was locked, if one was provided.
unmarked_as_duplicate
An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate, or a pull request that a user had previously marked as a duplicate of another pull request is no longer considered a duplicate.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unmarked_as_duplicate


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unpinned
The issue was unpinned.
This event is available for the following issue types.
















REST API for issue eventsREST API for timeline eventsIssues

Properties for unpinned


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
unsubscribed
Someone unsubscribed from receiving notifications for an issue or pull request.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for unsubscribed


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.
user_blocked
An organization owner blocked a user from the organization. This was done through one of the blocked user's comments on the issue.
This event is available for the following issue types.





















REST API for issue eventsREST API for timeline eventsIssuesPull requests

Properties for user_blocked


















































NameTypeDescriptionidintegerThe unique identifier of the event.node_idstringThe Global Node ID of the event.urlstringThe REST API URL for fetching the event.actorobjectThe person who generated the event.eventstringIdentifies the actual type of event that occurred.commit_idstringThe SHA of the commit that referenced this issue.commit_urlstringThe GitHub REST API link to the commit that referenced this issue.created_atstringThe timestamp indicating when the event occurred.\n\n\n\nREST API/Using the REST API/GitHub event typesGitHub event typesFor the GitHub Events API, learn about each event type, the triggering action on GitHub, and each event's unique properties.In this articleEvent object common propertiesCommitCommentEventCreateEventDeleteEventForkEventGollumEventIssueCommentEventIssuesEventMemberEventPublicEventPullRequestEventPullRequestReviewEventPullRequestReviewCommentEventPullRequestReviewThreadEventPushEventReleaseEventSponsorshipEventWatchEventThe Events API can return different types of events triggered by activity on GitHub. Each event response contains shared properties, but has a unique payload object determined by its event type. The Event object common properties describes the properties shared by all events, and each event type describes the payload properties that are unique to the specific event.
Event object common properties
The event objects returned from the Events API endpoints have the same structure.
























































































































Event API attribute nameTypeDescriptionidintegerUnique identifier for the event.typestringThe type of event. Events uses PascalCase for the name.actorobjectThe user that triggered the event.actor.idintegerThe unique identifier for the actor.actor.loginstringThe username of the actor.actor.display_loginstringThe specific display format of the username.actor.gravatar_idstringThe unique identifier of the Gravatar profile for the actor.actor.urlstringThe REST API URL used to retrieve the user object, which includes additional user information.actor.avatar_urlstringThe URL of the actor's profile image.repoobjectThe repository object where the event occurred.repo.idintegerThe unique identifier of the repository.repo.namestringThe name of the repository, which includes the owner and repository name. For example, octocat/hello-world is the name of the hello-world repository owned by the octocat personal account.repo.urlstringThe REST API URL used to retrieve the repository object, which includes additional repository information.payloadobjectThe event payload object is unique to the event type. See the event type below for the event API payload object.publicbooleanWhether the event is visible to all users.created_atstringThe date and time when the event was triggered. It is formatted according to ISO 8601.orgobjectThe organization that was chosen by the actor to perform action that triggers the event.The property appears in the event object only if it is applicable.org.idintegerThe unique identifier for the organization.org.loginstringThe name of the organization.org.gravatar_idstringThe unique identifier of the Gravatar profile for the organization.org.urlstringThe REST API URL used to retrieve the organization object, which includes additional organization information.org.avatar_urlstringThe URL of the organization's profile image.
Example WatchEvent event object
This example shows the format of the WatchEvent response when using the Events API.
HTTP/2 200
Link: <https://api.github.com/resource?page=2>; rel="next",
      <https://api.github.com/resource?page=5>; rel="last"

[
  {
    "type": "WatchEvent",
    "public": false,
    "payload": {
    },
    "repo": {
      "id": 3,
      "name": "octocat/Hello-World",
      "url": "https://api.github.com/repos/octocat/Hello-World"
    },
    "actor": {
      "id": 1,
      "login": "octocat",
      "gravatar_id": "",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "url": "https://api.github.com/users/octocat"
    },
    "org": {
      "id": 1,
      "login": "github",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/github",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif"
    },
    "created_at": "2011-09-06T17:26:27Z",
    "id": "12345"
  }
]

CommitCommentEvent
A commit comment is created. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for commit comments.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for CommitCommentEvent




















KeyTypeDescriptionactionstringThe action performed. Can be created.commentobjectThe commit comment resource.
CreateEvent
A Git branch or tag is created. For more information, see REST API endpoints for Git database.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for CreateEvent



































KeyTypeDescriptionrefstringThe git ref resource, or null if ref_type is repository.ref_typestringThe type of Git ref object created in the repository. Can be either branch, tag, or repository.master_branchstringThe name of the repository's default branch (usually main).descriptionstringThe repository's current description.pusher_typestringCan be either user or a deploy key.
DeleteEvent
A Git branch or tag is deleted. For more information, see the REST API endpoints for Git database REST API.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for DeleteEvent




















KeyTypeDescriptionrefstringThe git ref resource.ref_typestringThe type of Git ref object deleted in the repository. Can be either branch or tag.
ForkEvent
A user forks a repository. For more information, see REST API endpoints for repositories.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for ForkEvent















KeyTypeDescriptionforkeeobjectThe created repository resource.
GollumEvent
A wiki page is created or updated. For more information, see About wikis.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for GollumEvent








































KeyTypeDescriptionpagesarrayThe pages that were updated.pages[][page_name]stringThe name of the page.pages[][title]stringThe current page title.pages[][action]stringThe action that was performed on the page. Can be created or edited.pages[][sha]stringThe latest commit SHA of the page.pages[][html_url]stringPoints to the HTML wiki page.
IssueCommentEvent
Activity related to an issue or pull request comment. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for issues.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for IssueCommentEvent



































KeyTypeDescriptionactionstringThe action that was performed on the comment. Can be one of created, edited, or deleted.changesobjectThe changes to the comment if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.issueobjectThe issue the comment belongs to.commentobjectThe comment itself.
IssuesEvent
Activity related to an issue. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for issues.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for IssuesEvent













































KeyTypeDescriptionactionstringThe action that was performed. Can be one of opened, edited, closed, reopened, assigned, unassigned, labeled, or unlabeled.issueobjectThe issue itself.changesobjectThe changes to the issue if the action was edited.changes[title][from]stringThe previous version of the title if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.assigneeobjectThe optional user who was assigned or unassigned from the issue.labelobjectThe optional label that was added or removed from the issue.
MemberEvent
Activity related to repository collaborators. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for collaborators.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for MemberEvent






























KeyTypeDescriptionactionstringThe action that was performed. Can be added to indicate a user accepted an invitation to a repository.memberobjectThe user that was added.changesobjectThe changes to the collaborator permissions if the action was edited.changes[old_permission][from]stringThe previous permissions of the collaborator if the action was edited.
PublicEvent
When a private repository is made public.
Event payload object for PublicEvent
This event returns an empty payload object.
PullRequestEvent
Activity related to pull requests. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestEvent













































KeyTypeDescriptionactionstringThe action that was performed. Can be one of opened, edited, closed, reopened, assigned, unassigned, review_requested, review_request_removed, labeled, unlabeled, and synchronize.numberintegerThe pull request number.changesobjectThe changes to the comment if the action was edited.changes[title][from]stringThe previous version of the title if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.pull_requestobjectThe pull request itself.reasonstringThe reason the pull request was removed from a merge queue if the action was dequeued.
PullRequestReviewEvent
Activity related to pull request reviews. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewEvent

























KeyTypeDescriptionactionstringThe action that was performed. Can be created.pull_requestobjectThe pull request the review pertains to.reviewobjectThe review that was affected.
PullRequestReviewCommentEvent
Activity related to pull request review comments in the pull request's unified diff. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for pull requests.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewCommentEvent



































KeyTypeDescriptionactionstringThe action that was performed on the comment. Can be created.changesobjectThe changes to the comment if the action was edited.changes[body][from]stringThe previous version of the body if the action was edited.pull_requestobjectThe pull request the comment belongs to.commentobjectThe comment itself.
PullRequestReviewThreadEvent
Activity related to a comment thread on a pull request being marked as resolved or unresolved. The type of activity is specified in the action property of the payload object.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PullRequestReviewThreadEvent

























KeyTypeDescriptionactionstringThe action that was performed. Can be one of:resolved - A comment thread on a pull request was marked as resolved.unresolved - A previously resolved comment thread on a pull request was marked as unresolved.pull_requestobjectThe pull request the thread pertains to.threadobjectThe thread that was affected.
PushEvent
One or more commits are pushed to a repository branch or tag.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for PushEvent
















































































KeyTypeDescriptionpush_idintegerUnique identifier for the push.sizeintegerThe number of commits in the push.distinct_sizeintegerThe number of distinct commits in the push.refstringThe full git ref that was pushed. Example: refs/heads/main.headstringThe SHA of the most recent commit on ref after the push.beforestringThe SHA of the most recent commit on ref before the push.commitsarrayAn array of commit objects describing the pushed commits. (The array includes a maximum of 20 commits. If necessary, you can use the Commits API to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries.)commits[][sha]stringThe SHA of the commit.commits[][message]stringThe commit message.commits[][author]objectThe git author of the commit.commits[][author][name]stringThe git author's name.commits[][author][email]stringThe git author's email address.commits[][url]urlURL that points to the commit API resource.commits[][distinct]booleanWhether this commit is distinct from any that have been pushed before.
ReleaseEvent
Activity related to a release. The type of activity is specified in the action property of the payload object. For more information, see the REST API endpoints for releases and release assets REST API.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for ReleaseEvent






























KeyTypeDescriptionactionstringThe action that was performed. Can be published.changes[body][from]stringThe previous version of the body if the action was edited.changes[name][from]stringThe previous version of the name if the action was edited.releaseobjectThe release object.
SponsorshipEvent
Activity related to a sponsorship listing. The type of activity is specified in the action property of the payload object. For more information, see About GitHub Sponsors.
Event payload object for SponsorshipEvent






























KeyTypeDescriptionactionstringThe action that was performed. This can be created.effective_datestringThe pending_cancellation and pending_tier_change event types will include the date the cancellation or tier change will take effect.changes[tier][from]objectThe tier_changed and pending_tier_change will include the original tier before the change or pending change. For more information, see the pending tier change payload.changes[privacy_level][from]stringThe edited event types include the details about the change when someone edits a sponsorship to change the privacy.
WatchEvent
When someone stars a repository. The type of activity is specified in the action property of the payload object. For more information, see REST API endpoints for activity.
The event object includes properties that are common for all events. Each event object includes a payload property and the value is unique to each event type. The payload object for this event is described below.
Event payload object for WatchEvent















KeyTypeDescriptionactionstringThe action that was performed. Currently, can only be started.\n\n\n\nREST API/Authentication/AuthenticatingAuthenticating to the REST APIYou can authenticate to the REST API to access more endpoints and have a higher rate limit.In this articleAbout authenticationAuthenticating with a personal access tokenAuthenticating with a token generated by an appAuthenticating in a GitHub Actions workflowAuthenticating with username and passwordFurther readingAbout authentication
Many REST API endpoints require authentication or return additional information if you are authenticated. Additionally, you can make more requests per hour when you are authenticated.
To authenticate your request, you will need to provide an authentication token with the required scopes or permissions. There a few different ways to get a token: You can create a personal access token, generate a token with a GitHub App, or use the built-in GITHUB_TOKEN in a GitHub Actions workflow.
After creating a token, you can authenticate your request by sending the token in the Authorization header of your request. For example, in the following request, replace YOUR-TOKEN with a reference to your token:
curl --request GET \
--url "https://api.github.com/octocat" \
--header "Authorization: Bearer YOUR-TOKEN" \
--header "X-GitHub-Api-Version: 2022-11-28"

Note

In most cases, you can use Authorization: Bearer or Authorization: token to pass a token. However, if you are passing a JSON web token (JWT), you must use Authorization: Bearer.

Failed login limit
If you try to use a REST API endpoint without a token or with a token that has insufficient permissions, you will receive a 404 Not Found or 403 Forbidden response. Authenticating with invalid credentials will initially return a 401 Unauthorized response.
After detecting several requests with invalid credentials within a short period, the API will temporarily reject all authentication attempts for that user (including ones with valid credentials) with a 403 Forbidden response. For more information, see Rate limits for the REST API.
Authenticating with a personal access token
If you want to use the GitHub REST API for personal use, you can create a personal access token. If possible, GitHub recommends that you use a fine-grained personal access token instead of a personal access token (classic). For more information about creating a personal access token, see Managing your personal access tokens.
If you are using a fine-grained personal access token, your fine-grained personal access token requires specific permissions in order to access each REST API endpoint. The REST API reference document for each endpoint states whether the endpoint works with fine-grained personal access tokens and states what permissions are required in order for the token to use the endpoint. Some endpoints may require multiple permissions, and some endpoints may require one of multiple permissions. For an overview of which REST API endpoints a fine-grained personal access token can access with each permission, see Permissions required for fine-grained personal access tokens.
If you are using a personal access token (classic), it requires specific scopes in order to access each REST API endpoint. For general guidance about what scopes to choose, see Scopes for OAuth apps.
Personal access tokens and SAML SSO
If you use a personal access token (classic) to access an organization that enforces SAML single sign-on (SSO) for authentication, you will need to authorize your token after creation. Fine-grained personal access tokens are authorized during token creation, before access to the organization is granted. For more information, see Authorizing a personal access token for use with SAML single sign-on.
If you do not authorize your personal access token (classic) for SAML SSO before you try to use it to access a single organization that enforces SAML SSO, you may receive a 404 Not Found or a 403 Forbidden error. If you receive a 403 Forbidden error, the X-GitHub-SSO header will include a URL that you can follow to authorize your token. The URL expires after one hour.
If you do not authorize your personal access token (classic) for SAML SSO before you try to use it to access multiple organizations, the API will not return results from the organizations that require SAML SSO and the X-GitHub-SSO header will indicate the ID of the organizations that require SAML SSO authorization of your personal access token (classic). For example: X-GitHub-SSO: partial-results; organizations=21955855,20582480.
Authenticating with a token generated by an app
If you want to use the API for an organization or on behalf of another user, GitHub recommends that you use a GitHub App. For more information, see About authentication with a GitHub App.
The REST API reference documentation for each endpoint states whether the endpoint works with GitHub Apps and states what permissions are required in order for the app to use the endpoint. Some endpoints may require multiple permissions, and some endpoints may require one of multiple permissions. For an overview of which REST API endpoints a GitHub App can access with each permission, see Permissions required for GitHub Apps.
You can also create an OAuth token with an OAuth app to access the REST API. However, GitHub recommends that you use a GitHub App instead. GitHub Apps allow more control over the access and permission that the app has.
Access tokens created by apps are automatically authorized for SAML SSO.
Using basic authentication
Some REST API endpoints for GitHub Apps and OAuth apps require you to use basic authentication to access the endpoint. You will use the app's client ID as the username and the app's client secret as the password.
For example:
curl --request POST \
--url "https://api.github.com/applications/YOUR_CLIENT_ID/token" \
--user "YOUR_CLIENT_ID:YOUR_CLIENT_SECRET" \
--header "Accept: application/vnd.github+json" \
--header "X-GitHub-Api-Version: 2022-11-28" \
--data '{
  "access_token": "ACCESS_TOKEN_TO_CHECK"
}'

The client ID and client secret are associated with the app, not with the owner of the app or a user who authorized the app. They are used to perform operations on behalf of the app, such as creating access tokens.
If you are the owner of a GitHub App or OAuth app, or if you are an app manager for a GitHub App, you can find the client ID and generate a client secret on the settings page for your app. To navigate to your app's settings page:

In the upper-right corner of any page on GitHub, click your profile photo.
Navigate to your account settings.

For an app owned by a personal account, click Settings.
For an app owned by an organization:

Click Your organizations.
To the right of the organization, click Settings.




In the left sidebar, click  Developer settings.
In the left sidebar, click GitHub Apps or OAuth apps.
For GitHub Apps, to the right of the GitHub App you want to access, click Edit. For OAuth apps, click the app that you want to access.
Next to Client ID, you will see the client ID for your app.
Next to Client secrets, click Generate a new client secret to generate a client secret for your app.

Authenticating in a GitHub Actions workflow
If you want to use the API in a GitHub Actions workflow, GitHub recommends that you authenticate with the built-in GITHUB_TOKEN instead of creating a token. You can grant permissions to the GITHUB_TOKEN with the permissions key. For more information, see Automatic token authentication.
If this is not possible, you can store your token as a secret and use the name of your secret in your GitHub Actions workflow. For more information about secrets, see Using secrets in GitHub Actions.
Authenticating in a GitHub Actions workflow using GitHub CLI
To make an authenticated request to the API in a GitHub Actions workflow using GitHub CLI, you can store the value of GITHUB_TOKEN as an environment variable, and use the run keyword to execute the GitHub CLI api subcommand. For more information about the run keyword, see Workflow syntax for GitHub Actions.
In the following example workflow, replace PATH with the path of the endpoint. For more information about the path, see Getting started with the REST API.
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api /PATH

Authenticating in a GitHub Actions workflow using curl
To make an authenticated request to the API in a GitHub Actions workflow using curl, you can store the value of GITHUB_TOKEN as an environment variable, and use the run keyword to execute a curl request to the API. For more information about the run keyword, see Workflow syntax for GitHub Actions.
In the following example workflow, replace PATH with the path of the endpoint. For more information about the path, see Getting started with the REST API.
YAMLjobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/PATH" \
          --header "Authorization: Bearer $GH_TOKEN"
jobs:
  use_api:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --request GET \
          --url "https://api.github.com/PATH" \
          --header "Authorization: Bearer $GH_TOKEN"

Authenticating in a GitHub Actions workflow using JavaScript
For an example of how to authenticate in a GitHub Actions workflow using JavaScript, see Scripting with the REST API and JavaScript.
Authenticating with username and password
Authentication with username and password is not supported. If you try to authenticate with user name and password, you will receive a 4xx error.
Further reading

Keeping your API credentials secure
Getting started with the REST API\n\n\n\nREST API/Authentication/Keeping API credentials secureKeeping your API credentials secureFollow these best practices to keep your API credentials and tokens secure.In this articleChoose an appropriate authentication methodLimit the permissions of your credentialsStore your authentication credentials securelyLimit who can access your authentication credentialsUse authentication credentials securely in your codePrepare a remediation planChoose an appropriate authentication method
You should choose an authentication method that is appropriate for the task you want to accomplish.

To use the API for personal use, you can create a personal access token.
To use the API on behalf of an organization or another user, you should create a GitHub App.
To use the API in a GitHub Actions workflow, you should authenticate with the built-in GITHUB_TOKEN.

For more information, see About authentication to GitHub.
Limit the permissions of your credentials
When creating a personal access token, only select the minimum permissions or scopes needed, and set an expiration date for the minimum amount of time you'll need to use the token. GitHub recommends that you use fine-grained personal access tokens instead of personal access tokens (classic). For more information, see Managing your personal access tokens.
A token has the same capabilities to access resources and perform actions on those resources that the owner of the token has, and is further limited by any scopes or permissions granted to the token. A token cannot grant additional access capabilities to a user.
When creating a GitHub App, select the minimum permissions that your GitHub App will need. For more information, see Best practices for creating a GitHub App.
When authenticating with GITHUB_TOKEN in a GitHub Actions workflow, only give the minimum amount of permissions needed. For more information, see Automatic token authentication.
Store your authentication credentials securely
Treat authentication credentials the same way you would treat your passwords or other sensitive credentials.

Don't share authentication credentials using an unencrypted messaging or email system.
Don't pass your personal access token as plain text in the command line. For more information, see Managing your personal access tokens.
Don't push unencrypted authentication credentials like tokens or keys to any repository, even if the repository is private. Instead consider using a GitHub Actions secret or Codespaces secret. For more information, see Using secrets in GitHub Actions and Managing your account-specific secrets for GitHub Codespaces.
You can use secret scanning to discover tokens, private keys, and other secrets that were pushed to a repository, or to block future pushes that contain secrets. For more information, see About secret scanning.

Limit who can access your authentication credentials
Don't share your personal access token with others. Instead of sharing a personal access token, consider creating a GitHub App. For more information, see About creating GitHub Apps.
If you need to share credentials with a team, store the credentials in a secure shared system. For example, you could store and share passwords securely using 1Password, or you could store keys in Azure KeyVault and manage access with your IAM (Identity and access management).
If you're creating a GitHub Actions workflow that needs to access the API, you can store your credentials in an encrypted secret, and access the encrypted secret from the workflow. For more information, see Using secrets in GitHub Actions and Making authenticated API requests with a GitHub App in a GitHub Actions workflow.
Use authentication credentials securely in your code
Never hardcode authentication credentials like tokens, keys, or app-related secrets into your code. Instead, consider using a secret manager such as Azure Key Vault or HashiCorp Vault. For more information about securing GitHub App credentials, see Best practices for creating a GitHub App.
If you find another user's personal access token exposed on GitHub or elsewhere, you can submit a revocation request through the REST API. See Revocation.
When using a personal access token in a script, consider storing your token as a GitHub Actions secret and running your script through GitHub Actions. You can also store your token as a Codespaces secret and run your script in Codespaces. For more information, see Using secrets in GitHub Actions and Managing your account-specific secrets for GitHub Codespaces.
If none of these options are possible, you can store authentication credentials in a .env file. Make sure to encrypt your .env file, and never push it to any repository.
Prepare a remediation plan
You should create a plan to handle any security breaches in a timely manner. In the event that your token or other authentication credential is leaked, you will need to:

Generate a new credential.
Replace the old credential with the new one everywhere that you are storing or accessing the credential.
Delete the old compromised credential.

For information about rotating compromised credentials for a GitHub App, see Best practices for creating a GitHub App.
For information about creating and deleting personal access tokens, see Managing your personal access tokens.\n\n\n\nREST API/Authentication/Endpoints for GitHub App installation tokensEndpoints available for GitHub App installation access tokensYour GitHub App can make requests to the following REST endpoints with an installation access token.Who can use this feature?You can use an installation access token to access these endpoints using your GitHub App. For more information, see Authenticating as a GitHub App installation.In this articleactionsactivityappsbillingbranchescampaignscheckscode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgitgitignoreinteractionsissueslicensesmarkdownmetametricsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rulePOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /users/{username}/eventsGET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /installation/repositoriesDELETE /installation/tokenbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitescode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}collaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsissuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}POST /orgs/{org}/packages/{package_type}/{package_name}/restoreGET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restoreGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}POST /user/packages/{package_type}/{package_name}/restoreGET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restoreGET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}POST /users/{username}/packages/{package_type}/{package_name}/restoreGET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restorepagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}usersGET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Endpoints for GitHub App user tokensEndpoints available for GitHub App user access tokensYour GitHub App can make requests to the following REST endpoints with a user access token.Who can use this feature?You can use a user access token to access these endpoints using your GitHub App. For more information, see Authenticating with a GitHub App on behalf of a user.In this articleactionsactivityappsbillingbranchescampaignschecksclassroomcode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgistsgitgitignoreinteractionsissueslicensesmarkdownmetametricsmigrationsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /user/starredGET /user/starred/{owner}/{repo}PUT /user/starred/{owner}/{repo}DELETE /user/starred/{owner}/{repo}GET /user/subscriptionsGET /users/{username}/eventsGET /users/{username}/events/orgs/{org}GET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /user/installationsGET /user/installations/{installation_id}/repositoriesGET /user/marketplace_purchasesGET /user/marketplace_purchases/stubbedbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storageGET /users/{username}/settings/billing/actionsGET /users/{username}/settings/billing/packagesGET /users/{username}/settings/billing/shared-storageGET /users/{username}/settings/billing/usagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitesclassroomGET /assignments/{assignment_id}GET /assignments/{assignment_id}/accepted_assignmentsGET /assignments/{assignment_id}/gradesGET /classroomsGET /classrooms/{classroom_id}GET /classrooms/{classroom_id}/assignmentscode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespacesPOST /repos/{owner}/{repo}/codespacesGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/newGET /repos/{owner}/{repo}/codespaces/permissions_checkGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}POST /repos/{owner}/{repo}/pulls/{pull_number}/codespacesGET /user/codespacesPOST /user/codespacesGET /user/codespaces/secretsGET /user/codespaces/secrets/public-keyGET /user/codespaces/secrets/{secret_name}PUT /user/codespaces/secrets/{secret_name}DELETE /user/codespaces/secrets/{secret_name}GET /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /user/codespaces/{codespace_name}PATCH /user/codespaces/{codespace_name}DELETE /user/codespaces/{codespace_name}POST /user/codespaces/{codespace_name}/exportsGET /user/codespaces/{codespace_name}/exports/{export_id}GET /user/codespaces/{codespace_name}/machinesPOST /user/codespaces/{codespace_name}/publishPOST /user/codespaces/{codespace_name}/startPOST /user/codespaces/{codespace_name}/stopcollaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}GET /user/repository_invitationsPATCH /user/repository_invitations/{invitation_id}DELETE /user/repository_invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgistsGET /gistsPOST /gistsGET /gists/publicGET /gists/starredGET /gists/{gist_id}PATCH /gists/{gist_id}DELETE /gists/{gist_id}GET /gists/{gist_id}/commentsPOST /gists/{gist_id}/commentsGET /gists/{gist_id}/comments/{comment_id}PATCH /gists/{gist_id}/comments/{comment_id}DELETE /gists/{gist_id}/comments/{comment_id}GET /gists/{gist_id}/commitsGET /gists/{gist_id}/forksPOST /gists/{gist_id}/forksGET /gists/{gist_id}/starPUT /gists/{gist_id}/starDELETE /gists/{gist_id}/starGET /gists/{gist_id}/{sha}GET /users/{username}/gistsgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsGET /user/interaction-limitsPUT /user/interaction-limitsDELETE /user/interaction-limitsissuesGET /issuesGET /orgs/{org}/issuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsGET /user/issueslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsmigrationsGET /repos/{owner}/{repo}/importPUT /repos/{owner}/{repo}/importPATCH /repos/{owner}/{repo}/importDELETE /repos/{owner}/{repo}/importGET /repos/{owner}/{repo}/import/authorsPATCH /repos/{owner}/{repo}/import/authors/{author_id}GET /repos/{owner}/{repo}/import/large_filesPATCH /repos/{owner}/{repo}/import/lfsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}PUT /orgs/{org}/public_members/{username}DELETE /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /user/memberships/orgsGET /user/memberships/orgs/{org}PATCH /user/memberships/orgs/{org}GET /user/orgsGET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}GET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}GET /user/docker/conflictsGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}GET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}GET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}GET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}pagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsPOST /repos/{owner}/{repo}/transferGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /user/reposPOST /user/reposGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypassesGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}GET /user/teamsusersGET /userPATCH /userGET /user/blocksGET /user/blocks/{username}PUT /user/blocks/{username}DELETE /user/blocks/{username}PATCH /user/email/visibilityGET /user/emailsPOST /user/emailsDELETE /user/emailsGET /user/followersGET /user/followingGET /user/following/{username}PUT /user/following/{username}DELETE /user/following/{username}GET /user/gpg_keysPOST /user/gpg_keysGET /user/gpg_keys/{gpg_key_id}DELETE /user/gpg_keys/{gpg_key_id}GET /user/keysPOST /user/keysGET /user/keys/{key_id}DELETE /user/keys/{key_id}GET /user/public_emailsGET /user/social_accountsPOST /user/social_accountsDELETE /user/social_accountsGET /user/ssh_signing_keysPOST /user/ssh_signing_keysGET /user/ssh_signing_keys/{ssh_signing_key_id}DELETE /user/ssh_signing_keys/{ssh_signing_key_id}GET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Endpoints for fine-grained PATsEndpoints available for fine-grained personal access tokensYour fine-grained personal access token can make requests to the following REST endpoints.In this articleactionsactivityappsbillingbranchescampaignschecksclassroomcode-scanningcode-securitycodes-of-conductcodespacescollaboratorscommitscopilotcredentialsdependabotdependency-graphdeploy-keysdeploymentsemojisgistsgitgitignoreinteractionsissueslicensesmarkdownmetametricsmigrationsorgspackagespagesprivate-registriesprojectspullsrate-limitreactionsreleasesrepossearchsecret-scanningsecurity-advisoriesteamsusersactionsGET /orgs/{org}/actions/cache/usageGET /orgs/{org}/actions/cache/usage-by-repositoryGET /orgs/{org}/actions/hosted-runnersPOST /orgs/{org}/actions/hosted-runnersGET /orgs/{org}/actions/hosted-runners/images/github-ownedGET /orgs/{org}/actions/hosted-runners/images/partnerGET /orgs/{org}/actions/hosted-runners/limitsGET /orgs/{org}/actions/hosted-runners/machine-sizesGET /orgs/{org}/actions/hosted-runners/platformsGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}GET /orgs/{org}/actions/oidc/customization/subPUT /orgs/{org}/actions/oidc/customization/subGET /orgs/{org}/actions/permissionsPUT /orgs/{org}/actions/permissionsGET /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositoriesPUT /orgs/{org}/actions/permissions/repositories/{repository_id}DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}GET /orgs/{org}/actions/permissions/selected-actionsPUT /orgs/{org}/actions/permissions/selected-actionsGET /orgs/{org}/actions/permissions/workflowPUT /orgs/{org}/actions/permissions/workflowGET /orgs/{org}/actions/runner-groupsPOST /orgs/{org}/actions/runner-groupsGET /orgs/{org}/actions/runner-groups/{runner_group_id}PATCH /orgs/{org}/actions/runner-groups/{runner_group_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}GET /orgs/{org}/actions/runnersGET /orgs/{org}/actions/runners/downloadsPOST /orgs/{org}/actions/runners/generate-jitconfigPOST /orgs/{org}/actions/runners/registration-tokenPOST /orgs/{org}/actions/runners/remove-tokenGET /orgs/{org}/actions/runners/{runner_id}DELETE /orgs/{org}/actions/runners/{runner_id}GET /orgs/{org}/actions/runners/{runner_id}/labelsPOST /orgs/{org}/actions/runners/{runner_id}/labelsPUT /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labelsDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}GET /orgs/{org}/actions/secretsGET /orgs/{org}/actions/secrets/public-keyGET /orgs/{org}/actions/secrets/{secret_name}PUT /orgs/{org}/actions/secrets/{secret_name}DELETE /orgs/{org}/actions/secrets/{secret_name}GET /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositoriesPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/actions/variablesPOST /orgs/{org}/actions/variablesGET /orgs/{org}/actions/variables/{name}PATCH /orgs/{org}/actions/variables/{name}DELETE /orgs/{org}/actions/variables/{name}GET /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositoriesPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}GET /repos/{owner}/{repo}/actions/artifactsGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}GET /repos/{owner}/{repo}/actions/cache/usageGET /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/cachesDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunGET /repos/{owner}/{repo}/actions/oidc/customization/subPUT /repos/{owner}/{repo}/actions/oidc/customization/subGET /repos/{owner}/{repo}/actions/organization-secretsGET /repos/{owner}/{repo}/actions/organization-variablesGET /repos/{owner}/{repo}/actions/permissionsPUT /repos/{owner}/{repo}/actions/permissionsGET /repos/{owner}/{repo}/actions/permissions/accessPUT /repos/{owner}/{repo}/actions/permissions/accessGET /repos/{owner}/{repo}/actions/permissions/selected-actionsPUT /repos/{owner}/{repo}/actions/permissions/selected-actionsGET /repos/{owner}/{repo}/actions/permissions/workflowPUT /repos/{owner}/{repo}/actions/permissions/workflowGET /repos/{owner}/{repo}/actions/runnersGET /repos/{owner}/{repo}/actions/runners/downloadsPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigPOST /repos/{owner}/{repo}/actions/runners/registration-tokenPOST /repos/{owner}/{repo}/actions/runners/remove-tokenGET /repos/{owner}/{repo}/actions/runners/{runner_id}DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}GET /repos/{owner}/{repo}/actions/runsGET /repos/{owner}/{repo}/actions/runs/{run_id}DELETE /repos/{owner}/{repo}/actions/runs/{run_id}GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approveGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logsGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobsGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingGET /repos/{owner}/{repo}/actions/secretsGET /repos/{owner}/{repo}/actions/secrets/public-keyGET /repos/{owner}/{repo}/actions/secrets/{secret_name}PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}GET /repos/{owner}/{repo}/actions/variablesPOST /repos/{owner}/{repo}/actions/variablesGET /repos/{owner}/{repo}/actions/variables/{name}PATCH /repos/{owner}/{repo}/actions/variables/{name}DELETE /repos/{owner}/{repo}/actions/variables/{name}GET /repos/{owner}/{repo}/actions/workflowsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatchesPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enableGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingGET /repos/{owner}/{repo}/environments/{environment_name}/secretsGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}GET /repos/{owner}/{repo}/environments/{environment_name}/variablesPOST /repos/{owner}/{repo}/environments/{environment_name}/variablesGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}activityGET /eventsGET /feedsGET /networks/{owner}/{repo}/eventsGET /orgs/{org}/eventsGET /repos/{owner}/{repo}/eventsGET /repos/{owner}/{repo}/stargazersGET /repos/{owner}/{repo}/subscribersGET /user/starredGET /user/starred/{owner}/{repo}PUT /user/starred/{owner}/{repo}DELETE /user/starred/{owner}/{repo}GET /user/subscriptionsGET /users/{username}/eventsGET /users/{username}/events/orgs/{org}GET /users/{username}/events/publicGET /users/{username}/received_eventsGET /users/{username}/received_events/publicGET /users/{username}/starredGET /users/{username}/subscriptionsappsGET /apps/{app_slug}GET /user/installationsGET /user/installations/{installation_id}/repositoriesGET /user/marketplace_purchasesGET /user/marketplace_purchases/stubbedbillingGET /organizations/{org}/settings/billing/usageGET /orgs/{org}/settings/billing/actionsGET /orgs/{org}/settings/billing/packagesGET /orgs/{org}/settings/billing/shared-storageGET /users/{username}/settings/billing/actionsGET /users/{username}/settings/billing/packagesGET /users/{username}/settings/billing/shared-storageGET /users/{username}/settings/billing/usagebranchesGET /repos/{owner}/{repo}/branchesGET /repos/{owner}/{repo}/branches/{branch}GET /repos/{owner}/{repo}/branches/{branch}/protectionPUT /repos/{owner}/{repo}/branches/{branch}/protectionDELETE /repos/{owner}/{repo}/branches/{branch}/protectionGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersPOST /repos/{owner}/{repo}/branches/{branch}/renamePOST /repos/{owner}/{repo}/merge-upstreamPOST /repos/{owner}/{repo}/mergescampaignsGET /orgs/{org}/campaignsPOST /orgs/{org}/campaignsGET /orgs/{org}/campaigns/{campaign_number}PATCH /orgs/{org}/campaigns/{campaign_number}DELETE /orgs/{org}/campaigns/{campaign_number}checksPOST /repos/{owner}/{repo}/check-runsGET /repos/{owner}/{repo}/check-runs/{check_run_id}PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestPOST /repos/{owner}/{repo}/check-suitesPATCH /repos/{owner}/{repo}/check-suites/preferencesGET /repos/{owner}/{repo}/check-suites/{check_suite_id}GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestGET /repos/{owner}/{repo}/commits/{ref}/check-runsGET /repos/{owner}/{repo}/commits/{ref}/check-suitesclassroomGET /assignments/{assignment_id}GET /assignments/{assignment_id}/accepted_assignmentsGET /assignments/{assignment_id}/gradesGET /classroomsGET /classrooms/{classroom_id}GET /classrooms/{classroom_id}/assignmentscode-scanningGET /orgs/{org}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alertsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitsGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesGET /repos/{owner}/{repo}/code-scanning/analysesGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/databasesGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analysesGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}GET /repos/{owner}/{repo}/code-scanning/default-setupPATCH /repos/{owner}/{repo}/code-scanning/default-setupPOST /repos/{owner}/{repo}/code-scanning/sarifsGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}code-securityGET /orgs/{org}/code-security/configurationsPOST /orgs/{org}/code-security/configurationsGET /orgs/{org}/code-security/configurations/defaultsDELETE /orgs/{org}/code-security/configurations/detachGET /orgs/{org}/code-security/configurations/{configuration_id}PATCH /orgs/{org}/code-security/configurations/{configuration_id}DELETE /orgs/{org}/code-security/configurations/{configuration_id}POST /orgs/{org}/code-security/configurations/{configuration_id}/attachPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultsGET /orgs/{org}/code-security/configurations/{configuration_id}/repositoriesGET /repos/{owner}/{repo}/code-security-configurationcodes-of-conductGET /codes_of_conductGET /codes_of_conduct/{key}codespacesGET /orgs/{org}/codespacesPUT /orgs/{org}/codespaces/accessPOST /orgs/{org}/codespaces/access/selected_usersDELETE /orgs/{org}/codespaces/access/selected_usersGET /orgs/{org}/codespaces/secretsGET /orgs/{org}/codespaces/secrets/public-keyGET /orgs/{org}/codespaces/secrets/{secret_name}PUT /orgs/{org}/codespaces/secrets/{secret_name}DELETE /orgs/{org}/codespaces/secrets/{secret_name}GET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /orgs/{org}/members/{username}/codespacesDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopGET /repos/{owner}/{repo}/codespacesPOST /repos/{owner}/{repo}/codespacesGET /repos/{owner}/{repo}/codespaces/devcontainersGET /repos/{owner}/{repo}/codespaces/machinesGET /repos/{owner}/{repo}/codespaces/newGET /repos/{owner}/{repo}/codespaces/permissions_checkGET /repos/{owner}/{repo}/codespaces/secretsGET /repos/{owner}/{repo}/codespaces/secrets/public-keyGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}POST /repos/{owner}/{repo}/pulls/{pull_number}/codespacesGET /user/codespacesPOST /user/codespacesGET /user/codespaces/secretsGET /user/codespaces/secrets/public-keyGET /user/codespaces/secrets/{secret_name}PUT /user/codespaces/secrets/{secret_name}DELETE /user/codespaces/secrets/{secret_name}GET /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositoriesPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}GET /user/codespaces/{codespace_name}PATCH /user/codespaces/{codespace_name}DELETE /user/codespaces/{codespace_name}POST /user/codespaces/{codespace_name}/exportsGET /user/codespaces/{codespace_name}/exports/{export_id}GET /user/codespaces/{codespace_name}/machinesPOST /user/codespaces/{codespace_name}/publishPOST /user/codespaces/{codespace_name}/startPOST /user/codespaces/{codespace_name}/stopcollaboratorsGET /repos/{owner}/{repo}/collaboratorsGET /repos/{owner}/{repo}/collaborators/{username}PUT /repos/{owner}/{repo}/collaborators/{username}DELETE /repos/{owner}/{repo}/collaborators/{username}GET /repos/{owner}/{repo}/collaborators/{username}/permissionGET /repos/{owner}/{repo}/invitationsPATCH /repos/{owner}/{repo}/invitations/{invitation_id}DELETE /repos/{owner}/{repo}/invitations/{invitation_id}GET /user/repository_invitationsPATCH /user/repository_invitations/{invitation_id}DELETE /user/repository_invitations/{invitation_id}commitsGET /repos/{owner}/{repo}/commentsGET /repos/{owner}/{repo}/comments/{comment_id}PATCH /repos/{owner}/{repo}/comments/{comment_id}DELETE /repos/{owner}/{repo}/comments/{comment_id}GET /repos/{owner}/{repo}/commitsGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsGET /repos/{owner}/{repo}/commits/{commit_sha}/pullsGET /repos/{owner}/{repo}/commits/{ref}GET /repos/{owner}/{repo}/commits/{ref}/statusGET /repos/{owner}/{repo}/commits/{ref}/statusesGET /repos/{owner}/{repo}/compare/{basehead}POST /repos/{owner}/{repo}/statuses/{sha}copilotGET /orgs/{org}/copilot/billingGET /orgs/{org}/copilot/billing/seatsPOST /orgs/{org}/copilot/billing/selected_teamsDELETE /orgs/{org}/copilot/billing/selected_teamsPOST /orgs/{org}/copilot/billing/selected_usersDELETE /orgs/{org}/copilot/billing/selected_usersGET /orgs/{org}/copilot/metricsGET /orgs/{org}/members/{username}/copilotGET /orgs/{org}/team/{team_slug}/copilot/metricscredentialsPOST /credentials/revokedependabotGET /orgs/{org}/dependabot/alertsGET /orgs/{org}/dependabot/secretsGET /orgs/{org}/dependabot/secrets/public-keyGET /orgs/{org}/dependabot/secrets/{secret_name}PUT /orgs/{org}/dependabot/secrets/{secret_name}DELETE /orgs/{org}/dependabot/secrets/{secret_name}GET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}GET /repos/{owner}/{repo}/dependabot/alertsGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}GET /repos/{owner}/{repo}/dependabot/secretsGET /repos/{owner}/{repo}/dependabot/secrets/public-keyGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}dependency-graphGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}GET /repos/{owner}/{repo}/dependency-graph/sbomPOST /repos/{owner}/{repo}/dependency-graph/snapshotsdeploy-keysGET /repos/{owner}/{repo}/keysPOST /repos/{owner}/{repo}/keysGET /repos/{owner}/{repo}/keys/{key_id}DELETE /repos/{owner}/{repo}/keys/{key_id}deploymentsGET /repos/{owner}/{repo}/deploymentsPOST /repos/{owner}/{repo}/deploymentsGET /repos/{owner}/{repo}/deployments/{deployment_id}DELETE /repos/{owner}/{repo}/deployments/{deployment_id}GET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statusesGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}GET /repos/{owner}/{repo}/environmentsGET /repos/{owner}/{repo}/environments/{environment_name}PUT /repos/{owner}/{repo}/environments/{environment_name}DELETE /repos/{owner}/{repo}/environments/{environment_name}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}emojisGET /emojisgistsGET /gistsPOST /gistsGET /gists/publicGET /gists/starredGET /gists/{gist_id}PATCH /gists/{gist_id}DELETE /gists/{gist_id}GET /gists/{gist_id}/commentsPOST /gists/{gist_id}/commentsGET /gists/{gist_id}/comments/{comment_id}PATCH /gists/{gist_id}/comments/{comment_id}DELETE /gists/{gist_id}/comments/{comment_id}GET /gists/{gist_id}/commitsGET /gists/{gist_id}/forksPOST /gists/{gist_id}/forksGET /gists/{gist_id}/starPUT /gists/{gist_id}/starDELETE /gists/{gist_id}/starGET /gists/{gist_id}/{sha}GET /users/{username}/gistsgitPOST /repos/{owner}/{repo}/git/blobsGET /repos/{owner}/{repo}/git/blobs/{file_sha}POST /repos/{owner}/{repo}/git/commitsGET /repos/{owner}/{repo}/git/commits/{commit_sha}GET /repos/{owner}/{repo}/git/matching-refs/{ref}GET /repos/{owner}/{repo}/git/ref/{ref}POST /repos/{owner}/{repo}/git/refsPATCH /repos/{owner}/{repo}/git/refs/{ref}DELETE /repos/{owner}/{repo}/git/refs/{ref}POST /repos/{owner}/{repo}/git/tagsGET /repos/{owner}/{repo}/git/tags/{tag_sha}POST /repos/{owner}/{repo}/git/treesGET /repos/{owner}/{repo}/git/trees/{tree_sha}gitignoreGET /gitignore/templatesGET /gitignore/templates/{name}interactionsGET /orgs/{org}/interaction-limitsPUT /orgs/{org}/interaction-limitsDELETE /orgs/{org}/interaction-limitsGET /repos/{owner}/{repo}/interaction-limitsPUT /repos/{owner}/{repo}/interaction-limitsDELETE /repos/{owner}/{repo}/interaction-limitsGET /user/interaction-limitsPUT /user/interaction-limitsDELETE /user/interaction-limitsissuesGET /issuesGET /orgs/{org}/issuesGET /repos/{owner}/{repo}/assigneesGET /repos/{owner}/{repo}/assignees/{assignee}GET /repos/{owner}/{repo}/issuesPOST /repos/{owner}/{repo}/issuesGET /repos/{owner}/{repo}/issues/commentsGET /repos/{owner}/{repo}/issues/comments/{comment_id}PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}GET /repos/{owner}/{repo}/issues/eventsGET /repos/{owner}/{repo}/issues/events/{event_id}GET /repos/{owner}/{repo}/issues/{issue_number}PATCH /repos/{owner}/{repo}/issues/{issue_number}POST /repos/{owner}/{repo}/issues/{issue_number}/assigneesDELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneesGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}GET /repos/{owner}/{repo}/issues/{issue_number}/commentsPOST /repos/{owner}/{repo}/issues/{issue_number}/commentsGET /repos/{owner}/{repo}/issues/{issue_number}/eventsGET /repos/{owner}/{repo}/issues/{issue_number}/labelsPOST /repos/{owner}/{repo}/issues/{issue_number}/labelsPUT /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labelsDELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}PUT /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/lockDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issueGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priorityGET /repos/{owner}/{repo}/issues/{issue_number}/timelineGET /repos/{owner}/{repo}/labelsPOST /repos/{owner}/{repo}/labelsGET /repos/{owner}/{repo}/labels/{name}PATCH /repos/{owner}/{repo}/labels/{name}DELETE /repos/{owner}/{repo}/labels/{name}GET /repos/{owner}/{repo}/milestonesPOST /repos/{owner}/{repo}/milestonesGET /repos/{owner}/{repo}/milestones/{milestone_number}PATCH /repos/{owner}/{repo}/milestones/{milestone_number}DELETE /repos/{owner}/{repo}/milestones/{milestone_number}GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsGET /user/issueslicensesGET /licensesGET /licenses/{license}GET /repos/{owner}/{repo}/licensemarkdownPOST /markdownPOST /markdown/rawmetaGET /GET /metaGET /octocatGET /versionsGET /zenmetricsGET /repos/{owner}/{repo}/community/profileGET /repos/{owner}/{repo}/stats/code_frequencyGET /repos/{owner}/{repo}/stats/commit_activityGET /repos/{owner}/{repo}/stats/contributorsGET /repos/{owner}/{repo}/stats/participationGET /repos/{owner}/{repo}/stats/punch_cardGET /repos/{owner}/{repo}/traffic/clonesGET /repos/{owner}/{repo}/traffic/popular/pathsGET /repos/{owner}/{repo}/traffic/popular/referrersGET /repos/{owner}/{repo}/traffic/viewsmigrationsGET /repos/{owner}/{repo}/importPUT /repos/{owner}/{repo}/importPATCH /repos/{owner}/{repo}/importDELETE /repos/{owner}/{repo}/importGET /repos/{owner}/{repo}/import/authorsPATCH /repos/{owner}/{repo}/import/authors/{author_id}GET /repos/{owner}/{repo}/import/large_filesPATCH /repos/{owner}/{repo}/import/lfsorgsGET /organizationsGET /orgs/{org}PATCH /orgs/{org}DELETE /orgs/{org}GET /orgs/{org}/attestations/{subject_digest}GET /orgs/{org}/blocksGET /orgs/{org}/blocks/{username}PUT /orgs/{org}/blocks/{username}DELETE /orgs/{org}/blocks/{username}GET /orgs/{org}/failed_invitationsGET /orgs/{org}/hooksPOST /orgs/{org}/hooksGET /orgs/{org}/hooks/{hook_id}PATCH /orgs/{org}/hooks/{hook_id}DELETE /orgs/{org}/hooks/{hook_id}GET /orgs/{org}/hooks/{hook_id}/configPATCH /orgs/{org}/hooks/{hook_id}/configGET /orgs/{org}/hooks/{hook_id}/deliveriesGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /orgs/{org}/hooks/{hook_id}/pingsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/subject-statsGET /orgs/{org}/insights/api/summary-statsGET /orgs/{org}/insights/api/summary-stats/users/{user_id}GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/time-statsGET /orgs/{org}/insights/api/time-stats/users/{user_id}GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}GET /orgs/{org}/insights/api/user-stats/{user_id}GET /orgs/{org}/installationsGET /orgs/{org}/invitationsPOST /orgs/{org}/invitationsDELETE /orgs/{org}/invitations/{invitation_id}GET /orgs/{org}/invitations/{invitation_id}/teamsGET /orgs/{org}/issue-typesPOST /orgs/{org}/issue-typesPUT /orgs/{org}/issue-types/{issue_type_id}DELETE /orgs/{org}/issue-types/{issue_type_id}GET /orgs/{org}/membersGET /orgs/{org}/members/{username}DELETE /orgs/{org}/members/{username}GET /orgs/{org}/memberships/{username}PUT /orgs/{org}/memberships/{username}DELETE /orgs/{org}/memberships/{username}GET /orgs/{org}/organization-rolesDELETE /orgs/{org}/organization-roles/teams/{team_slug}PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}PUT /orgs/{org}/organization-roles/users/{username}/{role_id}DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}GET /orgs/{org}/organization-roles/{role_id}GET /orgs/{org}/organization-roles/{role_id}/teamsGET /orgs/{org}/organization-roles/{role_id}/usersGET /orgs/{org}/outside_collaboratorsPUT /orgs/{org}/outside_collaborators/{username}DELETE /orgs/{org}/outside_collaborators/{username}GET /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requestsPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesGET /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokensPOST /orgs/{org}/personal-access-tokens/{pat_id}GET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesGET /orgs/{org}/properties/schemaPATCH /orgs/{org}/properties/schemaGET /orgs/{org}/properties/schema/{custom_property_name}PUT /orgs/{org}/properties/schema/{custom_property_name}DELETE /orgs/{org}/properties/schema/{custom_property_name}GET /orgs/{org}/properties/valuesPATCH /orgs/{org}/properties/valuesGET /orgs/{org}/public_membersGET /orgs/{org}/public_members/{username}PUT /orgs/{org}/public_members/{username}DELETE /orgs/{org}/public_members/{username}GET /orgs/{org}/rulesetsPOST /orgs/{org}/rulesetsGET /orgs/{org}/rulesets/rule-suitesGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}GET /orgs/{org}/rulesets/{ruleset_id}PUT /orgs/{org}/rulesets/{ruleset_id}DELETE /orgs/{org}/rulesets/{ruleset_id}GET /orgs/{org}/rulesets/{ruleset_id}/historyGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}GET /orgs/{org}/security-managersPUT /orgs/{org}/security-managers/teams/{team_slug}DELETE /orgs/{org}/security-managers/teams/{team_slug}GET /orgs/{org}/settings/network-configurationsPOST /orgs/{org}/settings/network-configurationsGET /orgs/{org}/settings/network-configurations/{network_configuration_id}PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}GET /orgs/{org}/settings/network-settings/{network_settings_id}POST /orgs/{org}/{security_product}/{enablement}GET /user/memberships/orgsGET /user/memberships/orgs/{org}PATCH /user/memberships/orgs/{org}GET /user/orgsGET /users/{username}/orgspackagesGET /orgs/{org}/docker/conflictsGET /orgs/{org}/packagesGET /orgs/{org}/packages/{package_type}/{package_name}DELETE /orgs/{org}/packages/{package_type}/{package_name}GET /orgs/{org}/packages/{package_type}/{package_name}/versionsGET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}GET /user/docker/conflictsGET /user/packagesGET /user/packages/{package_type}/{package_name}DELETE /user/packages/{package_type}/{package_name}GET /user/packages/{package_type}/{package_name}/versionsGET /user/packages/{package_type}/{package_name}/versions/{package_version_id}GET /users/{username}/docker/conflictsGET /users/{username}/packagesGET /users/{username}/packages/{package_type}/{package_name}DELETE /users/{username}/packages/{package_type}/{package_name}GET /users/{username}/packages/{package_type}/{package_name}/versionsGET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}pagesGET /repos/{owner}/{repo}/pagesPOST /repos/{owner}/{repo}/pagesPUT /repos/{owner}/{repo}/pagesDELETE /repos/{owner}/{repo}/pagesGET /repos/{owner}/{repo}/pages/buildsPOST /repos/{owner}/{repo}/pages/buildsGET /repos/{owner}/{repo}/pages/builds/latestGET /repos/{owner}/{repo}/pages/builds/{build_id}POST /repos/{owner}/{repo}/pages/deploymentsGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelGET /repos/{owner}/{repo}/pages/healthprivate-registriesGET /orgs/{org}/private-registriesPOST /orgs/{org}/private-registriesGET /orgs/{org}/private-registries/public-keyGET /orgs/{org}/private-registries/{secret_name}PATCH /orgs/{org}/private-registries/{secret_name}DELETE /orgs/{org}/private-registries/{secret_name}projectsGET /orgs/{org}/projectsPOST /orgs/{org}/projectsGET /projects/columns/cards/{card_id}PATCH /projects/columns/cards/{card_id}DELETE /projects/columns/cards/{card_id}POST /projects/columns/cards/{card_id}/movesGET /projects/columns/{column_id}PATCH /projects/columns/{column_id}DELETE /projects/columns/{column_id}GET /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/cardsPOST /projects/columns/{column_id}/movesGET /projects/{project_id}PATCH /projects/{project_id}DELETE /projects/{project_id}GET /projects/{project_id}/collaboratorsPUT /projects/{project_id}/collaborators/{username}DELETE /projects/{project_id}/collaborators/{username}GET /projects/{project_id}/collaborators/{username}/permissionGET /projects/{project_id}/columnsPOST /projects/{project_id}/columnsGET /repos/{owner}/{repo}/projectsPOST /repos/{owner}/{repo}/projectspullsGET /repos/{owner}/{repo}/pullsPOST /repos/{owner}/{repo}/pullsGET /repos/{owner}/{repo}/pulls/commentsGET /repos/{owner}/{repo}/pulls/comments/{comment_id}PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}GET /repos/{owner}/{repo}/pulls/{pull_number}PATCH /repos/{owner}/{repo}/pulls/{pull_number}GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentsPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/repliesGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsGET /repos/{owner}/{repo}/pulls/{pull_number}/filesGET /repos/{owner}/{repo}/pulls/{pull_number}/mergePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergeGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewsGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalsPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventsPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchrate-limitGET /rate_limitreactionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsPOST /repos/{owner}/{repo}/issues/{issue_number}/reactionsDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}GET /repos/{owner}/{repo}/releases/{release_id}/reactionsPOST /repos/{owner}/{repo}/releases/{release_id}/reactionsDELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}releasesGET /repos/{owner}/{repo}/releasesPOST /repos/{owner}/{repo}/releasesGET /repos/{owner}/{repo}/releases/assets/{asset_id}PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}POST /repos/{owner}/{repo}/releases/generate-notesGET /repos/{owner}/{repo}/releases/latestGET /repos/{owner}/{repo}/releases/tags/{tag}GET /repos/{owner}/{repo}/releases/{release_id}PATCH /repos/{owner}/{repo}/releases/{release_id}DELETE /repos/{owner}/{repo}/releases/{release_id}GET /repos/{owner}/{repo}/releases/{release_id}/assetsreposGET /orgs/{org}/reposPOST /orgs/{org}/reposGET /repos/{owner}/{repo}PATCH /repos/{owner}/{repo}DELETE /repos/{owner}/{repo}GET /repos/{owner}/{repo}/activityPOST /repos/{owner}/{repo}/attestationsGET /repos/{owner}/{repo}/attestations/{subject_digest}GET /repos/{owner}/{repo}/autolinksPOST /repos/{owner}/{repo}/autolinksGET /repos/{owner}/{repo}/autolinks/{autolink_id}DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}GET /repos/{owner}/{repo}/automated-security-fixesPUT /repos/{owner}/{repo}/automated-security-fixesDELETE /repos/{owner}/{repo}/automated-security-fixesGET /repos/{owner}/{repo}/codeowners/errorsGET /repos/{owner}/{repo}/contents/{path}PUT /repos/{owner}/{repo}/contents/{path}DELETE /repos/{owner}/{repo}/contents/{path}GET /repos/{owner}/{repo}/contributorsPOST /repos/{owner}/{repo}/dispatchesGET /repos/{owner}/{repo}/forksPOST /repos/{owner}/{repo}/forksGET /repos/{owner}/{repo}/hooksPOST /repos/{owner}/{repo}/hooksGET /repos/{owner}/{repo}/hooks/{hook_id}PATCH /repos/{owner}/{repo}/hooks/{hook_id}DELETE /repos/{owner}/{repo}/hooks/{hook_id}GET /repos/{owner}/{repo}/hooks/{hook_id}/configPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptsPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsGET /repos/{owner}/{repo}/languagesGET /repos/{owner}/{repo}/private-vulnerability-reportingPUT /repos/{owner}/{repo}/private-vulnerability-reportingDELETE /repos/{owner}/{repo}/private-vulnerability-reportingGET /repos/{owner}/{repo}/properties/valuesPATCH /repos/{owner}/{repo}/properties/valuesGET /repos/{owner}/{repo}/rules/branches/{branch}GET /repos/{owner}/{repo}/rulesetsPOST /repos/{owner}/{repo}/rulesetsGET /repos/{owner}/{repo}/rulesets/rule-suitesGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historyGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}GET /repos/{owner}/{repo}/tagsGET /repos/{owner}/{repo}/tags/protectionPOST /repos/{owner}/{repo}/tags/protectionDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}GET /repos/{owner}/{repo}/tarball/{ref}GET /repos/{owner}/{repo}/teamsGET /repos/{owner}/{repo}/topicsPUT /repos/{owner}/{repo}/topicsPOST /repos/{owner}/{repo}/transferGET /repos/{owner}/{repo}/vulnerability-alertsPUT /repos/{owner}/{repo}/vulnerability-alertsDELETE /repos/{owner}/{repo}/vulnerability-alertsGET /repos/{owner}/{repo}/zipball/{ref}POST /repos/{template_owner}/{template_repo}/generateGET /repositoriesGET /user/reposPOST /user/reposGET /users/{username}/repossearchGET /search/codeGET /search/commitsGET /search/issuesGET /search/labelsGET /search/repositoriesGET /search/topicsGET /search/userssecret-scanningGET /orgs/{org}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alertsGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypassesGET /repos/{owner}/{repo}/secret-scanning/scan-historysecurity-advisoriesGET /advisoriesGET /advisories/{ghsa_id}GET /orgs/{org}/security-advisoriesGET /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisoriesPOST /repos/{owner}/{repo}/security-advisories/reportsGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksteamsGET /orgs/{org}/teamsPOST /orgs/{org}/teamsGET /orgs/{org}/teams/{team_slug}/projectsGET /orgs/{org}/teams/{team_slug}/projects/{project_id}PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}GET /teams/{team_id}/members/{username}PUT /teams/{team_id}/members/{username}DELETE /teams/{team_id}/members/{username}GET /user/teamsusersGET /userPATCH /userGET /user/blocksGET /user/blocks/{username}PUT /user/blocks/{username}DELETE /user/blocks/{username}PATCH /user/email/visibilityGET /user/emailsPOST /user/emailsDELETE /user/emailsGET /user/followersGET /user/followingGET /user/following/{username}PUT /user/following/{username}DELETE /user/following/{username}GET /user/gpg_keysPOST /user/gpg_keysGET /user/gpg_keys/{gpg_key_id}DELETE /user/gpg_keys/{gpg_key_id}GET /user/keysPOST /user/keysGET /user/keys/{key_id}DELETE /user/keys/{key_id}GET /user/public_emailsGET /user/social_accountsPOST /user/social_accountsDELETE /user/social_accountsGET /user/ssh_signing_keysPOST /user/ssh_signing_keysGET /user/ssh_signing_keys/{ssh_signing_key_id}DELETE /user/ssh_signing_keys/{ssh_signing_key_id}GET /usersGET /users/{username}/attestations/{subject_digest}GET /users/{username}/followersGET /users/{username}/followingGET /users/{username}/following/{target_user}GET /users/{username}/gpg_keysGET /users/{username}/keysGET /users/{username}/social_accountsGET /users/{username}/ssh_signing_keys\n\n\n\nREST API/Authentication/Permissions for GitHub AppsPermissions required for GitHub AppsFor each permission granted to a GitHub App, these are the REST API endpoints that the app can use.In this articleAbout GitHub App permissionsOrganization permissions for "API Insights"Organization permissions for "Administration"Organization permissions for "Blocking users"Organization permissions for "Campaigns"Organization permissions for "Custom organization roles"Organization permissions for "Custom properties"Organization permissions for "Events"Organization permissions for "GitHub Copilot Business"Organization permissions for "Issue Types"Organization permissions for "Members"Organization permissions for "Network configurations"Organization permissions for "Organization codespaces secrets"Organization permissions for "Organization codespaces settings"Organization permissions for "Organization codespaces"Organization permissions for "Organization dependabot secrets"Organization permissions for "Organization private registries"Organization permissions for "Personal access token requests"Organization permissions for "Personal access tokens"Organization permissions for "Projects"Organization permissions for "Secrets"Organization permissions for "Self-hosted runners"Organization permissions for "Team discussions"Organization permissions for "Variables"Organization permissions for "Webhooks"Repository permissions for "Actions"Repository permissions for "Administration"Repository permissions for "Attestations"Repository permissions for "Checks"Repository permissions for "Code scanning alerts"Repository permissions for "Codespaces lifecycle admin"Repository permissions for "Codespaces metadata"Repository permissions for "Codespaces secrets"Repository permissions for "Codespaces"Repository permissions for "Commit statuses"Repository permissions for "Contents"Repository permissions for "Custom properties"Repository permissions for "Dependabot alerts"Repository permissions for "Dependabot secrets"Repository permissions for "Deployments"Repository permissions for "Environments"Repository permissions for "Issues"Repository permissions for "Metadata"Repository permissions for "Pages"Repository permissions for "Projects"Repository permissions for "Pull requests"Repository permissions for "Repository security advisories"Repository permissions for "Secret scanning alerts"Repository permissions for "Secrets"Repository permissions for "Variables"Repository permissions for "Webhooks"Repository permissions for "Workflows"User permissions for "Block another user"User permissions for "Codespaces user secrets"User permissions for "Email addresses"User permissions for "Followers"User permissions for "GPG keys"User permissions for "Gists"User permissions for "Git SSH keys"User permissions for "Interaction limits"User permissions for "Plan"User permissions for "Profile"User permissions for "SSH signing keys"User permissions for "Starring"User permissions for "Watching"About GitHub App permissions
GitHub Apps are created with a set of permissions. Permissions define what resources the GitHub App can access via the API. For more information, see Choosing permissions for a GitHub App.
To help you choose the correct permissions, you will receive the X-Accepted-GitHub-Permissions header in the REST API response. The header will tell you what permissions are required in order to access the endpoint. For more information, see Troubleshooting the REST API.
These permissions are required to access private resources. Some endpoints can also be used to access public resources without these permissions. To see whether an endpoint can access public resources without a permission, see the documentation for that endpoint.
Some endpoints require more than one permission. Other endpoints work with any one permission from a set of permissions. In these cases, the "Additional permissions" column will include a checkmark. For full details about the permissions that are required to use the endpoint, see the documentation for that endpoint.Organization permissions for "API Insights"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/subject-statsreadUATIATGET /orgs/{org}/insights/api/summary-statsreadUATIATGET /orgs/{org}/insights/api/summary-stats/users/{user_id}readUATIATGET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/time-statsreadUATIATGET /orgs/{org}/insights/api/time-stats/users/{user_id}readUATIATGET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}readUATIATGET /orgs/{org}/insights/api/user-stats/{user_id}readUATIATOrganization permissions for "Administration"EndpointAccessToken typesAdditional permissionsPATCH /orgs/{org}writeUATIATDELETE /orgs/{org}writeUATIATPOST /orgs/{org}/actions/hosted-runnerswriteUATIATPATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writeUATIATDELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writeUATIATPUT /orgs/{org}/actions/oidc/customization/subwriteUATIATPUT /orgs/{org}/actions/permissionswriteUATIATPUT /orgs/{org}/actions/permissions/repositorieswriteUATIATPUT /orgs/{org}/actions/permissions/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/permissions/selected-actionswriteUATIATPUT /orgs/{org}/actions/permissions/workflowwriteUATIATGET /orgs/{org}/code-security/configurationswriteUATIATPOST /orgs/{org}/code-security/configurationswriteUATIATGET /orgs/{org}/code-security/configurations/defaultswriteUATIATDELETE /orgs/{org}/code-security/configurations/detachwriteUATIATGET /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATPATCH /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATDELETE /orgs/{org}/code-security/configurations/{configuration_id}writeUATIATPOST /orgs/{org}/code-security/configurations/{configuration_id}/attachwriteUATIATPUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultswriteUATIATGET /orgs/{org}/code-security/configurations/{configuration_id}/repositorieswriteUATIATPOST /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/interaction-limitswriteUATIATDELETE /orgs/{org}/interaction-limitswriteUATIATGET /orgs/{org}/rulesetswriteUATIATPOST /orgs/{org}/rulesetswriteUATIATGET /orgs/{org}/rulesets/rule-suiteswriteUATIATGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}writeUATIATGET /orgs/{org}/rulesets/{ruleset_id}writeUATIATPUT /orgs/{org}/rulesets/{ruleset_id}writeUATIATDELETE /orgs/{org}/rulesets/{ruleset_id}writeUATIATGET /orgs/{org}/rulesets/{ruleset_id}/historywriteUATIATGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}writeUATIATPUT /orgs/{org}/security-managers/teams/{team_slug}writeUATIATDELETE /orgs/{org}/security-managers/teams/{team_slug}writeUATIATPOST /orgs/{org}/{security_product}/{enablement}writeUATIATGET /organizations/{org}/settings/billing/usagereadUATIATGET /orgs/{org}/actions/cache/usagereadUATIATGET /orgs/{org}/actions/cache/usage-by-repositoryreadUATIATGET /orgs/{org}/actions/hosted-runnersreadUATIATGET /orgs/{org}/actions/hosted-runners/images/github-ownedreadUATIATGET /orgs/{org}/actions/hosted-runners/images/partnerreadUATIATGET /orgs/{org}/actions/hosted-runners/limitsreadUATIATGET /orgs/{org}/actions/hosted-runners/machine-sizesreadUATIATGET /orgs/{org}/actions/hosted-runners/platformsreadUATIATGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}readUATIATGET /orgs/{org}/actions/oidc/customization/subreadUATIATGET /orgs/{org}/actions/permissionsreadUATIATGET /orgs/{org}/actions/permissions/repositoriesreadUATIATGET /orgs/{org}/actions/permissions/selected-actionsreadUATIATGET /orgs/{org}/actions/permissions/workflowreadUATIATGET /orgs/{org}/copilot/billingreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/installationsreadUATIATGET /orgs/{org}/interaction-limitsreadUATIATGET /orgs/{org}/members/{username}/copilotreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/security-managersreadUATIATGET /orgs/{org}/settings/billing/actionsreadUATIATGET /orgs/{org}/settings/billing/packagesreadUATIATGET /orgs/{org}/settings/billing/shared-storagereadUATIATGET /orgs/{org}/team/{team_slug}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Blocking users"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/blocks/{username}writeUATIATDELETE /orgs/{org}/blocks/{username}writeUATIATGET /orgs/{org}/blocksreadUATIATGET /orgs/{org}/blocks/{username}readUATIATOrganization permissions for "Campaigns"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/campaignswriteUATIATPATCH /orgs/{org}/campaigns/{campaign_number}writeUATIATDELETE /orgs/{org}/campaigns/{campaign_number}writeUATIATGET /orgs/{org}/campaignsreadUATIATGET /orgs/{org}/campaigns/{campaign_number}readUATIATOrganization permissions for "Custom organization roles"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/organization-rolesreadUATIATGET /orgs/{org}/organization-roles/{role_id}readUATIATOrganization permissions for "Custom properties"EndpointAccessToken typesAdditional permissionsPATCH /orgs/{org}/properties/schemaadminUATIATPUT /orgs/{org}/properties/schema/{custom_property_name}adminUATIATDELETE /orgs/{org}/properties/schema/{custom_property_name}adminUATIATPATCH /orgs/{org}/properties/valueswriteUATIATGET /orgs/{org}/properties/schemareadUATIATGET /orgs/{org}/properties/schema/{custom_property_name}readUATIATGET /orgs/{org}/properties/valuesreadUATIATOrganization permissions for "Events"EndpointAccessToken typesAdditional permissionsGET /users/{username}/events/orgs/{org}readUATOrganization permissions for "GitHub Copilot Business"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billingreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/copilotreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/team/{team_slug}/copilot/metricsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Issue Types"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/issue-typeswriteUATIATPUT /orgs/{org}/issue-types/{issue_type_id}writeUATIATDELETE /orgs/{org}/issue-types/{issue_type_id}writeUATIATGET /orgs/{org}/issue-typesreadUATIATOrganization permissions for "Members"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/invitationswriteUATIATDELETE /orgs/{org}/invitations/{invitation_id}writeUATIATDELETE /orgs/{org}/members/{username}writeUATIATPUT /orgs/{org}/memberships/{username}writeUATIATDELETE /orgs/{org}/memberships/{username}writeUATIATDELETE /orgs/{org}/organization-roles/teams/{team_slug}writeUATIATPUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/users/{username}writeUATIATPUT /orgs/{org}/organization-roles/users/{username}/{role_id}writeUATIATDELETE /orgs/{org}/organization-roles/users/{username}/{role_id}writeUATIATPUT /orgs/{org}/outside_collaborators/{username}writeUATIATDELETE /orgs/{org}/outside_collaborators/{username}writeUATIATPUT /orgs/{org}/public_members/{username}writeUATDELETE /orgs/{org}/public_members/{username}writeUATPOST /orgs/{org}/teamswriteUATIATPUT /teams/{team_id}/members/{username}writeUATIATDELETE /teams/{team_id}/members/{username}writeUATIATPATCH /user/memberships/orgs/{org}writeUATGET /orgs/{org}/failed_invitationsreadUATIATGET /orgs/{org}/invitationsreadUATIATGET /orgs/{org}/invitations/{invitation_id}/teamsreadUATIATGET /orgs/{org}/membersreadUATIATGET /orgs/{org}/members/{username}readUATIATGET /orgs/{org}/memberships/{username}readUATIATGET /orgs/{org}/organization-roles/{role_id}/teamsreadUATIATGET /orgs/{org}/organization-roles/{role_id}/usersreadUATIATGET /orgs/{org}/outside_collaboratorsreadUATIATGET /orgs/{org}/public_membersreadUATIATGET /orgs/{org}/public_members/{username}readUATIATGET /orgs/{org}/teamsreadUATIATGET /orgs/{org}/teams/{team_slug}/projectsreadUATIATGET /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /teams/{team_id}/members/{username}readUATIATGET /user/memberships/orgs/{org}readUATOrganization permissions for "Network configurations"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/settings/network-configurationswriteUATIATPATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}writeUATIATDELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}writeUATIATGET /orgs/{org}/settings/network-configurationsreadUATIATGET /orgs/{org}/settings/network-configurations/{network_configuration_id}readUATIATGET /orgs/{org}/settings/network-settings/{network_settings_id}readUATIATOrganization permissions for "Organization codespaces secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/codespaces/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/codespaces/secrets/{secret_name}writeUATIATPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespaces/secretsreadUATIATGET /orgs/{org}/codespaces/secrets/public-keyreadUATIATGET /orgs/{org}/codespaces/secrets/{secret_name}readUATIATGET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Organization codespaces settings"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/codespaces/accesswriteUATIATPOST /orgs/{org}/codespaces/access/selected_userswriteUATIATDELETE /orgs/{org}/codespaces/access/selected_userswriteUATIATOrganization permissions for "Organization codespaces"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Organization dependabot secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/dependabot/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/dependabot/secrets/{secret_name}writeUATIATPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/dependabot/secretsreadUATIATGET /orgs/{org}/dependabot/secrets/public-keyreadUATIATGET /orgs/{org}/dependabot/secrets/{secret_name}readUATIATGET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Organization private registries"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/private-registrieswriteUATIATPATCH /orgs/{org}/private-registries/{secret_name}writeUATIATDELETE /orgs/{org}/private-registries/{secret_name}writeUATIATGET /orgs/{org}/private-registriesreadUATIATGET /orgs/{org}/private-registries/public-keyreadUATIATGET /orgs/{org}/private-registries/{secret_name}readUATIATOrganization permissions for "Personal access token requests"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/personal-access-token-requestswriteUATIATPOST /orgs/{org}/personal-access-token-requests/{pat_request_id}writeUATIATGET /orgs/{org}/personal-access-token-requestsreadUATIATGET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesreadUATIATOrganization permissions for "Personal access tokens"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/personal-access-tokenswriteUATIATPOST /orgs/{org}/personal-access-tokens/{pat_id}writeUATIATGET /orgs/{org}/personal-access-tokensreadUATIATGET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesreadUATIATOrganization permissions for "Projects"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorsadminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}adminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionadminUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/projectswriteUATIATPATCH /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/projectsreadUATIATGET /projects/columns/cards/{card_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Secrets"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/actions/secrets/{secret_name}writeUATIATDELETE /orgs/{org}/actions/secrets/{secret_name}writeUATIATPUT /orgs/{org}/actions/secrets/{secret_name}/repositorieswriteUATIATPUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/secretsreadUATIATGET /orgs/{org}/actions/secrets/public-keyreadUATIATGET /orgs/{org}/actions/secrets/{secret_name}readUATIATGET /orgs/{org}/actions/secrets/{secret_name}/repositoriesreadUATIATOrganization permissions for "Self-hosted runners"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/actions/runner-groupswriteUATIATPATCH /orgs/{org}/actions/runner-groups/{runner_group_id}writeUATIATDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}writeUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositorieswriteUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnerswriteUATIATPUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writeUATIATDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writeUATIATPOST /orgs/{org}/actions/runners/generate-jitconfigwriteUATIATPOST /orgs/{org}/actions/runners/registration-tokenwriteUATIATPOST /orgs/{org}/actions/runners/remove-tokenwriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}writeUATIATPOST /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATPUT /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}/labelswriteUATIATDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}writeUATIATGET /orgs/{org}/actions/runner-groupsreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}readUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesreadUATIATGET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersreadUATIATGET /orgs/{org}/actions/runnersreadUATIATGET /orgs/{org}/actions/runners/downloadsreadUATIATGET /orgs/{org}/actions/runners/{runner_id}readUATIATGET /orgs/{org}/actions/runners/{runner_id}/labelsreadUATIATOrganization permissions for "Team discussions"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}writeUATIATDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}writeUATIATOrganization permissions for "Variables"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/actions/variableswriteUATIATPATCH /orgs/{org}/actions/variables/{name}writeUATIATDELETE /orgs/{org}/actions/variables/{name}writeUATIATPUT /orgs/{org}/actions/variables/{name}/repositorieswriteUATIATPUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/variablesreadUATIATGET /orgs/{org}/actions/variables/{name}readUATIATGET /orgs/{org}/actions/variables/{name}/repositoriesreadUATIATOrganization permissions for "Webhooks"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/hookswriteUATIATPATCH /orgs/{org}/hooks/{hook_id}writeUATIATDELETE /orgs/{org}/hooks/{hook_id}writeUATIATPATCH /orgs/{org}/hooks/{hook_id}/configwriteUATIATPOST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswriteUATIATPOST /orgs/{org}/hooks/{hook_id}/pingswriteUATIATGET /orgs/{org}/hooksreadUATIATGET /orgs/{org}/hooks/{hook_id}readUATIATGET /orgs/{org}/hooks/{hook_id}/configreadUATIATGET /orgs/{org}/hooks/{hook_id}/deliveriesreadUATIATGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}readUATIATRepository permissions for "Actions"EndpointAccessToken typesAdditional permissionsDELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}writeUATIATDELETE /repos/{owner}/{repo}/actions/cacheswriteUATIATDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}writeUATIATPOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunwriteUATIATPUT /repos/{owner}/{repo}/actions/oidc/customization/subwriteUATIATDELETE /repos/{owner}/{repo}/actions/runs/{run_id}writeUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/approvewriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelwriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelwriteUATIATDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logswriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunwriteUATIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobswriteUATIATPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablewriteUATIATPOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatcheswriteUATIATPUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enablewriteUATIATGET /repos/{owner}/{repo}/actions/artifactsreadUATIATGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}readUATIATGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}readUATIATGET /repos/{owner}/{repo}/actions/cache/usagereadUATIATGET /repos/{owner}/{repo}/actions/cachesreadUATIATGET /repos/{owner}/{repo}/actions/jobs/{job_id}readUATIATGET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsreadUATIATGET /repos/{owner}/{repo}/actions/oidc/customization/subreadUATIATGET /repos/{owner}/{repo}/actions/runsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}readUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}readUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsreadUATIATGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingreadUATIATGET /repos/{owner}/{repo}/actions/workflowsreadUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}readUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsreadUATIATGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingreadUATIATGET /repos/{owner}/{repo}/environmentsreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}readUATIATRepository permissions for "Administration"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/reposwriteUATIATPATCH /repos/{owner}/{repo}writeUATIATDELETE /repos/{owner}/{repo}writeUATIATPUT /repos/{owner}/{repo}/actions/permissionswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/accesswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/selected-actionswriteUATIATPUT /repos/{owner}/{repo}/actions/permissions/workflowwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/registration-tokenwriteUATIATPOST /repos/{owner}/{repo}/actions/runners/remove-tokenwriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}writeUATIATPOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATPUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteUATIATDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}writeUATIATPOST /repos/{owner}/{repo}/autolinkswriteUATIATDELETE /repos/{owner}/{repo}/autolinks/{autolink_id}writeUATIATPUT /repos/{owner}/{repo}/automated-security-fixeswriteUATIATDELETE /repos/{owner}/{repo}/automated-security-fixeswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protectionwriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protectionwriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswriteUATIATPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswriteUATIATPATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteUATIATPOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATPUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteUATIATPATCH /repos/{owner}/{repo}/code-scanning/default-setupwriteUATIATPUT /repos/{owner}/{repo}/collaborators/{username}writeUATIATDELETE /repos/{owner}/{repo}/collaborators/{username}writeUATIATPUT /repos/{owner}/{repo}/environments/{environment_name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policieswriteUATIATPUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_ruleswriteUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}writeUATIATPOST /repos/{owner}/{repo}/forkswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/interaction-limitswriteUATIATDELETE /repos/{owner}/{repo}/interaction-limitswriteUATIATPATCH /repos/{owner}/{repo}/invitations/{invitation_id}writeUATIATDELETE /repos/{owner}/{repo}/invitations/{invitation_id}writeUATIATPOST /repos/{owner}/{repo}/keyswriteUATIATDELETE /repos/{owner}/{repo}/keys/{key_id}writeUATIATPOST /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pages/healthwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/private-vulnerability-reportingwriteUATIATDELETE /repos/{owner}/{repo}/private-vulnerability-reportingwriteUATIATPOST /repos/{owner}/{repo}/rulesetswriteUATIATGET /repos/{owner}/{repo}/rulesets/rule-suiteswriteUATIATGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}writeUATIATPUT /repos/{owner}/{repo}/rulesets/{ruleset_id}writeUATIATDELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}writeUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historywriteUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}writeUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forkswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/tags/protectionwriteUATIATDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}writeUATIATPUT /repos/{owner}/{repo}/topicswriteUATIATPOST /repos/{owner}/{repo}/transferwriteUATPUT /repos/{owner}/{repo}/vulnerability-alertswriteUATIATDELETE /repos/{owner}/{repo}/vulnerability-alertswriteUATIATPOST /repos/{template_owner}/{template_repo}/generatewriteUATIATPOST /user/reposwriteUATPATCH /user/repository_invitations/{invitation_id}writeUATDELETE /user/repository_invitations/{invitation_id}writeUATGET /repos/{owner}/{repo}/actions/permissionsreadUATIATGET /repos/{owner}/{repo}/actions/permissions/accessreadUATIATGET /repos/{owner}/{repo}/actions/permissions/selected-actionsreadUATIATGET /repos/{owner}/{repo}/actions/permissions/workflowreadUATIATGET /repos/{owner}/{repo}/actions/runnersreadUATIATGET /repos/{owner}/{repo}/actions/runners/downloadsreadUATIATGET /repos/{owner}/{repo}/actions/runners/{runner_id}readUATIATGET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsreadUATIATGET /repos/{owner}/{repo}/autolinksreadUATIATGET /repos/{owner}/{repo}/autolinks/{autolink_id}readUATIATGET /repos/{owner}/{repo}/automated-security-fixesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protectionreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsreadUATIATGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersreadUATIATGET /repos/{owner}/{repo}/code-scanning/default-setupreadUATIATGET /repos/{owner}/{repo}/code-security-configurationreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsreadUATIATGET /repos/{owner}/{repo}/interaction-limitsreadUATIATGET /repos/{owner}/{repo}/invitationsreadUATIATGET /repos/{owner}/{repo}/keysreadUATIATGET /repos/{owner}/{repo}/keys/{key_id}readUATIATGET /repos/{owner}/{repo}/tags/protectionreadUATIATGET /repos/{owner}/{repo}/teamsreadUATIATGET /repos/{owner}/{repo}/traffic/clonesreadUATIATGET /repos/{owner}/{repo}/traffic/popular/pathsreadUATIATGET /repos/{owner}/{repo}/traffic/popular/referrersreadUATIATGET /repos/{owner}/{repo}/traffic/viewsreadUATIATGET /repos/{owner}/{repo}/vulnerability-alertsreadUATIATGET /user/repository_invitationsreadUATRepository permissions for "Attestations"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/attestationswriteUATIATGET /repos/{owner}/{repo}/attestations/{subject_digest}readUATIATRepository permissions for "Checks"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/check-runswriteUATIATPATCH /repos/{owner}/{repo}/check-runs/{check_run_id}writeUATIATPOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestwriteUATIATPOST /repos/{owner}/{repo}/check-suiteswriteUATIATPATCH /repos/{owner}/{repo}/check-suites/preferenceswriteUATIATPOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestwriteUATIATGET /repos/{owner}/{repo}/check-runs/{check_run_id}readUATIATGET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsreadUATIATGET /repos/{owner}/{repo}/check-suites/{check_suite_id}readUATIATGET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/check-runsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/check-suitesreadUATIATRepository permissions for "Code scanning alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixwriteUATIATDELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/sarifswriteUATIATGET /orgs/{org}/code-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/code-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}readUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixreadUATIATGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesreadUATIATGET /repos/{owner}/{repo}/code-scanning/analysesreadUATIATGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}readUATIATGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}readUATIATRepository permissions for "Codespaces lifecycle admin"EndpointAccessToken typesAdditional permissionsPOST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /user/codespaces/{codespace_name}/exportswriteUATPOST /user/codespaces/{codespace_name}/startwriteUATPOST /user/codespaces/{codespace_name}/stopwriteUATGET /user/codespaces/{codespace_name}/exports/{export_id}readUATRepository permissions for "Codespaces metadata"EndpointAccessToken typesAdditional permissionsGET /repos/{owner}/{repo}/codespaces/devcontainersreadUATIATGET /repos/{owner}/{repo}/codespaces/machinesreadUATIATGET /user/codespaces/{codespace_name}/machinesreadUATRepository permissions for "Codespaces secrets"EndpointAccessToken typesAdditional permissionsGET /repos/{owner}/{repo}/codespaces/secretswriteUATIATGET /repos/{owner}/{repo}/codespaces/secrets/public-keywriteUATIATGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATPUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeUATIATRepository permissions for "Codespaces"EndpointAccessToken typesAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/codespaceswriteUATGET /repos/{owner}/{repo}/codespaces/newwriteUATGET /repos/{owner}/{repo}/codespaces/permissions_checkwriteUATPOST /repos/{owner}/{repo}/pulls/{pull_number}/codespaceswriteUATPOST /user/codespaceswriteUATPATCH /user/codespaces/{codespace_name}writeUATDELETE /user/codespaces/{codespace_name}writeUATPOST /user/codespaces/{codespace_name}/publishwriteUATGET /orgs/{org}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/codespacesreadUATGET /user/codespacesreadUATGET /user/codespaces/{codespace_name}readUATRepository permissions for "Commit statuses"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/statuses/{sha}writeUATIATGET /repos/{owner}/{repo}/commits/{ref}/statusreadUATIATGET /repos/{owner}/{repo}/commits/{ref}/statusesreadUATIATRepository permissions for "Contents"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/branches/{branch}/renamewriteUATIATPOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitswriteUATIATDELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}writeUATIATPOST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyseswriteUATIATPATCH /repos/{owner}/{repo}/comments/{comment_id}writeUATIATDELETE /repos/{owner}/{repo}/comments/{comment_id}writeUATIATPOST /repos/{owner}/{repo}/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}writeUATIATPUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/dependency-graph/snapshotswriteUATIATPOST /repos/{owner}/{repo}/dispatcheswriteUATIATPOST /repos/{owner}/{repo}/git/blobswriteUATIATPOST /repos/{owner}/{repo}/git/commitswriteUATIATPOST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/git/refs/{ref}writeUATIATPOST /repos/{owner}/{repo}/git/tagswriteUATIATPOST /repos/{owner}/{repo}/git/treeswriteUATIATPUT /repos/{owner}/{repo}/importwriteUATPATCH /repos/{owner}/{repo}/importwriteUATDELETE /repos/{owner}/{repo}/importwriteUATPATCH /repos/{owner}/{repo}/import/authors/{author_id}writeUATPATCH /repos/{owner}/{repo}/import/lfswriteUATPOST /repos/{owner}/{repo}/merge-upstreamwriteUATIATPOST /repos/{owner}/{repo}/mergeswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/mergewriteUATIATPOST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}writeUATIATDELETE /repos/{owner}/{repo}/releases/assets/{asset_id}writeUATIATPOST /repos/{owner}/{repo}/releases/generate-noteswriteUATIATPATCH /repos/{owner}/{repo}/releases/{release_id}writeUATIATDELETE /repos/{owner}/{repo}/releases/{release_id}writeUATIATPOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasseswriteUATGET /repos/{owner}/{repo}/activityreadUATIATGET /repos/{owner}/{repo}/branchesreadUATIATGET /repos/{owner}/{repo}/branches/{branch}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/databasesreadUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}readUATIATGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}readUATIATGET /repos/{owner}/{repo}/codeowners/errorsreadUATIATGET /repos/{owner}/{repo}/commitsreadUATIATGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headreadUATIATPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadUATIATGET /repos/{owner}/{repo}/commits/{ref}readUATIATGET /repos/{owner}/{repo}/community/profilereadUATIATGET /repos/{owner}/{repo}/compare/{basehead}readUATIATGET /repos/{owner}/{repo}/contents/{path}readUATIATGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}readUATIATGET /repos/{owner}/{repo}/dependency-graph/sbomreadUATIATPOST /repos/{owner}/{repo}/forksreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/git/blobs/{file_sha}readUATIATGET /repos/{owner}/{repo}/git/commits/{commit_sha}readUATIATGET /repos/{owner}/{repo}/git/matching-refs/{ref}readUATIATGET /repos/{owner}/{repo}/git/ref/{ref}readUATIATGET /repos/{owner}/{repo}/git/tags/{tag_sha}readUATIATGET /repos/{owner}/{repo}/git/trees/{tree_sha}readUATIATGET /repos/{owner}/{repo}/importreadUATGET /repos/{owner}/{repo}/import/authorsreadUATGET /repos/{owner}/{repo}/import/large_filesreadUATGET /repos/{owner}/{repo}/pulls/{pull_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/releasesreadUATIATGET /repos/{owner}/{repo}/releases/assets/{asset_id}readUATIATGET /repos/{owner}/{repo}/releases/latestreadUATIATGET /repos/{owner}/{repo}/releases/tags/{tag}readUATIATGET /repos/{owner}/{repo}/releases/{release_id}readUATIATGET /repos/{owner}/{repo}/releases/{release_id}/assetsreadUATIATGET /repos/{owner}/{repo}/tarball/{ref}readUATIATGET /repos/{owner}/{repo}/zipball/{ref}readUATIATRepository permissions for "Custom properties"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/properties/valueswriteUATIATRepository permissions for "Dependabot alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}writeUATIATGET /orgs/{org}/dependabot/alertsreadUATIATGET /repos/{owner}/{repo}/dependabot/alertsreadUATIATGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}readUATIATRepository permissions for "Dependabot secrets"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeUATIATGET /repos/{owner}/{repo}/dependabot/secretsreadUATIATGET /repos/{owner}/{repo}/dependabot/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}readUATIATRepository permissions for "Deployments"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rulewriteIATPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentswriteUATIATPOST /repos/{owner}/{repo}/deploymentswriteUATIATDELETE /repos/{owner}/{repo}/deployments/{deployment_id}writeUATIATPOST /repos/{owner}/{repo}/deployments/{deployment_id}/statuseswriteUATIATGET /repos/{owner}/{repo}/deploymentsreadUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}readUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesreadUATIATGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}readUATIATRepository permissions for "Environments"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writeUATIATPOST /repos/{owner}/{repo}/environments/{environment_name}/variableswriteUATIATPATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeUATIATDELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secretsreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}readUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/variablesreadUATIATGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}readUATIATRepository permissions for "Issues"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/issueswriteUATIATPATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}writeUATIATPATCH /repos/{owner}/{repo}/issues/{issue_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}writeUATIATDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issuewriteUATIATPOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issueswriteUATIATPATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritywriteUATIATPOST /repos/{owner}/{repo}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assigneesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issuesreadUATIATGET /repos/{owner}/{repo}/issues/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/issues/eventsreadUATIATGET /repos/{owner}/{repo}/issues/events/{event_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}readUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsreadUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesreadUATIATGET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Metadata"EndpointAccessToken typesAdditional permissionsPUT /orgs/{org}/actions/permissions/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/reposreadUATIATGET /repos/{owner}/{repo}readUATIATGET /repos/{owner}/{repo}/collaboratorsreadUATIATGET /repos/{owner}/{repo}/collaborators/{username}readUATIATGET /repos/{owner}/{repo}/collaborators/{username}/permissionreadUATIATGET /repos/{owner}/{repo}/commentsreadUATIATGET /repos/{owner}/{repo}/comments/{comment_id}readUATIATGET /repos/{owner}/{repo}/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadUATIATGET /repos/{owner}/{repo}/contributorsreadUATIATGET /repos/{owner}/{repo}/eventsreadUATIATGET /repos/{owner}/{repo}/forksreadUATIATGET /repos/{owner}/{repo}/languagesreadUATIATGET /repos/{owner}/{repo}/licensereadUATIATGET /repos/{owner}/{repo}/private-vulnerability-reportingreadUATIATGET /repos/{owner}/{repo}/properties/valuesreadUATIATGET /repos/{owner}/{repo}/rules/branches/{branch}readUATIATGET /repos/{owner}/{repo}/rulesetsreadUATIATGET /repos/{owner}/{repo}/rulesets/{ruleset_id}readUATIATGET /repos/{owner}/{repo}/stargazersreadUATIATGET /repos/{owner}/{repo}/stats/code_frequencyreadUATIATGET /repos/{owner}/{repo}/stats/commit_activityreadUATIATGET /repos/{owner}/{repo}/stats/contributorsreadUATIATGET /repos/{owner}/{repo}/stats/participationreadUATIATGET /repos/{owner}/{repo}/stats/punch_cardreadUATIATGET /repos/{owner}/{repo}/subscribersreadUATIATGET /repos/{owner}/{repo}/tagsreadUATIATGET /repos/{owner}/{repo}/topicsreadUATIATGET /repositoriesreadUATIATGET /search/labelsreadUATIATPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/installations/{installation_id}/repositoriesreadUATGET /user/reposreadUATGET /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/reposreadUATIATRepository permissions for "Pages"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pages/buildswriteUATIATPOST /repos/{owner}/{repo}/pages/deploymentswriteUATIATPOST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelwriteUATIATGET /repos/{owner}/{repo}/pages/healthwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pagesreadUATIATGET /repos/{owner}/{repo}/pages/buildsreadUATIATGET /repos/{owner}/{repo}/pages/builds/latestreadUATIATGET /repos/{owner}/{repo}/pages/builds/{build_id}readUATIATGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}readUATIATRepository permissions for "Projects"EndpointAccessToken typesAdditional permissionsPATCH /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/projectswriteUATIATGET /projects/columns/cards/{card_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/projectsreadUATIATRepository permissions for "Pull requests"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/issues/{issue_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/labelswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pullswriteUATIATPATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}writeUATIATDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}writeUATIATPOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionswriteUATIATDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}writeUATIATPATCH /repos/{owner}/{repo}/pulls/{pull_number}writeUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/commentswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replieswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswriteUATIATDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writeUATIATDELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writeUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalswriteUATIATPOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventswriteUATIATPUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchwriteUATIATGET /repos/{owner}/{repo}/assigneesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/commits/{commit_sha}/pullsreadUATIATGET /repos/{owner}/{repo}/issues/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/events/{event_id}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pullsreadUATIATGET /repos/{owner}/{repo}/pulls/commentsreadUATIATGET /repos/{owner}/{repo}/pulls/comments/{comment_id}readUATIATGET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}readUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/filesreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/mergereadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsreadUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}readUATIATGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsreadUATIATRepository permissions for "Repository security advisories"EndpointAccessToken typesAdditional permissionsGET /orgs/{org}/security-advisorieswriteUATIATPOST /repos/{owner}/{repo}/security-advisorieswriteUATIATPOST /repos/{owner}/{repo}/security-advisories/reportswriteUATIATPATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}writeUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvewriteUATIATGET /repos/{owner}/{repo}/security-advisoriesreadUATIATGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}readUATIATPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksreadUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Secret scanning alerts"EndpointAccessToken typesAdditional permissionsPATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}writeUATIATGET /orgs/{org}/secret-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/alertsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}readUATIATGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsreadUATIATGET /repos/{owner}/{repo}/secret-scanning/scan-historyreadUATIATRepository permissions for "Secrets"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/actions/secrets/{secret_name}writeUATIATDELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}writeUATIATGET /repos/{owner}/{repo}/actions/organization-secretsreadUATIATGET /repos/{owner}/{repo}/actions/secretsreadUATIATGET /repos/{owner}/{repo}/actions/secrets/public-keyreadUATIATGET /repos/{owner}/{repo}/actions/secrets/{secret_name}readUATIATRepository permissions for "Variables"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/actions/variableswriteUATIATPATCH /repos/{owner}/{repo}/actions/variables/{name}writeUATIATDELETE /repos/{owner}/{repo}/actions/variables/{name}writeUATIATGET /repos/{owner}/{repo}/actions/organization-variablesreadUATIATGET /repos/{owner}/{repo}/actions/variablesreadUATIATGET /repos/{owner}/{repo}/actions/variables/{name}readUATIATRepository permissions for "Webhooks"EndpointAccessToken typesAdditional permissionsPOST /repos/{owner}/{repo}/hookswriteUATIATPATCH /repos/{owner}/{repo}/hooks/{hook_id}writeUATIATDELETE /repos/{owner}/{repo}/hooks/{hook_id}writeUATIATPATCH /repos/{owner}/{repo}/hooks/{hook_id}/configwriteUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswriteUATIATGET /repos/{owner}/{repo}/hooksreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}readUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/configreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesreadUATIATGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}readUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsreadUATIATPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsreadUATIATRepository permissions for "Workflows"EndpointAccessToken typesAdditional permissionsPUT /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteUATIATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.User permissions for "Block another user"EndpointAccessToken typesAdditional permissionsPUT /user/blocks/{username}writeUATDELETE /user/blocks/{username}writeUATGET /user/blocksreadUATGET /user/blocks/{username}readUATUser permissions for "Codespaces user secrets"EndpointAccessToken typesAdditional permissionsPUT /user/codespaces/secrets/{secret_name}writeUATDELETE /user/codespaces/secrets/{secret_name}writeUATPUT /user/codespaces/secrets/{secret_name}/repositorieswriteUATPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/codespaces/secretsreadUATGET /user/codespaces/secrets/public-keyreadUATGET /user/codespaces/secrets/{secret_name}readUATGET /user/codespaces/secrets/{secret_name}/repositoriesreadUATUser permissions for "Email addresses"EndpointAccessToken typesAdditional permissionsPATCH /user/email/visibilitywriteUATPOST /user/emailswriteUATDELETE /user/emailswriteUATGET /user/emailsreadUATGET /user/public_emailsreadUATUser permissions for "Followers"EndpointAccessToken typesAdditional permissionsPUT /user/following/{username}writeUATDELETE /user/following/{username}writeUATGET /user/followersreadUATGET /user/followingreadUATGET /user/following/{username}readUATUser permissions for "GPG keys"EndpointAccessToken typesAdditional permissionsPOST /user/gpg_keyswriteUATDELETE /user/gpg_keys/{gpg_key_id}writeUATGET /user/gpg_keysreadUATGET /user/gpg_keys/{gpg_key_id}readUATUser permissions for "Gists"EndpointAccessToken typesAdditional permissionsPOST /gistswriteUATPATCH /gists/{gist_id}writeUATDELETE /gists/{gist_id}writeUATPOST /gists/{gist_id}/commentswriteUATPATCH /gists/{gist_id}/comments/{comment_id}writeUATDELETE /gists/{gist_id}/comments/{comment_id}writeUATPOST /gists/{gist_id}/forkswriteUATPUT /gists/{gist_id}/starwriteUATDELETE /gists/{gist_id}/starwriteUATUser permissions for "Git SSH keys"EndpointAccessToken typesAdditional permissionsPOST /user/keyswriteUATDELETE /user/keys/{key_id}writeUATGET /user/keysreadUATGET /user/keys/{key_id}readUATGET /users/{username}/keysreadUATIATUser permissions for "Interaction limits"EndpointAccessToken typesAdditional permissionsPUT /user/interaction-limitswriteUATDELETE /user/interaction-limitswriteUATGET /user/interaction-limitsreadUATUser permissions for "Plan"EndpointAccessToken typesAdditional permissionsGET /users/{username}/settings/billing/actionsreadUATGET /users/{username}/settings/billing/packagesreadUATGET /users/{username}/settings/billing/shared-storagereadUATGET /users/{username}/settings/billing/usagereadUATUser permissions for "Profile"EndpointAccessToken typesAdditional permissionsPATCH /userwriteUATPOST /user/social_accountswriteUATDELETE /user/social_accountswriteUATUser permissions for "SSH signing keys"EndpointAccessToken typesAdditional permissionsPOST /user/ssh_signing_keyswriteUATDELETE /user/ssh_signing_keys/{ssh_signing_key_id}writeUATGET /user/ssh_signing_keysreadUATGET /user/ssh_signing_keys/{ssh_signing_key_id}readUATUser permissions for "Starring"EndpointAccessToken typesAdditional permissionsPUT /user/starred/{owner}/{repo}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}writeUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/starredreadUATGET /user/starred/{owner}/{repo}readUATMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/starredreadUATIATUser permissions for "Watching"EndpointAccessToken typesAdditional permissionsGET /user/subscriptionsreadUATGET /users/{username}/subscriptionsreadUATIAT\n\n\n\nREST API/Authentication/Permissions for fine-grained PATsPermissions required for fine-grained personal access tokensFor each permission granted to a fine-grained personal access token, these are the REST API endpoints that the app can use.In this articleAbout permissions required for fine-grained personal access tokenOrganization permissions for "API Insights"Organization permissions for "Administration"Organization permissions for "Blocking users"Organization permissions for "Campaigns"Organization permissions for "Custom organization roles"Organization permissions for "Custom properties"Organization permissions for "Events"Organization permissions for "GitHub Copilot Business"Organization permissions for "Issue Types"Organization permissions for "Members"Organization permissions for "Network configurations"Organization permissions for "Organization codespaces secrets"Organization permissions for "Organization codespaces settings"Organization permissions for "Organization codespaces"Organization permissions for "Organization dependabot secrets"Organization permissions for "Organization private registries"Organization permissions for "Personal access token requests"Organization permissions for "Personal access tokens"Organization permissions for "Projects"Organization permissions for "Secrets"Organization permissions for "Self-hosted runners"Organization permissions for "Team discussions"Organization permissions for "Variables"Organization permissions for "Webhooks"Repository permissions for "Actions"Repository permissions for "Administration"Repository permissions for "Attestations"Repository permissions for "Checks"Repository permissions for "Code scanning alerts"Repository permissions for "Codespaces lifecycle admin"Repository permissions for "Codespaces metadata"Repository permissions for "Codespaces secrets"Repository permissions for "Codespaces"Repository permissions for "Commit statuses"Repository permissions for "Contents"Repository permissions for "Custom properties"Repository permissions for "Dependabot alerts"Repository permissions for "Dependabot secrets"Repository permissions for "Deployments"Repository permissions for "Environments"Repository permissions for "Issues"Repository permissions for "Metadata"Repository permissions for "Pages"Repository permissions for "Projects"Repository permissions for "Pull requests"Repository permissions for "Repository security advisories"Repository permissions for "Secret scanning alerts"Repository permissions for "Secrets"Repository permissions for "Variables"Repository permissions for "Webhooks"Repository permissions for "Workflows"User permissions for "Block another user"User permissions for "Codespaces user secrets"User permissions for "Email addresses"User permissions for "Followers"User permissions for "GPG keys"User permissions for "Gists"User permissions for "Git SSH keys"User permissions for "Interaction limits"User permissions for "Plan"User permissions for "Profile"User permissions for "SSH signing keys"User permissions for "Starring"User permissions for "Watching"About permissions required for fine-grained personal access token
When you create a fine-grained personal access token, you grant it a set of permissions. Permissions define what resources the GitHub App can access via the API. For more information, see Managing your personal access tokens.
To help you choose the correct permissions, you will receive the X-Accepted-GitHub-Permissions header in the REST API response. The header will tell you what permissions are required in order to access the endpoint. For more information, see Troubleshooting the REST API.
These permissions are required to access private resources. Some endpoints can also be used to access public resources without these permissions. To see whether an endpoint can access public resources without a permission, see the documentation for that endpoint.
Some endpoints require more than one permission. Other endpoints work with any one permission from a set of permissions. In these cases, the "Additional permissions" column will include a checkmark. For full details about the permissions that are required to use the endpoint, see the documentation for that endpoint.Organization permissions for "API Insights"EndpointAccessAdditional permissionsGET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}readGET /orgs/{org}/insights/api/subject-statsreadGET /orgs/{org}/insights/api/summary-statsreadGET /orgs/{org}/insights/api/summary-stats/users/{user_id}readGET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}readGET /orgs/{org}/insights/api/time-statsreadGET /orgs/{org}/insights/api/time-stats/users/{user_id}readGET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}readGET /orgs/{org}/insights/api/user-stats/{user_id}readOrganization permissions for "Administration"EndpointAccessAdditional permissionsPATCH /orgs/{org}writeDELETE /orgs/{org}writePOST /orgs/{org}/actions/hosted-runnerswritePATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writeDELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}writePUT /orgs/{org}/actions/oidc/customization/subwritePUT /orgs/{org}/actions/permissionswritePUT /orgs/{org}/actions/permissions/repositorieswritePUT /orgs/{org}/actions/permissions/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/permissions/selected-actionswritePUT /orgs/{org}/actions/permissions/workflowwriteGET /orgs/{org}/code-security/configurationswritePOST /orgs/{org}/code-security/configurationswriteGET /orgs/{org}/code-security/configurations/defaultswriteDELETE /orgs/{org}/code-security/configurations/detachwriteGET /orgs/{org}/code-security/configurations/{configuration_id}writePATCH /orgs/{org}/code-security/configurations/{configuration_id}writeDELETE /orgs/{org}/code-security/configurations/{configuration_id}writePOST /orgs/{org}/code-security/configurations/{configuration_id}/attachwritePUT /orgs/{org}/code-security/configurations/{configuration_id}/defaultswriteGET /orgs/{org}/code-security/configurations/{configuration_id}/repositorieswritePOST /orgs/{org}/copilot/billing/selected_teamswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/interaction-limitswriteDELETE /orgs/{org}/interaction-limitswriteGET /orgs/{org}/rulesetswritePOST /orgs/{org}/rulesetswriteGET /orgs/{org}/rulesets/rule-suiteswriteGET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}writeGET /orgs/{org}/rulesets/{ruleset_id}writePUT /orgs/{org}/rulesets/{ruleset_id}writeDELETE /orgs/{org}/rulesets/{ruleset_id}writeGET /orgs/{org}/rulesets/{ruleset_id}/historywriteGET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}writePUT /orgs/{org}/security-managers/teams/{team_slug}writeDELETE /orgs/{org}/security-managers/teams/{team_slug}writePOST /orgs/{org}/{security_product}/{enablement}writeGET /organizations/{org}/settings/billing/usagereadGET /orgs/{org}/actions/cache/usagereadGET /orgs/{org}/actions/cache/usage-by-repositoryreadGET /orgs/{org}/actions/hosted-runnersreadGET /orgs/{org}/actions/hosted-runners/images/github-ownedreadGET /orgs/{org}/actions/hosted-runners/images/partnerreadGET /orgs/{org}/actions/hosted-runners/limitsreadGET /orgs/{org}/actions/hosted-runners/machine-sizesreadGET /orgs/{org}/actions/hosted-runners/platformsreadGET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}readGET /orgs/{org}/actions/oidc/customization/subreadGET /orgs/{org}/actions/permissionsreadGET /orgs/{org}/actions/permissions/repositoriesreadGET /orgs/{org}/actions/permissions/selected-actionsreadGET /orgs/{org}/actions/permissions/workflowreadGET /orgs/{org}/copilot/billingreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/installationsreadGET /orgs/{org}/interaction-limitsreadGET /orgs/{org}/members/{username}/copilotreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/security-managersreadGET /orgs/{org}/settings/billing/actionsreadGET /orgs/{org}/settings/billing/packagesreadGET /orgs/{org}/settings/billing/shared-storagereadGET /orgs/{org}/team/{team_slug}/copilot/metricsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Blocking users"EndpointAccessAdditional permissionsPUT /orgs/{org}/blocks/{username}writeDELETE /orgs/{org}/blocks/{username}writeGET /orgs/{org}/blocksreadGET /orgs/{org}/blocks/{username}readOrganization permissions for "Campaigns"EndpointAccessAdditional permissionsPOST /orgs/{org}/campaignswritePATCH /orgs/{org}/campaigns/{campaign_number}writeDELETE /orgs/{org}/campaigns/{campaign_number}writeGET /orgs/{org}/campaignsreadGET /orgs/{org}/campaigns/{campaign_number}readOrganization permissions for "Custom organization roles"EndpointAccessAdditional permissionsGET /orgs/{org}/organization-rolesreadGET /orgs/{org}/organization-roles/{role_id}readOrganization permissions for "Custom properties"EndpointAccessAdditional permissionsPATCH /orgs/{org}/properties/schemaadminPUT /orgs/{org}/properties/schema/{custom_property_name}adminDELETE /orgs/{org}/properties/schema/{custom_property_name}adminPATCH /orgs/{org}/properties/valueswriteGET /orgs/{org}/properties/schemareadGET /orgs/{org}/properties/schema/{custom_property_name}readGET /orgs/{org}/properties/valuesreadOrganization permissions for "Events"EndpointAccessAdditional permissionsGET /users/{username}/events/orgs/{org}readOrganization permissions for "GitHub Copilot Business"EndpointAccessAdditional permissionsPOST /orgs/{org}/copilot/billing/selected_teamswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_teamswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/copilot/billing/selected_userswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/copilot/billing/selected_userswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billingreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/billing/seatsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/copilot/metricsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/copilotreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/team/{team_slug}/copilot/metricsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Issue Types"EndpointAccessAdditional permissionsPOST /orgs/{org}/issue-typeswritePUT /orgs/{org}/issue-types/{issue_type_id}writeDELETE /orgs/{org}/issue-types/{issue_type_id}writeGET /orgs/{org}/issue-typesreadOrganization permissions for "Members"EndpointAccessAdditional permissionsPOST /orgs/{org}/invitationswriteDELETE /orgs/{org}/invitations/{invitation_id}writeDELETE /orgs/{org}/members/{username}writePUT /orgs/{org}/memberships/{username}writeDELETE /orgs/{org}/memberships/{username}writeDELETE /orgs/{org}/organization-roles/teams/{team_slug}writePUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeDELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}writeDELETE /orgs/{org}/organization-roles/users/{username}writePUT /orgs/{org}/organization-roles/users/{username}/{role_id}writeDELETE /orgs/{org}/organization-roles/users/{username}/{role_id}writePUT /orgs/{org}/outside_collaborators/{username}writeDELETE /orgs/{org}/outside_collaborators/{username}writePUT /orgs/{org}/public_members/{username}writeDELETE /orgs/{org}/public_members/{username}writePOST /orgs/{org}/teamswritePUT /teams/{team_id}/members/{username}writeDELETE /teams/{team_id}/members/{username}writePATCH /user/memberships/orgs/{org}writeGET /orgs/{org}/failed_invitationsreadGET /orgs/{org}/invitationsreadGET /orgs/{org}/invitations/{invitation_id}/teamsreadGET /orgs/{org}/membersreadGET /orgs/{org}/members/{username}readGET /orgs/{org}/memberships/{username}readGET /orgs/{org}/organization-roles/{role_id}/teamsreadGET /orgs/{org}/organization-roles/{role_id}/usersreadGET /orgs/{org}/outside_collaboratorsreadGET /orgs/{org}/public_membersreadGET /orgs/{org}/public_members/{username}readGET /orgs/{org}/teamsreadGET /orgs/{org}/teams/{team_slug}/projectsreadGET /orgs/{org}/teams/{team_slug}/projects/{project_id}readPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /teams/{team_id}/members/{username}readGET /user/memberships/orgs/{org}readOrganization permissions for "Network configurations"EndpointAccessAdditional permissionsPOST /orgs/{org}/settings/network-configurationswritePATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}writeDELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}writeGET /orgs/{org}/settings/network-configurationsreadGET /orgs/{org}/settings/network-configurations/{network_configuration_id}readGET /orgs/{org}/settings/network-settings/{network_settings_id}readOrganization permissions for "Organization codespaces secrets"EndpointAccessAdditional permissionsPUT /orgs/{org}/codespaces/secrets/{secret_name}writeDELETE /orgs/{org}/codespaces/secrets/{secret_name}writePUT /orgs/{org}/codespaces/secrets/{secret_name}/repositorieswritePUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespaces/secretsreadGET /orgs/{org}/codespaces/secrets/public-keyreadGET /orgs/{org}/codespaces/secrets/{secret_name}readGET /orgs/{org}/codespaces/secrets/{secret_name}/repositoriesreadOrganization permissions for "Organization codespaces settings"EndpointAccessAdditional permissionsPUT /orgs/{org}/codespaces/accesswritePOST /orgs/{org}/codespaces/access/selected_userswriteDELETE /orgs/{org}/codespaces/access/selected_userswriteOrganization permissions for "Organization codespaces"EndpointAccessAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/codespacesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Organization dependabot secrets"EndpointAccessAdditional permissionsPUT /orgs/{org}/dependabot/secrets/{secret_name}writeDELETE /orgs/{org}/dependabot/secrets/{secret_name}writePUT /orgs/{org}/dependabot/secrets/{secret_name}/repositorieswritePUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/dependabot/secretsreadGET /orgs/{org}/dependabot/secrets/public-keyreadGET /orgs/{org}/dependabot/secrets/{secret_name}readGET /orgs/{org}/dependabot/secrets/{secret_name}/repositoriesreadOrganization permissions for "Organization private registries"EndpointAccessAdditional permissionsPOST /orgs/{org}/private-registrieswritePATCH /orgs/{org}/private-registries/{secret_name}writeDELETE /orgs/{org}/private-registries/{secret_name}writeGET /orgs/{org}/private-registriesreadGET /orgs/{org}/private-registries/public-keyreadGET /orgs/{org}/private-registries/{secret_name}readOrganization permissions for "Personal access token requests"EndpointAccessAdditional permissionsPOST /orgs/{org}/personal-access-token-requestswritePOST /orgs/{org}/personal-access-token-requests/{pat_request_id}writeGET /orgs/{org}/personal-access-token-requestsreadGET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositoriesreadOrganization permissions for "Personal access tokens"EndpointAccessAdditional permissionsPOST /orgs/{org}/personal-access-tokenswritePOST /orgs/{org}/personal-access-tokens/{pat_id}writeGET /orgs/{org}/personal-access-tokensreadGET /orgs/{org}/personal-access-tokens/{pat_id}/repositoriesreadOrganization permissions for "Projects"EndpointAccessAdditional permissionsPUT /orgs/{org}/teams/{team_slug}/projects/{project_id}adminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}adminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorsadminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}adminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}adminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionadminMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /orgs/{org}/projectswritePATCH /projects/columns/cards/{card_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/projectsreadGET /projects/columns/cards/{card_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Organization permissions for "Secrets"EndpointAccessAdditional permissionsPUT /orgs/{org}/actions/secrets/{secret_name}writeDELETE /orgs/{org}/actions/secrets/{secret_name}writePUT /orgs/{org}/actions/secrets/{secret_name}/repositorieswritePUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/secretsreadGET /orgs/{org}/actions/secrets/public-keyreadGET /orgs/{org}/actions/secrets/{secret_name}readGET /orgs/{org}/actions/secrets/{secret_name}/repositoriesreadOrganization permissions for "Self-hosted runners"EndpointAccessAdditional permissionsPOST /orgs/{org}/actions/runner-groupswritePATCH /orgs/{org}/actions/runner-groups/{runner_group_id}writeDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}writePUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositorieswritePUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runnerswritePUT /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writeDELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}writePOST /orgs/{org}/actions/runners/generate-jitconfigwritePOST /orgs/{org}/actions/runners/registration-tokenwritePOST /orgs/{org}/actions/runners/remove-tokenwriteDELETE /orgs/{org}/actions/runners/{runner_id}writePOST /orgs/{org}/actions/runners/{runner_id}/labelswritePUT /orgs/{org}/actions/runners/{runner_id}/labelswriteDELETE /orgs/{org}/actions/runners/{runner_id}/labelswriteDELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}writeGET /orgs/{org}/actions/runner-groupsreadGET /orgs/{org}/actions/runner-groups/{runner_group_id}readGET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runnersreadGET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositoriesreadGET /orgs/{org}/actions/runner-groups/{runner_group_id}/runnersreadGET /orgs/{org}/actions/runnersreadGET /orgs/{org}/actions/runners/downloadsreadGET /orgs/{org}/actions/runners/{runner_id}readGET /orgs/{org}/actions/runners/{runner_id}/labelsreadOrganization permissions for "Team discussions"EndpointAccessAdditional permissionsDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}writeDELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}writeOrganization permissions for "Variables"EndpointAccessAdditional permissionsPOST /orgs/{org}/actions/variableswritePATCH /orgs/{org}/actions/variables/{name}writeDELETE /orgs/{org}/actions/variables/{name}writePUT /orgs/{org}/actions/variables/{name}/repositorieswritePUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/actions/variablesreadGET /orgs/{org}/actions/variables/{name}readGET /orgs/{org}/actions/variables/{name}/repositoriesreadOrganization permissions for "Webhooks"EndpointAccessAdditional permissionsPOST /orgs/{org}/hookswritePATCH /orgs/{org}/hooks/{hook_id}writeDELETE /orgs/{org}/hooks/{hook_id}writePATCH /orgs/{org}/hooks/{hook_id}/configwritePOST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswritePOST /orgs/{org}/hooks/{hook_id}/pingswriteGET /orgs/{org}/hooksreadGET /orgs/{org}/hooks/{hook_id}readGET /orgs/{org}/hooks/{hook_id}/configreadGET /orgs/{org}/hooks/{hook_id}/deliveriesreadGET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}readRepository permissions for "Actions"EndpointAccessAdditional permissionsDELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}writeDELETE /repos/{owner}/{repo}/actions/cacheswriteDELETE /repos/{owner}/{repo}/actions/caches/{cache_id}writePOST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerunwritePUT /repos/{owner}/{repo}/actions/oidc/customization/subwriteDELETE /repos/{owner}/{repo}/actions/runs/{run_id}writePOST /repos/{owner}/{repo}/actions/runs/{run_id}/approvewritePOST /repos/{owner}/{repo}/actions/runs/{run_id}/cancelwritePOST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancelwriteDELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logswritePOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerunwritePOST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobswritePUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disablewritePOST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatcheswritePUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enablewriteGET /repos/{owner}/{repo}/actions/artifactsreadGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}readGET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}readGET /repos/{owner}/{repo}/actions/cache/usagereadGET /repos/{owner}/{repo}/actions/cachesreadGET /repos/{owner}/{repo}/actions/jobs/{job_id}readGET /repos/{owner}/{repo}/actions/jobs/{job_id}/logsreadGET /repos/{owner}/{repo}/actions/oidc/customization/subreadGET /repos/{owner}/{repo}/actions/runsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}readGET /repos/{owner}/{repo}/actions/runs/{run_id}/approvalsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/artifactsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}readGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/jobsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/logsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentsreadGET /repos/{owner}/{repo}/actions/runs/{run_id}/timingreadGET /repos/{owner}/{repo}/actions/workflowsreadGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}readGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runsreadGET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timingreadGET /repos/{owner}/{repo}/environmentsreadGET /repos/{owner}/{repo}/environments/{environment_name}readGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policiesreadGET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}readGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rulesreadGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}readRepository permissions for "Administration"EndpointAccessAdditional permissionsPOST /orgs/{org}/reposwritePATCH /repos/{owner}/{repo}writeDELETE /repos/{owner}/{repo}writePUT /repos/{owner}/{repo}/actions/permissionswritePUT /repos/{owner}/{repo}/actions/permissions/accesswritePUT /repos/{owner}/{repo}/actions/permissions/selected-actionswritePUT /repos/{owner}/{repo}/actions/permissions/workflowwritePOST /repos/{owner}/{repo}/actions/runners/generate-jitconfigwritePOST /repos/{owner}/{repo}/actions/runners/registration-tokenwritePOST /repos/{owner}/{repo}/actions/runners/remove-tokenwriteDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}writePOST /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswritePUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labelswriteDELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}writePOST /repos/{owner}/{repo}/autolinkswriteDELETE /repos/{owner}/{repo}/autolinks/{autolink_id}writePUT /repos/{owner}/{repo}/automated-security-fixeswriteDELETE /repos/{owner}/{repo}/automated-security-fixeswritePUT /repos/{owner}/{repo}/branches/{branch}/protectionwriteDELETE /repos/{owner}/{repo}/branches/{branch}/protectionwritePOST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminswritePATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewswritePOST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatureswritePATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checkswritePOST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswritePUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictionswritePOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswritePUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appswritePOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswritePUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamswritePOST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswritePUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswriteDELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/userswritePATCH /repos/{owner}/{repo}/code-scanning/default-setupwritePUT /repos/{owner}/{repo}/collaborators/{username}writeDELETE /repos/{owner}/{repo}/collaborators/{username}writePUT /repos/{owner}/{repo}/environments/{environment_name}writeDELETE /repos/{owner}/{repo}/environments/{environment_name}writePOST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policieswritePUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writeDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}writePOST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_ruleswriteDELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}writePOST /repos/{owner}/{repo}/forkswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/interaction-limitswriteDELETE /repos/{owner}/{repo}/interaction-limitswritePATCH /repos/{owner}/{repo}/invitations/{invitation_id}writeDELETE /repos/{owner}/{repo}/invitations/{invitation_id}writePOST /repos/{owner}/{repo}/keyswriteDELETE /repos/{owner}/{repo}/keys/{key_id}writePOST /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pages/healthwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/private-vulnerability-reportingwriteDELETE /repos/{owner}/{repo}/private-vulnerability-reportingwritePOST /repos/{owner}/{repo}/rulesetswriteGET /repos/{owner}/{repo}/rulesets/rule-suiteswriteGET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}writePUT /repos/{owner}/{repo}/rulesets/{ruleset_id}writeDELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}writeGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/historywriteGET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}writePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forkswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/tags/protectionwriteDELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}writePUT /repos/{owner}/{repo}/topicswritePOST /repos/{owner}/{repo}/transferwritePUT /repos/{owner}/{repo}/vulnerability-alertswriteDELETE /repos/{owner}/{repo}/vulnerability-alertswritePOST /repos/{template_owner}/{template_repo}/generatewritePOST /user/reposwritePATCH /user/repository_invitations/{invitation_id}writeDELETE /user/repository_invitations/{invitation_id}writeGET /repos/{owner}/{repo}/actions/permissionsreadGET /repos/{owner}/{repo}/actions/permissions/accessreadGET /repos/{owner}/{repo}/actions/permissions/selected-actionsreadGET /repos/{owner}/{repo}/actions/permissions/workflowreadGET /repos/{owner}/{repo}/actions/runnersreadGET /repos/{owner}/{repo}/actions/runners/downloadsreadGET /repos/{owner}/{repo}/actions/runners/{runner_id}readGET /repos/{owner}/{repo}/actions/runners/{runner_id}/labelsreadGET /repos/{owner}/{repo}/autolinksreadGET /repos/{owner}/{repo}/autolinks/{autolink_id}readGET /repos/{owner}/{repo}/automated-security-fixesreadGET /repos/{owner}/{repo}/branches/{branch}/protectionreadGET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_adminsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviewsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/required_signaturesreadGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checksreadGET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contextsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictionsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/appsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teamsreadGET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/usersreadGET /repos/{owner}/{repo}/code-scanning/default-setupreadGET /repos/{owner}/{repo}/code-security-configurationreadGET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/appsreadGET /repos/{owner}/{repo}/interaction-limitsreadGET /repos/{owner}/{repo}/invitationsreadGET /repos/{owner}/{repo}/keysreadGET /repos/{owner}/{repo}/keys/{key_id}readGET /repos/{owner}/{repo}/tags/protectionreadGET /repos/{owner}/{repo}/teamsreadGET /repos/{owner}/{repo}/traffic/clonesreadGET /repos/{owner}/{repo}/traffic/popular/pathsreadGET /repos/{owner}/{repo}/traffic/popular/referrersreadGET /repos/{owner}/{repo}/traffic/viewsreadGET /repos/{owner}/{repo}/vulnerability-alertsreadGET /user/repository_invitationsreadRepository permissions for "Attestations"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/attestationswriteGET /repos/{owner}/{repo}/attestations/{subject_digest}readRepository permissions for "Checks"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/check-runswritePATCH /repos/{owner}/{repo}/check-runs/{check_run_id}writePOST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequestwritePOST /repos/{owner}/{repo}/check-suiteswritePATCH /repos/{owner}/{repo}/check-suites/preferenceswritePOST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequestwriteGET /repos/{owner}/{repo}/check-runs/{check_run_id}readGET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotationsreadGET /repos/{owner}/{repo}/check-suites/{check_suite_id}readGET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runsreadGET /repos/{owner}/{repo}/commits/{ref}/check-runsreadGET /repos/{owner}/{repo}/commits/{ref}/check-suitesreadRepository permissions for "Code scanning alerts"EndpointAccessAdditional permissionsPATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}writePOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixwriteDELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}writePOST /repos/{owner}/{repo}/code-scanning/sarifswriteGET /orgs/{org}/code-scanning/alertsreadGET /repos/{owner}/{repo}/code-scanning/alertsreadGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}readGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofixreadGET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instancesreadGET /repos/{owner}/{repo}/code-scanning/analysesreadGET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}readGET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}readRepository permissions for "Codespaces lifecycle admin"EndpointAccessAdditional permissionsPOST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stopwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /user/codespaces/{codespace_name}/exportswritePOST /user/codespaces/{codespace_name}/startwritePOST /user/codespaces/{codespace_name}/stopwriteGET /user/codespaces/{codespace_name}/exports/{export_id}readRepository permissions for "Codespaces metadata"EndpointAccessAdditional permissionsGET /repos/{owner}/{repo}/codespaces/devcontainersreadGET /repos/{owner}/{repo}/codespaces/machinesreadGET /user/codespaces/{codespace_name}/machinesreadRepository permissions for "Codespaces secrets"EndpointAccessAdditional permissionsGET /repos/{owner}/{repo}/codespaces/secretswriteGET /repos/{owner}/{repo}/codespaces/secrets/public-keywriteGET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writePUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeDELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}writeRepository permissions for "Codespaces"EndpointAccessAdditional permissionsDELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/codespaceswriteGET /repos/{owner}/{repo}/codespaces/newwriteGET /repos/{owner}/{repo}/codespaces/permissions_checkwritePOST /repos/{owner}/{repo}/pulls/{pull_number}/codespaceswritePOST /user/codespaceswritePATCH /user/codespaces/{codespace_name}writeDELETE /user/codespaces/{codespace_name}writePOST /user/codespaces/{codespace_name}/publishwriteGET /orgs/{org}/codespacesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/members/{username}/codespacesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/codespacesreadGET /user/codespacesreadGET /user/codespaces/{codespace_name}readRepository permissions for "Commit statuses"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/statuses/{sha}writeGET /repos/{owner}/{repo}/commits/{ref}/statusreadGET /repos/{owner}/{repo}/commits/{ref}/statusesreadRepository permissions for "Contents"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/branches/{branch}/renamewritePOST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commitswriteDELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}writePOST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyseswritePATCH /repos/{owner}/{repo}/comments/{comment_id}writeDELETE /repos/{owner}/{repo}/comments/{comment_id}writePOST /repos/{owner}/{repo}/comments/{comment_id}/reactionswriteDELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}writePUT /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/dependency-graph/snapshotswritePOST /repos/{owner}/{repo}/dispatcheswritePOST /repos/{owner}/{repo}/git/blobswritePOST /repos/{owner}/{repo}/git/commitswritePOST /repos/{owner}/{repo}/git/refswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/git/refs/{ref}writePOST /repos/{owner}/{repo}/git/tagswritePOST /repos/{owner}/{repo}/git/treeswritePUT /repos/{owner}/{repo}/importwritePATCH /repos/{owner}/{repo}/importwriteDELETE /repos/{owner}/{repo}/importwritePATCH /repos/{owner}/{repo}/import/authors/{author_id}writePATCH /repos/{owner}/{repo}/import/lfswritePOST /repos/{owner}/{repo}/merge-upstreamwritePOST /repos/{owner}/{repo}/mergeswritePUT /repos/{owner}/{repo}/pulls/{pull_number}/mergewritePOST /repos/{owner}/{repo}/releaseswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}writeDELETE /repos/{owner}/{repo}/releases/assets/{asset_id}writePOST /repos/{owner}/{repo}/releases/generate-noteswritePATCH /repos/{owner}/{repo}/releases/{release_id}writeDELETE /repos/{owner}/{repo}/releases/{release_id}writePOST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasseswriteGET /repos/{owner}/{repo}/activityreadGET /repos/{owner}/{repo}/branchesreadGET /repos/{owner}/{repo}/branches/{branch}readGET /repos/{owner}/{repo}/code-scanning/codeql/databasesreadGET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}readGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}readGET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}readGET /repos/{owner}/{repo}/codeowners/errorsreadGET /repos/{owner}/{repo}/commitsreadGET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-headreadPOST /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadGET /repos/{owner}/{repo}/commits/{ref}readGET /repos/{owner}/{repo}/community/profilereadGET /repos/{owner}/{repo}/compare/{basehead}readGET /repos/{owner}/{repo}/contents/{path}readGET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}readGET /repos/{owner}/{repo}/dependency-graph/sbomreadPOST /repos/{owner}/{repo}/forksreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/git/blobs/{file_sha}readGET /repos/{owner}/{repo}/git/commits/{commit_sha}readGET /repos/{owner}/{repo}/git/matching-refs/{ref}readGET /repos/{owner}/{repo}/git/ref/{ref}readGET /repos/{owner}/{repo}/git/tags/{tag_sha}readGET /repos/{owner}/{repo}/git/trees/{tree_sha}readGET /repos/{owner}/{repo}/importreadGET /repos/{owner}/{repo}/import/authorsreadGET /repos/{owner}/{repo}/import/large_filesreadGET /repos/{owner}/{repo}/pulls/{pull_number}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/releasesreadGET /repos/{owner}/{repo}/releases/assets/{asset_id}readGET /repos/{owner}/{repo}/releases/latestreadGET /repos/{owner}/{repo}/releases/tags/{tag}readGET /repos/{owner}/{repo}/releases/{release_id}readGET /repos/{owner}/{repo}/releases/{release_id}/assetsreadGET /repos/{owner}/{repo}/tarball/{ref}readGET /repos/{owner}/{repo}/zipball/{ref}readRepository permissions for "Custom properties"EndpointAccessAdditional permissionsPATCH /repos/{owner}/{repo}/properties/valueswriteRepository permissions for "Dependabot alerts"EndpointAccessAdditional permissionsPATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}writeGET /orgs/{org}/dependabot/alertsreadGET /repos/{owner}/{repo}/dependabot/alertsreadGET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}readRepository permissions for "Dependabot secrets"EndpointAccessAdditional permissionsPUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeDELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}writeGET /repos/{owner}/{repo}/dependabot/secretsreadGET /repos/{owner}/{repo}/dependabot/secrets/public-keyreadGET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}readRepository permissions for "Deployments"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deploymentswritePOST /repos/{owner}/{repo}/deploymentswriteDELETE /repos/{owner}/{repo}/deployments/{deployment_id}writePOST /repos/{owner}/{repo}/deployments/{deployment_id}/statuseswriteGET /repos/{owner}/{repo}/deploymentsreadGET /repos/{owner}/{repo}/deployments/{deployment_id}readGET /repos/{owner}/{repo}/deployments/{deployment_id}/statusesreadGET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}readRepository permissions for "Environments"EndpointAccessAdditional permissionsPUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writeDELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}writePOST /repos/{owner}/{repo}/environments/{environment_name}/variableswritePATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeDELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}writeGET /repos/{owner}/{repo}/environments/{environment_name}/secretsreadGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-keyreadGET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}readGET /repos/{owner}/{repo}/environments/{environment_name}/variablesreadGET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}readRepository permissions for "Issues"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/issueswritePATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionswriteDELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}writePATCH /repos/{owner}/{repo}/issues/{issue_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/reactionswriteDELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}writeDELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issuewritePOST /repos/{owner}/{repo}/issues/{issue_number}/sub_issueswritePATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritywritePOST /repos/{owner}/{repo}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assigneesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issuesreadGET /repos/{owner}/{repo}/issues/commentsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactionsreadGET /repos/{owner}/{repo}/issues/eventsreadGET /repos/{owner}/{repo}/issues/events/{event_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}readGET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/reactionsreadGET /repos/{owner}/{repo}/issues/{issue_number}/sub_issuesreadGET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Metadata"EndpointAccessAdditional permissionsPUT /orgs/{org}/actions/permissions/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /orgs/{org}/reposreadGET /repos/{owner}/{repo}readGET /repos/{owner}/{repo}/collaboratorsreadGET /repos/{owner}/{repo}/collaborators/{username}readGET /repos/{owner}/{repo}/collaborators/{username}/permissionreadGET /repos/{owner}/{repo}/commentsreadGET /repos/{owner}/{repo}/comments/{comment_id}readGET /repos/{owner}/{repo}/comments/{comment_id}/reactionsreadGET /repos/{owner}/{repo}/commits/{commit_sha}/commentsreadGET /repos/{owner}/{repo}/contributorsreadGET /repos/{owner}/{repo}/eventsreadGET /repos/{owner}/{repo}/forksreadGET /repos/{owner}/{repo}/languagesreadGET /repos/{owner}/{repo}/licensereadGET /repos/{owner}/{repo}/private-vulnerability-reportingreadGET /repos/{owner}/{repo}/properties/valuesreadGET /repos/{owner}/{repo}/rules/branches/{branch}readGET /repos/{owner}/{repo}/rulesetsreadGET /repos/{owner}/{repo}/rulesets/{ruleset_id}readGET /repos/{owner}/{repo}/stargazersreadGET /repos/{owner}/{repo}/stats/code_frequencyreadGET /repos/{owner}/{repo}/stats/commit_activityreadGET /repos/{owner}/{repo}/stats/contributorsreadGET /repos/{owner}/{repo}/stats/participationreadGET /repos/{owner}/{repo}/stats/punch_cardreadGET /repos/{owner}/{repo}/subscribersreadGET /repos/{owner}/{repo}/tagsreadGET /repos/{owner}/{repo}/topicsreadGET /repositoriesreadGET /search/labelsreadPUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/installations/{installation_id}/repositoriesreadGET /user/reposreadGET /user/starred/{owner}/{repo}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /user/starred/{owner}/{repo}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/reposreadRepository permissions for "Pages"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/pageswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pages/buildswritePOST /repos/{owner}/{repo}/pages/deploymentswritePOST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancelwriteGET /repos/{owner}/{repo}/pages/healthwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pagesreadGET /repos/{owner}/{repo}/pages/buildsreadGET /repos/{owner}/{repo}/pages/builds/latestreadGET /repos/{owner}/{repo}/pages/builds/{build_id}readGET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}readRepository permissions for "Projects"EndpointAccessAdditional permissionsPATCH /projects/columns/cards/{card_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/cards/{card_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/cards/{card_id}/moveswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/columns/{column_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/columns/{column_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/cardswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/columns/{column_id}/moveswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /projects/{project_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaboratorswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /projects/{project_id}/collaborators/{username}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /projects/{project_id}/collaborators/{username}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/collaborators/{username}/permissionwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /projects/{project_id}/columnswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/projectswriteGET /projects/columns/cards/{card_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/columns/{column_id}/cardsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /projects/{project_id}/columnsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/projectsreadRepository permissions for "Pull requests"EndpointAccessAdditional permissionsPATCH /repos/{owner}/{repo}/issues/comments/{comment_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/issues/{issue_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/assigneeswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/commentswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PUT /repos/{owner}/{repo}/issues/{issue_number}/lockwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/issues/{issue_number}/lockwriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/labelswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/labels/{name}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/milestoneswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/milestones/{milestone_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/milestones/{milestone_number}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/pullswritePATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}writeDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}writePOST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionswriteDELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}writePATCH /repos/{owner}/{repo}/pulls/{pull_number}writePOST /repos/{owner}/{repo}/pulls/{pull_number}/commentswritePOST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replieswritePOST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswriteDELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewerswritePOST /repos/{owner}/{repo}/pulls/{pull_number}/reviewswritePUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writeDELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}writePUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissalswritePOST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/eventswritePUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branchwriteGET /repos/{owner}/{repo}/assigneesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/assignees/{assignee}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/commits/{commit_sha}/pullsreadGET /repos/{owner}/{repo}/issues/commentsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/comments/{comment_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/events/{event_id}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/commentsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/eventsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/issues/{issue_number}/timelinereadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/labels/{name}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestonesreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/milestones/{milestone_number}/labelsreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pullsreadGET /repos/{owner}/{repo}/pulls/commentsreadGET /repos/{owner}/{repo}/pulls/comments/{comment_id}readGET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactionsreadGET /repos/{owner}/{repo}/pulls/{pull_number}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /repos/{owner}/{repo}/pulls/{pull_number}/commentsreadGET /repos/{owner}/{repo}/pulls/{pull_number}/commitsreadGET /repos/{owner}/{repo}/pulls/{pull_number}/filesreadGET /repos/{owner}/{repo}/pulls/{pull_number}/mergereadGET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewersreadGET /repos/{owner}/{repo}/pulls/{pull_number}/reviewsreadGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}readGET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/commentsreadRepository permissions for "Repository security advisories"EndpointAccessAdditional permissionsGET /orgs/{org}/security-advisorieswritePOST /repos/{owner}/{repo}/security-advisorieswritePOST /repos/{owner}/{repo}/security-advisories/reportswritePATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}writePOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cvewriteGET /repos/{owner}/{repo}/security-advisoriesreadGET /repos/{owner}/{repo}/security-advisories/{ghsa_id}readPOST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forksreadMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.Repository permissions for "Secret scanning alerts"EndpointAccessAdditional permissionsPATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}writeGET /orgs/{org}/secret-scanning/alertsreadGET /repos/{owner}/{repo}/secret-scanning/alertsreadGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}readGET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locationsreadGET /repos/{owner}/{repo}/secret-scanning/scan-historyreadRepository permissions for "Secrets"EndpointAccessAdditional permissionsPUT /repos/{owner}/{repo}/actions/secrets/{secret_name}writeDELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}writeGET /repos/{owner}/{repo}/actions/organization-secretsreadGET /repos/{owner}/{repo}/actions/secretsreadGET /repos/{owner}/{repo}/actions/secrets/public-keyreadGET /repos/{owner}/{repo}/actions/secrets/{secret_name}readRepository permissions for "Variables"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/actions/variableswritePATCH /repos/{owner}/{repo}/actions/variables/{name}writeDELETE /repos/{owner}/{repo}/actions/variables/{name}writeGET /repos/{owner}/{repo}/actions/organization-variablesreadGET /repos/{owner}/{repo}/actions/variablesreadGET /repos/{owner}/{repo}/actions/variables/{name}readRepository permissions for "Webhooks"EndpointAccessAdditional permissionsPOST /repos/{owner}/{repo}/hookswritePATCH /repos/{owner}/{repo}/hooks/{hook_id}writeDELETE /repos/{owner}/{repo}/hooks/{hook_id}writePATCH /repos/{owner}/{repo}/hooks/{hook_id}/configwritePOST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attemptswriteGET /repos/{owner}/{repo}/hooksreadGET /repos/{owner}/{repo}/hooks/{hook_id}readGET /repos/{owner}/{repo}/hooks/{hook_id}/configreadGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveriesreadGET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}readPOST /repos/{owner}/{repo}/hooks/{hook_id}/pingsreadPOST /repos/{owner}/{repo}/hooks/{hook_id}/testsreadRepository permissions for "Workflows"EndpointAccessAdditional permissionsPUT /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /repos/{owner}/{repo}/contents/{path}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/git/refswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.PATCH /repos/{owner}/{repo}/git/refs/{ref}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.POST /repos/{owner}/{repo}/releaseswriteMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.User permissions for "Block another user"EndpointAccessAdditional permissionsPUT /user/blocks/{username}writeDELETE /user/blocks/{username}writeGET /user/blocksreadGET /user/blocks/{username}readUser permissions for "Codespaces user secrets"EndpointAccessAdditional permissionsPUT /user/codespaces/secrets/{secret_name}writeDELETE /user/codespaces/secrets/{secret_name}writePUT /user/codespaces/secrets/{secret_name}/repositorieswritePUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/codespaces/secretsreadGET /user/codespaces/secrets/public-keyreadGET /user/codespaces/secrets/{secret_name}readGET /user/codespaces/secrets/{secret_name}/repositoriesreadUser permissions for "Email addresses"EndpointAccessAdditional permissionsPATCH /user/email/visibilitywritePOST /user/emailswriteDELETE /user/emailswriteGET /user/emailsreadGET /user/public_emailsreadUser permissions for "Followers"EndpointAccessAdditional permissionsPUT /user/following/{username}writeDELETE /user/following/{username}writeGET /user/followersreadGET /user/followingreadGET /user/following/{username}readUser permissions for "GPG keys"EndpointAccessAdditional permissionsPOST /user/gpg_keyswriteDELETE /user/gpg_keys/{gpg_key_id}writeGET /user/gpg_keysreadGET /user/gpg_keys/{gpg_key_id}readUser permissions for "Gists"EndpointAccessAdditional permissionsPOST /gistswritePATCH /gists/{gist_id}writeDELETE /gists/{gist_id}writePOST /gists/{gist_id}/commentswritePATCH /gists/{gist_id}/comments/{comment_id}writeDELETE /gists/{gist_id}/comments/{comment_id}writePOST /gists/{gist_id}/forkswritePUT /gists/{gist_id}/starwriteDELETE /gists/{gist_id}/starwriteUser permissions for "Git SSH keys"EndpointAccessAdditional permissionsPOST /user/keyswriteDELETE /user/keys/{key_id}writeGET /user/keysreadGET /user/keys/{key_id}readGET /users/{username}/keysreadUser permissions for "Interaction limits"EndpointAccessAdditional permissionsPUT /user/interaction-limitswriteDELETE /user/interaction-limitswriteGET /user/interaction-limitsreadUser permissions for "Plan"EndpointAccessAdditional permissionsGET /users/{username}/settings/billing/actionsreadGET /users/{username}/settings/billing/packagesreadGET /users/{username}/settings/billing/shared-storagereadGET /users/{username}/settings/billing/usagereadUser permissions for "Profile"EndpointAccessAdditional permissionsPATCH /userwritePOST /user/social_accountswriteDELETE /user/social_accountswriteUser permissions for "SSH signing keys"EndpointAccessAdditional permissionsPOST /user/ssh_signing_keyswriteDELETE /user/ssh_signing_keys/{ssh_signing_key_id}writeGET /user/ssh_signing_keysreadGET /user/ssh_signing_keys/{ssh_signing_key_id}readUser permissions for "Starring"EndpointAccessAdditional permissionsPUT /user/starred/{owner}/{repo}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.DELETE /user/starred/{owner}/{repo}writeMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /user/starredreadGET /user/starred/{owner}/{repo}readMultiple permissions are required, or a different permission may be used. For more information about the permissions, see the documentation for this endpoint.GET /users/{username}/starredreadUser permissions for "Watching"EndpointAccessAdditional permissionsGET /user/subscriptionsreadGET /users/{username}/subscriptionsread\n\n\n\nREST API/Guides/Script with JavaScriptScripting with the REST API and JavaScriptWrite a script using the Octokit.js SDK to interact with the REST API.In this articleAbout Octokit.jsPrerequisitesInstantiating and authenticatingMaking requestsCatching errorsUsing the responseExample scriptNext stepsAbout Octokit.js
If you want to write a script using JavaScript to interact with GitHub's REST API, GitHub recommends that you use the Octokit.js SDK. Octokit.js is maintained by GitHub. The SDK implements best practices and makes it easier for you to interact with the REST API via JavaScript. Octokit.js works with all modern browsers, Node.js, and Deno. For more information about Octokit.js, see the Octokit.js README.
Prerequisites
This guide assumes that you are familiar with JavaScript and the GitHub REST API. For more information about the REST API, see Getting started with the REST API.
You must install and import octokit in order to use the Octokit.js library. This guide uses import statements in accordance with ES6. For more information about different installation and import methods, see the Octokit.js README's Usage section.
Instantiating and authenticating
Warning

Treat your authentication credentials like a password.
To keep your credentials secure, you can store your credentials as a secret and run your script through GitHub Actions. For more information, see Using secrets in GitHub Actions.


You can also store your credentials as a Codespaces secret and run your script in Codespaces. For more information, see Managing your account-specific secrets for GitHub Codespaces.


If these options are not possible, consider using another CLI service to store your credentials securely.

Authenticating with a personal access token
If you want to use the GitHub REST API for personal use, you can create a personal access token. For more information about creating a personal access token, see Managing your personal access tokens.
First, import Octokit from octokit. Then, pass your personal access token when you create an instance of Octokit. In the following example, replace YOUR-TOKEN with a reference to your personal access token.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN',
});
import { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN',
});

Authenticating with a GitHub App
If you want to use the API on behalf of an organization or another user, GitHub recommends that you use a GitHub App. If an endpoint is available to GitHub Apps, the REST reference documentation for that endpoint will indicate what type of GitHub App token is required. For more information, see Registering a GitHub App and About authentication with a GitHub App.
Instead of importing Octokit from octokit, import App. In the following example, replace APP_ID with a reference to your app's ID. Replace PRIVATE_KEY with a reference to your app's private key. Replace INSTALLATION_ID with the ID of the installation of your app that you want to authenticate on behalf of. You can find your app's ID and generate a private key on the settings page for your app. For more information, see Managing private keys for GitHub Apps. You can get an installation ID with the GET /users/{username}/installation, GET /repos/{owner}/{repo}/installation, or GET /orgs/{org}/installation endpoints. For more information, see REST API endpoints for GitHub Apps.
JavaScriptimport { App } from "octokit";

const app = new App({
  appId: APP_ID,
  privateKey: PRIVATE_KEY,
});

const octokit = await app.getInstallationOctokit(INSTALLATION_ID);
import { App } from "octokit";

const app = new App({
  appId: APP_ID,
  privateKey: PRIVATE_KEY,
});

const octokit = await app.getInstallationOctokit(INSTALLATION_ID);

Authenticating in GitHub Actions
If you want to use the API in a GitHub Actions workflow, GitHub recommends that you authenticate with the built-in GITHUB_TOKEN instead of creating a token. You can grant permissions to the GITHUB_TOKEN with the permissions key. For more information about GITHUB_TOKEN, see Automatic token authentication.
If your workflow needs to access resources outside of the workflow's repository, then you will not be able to use GITHUB_TOKEN. In that case, store your credentials as a secret and replace GITHUB_TOKEN in the examples below with the name of your secret. For more information about secrets, see Using secrets in GitHub Actions.
If you use the run keyword to execute your JavaScript script in your GitHub Actions workflows, you can store the value of GITHUB_TOKEN as an environment variable. Your script can access the environment variable as process.env.VARIABLE_NAME.
For example, this workflow step stores GITHUB_TOKEN in an environment variable called TOKEN:
- name: Run script
  env:
    TOKEN: ${{ secrets.GITHUB_TOKEN }}
  run: |
    node .github/actions-scripts/use-the-api.mjs

The script that the workflow runs uses process.env.TOKEN to authenticate:
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: process.env.TOKEN,
});
import { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: process.env.TOKEN,
});

Instantiating without authentication
You can use the REST API without authentication, although you will have a lower rate limit and will not be able to use some endpoints. To create an instance of Octokit without authenticating, do not pass the auth argument.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ });
import { Octokit } from "octokit";

const octokit = new Octokit({ });

Making requests
Octokit supports multiple ways of making requests. You can use the request method to make requests if you know the HTTP verb and path for the endpoint. You can use the rest method if you want to take advantage of autocompletion in your IDE and typing. For paginated endpoints, you can use the paginate method to request multiple pages of data.
Using the request method to make requests
To use the request method to make requests, pass the HTTP method and path as the first argument. Pass any body, query, or path parameters in an object as the second argument. For example, to make a GET request to /repos/{owner}/{repo}/issues and pass the owner, repo, and per_page parameters:
JavaScriptawait octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 2
});
await octokit.request("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 2
});

The request method automatically passes the Accept: application/vnd.github+json header. To pass additional headers or a different Accept header, add a headers property to the object that is passed as a second argument. The value of the headers property is an object with the header names as keys and header values as values. For example, to send a content-type header with a value of text/plain and a x-github-api-version header with a value of 2022-11-28:
JavaScriptawait octokit.request("POST /markdown/raw", {
  text: "Hello **world**",
  headers: {
    "content-type": "text/plain",
    "x-github-api-version": "2022-11-28",
  },
});
await octokit.request("POST /markdown/raw", {
  text: "Hello **world**",
  headers: {
    "content-type": "text/plain",
    "x-github-api-version": "2022-11-28",
  },
});

Using rest endpoint methods to make requests
Every REST API endpoint has an associated rest endpoint method in Octokit. These methods generally autocomplete in your IDE for convenience. You can pass any parameters as an object to the method.
JavaScriptawait octokit.rest.issues.listForRepo({
  owner: "github",
  repo: "docs",
  per_page: 2
});
await octokit.rest.issues.listForRepo({
  owner: "github",
  repo: "docs",
  per_page: 2
});

Additionally, if you are using a typed language such as TypeScript, you can import types to use with these methods. For more information, see the TypeScript section in the plugin-rest-endpoint-methods.js README.
Making paginated requests
If the endpoint is paginated and you want to fetch more than one page of results, you can use the paginate method. paginate will fetch the next page of results until it reaches the last page and then return all of the results as a single array. A few endpoints return paginated results as array in an object, as opposed to returning the paginated results as an array. paginate always returns an array of items even if the raw result was an object.
For example, the following example gets all of the issues from the github/docs repository. Although it requests 100 issues at a time, the function won't return until the last page of data is reached.
JavaScriptconst issueData = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});
const issueData = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

The paginate method accepts an optional map function, which you can use to collect only the data that you want from the response. This reduces memory usage by your script. The map function can take a second argument, done, which you can call to end the pagination before the last page is reached. This lets you fetch a subset of pages. For example, the following example continues to fetch results until an issue that includes "test" in the title is returned. For the pages of data that were returned, only the issue title and author are stored.
JavaScriptconst issueData = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
},
    (response, done) => response.data.map((issue) => {
    if (issue.title.includes("test")) {
      done()
    }
    return ({title: issue.title, author: issue.user.login})
  })
);
const issueData = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
},
    (response, done) => response.data.map((issue) => {
    if (issue.title.includes("test")) {
      done()
    }
    return ({title: issue.title, author: issue.user.login})
  })
);

Instead of fetching all of the results at once, you can use octokit.paginate.iterator() to iterate through a single page at a time. For example, the following example fetches one page of results at a time and processes each object from the page before fetching the next page. Once an issue that includes "test" in the title is reached, the script stops the iteration and returns the issue title and issue author of each object that was processed. The iterator is the most memory efficient method for fetching paginated data.
JavaScriptconst iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

let issueData = []
let breakLoop = false
for await (const {data} of iterator) {
  if (breakLoop) break
  for (const issue of data) {
    if (issue.title.includes("test")) {
      breakLoop = true
      break
    } else {
      issueData = [...issueData, {title: issue.title, author: issue.user.login}];
    }
  }
}
const iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

let issueData = []
let breakLoop = false
for await (const {data} of iterator) {
  if (breakLoop) break
  for (const issue of data) {
    if (issue.title.includes("test")) {
      breakLoop = true
      break
    } else {
      issueData = [...issueData, {title: issue.title, author: issue.user.login}];
    }
  }
}

You can use the paginate method with the rest endpoint methods as well. Pass the rest endpoint method as the first argument. Pass any parameters as the second argument.
JavaScriptconst iterator = octokit.paginate.iterator(octokit.rest.issues.listForRepo, {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});
const iterator = octokit.paginate.iterator(octokit.rest.issues.listForRepo, {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

For more information about pagination, see Using pagination in the REST API.
Catching errors
Catching all errors
Sometimes, the GitHub REST API will return an error. For example, you will get an error if your access token is expired or if you omitted a required parameter. Octokit.js automatically retries the request when it gets an error other than 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, and 422 Unprocessable Entity. If an API error occurs even after retries, Octokit.js throws an error that includes the HTTP status code of the response (response.status) and the response headers (response.headers). You should handle these errors in your code. For example, you can use a try/catch block to catch errors:
JavaScriptlet filesChanged = []

try {
  const iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", {
    owner: "github",
    repo: "docs",
    pull_number: 22809,
    per_page: 100,
    headers: {
      "x-github-api-version": "2022-11-28",
    },
  });

  for await (const {data} of iterator) {
    filesChanged = [...filesChanged, ...data.map(fileData => fileData.filename)];
  }
} catch (error) {
  if (error.response) {
    console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
  }
  console.error(error)
}
let filesChanged = []

try {
  const iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", {
    owner: "github",
    repo: "docs",
    pull_number: 22809,
    per_page: 100,
    headers: {
      "x-github-api-version": "2022-11-28",
    },
  });

  for await (const {data} of iterator) {
    filesChanged = [...filesChanged, ...data.map(fileData => fileData.filename)];
  }
} catch (error) {
  if (error.response) {
    console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
  }
  console.error(error)
}

Handling intended error codes
Sometimes, GitHub uses a 4xx status code to indicate a non-error response. If the endpoint you are using does this, you can add additional handling for specific errors. For example, the GET /user/starred/{owner}/{repo} endpoint will return a 404 if the repository is not starred. The following example uses the 404 response to indicate that the repository was not starred; all other errors codes are treated as errors.
JavaScripttry {
  await octokit.request("GET /user/starred/{owner}/{repo}", {
    owner: "github",
    repo: "docs",
    headers: {
      "x-github-api-version": "2022-11-28",
    },
  });

  console.log(`The repository is starred by me`);

} catch (error) {
  if (error.status === 404) {
    console.log(`The repository is not starred by me`);
  } else {
    console.error(`An error occurred while checking if the repository is starred: ${error?.response?.data?.message}`);
  }
}
try {
  await octokit.request("GET /user/starred/{owner}/{repo}", {
    owner: "github",
    repo: "docs",
    headers: {
      "x-github-api-version": "2022-11-28",
    },
  });

  console.log(`The repository is starred by me`);

} catch (error) {
  if (error.status === 404) {
    console.log(`The repository is not starred by me`);
  } else {
    console.error(`An error occurred while checking if the repository is starred: ${error?.response?.data?.message}`);
  }
}

Handling rate limit errors
If you receive a rate limit error, you may want to retry your request after waiting. When you are rate limited, GitHub responds with a 403 Forbidden error and the x-ratelimit-remaining response header value will be "0". The response headers will include a x-ratelimit-reset header, which tells you the time at which the current rate limit window resets, in UTC epoch seconds. You can retry your request after the time specified by x-ratelimit-reset.
JavaScriptasync function requestRetry(route, parameters) {
  try {
    const response = await octokit.request(route, parameters);
    return response
  } catch (error) {
    if (error.response && error.status === 403 && error.response.headers['x-ratelimit-remaining'] === '0') {
      const resetTimeEpochSeconds = error.response.headers['x-ratelimit-reset'];
      const currentTimeEpochSeconds = Math.floor(Date.now() / 1000);
      const secondsToWait = resetTimeEpochSeconds - currentTimeEpochSeconds;
      console.log(`You have exceeded your rate limit. Retrying in ${secondsToWait} seconds.`);
      setTimeout(requestRetry, secondsToWait * 1000, route, parameters);
    } else {
      console.error(error);
    }
  }
}

const response = await requestRetry("GET /repos/{owner}/{repo}/issues", {
    owner: "github",
    repo: "docs",
    per_page: 2
  })
async function requestRetry(route, parameters) {
  try {
    const response = await octokit.request(route, parameters);
    return response
  } catch (error) {
    if (error.response && error.status === 403 && error.response.headers['x-ratelimit-remaining'] === '0') {
      const resetTimeEpochSeconds = error.response.headers['x-ratelimit-reset'];
      const currentTimeEpochSeconds = Math.floor(Date.now() / 1000);
      const secondsToWait = resetTimeEpochSeconds - currentTimeEpochSeconds;
      console.log(`You have exceeded your rate limit. Retrying in ${secondsToWait} seconds.`);
      setTimeout(requestRetry, secondsToWait * 1000, route, parameters);
    } else {
      console.error(error);
    }
  }
}

const response = await requestRetry("GET /repos/{owner}/{repo}/issues", {
    owner: "github",
    repo: "docs",
    per_page: 2
  })

Using the response
The request method returns a promise that resolves to an object if the request was successful. The object properties are data (the response body returned by the endpoint), status (the HTTP response code), url (the URL of the request), and headers (an object containing the response headers). Unless otherwise specified, the response body is in JSON format. Some endpoints do not return a response body; in those cases, the data property is omitted.
JavaScriptconst response = await octokit.request("GET /repos/{owner}/{repo}/issues/{issue_number}", {
  owner: "github",
  repo: "docs",
  issue_number: 11901,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

console.log(`The status of the response is: ${response.status}`)
console.log(`The request URL was: ${response.url}`)
console.log(`The x-ratelimit-remaining response header is: ${response.headers["x-ratelimit-remaining"]}`)
console.log(`The issue title is: ${response.data.title}`)
const response = await octokit.request("GET /repos/{owner}/{repo}/issues/{issue_number}", {
  owner: "github",
  repo: "docs",
  issue_number: 11901,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

console.log(`The status of the response is: ${response.status}`)
console.log(`The request URL was: ${response.url}`)
console.log(`The x-ratelimit-remaining response header is: ${response.headers["x-ratelimit-remaining"]}`)
console.log(`The issue title is: ${response.data.title}`)

Similarly, the paginate method returns a promise. If the request was successful, the promise resolves to an array of data returned by the endpoint. Unlike the request method, the paginate method does not return the status code, URL, or headers.
JavaScriptconst data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

console.log(`${data.length} issues were returned`)
console.log(`The title of the first issue is: ${data[0].title}`)
const data = await octokit.paginate("GET /repos/{owner}/{repo}/issues", {
  owner: "github",
  repo: "docs",
  per_page: 100,
  headers: {
    "x-github-api-version": "2022-11-28",
  },
});

console.log(`${data.length} issues were returned`)
console.log(`The title of the first issue is: ${data[0].title}`)

Example script
Here is a full example script that uses Octokit.js. The script imports Octokit and creates a new instance of Octokit. If you wanted to authenticate with a GitHub App instead of a personal access token, you would import and instantiate App instead of Octokit. For more information, see Authenticating with a GitHub App.
The getChangedFiles function gets all of the files changed for a pull request. The commentIfDataFilesChanged function calls the getChangedFiles function. If any of the files that the pull request changed include /data/ in the file path, then the function will comment on the pull request.
JavaScriptimport { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN',
});

async function getChangedFiles({owner, repo, pullNumber}) {
  let filesChanged = []

  try {
    const iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", {
      owner: owner,
      repo: repo,
      pull_number: pullNumber,
      per_page: 100,
      headers: {
        "x-github-api-version": "2022-11-28",
      },
    });

    for await (const {data} of iterator) {
      filesChanged = [...filesChanged, ...data.map(fileData => fileData.filename)];
    }
  } catch (error) {
    if (error.response) {
      console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
    }
    console.error(error)
  }

  return filesChanged
}

async function commentIfDataFilesChanged({owner, repo, pullNumber}) {
  const changedFiles = await getChangedFiles({owner, repo, pullNumber});

  const filePathRegex = new RegExp(/\/data\//, "i");
  if (!changedFiles.some(fileName => filePathRegex.test(fileName))) {
    return;
  }

  try {
    const {data: comment} = await octokit.request("POST /repos/{owner}/{repo}/issues/{issue_number}/comments", {
      owner: owner,
      repo: repo,
      issue_number: pullNumber,
      body: `It looks like you changed a data file. These files are auto-generated. \n\nYou must revert any changes to data files before your pull request will be reviewed.`,
      headers: {
        "x-github-api-version": "2022-11-28",
      },
    });

    return comment.html_url;
  } catch (error) {
    if (error.response) {
      console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
    }
    console.error(error)
  }
}

await commentIfDataFilesChanged({owner: "github", repo: "docs", pullNumber: 191});
import { Octokit } from "octokit";

const octokit = new Octokit({ 
  auth: 'YOUR-TOKEN',
});

async function getChangedFiles({owner, repo, pullNumber}) {
  let filesChanged = []

  try {
    const iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", {
      owner: owner,
      repo: repo,
      pull_number: pullNumber,
      per_page: 100,
      headers: {
        "x-github-api-version": "2022-11-28",
      },
    });

    for await (const {data} of iterator) {
      filesChanged = [...filesChanged, ...data.map(fileData => fileData.filename)];
    }
  } catch (error) {
    if (error.response) {
      console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
    }
    console.error(error)
  }

  return filesChanged
}

async function commentIfDataFilesChanged({owner, repo, pullNumber}) {
  const changedFiles = await getChangedFiles({owner, repo, pullNumber});

  const filePathRegex = new RegExp(/\/data\//, "i");
  if (!changedFiles.some(fileName => filePathRegex.test(fileName))) {
    return;
  }

  try {
    const {data: comment} = await octokit.request("POST /repos/{owner}/{repo}/issues/{issue_number}/comments", {
      owner: owner,
      repo: repo,
      issue_number: pullNumber,
      body: `It looks like you changed a data file. These files are auto-generated. \n\nYou must revert any changes to data files before your pull request will be reviewed.`,
      headers: {
        "x-github-api-version": "2022-11-28",
      },
    });

    return comment.html_url;
  } catch (error) {
    if (error.response) {
      console.error(`Error! Status: ${error.response.status}. Message: ${error.response.data.message}`)
    }
    console.error(error)
  }
}

await commentIfDataFilesChanged({owner: "github", repo: "docs", pullNumber: 191});

Next steps

To learn more about Octokit.js see the Octokit.js documentation.
For some real life examples, look at how GitHub Docs uses Octokit.js by searching the GitHub Docs repository.\n\n\n\nREST API/Guides/Script with RubyScripting with the REST API and RubyLearn how to write a script using the Octokit.rb SDK to interact with the REST API.In this articleAbout Octokit.rbPrerequisitesInstantiating and authenticatingMaking requestsCatching errorsUsing the responseExample scriptNext stepsAbout Octokit.rb
If you want to write a script using Ruby to interact with the GitHub REST API, GitHub recommends that you use the Octokit.rb SDK. Octokit.rb is maintained by GitHub. The SDK implements best practices and makes it easier for you to interact with the REST API via Ruby. Octokit.rb works with all modern browsers, Node.rb, and Deno. For more information about Octokit.rb, see the Octokit.rb README.
Prerequisites
This guide assumes that you are familiar with Ruby and the GitHub REST API. For more information about the REST API, see Getting started with the REST API.
You must install and import the octokit gem in order to use the Octokit.rb library. This guide uses import statements in accordance with Ruby's conventions. For more information about different installation methods, see the Octokit.rb README's Installation section.
Instantiating and authenticating
Warning

Treat your authentication credentials like a password.
To keep your credentials secure, you can store your credentials as a secret and run your script through GitHub Actions. For more information, see Using secrets in GitHub Actions.


You can also store your credentials as a Codespaces secret and run your script in Codespaces. For more information, see Managing your account-specific secrets for GitHub Codespaces.


If these options are not possible, consider using another CLI service to store your credentials securely.

Authenticating with a personal access token
If you want to use the GitHub REST API for personal use, you can create a personal access token. For more information about creating a personal access token, see Managing your personal access tokens.
First, require the octokit library. Then, create an instance of Octokit by passing your personal access token as the access_token option. In the following example, replace YOUR-TOKEN with your personal access token.
Rubyrequire 'octokit'

octokit = Octokit::Client.new(access_token: 'YOUR-TOKEN')
require 'octokit'

octokit = Octokit::Client.new(access_token: 'YOUR-TOKEN')

Authenticating with a GitHub App
If you want to use the API on behalf of an organization or another user, GitHub recommends that you use a GitHub App. If an endpoint is available to GitHub Apps, the REST reference documentation for that endpoint will indicate what type of GitHub App token is required. For more information, see Registering a GitHub App and About authentication with a GitHub App.
Instead of requiring octokit, create an instance of Octokit::Client by passing your GitHub App's information as options. In the following example, replace APP_ID with your app's ID, PRIVATE_KEY with your app's private key, and INSTALLATION_ID with the ID of the installation of your app that you want to authenticate on behalf of. You can find your app's ID and generate a private key on the settings page for your app. For more information, see Managing private keys for GitHub Apps. You can get an installation ID with the GET /users/{username}/installation, GET /repos/{owner}/{repo}/installation, or GET /orgs/{org}/installation endpoints. For more information, see REST API endpoints for GitHub Apps.
Rubyrequire 'octokit'

app = Octokit::Client.new(
  client_id: APP_ID,
  client_secret: PRIVATE_KEY,
  installation_id: INSTALLATION_ID
)

octokit = Octokit::Client.new(bearer_token: app.create_app_installation.access_token)
require 'octokit'

app = Octokit::Client.new(
  client_id: APP_ID,
  client_secret: PRIVATE_KEY,
  installation_id: INSTALLATION_ID
)

octokit = Octokit::Client.new(bearer_token: app.create_app_installation.access_token)

Authenticating in GitHub Actions
If you want to use the API in a GitHub Actions workflow, GitHub recommends that you authenticate with the built-in GITHUB_TOKEN instead of creating a token. You can grant permissions to the GITHUB_TOKEN with the permissions key. For more information about GITHUB_TOKEN, see Automatic token authentication.
If your workflow needs to access resources outside of the workflow's repository, then you will not be able to use GITHUB_TOKEN. In that case, store your credentials as a secret and replace GITHUB_TOKEN in the examples below with the name of your secret. For more information about secrets, see Using secrets in GitHub Actions.
If you use the run keyword to execute your Ruby script in your GitHub Actions workflows, you can store the value of GITHUB_TOKEN as an environment variable. Your script can access the environment variable as ENV['VARIABLE_NAME'].
For example, this workflow step stores GITHUB_TOKEN in an environment variable called TOKEN:
- name: Run script
  env:
    TOKEN: ${{ secrets.GITHUB_TOKEN }}
  run: |
    ruby .github/actions-scripts/use-the-api.rb

The script that the workflow runs uses ENV['TOKEN'] to authenticate:
Rubyrequire 'octokit'

octokit = Octokit::Client.new(access_token: ENV['TOKEN'])
require 'octokit'

octokit = Octokit::Client.new(access_token: ENV['TOKEN'])

Instantiating without authentication
You can use the REST API without authentication, although you will have a lower rate limit and will not be able to use some endpoints. To create an instance of Octokit without authenticating, do not pass the access_token option.
Rubyrequire 'octokit'

octokit = Octokit::Client.new
require 'octokit'

octokit = Octokit::Client.new

Making requests
Octokit supports multiple ways of making requests. You can use the request method to make requests if you know the HTTP verb and path for the endpoint. You can use the rest method if you want to take advantage of autocompletion in your IDE and typing. For paginated endpoints, you can use the paginate method to request multiple pages of data.
Using the request method to make requests
To use the request method to make requests, pass the HTTP method and path as the first argument. Pass any body, query, or path parameters in a hash as the second argument. For example, to make a GET request to /repos/{owner}/{repo}/issues and pass the owner, repo, and per_page parameters:
Rubyoctokit.request("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 2)
octokit.request("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 2)

The request method automatically passes the Accept: application/vnd.github+json header. To pass additional headers or a different Accept header, add a headers option to the hash that is passed as a second argument. The value of the headers option is a hash with the header names as keys and header values as values. For example, to send a content-type header with a value of text/plain:
Rubyoctokit.request("POST /markdown/raw", text: "Hello **world**", headers: { "content-type" => "text/plain" })
octokit.request("POST /markdown/raw", text: "Hello **world**", headers: { "content-type" => "text/plain" })

Using rest endpoint methods to make requests
Every REST API endpoint has an associated rest endpoint method in Octokit. These methods generally autocomplete in your IDE for convenience. You can pass any parameters as a hash to the method.
Rubyoctokit.rest.issues.list_for_repo(owner: "github", repo: "docs", per_page: 2)
octokit.rest.issues.list_for_repo(owner: "github", repo: "docs", per_page: 2)

Making paginated requests
If the endpoint is paginated and you want to fetch more than one page of results, you can use the paginate method. paginate will fetch the next page of results until it reaches the last page and then return all of the results as an array. A few endpoints return paginated results as an array in an object, as opposed to returning the paginated results as an array. paginate always returns an array of items even if the raw result was an object.
For example, the following example gets all of the issues from the github/docs repository. Although it requests 100 issues at a time, the function won't return until the last page of data is reached.
Rubyissue_data = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)
issue_data = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)

The paginate method accepts an optional block, which you can use to process each page of results. This allows you to collect only the data that you want from the response. For example, the following example continues to fetch results until an issue that includes "test" in the title is returned. For the pages of data that were returned, only the issue title and author are stored.
Rubyissue_data = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100) do |response, done|
  response.data.map do |issue|
    if issue.title.include?("test")
      done.call
    end
    { title: issue.title, author: issue.user.login }
  end
end
issue_data = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100) do |response, done|
  response.data.map do |issue|
    if issue.title.include?("test")
      done.call
    end
    { title: issue.title, author: issue.user.login }
  end
end

Instead of fetching all of the results at once, you can use octokit.paginate.iterator() to iterate through a single page at a time. For example, the following example fetches one page of results at a time and processes each object from the page before fetching the next page. Once an issue that includes "test" in the title is reached, the script stops the iteration and returns the issue title and issue author of each object that was processed. The iterator is the most memory-efficient method for fetching paginated data.
Rubyiterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)
issue_data = []
break_loop = false
iterator.each do |data|
  break if break_loop
  data.each do |issue|
    if issue.title.include?("test")
      break_loop = true
      break
    else
      issue_data << { title: issue.title, author: issue.user.login }
    end
  end
end
iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)
issue_data = []
break_loop = false
iterator.each do |data|
  break if break_loop
  data.each do |issue|
    if issue.title.include?("test")
      break_loop = true
      break
    else
      issue_data << { title: issue.title, author: issue.user.login }
    end
  end
end

You can use the paginate method with the rest endpoint methods as well. Pass the rest endpoint method as the first argument and any parameters as the second argument.
Rubyiterator = octokit.paginate.iterator(octokit.rest.issues.list_for_repo, owner: "github", repo: "docs", per_page: 100)
iterator = octokit.paginate.iterator(octokit.rest.issues.list_for_repo, owner: "github", repo: "docs", per_page: 100)

For more information about pagination, see Using pagination in the REST API.
Catching errors
Catching all errors
Sometimes, the GitHub REST API will return an error. For example, you will get an error if your access token is expired or if you omitted a required parameter. Octokit.rb automatically retries the request when it gets an error other than 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, and 422 Unprocessable Entity. If an API error occurs even after retries, Octokit.rb throws an error that includes the HTTP status code of the response (response.status) and the response headers (response.headers). You should handle these errors in your code. For example, you can use a try/catch block to catch errors:
Rubybegin
files_changed = []

iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", owner: "github", repo: "docs", pull_number: 22809, per_page: 100)
iterator.each do | data |
    files_changed.concat(data.map {
      | file_data | file_data.filename
    })
  end
rescue Octokit::Error => error
if error.response
puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
end
puts error
end
begin
files_changed = []

iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", owner: "github", repo: "docs", pull_number: 22809, per_page: 100)
iterator.each do | data |
    files_changed.concat(data.map {
      | file_data | file_data.filename
    })
  end
rescue Octokit::Error => error
if error.response
puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
end
puts error
end

Handling intended error codes
Sometimes, GitHub uses a 4xx status code to indicate a non-error response. If the endpoint you are using does this, you can add additional handling for specific errors. For example, the GET /user/starred/{owner}/{repo} endpoint will return a 404 if the repository is not starred. The following example uses the 404 response to indicate that the repository was not starred; all other error codes are treated as errors.
Rubybegin
octokit.request("GET /user/starred/{owner}/{repo}", owner: "github", repo: "docs")
puts "The repository is starred by me"
rescue Octokit::NotFound => error
puts "The repository is not starred by me"
rescue Octokit::Error => error
puts "An error occurred while checking if the repository is starred: #{error&.response&.data&.message}"
end
begin
octokit.request("GET /user/starred/{owner}/{repo}", owner: "github", repo: "docs")
puts "The repository is starred by me"
rescue Octokit::NotFound => error
puts "The repository is not starred by me"
rescue Octokit::Error => error
puts "An error occurred while checking if the repository is starred: #{error&.response&.data&.message}"
end

Handling rate limit errors
If you receive a rate limit error, you may want to retry your request after waiting. When you are rate limited, GitHub responds with a 403 Forbidden error, and the x-ratelimit-remaining response header value will be "0". The response headers will include a x-ratelimit-reset header, which tells you the time at which the current rate limit window resets, in UTC epoch seconds. You can retry your request after the time specified by x-ratelimit-reset.
Rubydef request_retry(route, parameters)
 begin
 response = octokit.request(route, parameters)
 return response
 rescue Octokit::RateLimitExceeded => error
 reset_time_epoch_seconds = error.response.headers['x-ratelimit-reset'].to_i
 current_time_epoch_seconds = Time.now.to_i
 seconds_to_wait = reset_time_epoch_seconds - current_time_epoch_seconds
 puts "You have exceeded your rate limit. Retrying in #{seconds_to_wait} seconds."
 sleep(seconds_to_wait)
 retry
 rescue Octokit::Error => error
 puts error
 end
 end

 response = request_retry("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 2)
def request_retry(route, parameters)
 begin
 response = octokit.request(route, parameters)
 return response
 rescue Octokit::RateLimitExceeded => error
 reset_time_epoch_seconds = error.response.headers['x-ratelimit-reset'].to_i
 current_time_epoch_seconds = Time.now.to_i
 seconds_to_wait = reset_time_epoch_seconds - current_time_epoch_seconds
 puts "You have exceeded your rate limit. Retrying in #{seconds_to_wait} seconds."
 sleep(seconds_to_wait)
 retry
 rescue Octokit::Error => error
 puts error
 end
 end

 response = request_retry("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 2)

Using the response
The request method returns a response object if the request was successful. The response object contains data (the response body returned by the endpoint), status (the HTTP response code), url (the URL of the request), and headers (a hash containing the response headers). Unless otherwise specified, the response body is in JSON format. Some endpoints do not return a response body; in those cases, the data property is omitted.
Rubyresponse = octokit.request("GET /repos/{owner}/{repo}/issues/{issue_number}", owner: "github", repo: "docs", issue_number: 11901)
 puts "The status of the response is: #{response.status}"
 puts "The request URL was: #{response.url}"
 puts "The x-ratelimit-remaining response header is: #{response.headers['x-ratelimit-remaining']}"
 puts "The issue title is: #{response.data['title']}"
response = octokit.request("GET /repos/{owner}/{repo}/issues/{issue_number}", owner: "github", repo: "docs", issue_number: 11901)
 puts "The status of the response is: #{response.status}"
 puts "The request URL was: #{response.url}"
 puts "The x-ratelimit-remaining response header is: #{response.headers['x-ratelimit-remaining']}"
 puts "The issue title is: #{response.data['title']}"

Similarly, the paginate method returns a response object. If the request was successful, the response object contains data, status, url, and headers.
Rubyresponse = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)
puts "#{response.data.length} issues were returned"
puts "The title of the first issue is: #{response.data[0]['title']}"
response = octokit.paginate("GET /repos/{owner}/{repo}/issues", owner: "github", repo: "docs", per_page: 100)
puts "#{response.data.length} issues were returned"
puts "The title of the first issue is: #{response.data[0]['title']}"

Example script
Here is a full example script that uses Octokit.rb. The script imports Octokit and creates a new instance of Octokit. If you want to authenticate with a GitHub App instead of a personal access token, you would import and instantiate App instead of Octokit. For more information, see Authenticating with a GitHub App in this guide.
The get_changed_files function gets all of the files changed for a pull request. The comment_if_data_files_changed function calls the get_changed_files function. If any of the files that the pull request changed include /data/ in the file path, then the function will comment on the pull request.
Rubyrequire "octokit"

 octokit = Octokit::Client.new(access_token: "YOUR-TOKEN")

 def get_changed_files(octokit, owner, repo, pull_number)
 files_changed = []

 begin
 iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", owner: owner, repo: repo, pull_number: pull_number, per_page: 100)
 iterator.each do | data |
     files_changed.concat(data.map {
       | file_data | file_data.filename
     })
   end
 rescue Octokit::Error => error
 if error.response
 puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
 end
 puts error
 end

 files_changed
 end

 def comment_if_data_files_changed(octokit, owner, repo, pull_number)
 changed_files = get_changed_files(octokit, owner, repo, pull_number)

 if changed_files.any ? {
   | file_name | /\/data\//i.match ? (file_name)
 }
 begin
 comment = octokit.create_pull_request_review_comment(owner, repo, pull_number, "It looks like you changed a data file. These files are auto-generated. \n\nYou must revert any changes to data files before your pull request will be reviewed.")
 comment.html_url
 rescue Octokit::Error => error
 if error.response
 puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
 end
 puts error
 end
 end
 end

# Example usage
owner = "github"
repo = "docs"
pull_number = 22809
comment_url = comment_if_data_files_changed(octokit, owner, repo, pull_number)

puts "A comment was added to the pull request: #{comment_url}"
require "octokit"

 octokit = Octokit::Client.new(access_token: "YOUR-TOKEN")

 def get_changed_files(octokit, owner, repo, pull_number)
 files_changed = []

 begin
 iterator = octokit.paginate.iterator("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", owner: owner, repo: repo, pull_number: pull_number, per_page: 100)
 iterator.each do | data |
     files_changed.concat(data.map {
       | file_data | file_data.filename
     })
   end
 rescue Octokit::Error => error
 if error.response
 puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
 end
 puts error
 end

 files_changed
 end

 def comment_if_data_files_changed(octokit, owner, repo, pull_number)
 changed_files = get_changed_files(octokit, owner, repo, pull_number)

 if changed_files.any ? {
   | file_name | /\/data\//i.match ? (file_name)
 }
 begin
 comment = octokit.create_pull_request_review_comment(owner, repo, pull_number, "It looks like you changed a data file. These files are auto-generated. \n\nYou must revert any changes to data files before your pull request will be reviewed.")
 comment.html_url
 rescue Octokit::Error => error
 if error.response
 puts "Error! Status: #{error.response.status}. Message: #{error.response.data.message}"
 end
 puts error
 end
 end
 end

# Example usage
owner = "github"
repo = "docs"
pull_number = 22809
comment_url = comment_if_data_files_changed(octokit, owner, repo, pull_number)

puts "A comment was added to the pull request: #{comment_url}"

Note

This is just a basic example. In practice, you may want to use error handling and conditional checks to handle various scenarios.

Next steps
To learn more about working with the GitHub REST API and Octokit.rb, explore the following resources:

To learn more about Octokit.rb see the Octokit.rb documentation.
To find detailed information about GitHub's available REST API endpoints, including their request and response structures, see the GitHub REST API documentation.\n\n\n\nREST API/Guides/Discover resources for a userDiscovering resources for a userLearn how to find the repositories and organizations that your app can access for a user in a reliable way for your authenticated requests to the REST API.In this articleGetting startedDiscover the repositories that your app can access for a userDiscover the organizations that your app can access for a userWhen making authenticated requests to the GitHub API, applications often need to fetch the current user's repositories and organizations. In this guide, we'll explain how to reliably discover those resources.
To interact with the GitHub API, we'll be using Octokit.rb. You can find the complete source code for this project in the platform-samples repository.
Getting started
If you haven't already, you should read the Basics of Authentication guide before working through the examples below. The examples below assume that you have registered an OAuth app and that your application has an OAuth token for a user.
Discover the repositories that your app can access for a user
In addition to having their own personal repositories, a user may be a collaborator on repositories owned by other users and organizations. Collectively, these are the repositories where the user has privileged access: either it's a private repository where the user has read or write access, or it's a public repository where the user has write access.
OAuth scopes and organization application policies determine which of those repositories your app can access for a user. Use the workflow below to discover those repositories.
As always, first we'll require GitHub's Octokit.rb Ruby library. Then we'll configure Octokit.rb to automatically handle pagination for us. For more information about pagination, see Using pagination in the REST API.
require 'octokit'

Octokit.auto_paginate = true

Next, we'll pass in our application's OAuth token for a given user:
# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below.
client = Octokit::Client.new :access_token => ENV["OAUTH_ACCESS_TOKEN"]

Then, we're ready to fetch the repositories that our application can access for the user:
client.repositories.each do |repository|
  full_name = repository[:full_name]
  has_push_access = repository[:permissions][:push]

  access_type = if has_push_access
                  "write"
                else
                  "read-only"
                end

  puts "User has #{access_type} access to #{full_name}."
end

Discover the organizations that your app can access for a user
Applications can perform all sorts of organization-related tasks for a user. To perform these tasks, the app needs an OAuth authorization with sufficient permission. For example, the read:org scope allows you to list teams, and the user scope lets you publicize the user’s organization membership. Once a user has granted one or more of these scopes to your app, you're ready to fetch the user’s organizations.
Just as we did when discovering repositories above, we'll start by requiring GitHub's Octokit.rb Ruby library and configuring it to take care of pagination for us. For more information about pagination, see Using pagination in the REST API.
require 'octokit'

Octokit.auto_paginate = true

Next, we'll pass in our application's OAuth token for a given user to initialize our API client:
# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below.
client = Octokit::Client.new :access_token => ENV["OAUTH_ACCESS_TOKEN"]

Then, we can list the organizations that our application can access for the user:
client.organizations.each do |organization|
  puts "User belongs to the #{organization[:login]} organization."
end

Return all of the user's organization memberships
If you've read the docs from cover to cover, you may have noticed an API method for listing a user's public organization memberships. Most applications should avoid this API method. This method only returns the user's public organization memberships, not their private organization memberships.
As an application, you typically want all of the user's organizations that your app is authorized to access. The workflow above will give you exactly that.\n\n\n\nREST API/Guides/Delivering deploymentsDelivering deploymentsUsing the Deployments REST API, you can build custom tooling that interacts with your server and a third-party app.In this articleWriting your serverWorking with deploymentsConclusionYou can use the REST API to deploy your projects hosted on GitHub on a server that you own. For more information about the endpoints to manage deployments and statuses, see REST API endpoints for deployments. You can also use the REST API to coordinate your deployments the moment your code lands on the default branch. For more information, see Building a CI server.
This guide will use the REST API to demonstrate a setup that you can use.
In our scenario, we will:

Merge a pull request.
When the CI is finished, we'll set the pull request's status accordingly.
When the pull request is merged, we'll run our deployment to our server.

Our CI system and host server will be figments of our imagination. They could be
Heroku, Amazon, or something else entirely. The crux of this guide will be setting up
and configuring the server managing the communication.
If you haven't already, be sure to download ngrok, and learn how
to use it. We find it to be a very useful tool for exposing local
applications to the internet.
Note

Alternatively, you can use webhook forwarding to set up your local environment to receive webhooks. For more information, see Using the GitHub CLI to forward webhooks for testing.

Note: you can download the complete source code for this project
from the platform-samples repo.
Writing your server
We'll write a quick Sinatra app to prove that our local connections are working.
Let's start with this:
require 'sinatra'
require 'json'

post '/event_handler' do
  payload = JSON.parse(params[:payload])
  "Well, it worked!"
end

(If you're unfamiliar with how Sinatra works, we recommend reading the Sinatra guide.)
Start this server up. By default, Sinatra starts on port 4567, so you'll want
to configure ngrok to start listening for that, too.
In order for this server to work, we'll need to set a repository up with a webhook. The webhook should be configured to fire whenever a pull request is created, or merged.
Go ahead and create a repository you're comfortable playing around in. Might we
suggest @octocat's Spoon/Knife repository?
After that, you'll create a new webhook in your repository, feeding it the URL that ngrok gave you, and choosing application/x-www-form-urlencoded as the content type.
Click Update webhook. You should see a body response of Well, it worked!.
Great! Click on Let me select individual events., and select the following:

Deployment
Deployment status
Pull Request

These are the events GitHub will send to our server whenever the relevant action
occurs. We'll configure our server to just handle when pull requests are merged
right now:
post '/event_handler' do
  @payload = JSON.parse(params[:payload])

  case request.env['HTTP_X_GITHUB_EVENT']
  when "pull_request"
    if @payload["action"] == "closed" && @payload["pull_request"]["merged"]
      puts "A pull request was merged! A deployment should start now..."
    end
  end
end

What's going on? Every event that GitHub sends out attached a X-GitHub-Event
HTTP header. We'll only care about the PR events for now. When a pull request is
merged (its state is closed, and merged is true), we'll kick off a deployment.
To test out this proof-of-concept, make some changes in a branch in your test
repository, open a pull request, and merge it. Your server should respond accordingly!
Working with deployments
With our server in place, the code being reviewed, and our pull request
merged, we want our project to be deployed.
We'll start by modifying our event listener to process pull requests when they're
merged, and start paying attention to deployments:
when "pull_request"
  if @payload["action"] == "closed" && @payload["pull_request"]["merged"]
    start_deployment(@payload["pull_request"])
  end
when "deployment"
  process_deployment(@payload)
when "deployment_status"
  update_deployment_status
end

Based on the information from the pull request, we'll start by filling out the
start_deployment method:
def start_deployment(pull_request)
  user = pull_request['user']['login']
  payload = JSON.generate(:environment => 'production', :deploy_user => user)
  @client.create_deployment(pull_request['head']['repo']['full_name'], pull_request['head']['sha'], {:payload => payload, :description => "Deploying my sweet branch"})
end

Deployments can have some metadata attached to them, in the form of a payload
and a description. Although these values are optional, it's helpful to use
for logging and representing information.
When a new deployment is created, a completely separate event is triggered. That's
why we have a new switch case in the event handler for deployment. You can
use this information to be notified when a deployment has been triggered.
Deployments can take a rather long time, so we'll want to listen for various events,
such as when the deployment was created, and what state it's in.
Let's simulate a deployment that does some work, and notice the effect it has on
the output. First, let's complete our process_deployment method:
def process_deployment
  payload = JSON.parse(@payload['payload'])
  # you can send this information to your chat room, monitor, pager, etc.
  puts "Processing '#{@payload['description']}' for #{payload['deploy_user']} to #{payload['environment']}"
  sleep 2 # simulate work
  @client.create_deployment_status("repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}", 'pending')
  sleep 2 # simulate work
  @client.create_deployment_status("repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}", 'success')
end

Finally, we'll simulate storing the status information as console output:
def update_deployment_status
  puts "Deployment status for #{@payload['id']} is #{@payload['state']}"
end

Let's break down what's going on. A new deployment is created by start_deployment,
which triggers the deployment event. From there, we call process_deployment
to simulate work that's going on. During that processing, we also make a call to
create_deployment_status, which lets a receiver know what's going on, as we
switch the status to pending.
After the deployment is finished, we set the status to success.
Conclusion
At GitHub, we've used a version of Heaven to manage
our deployments for years. A common flow is essentially the same as the
server we've built above:

Wait for a response on the state of the CI checks (success or failure)
If the required checks succeed, merge the pull request
Heaven takes the merged code, and deploys it to staging and production servers
In the meantime, Heaven also notifies everyone about the build, via Hubot sitting in our chat rooms

That's it! You don't need to build your own deployment setup to use this example.
You can always rely on GitHub integrations.\n\n\n\nREST API/Guides/Rendering data as graphsRendering data as graphsLearn how to visualize the programming languages from your repository using the D3.js library and Ruby Octokit.In this articleSetting up an OAuth appFetching repository informationVisualizing language countsCombining different API callsIn this guide, we're going to use the API to fetch information about repositories
that we own, and the programming languages that make them up. Then, we'll
visualize that information in a couple of different ways using the D3.js library. To
interact with the GitHub API, we'll be using the excellent Ruby library, Octokit.
If you haven't already, you should read the Basics of Authentication
guide before starting this example. You can find the complete source code for this project in the platform-samples repository.
Let's jump right in!
Setting up an OAuth app
First, register a new application on GitHub. Set the main and callback
URLs to http://localhost:4567/. As before, we're going to handle authentication for the API by
implementing a Rack middleware using sinatra-auth-github:
require 'sinatra/auth/github'

module Example
  class MyGraphApp < Sinatra::Base
    # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
    # Instead, set and test environment variables, like below
    # if ENV['GITHUB_CLIENT_ID'] && ENV['GITHUB_CLIENT_SECRET']
    #  CLIENT_ID        = ENV['GITHUB_CLIENT_ID']
    #  CLIENT_SECRET    = ENV['GITHUB_CLIENT_SECRET']
    # end

    CLIENT_ID = ENV['GH_GRAPH_CLIENT_ID']
    CLIENT_SECRET = ENV['GH_GRAPH_SECRET_ID']

    enable :sessions

    set :github_options, {
      :scopes    => "repo",
      :secret    => CLIENT_SECRET,
      :client_id => CLIENT_ID,
      :callback_url => "/"
    }

    register Sinatra::Auth::Github

    get '/' do
      if !authenticated?
        authenticate!
      else
        access_token = github_user["token"]
      end
    end
  end
end

Set up a similar config.ru file as in the previous example:
ENV['RACK_ENV'] ||= 'development'
require "rubygems"
require "bundler/setup"

require File.expand_path(File.join(File.dirname(__FILE__), 'server'))

run Example::MyGraphApp

Fetching repository information
This time, in order to talk to the GitHub API, we're going to use the Octokit
Ruby library. This is much easier than directly making a bunch of
REST calls. Plus, Octokit was developed by a GitHubber, and is actively maintained,
so you know it'll work.
Authentication with the API via Octokit is easy. Just pass your login
and token to the Octokit::Client constructor:
if !authenticated?
  authenticate!
else
  octokit_client = Octokit::Client.new(:login => github_user.login, :oauth_token => github_user.token)
end

Let's do something interesting with the data about our repositories. We're going
to see the different programming languages they use, and count which ones are used
most often. To do that, we'll first need a list of our repositories from the API.
With Octokit, that looks like this:
repos = client.repositories

Next, we'll iterate over each repository, and count the language that GitHub
associates with it:
language_obj = {}
repos.each do |repo|
  # sometimes language can be nil
  if repo.language
    if !language_obj[repo.language]
      language_obj[repo.language] = 1
    else
      language_obj[repo.language] += 1
    end
  end
end

languages.to_s

When you restart your server, your web page should display something
that looks like this:
{"JavaScript"=>13, "PHP"=>1, "Perl"=>1, "CoffeeScript"=>2, "Python"=>1, "Java"=>3, "Ruby"=>3, "Go"=>1, "C++"=>1}

So far, so good, but not very human-friendly. A visualization
would be great in helping us understand how these language counts are distributed. Let's feed
our counts into D3 to get a neat bar graph representing the popularity of the languages we use.
Visualizing language counts
D3.js, or just D3, is a comprehensive library for creating many kinds of charts, graphs, and interactive visualizations.
Using D3 in detail is beyond the scope of this guide, but for a good introductory article,
check out D3 for Mortals.
D3 is a JavaScript library, and likes working with data as arrays. So, let's convert our Ruby hash into
a JSON array for use by JavaScript in the browser.
languages = []
language_obj.each do |lang, count|
  languages.push :language => lang, :count => count
end

erb :lang_freq, :locals => { :languages => languages.to_json}

We're simply iterating over each key-value pair in our object and pushing them into
a new array. The reason we didn't do this earlier is because we didn't want to iterate
over our language_obj object while we were creating it.
Now, lang_freq.erb is going to need some JavaScript to support rendering a bar graph.
For now, you can just use the code provided here, and refer to the resources linked above
if you want to learn more about how D3 works:
<!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.0.1/d3.v3.min.js"></script>
    <style>
    svg {
      padding: 20px;
    }
    rect {
      fill: #2d578b
    }
    text {
      fill: white;
    }
    text.yAxis {
      font-size: 12px;
      font-family: Helvetica, sans-serif;
      fill: black;
    }
    </style>
  </head>
  <body>
    <p>Check this sweet data out:</p>
    <div id="lang_freq"></div>

  </body>
  <script>
    var data = <%= languages %>;

    var barWidth = 40;
    var width = (barWidth + 10) * data.length;
    var height = 300;

    var x = d3.scale.linear().domain([0, data.length]).range([0, width]);
    var y = d3.scale.linear().domain([0, d3.max(data, function(datum) { return datum.count; })]).
      rangeRound([0, height]);

    // add the canvas to the DOM
    var languageBars = d3.select("#lang_freq").
      append("svg:svg").
      attr("width", width).
      attr("height", height);

    languageBars.selectAll("rect").
      data(data).
      enter().
      append("svg:rect").
      attr("x", function(datum, index) { return x(index); }).
      attr("y", function(datum) { return height - y(datum.count); }).
      attr("height", function(datum) { return y(datum.count); }).
      attr("width", barWidth);

    languageBars.selectAll("text").
      data(data).
      enter().
      append("svg:text").
      attr("x", function(datum, index) { return x(index) + barWidth; }).
      attr("y", function(datum) { return height - y(datum.count); }).
      attr("dx", -barWidth/2).
      attr("dy", "1.2em").
      attr("text-anchor", "middle").
      text(function(datum) { return datum.count;});

    languageBars.selectAll("text.yAxis").
      data(data).
      enter().append("svg:text").
      attr("x", function(datum, index) { return x(index) + barWidth; }).
      attr("y", height).
      attr("dx", -barWidth/2).
      attr("text-anchor", "middle").
      text(function(datum) { return datum.language;}).
      attr("transform", "translate(0, 18)").
      attr("class", "yAxis");
  </script>
</html>

Phew! Again, don't worry about what most of this code is doing. The relevant part
here is a line way at the top--var data = <%= languages %>;--which indicates
that we're passing our previously created languages array into ERB for manipulation.
As the "D3 for Mortals" guide suggests, this isn't necessarily the best use of
D3. But it does serve to illustrate how you can use the library, along with Octokit,
to make some really amazing things.
Combining different API calls
Now it's time for a confession: the language attribute within repositories
only identifies the "primary" language defined. That means that if you have
a repository that combines several languages, the one with the most bytes of code
is considered to be the primary language.
Let's combine a few API calls to get a true representation of which language
has the greatest number of bytes written across all our code. A treemap
should be a great way to visualize the sizes of our coding languages used, rather
than simply the count. We'll need to construct an array of objects that looks
something like this:
[ { "name": "language1", "size": 100},
  { "name": "language2", "size": 23}
  ...
]

Since we already have a list of repositories above, let's inspect each one, and
call the GET /repos/{owner}/{repo}/languages endpoint:
repos.each do |repo|
  repo_name = repo.name
  repo_langs = octokit_client.languages("#{github_user.login}/#{repo_name}")
end

From there, we'll cumulatively add each language found to a list of languages:
repo_langs.each do |lang, count|
  if !language_obj[lang]
    language_obj[lang] = count
  else
    language_obj[lang] += count
  end
end

After that, we'll format the contents into a structure that D3 understands:
language_obj.each do |lang, count|
  language_byte_count.push :name => "#{lang} (#{count})", :count => count
end

# some mandatory formatting for D3
language_bytes = [ :name => "language_bytes", :elements => language_byte_count]

(For more information on D3 tree map magic, check out this simple tutorial.)
To wrap up, we pass this JSON information over to the same ERB template:
erb :lang_freq, :locals => { :languages => languages.to_json, :language_byte_count => language_bytes.to_json}

Like before, here's a bunch of JavaScript that you can drop
directly into your template:
<div id="byte_freq"></div>
<script>
  var language_bytes = <%= language_byte_count %>
  var childrenFunction = function(d){return d.elements};
  var sizeFunction = function(d){return d.count;};
  var colorFunction = function(d){return Math.floor(Math.random()*20)};
  var nameFunction = function(d){return d.name;};

  var color = d3.scale.linear()
              .domain([0,10,15,20])
              .range(["grey","green","yellow","red"]);

  drawTreemap(5000, 2000, '#byte_freq', language_bytes, childrenFunction, nameFunction, sizeFunction, colorFunction, color);

  function drawTreemap(height,width,elementSelector,language_bytes,childrenFunction,nameFunction,sizeFunction,colorFunction,colorScale){

      var treemap = d3.layout.treemap()
          .children(childrenFunction)
          .size([width,height])
          .value(sizeFunction);

      var div = d3.select(elementSelector)
          .append("div")
          .style("position","relative")
          .style("width",width + "px")
          .style("height",height + "px");

      div.data(language_bytes).selectAll("div")
          .data(function(d){return treemap.nodes(d);})
          .enter()
          .append("div")
          .attr("class","cell")
          .style("background",function(d){ return colorScale(colorFunction(d));})
          .call(cell)
          .text(nameFunction);
  }

  function cell(){
      this
          .style("left",function(d){return d.x + "px";})
          .style("top",function(d){return d.y + "px";})
          .style("width",function(d){return d.dx - 1 + "px";})
          .style("height",function(d){return d.dy - 1 + "px";});
  }
</script>

Et voila! Beautiful rectangles containing your repo languages, with relative
proportions that are easy to see at a glance. You might need to
tweak the height and width of your treemap, passed as the first two
arguments to drawTreemap above, to get all the information to show up properly.\n\n\n\nREST API/Guides/Working with commentsWorking with commentsUsing the REST API, you can access and manage comments in your pull requests, issues, or commits.In this articlePull Request CommentsPull Request Comments on a LineCommit CommentsFor any Pull Request, GitHub provides three kinds of comment views:
comments on the Pull Request as a whole, comments on a specific line within the Pull Request,
and comments on a specific commit within the Pull Request.
Each of these types of comments goes through a different portion of the GitHub API.
In this guide, we'll explore how you can access and manipulate each one. For every
example, we'll be using this sample Pull Request made on the "octocat"
repository. As always, samples can be found in our platform-samples repository.
Pull Request Comments
To access comments on a Pull Request, you'll use the endpoints to manage issues.
This may seem counterintuitive at first. But once you understand that a Pull
Request is just an Issue with code, it makes sense to use these endpoints to
create comments on a Pull Request.
We'll demonstrate fetching Pull Request comments by creating a Ruby script using
Octokit.rb. You'll also want to create a personal access token.
The following code should help you get started accessing comments from a Pull Request
using Octokit.rb:
require 'octokit'

# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below
client = Octokit::Client.new :access_token => ENV['MY_PERSONAL_TOKEN']

client.issue_comments("octocat/Spoon-Knife", 1176).each do |comment|
  username = comment[:user][:login]
  post_date = comment[:created_at]
  content = comment[:body]

  puts "#{username} made a comment on #{post_date}. It says:\n'#{content}'\n"
end

Here, we're specifically calling out to the API to get the comments (issue_comments),
providing both the repository's name (octocat/Spoon-Knife), and the Pull Request ID
we're interested in (1176). After that, it's simply a matter of iterating through
the comments to fetch information about each one.
Pull Request Comments on a Line
Within the diff view, you can start a discussion on a particular aspect of a singular
change made within the Pull Request. These comments occur on the individual lines
within a changed file. The endpoint URL for this discussion comes from the endpoint to manage pull request reviews.
The following code fetches all the Pull Request comments made on files, given a single Pull Request number:
require 'octokit'

# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below
client = Octokit::Client.new :access_token => ENV['MY_PERSONAL_TOKEN']

client.pull_request_comments("octocat/Spoon-Knife", 1176).each do |comment|
  username = comment[:user][:login]
  post_date = comment[:created_at]
  content = comment[:body]
  path = comment[:path]
  position = comment[:position]

  puts "#{username} made a comment on #{post_date} for the file called #{path}, on line #{position}. It says:\n'#{content}'\n"
end

You'll notice that it's incredibly similar to the example above. The difference
between this view and the Pull Request comment is the focus of the conversation.
A comment made on a Pull Request should be reserved for discussion or ideas on
the overall direction of the code. A comment made as part of a Pull Request review should
deal specifically with the way a particular change was implemented within a file.
Commit Comments
The last type of comments occur specifically on individual commits. For this reason,
they make use of the endpoint to manage commit comments.
To retrieve the comments on a commit, you'll want to use the SHA1 of the commit.
In other words, you won't use any identifier related to the Pull Request. Here's an example:
require 'octokit'

# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below
client = Octokit::Client.new :access_token => ENV['MY_PERSONAL_TOKEN']

client.commit_comments("octocat/Spoon-Knife", "cbc28e7c8caee26febc8c013b0adfb97a4edd96e").each do |comment|
  username = comment[:user][:login]
  post_date = comment[:created_at]
  content = comment[:body]

  puts "#{username} made a comment on #{post_date}. It says:\n'#{content}'\n"
end

Note that this API call will retrieve single line comments, as well as comments made
on the entire commit.\n\n\n\nREST API/Guides/Building a CI serverBuilding a CI serverBuild your own CI system using the Status API.In this articleWriting your serverWorking with statusesConclusionYou can use the REST API to tie together commits with
a testing service, so that every push you make can be tested and represented
in a GitHub pull request. For more information about the relevant endpoints, see REST API endpoints for commit statuses.
This guide will use that API to demonstrate a setup that you can use.
In our scenario, we will:

Run our CI suite when a Pull Request is opened (we'll set the CI status to pending).
When the CI is finished, we'll set the Pull Request's status accordingly.

Our CI system and host server will be figments of our imagination. They could be
Travis, Jenkins, or something else entirely. The crux of this guide will be setting up
and configuring the server managing the communication.
If you haven't already, download ngrok, and learn how
to use it. We find it to be a very useful tool for exposing local
applications to the internet.
Note

Alternatively, you can use webhook forwarding to set up your local environment to receive webhooks. For more information, see Using the GitHub CLI to forward webhooks for testing.

Note: you can download the complete source code for this project
from the platform-samples repo.
Writing your server
We'll write a quick Sinatra app to prove that our local connections are working.
Let's start with this:
require 'sinatra'
require 'json'

post '/event_handler' do
  payload = JSON.parse(params[:payload])
  "Well, it worked!"
end

(If you're unfamiliar with how Sinatra works, we recommend reading the Sinatra guide.)
Start this server up. By default, Sinatra starts on port 4567, so you'll want
to configure ngrok to start listening for that, too.
In order for this server to work, we'll need to set a repository up with a webhook. The webhook should be configured to fire whenever a pull request is created, or merged.
Go ahead and create a repository you're comfortable playing around in. Might we suggest @octocat's Spoon/Knife repository?
After that, you'll create a new webhook in your repository, feeding it the URL that ngrok gave you, and choosing application/x-www-form-urlencoded as the content type.
Click Update webhook. You should see a body response of Well, it worked!.
Great! Click on Let me select individual events, and select the following:

Status
Pull Request

These are the events GitHub will send to our server whenever the relevant action
occurs. Let's update our server to just handle the Pull Request scenario right now:
post '/event_handler' do
  @payload = JSON.parse(params[:payload])

  case request.env['HTTP_X_GITHUB_EVENT']
  when "pull_request"
    if @payload["action"] == "opened"
      process_pull_request(@payload["pull_request"])
    end
  end
end

helpers do
  def process_pull_request(pull_request)
    puts "It's #{pull_request['title']}"
  end
end

What's going on? Every event that GitHub sends out attached a X-GitHub-Event
HTTP header. We'll only care about the PR events for now. From there, we'll
take the payload of information, and return the title field. In an ideal scenario,
our server would be concerned with every time a pull request is updated, not just
when it's opened. That would make sure that every new push passes the CI tests.
But for this demo, we'll just worry about when it's opened.
To test out this proof-of-concept, make some changes in a branch in your test
repository, and open a pull request. Your server should respond accordingly!
Working with statuses
With our server in place, we're ready to start our first requirement, which is
setting (and updating) CI statuses. Note that at any time you update your server,
you can click Redeliver to send the same payload. There's no need to make a
new pull request every time you make a change!
Since we're interacting with the GitHub API, we'll use Octokit.rb
to manage our interactions. We'll configure that client with
a personal access token:
# !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!!
# Instead, set and test environment variables, like below
ACCESS_TOKEN = ENV['MY_PERSONAL_TOKEN']

before do
  @client ||= Octokit::Client.new(:access_token => ACCESS_TOKEN)
end

After that, we'll just need to update the pull request on GitHub to make clear
that we're processing on the CI:
def process_pull_request(pull_request)
  puts "Processing pull request..."
  @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'pending')
end

We're doing three very basic things here:

We're looking up the full name of the repository
We're looking up the last SHA of the pull request
We're setting the status to "pending"

That's it! From here, you can run whatever process you need to in order to execute
your test suite. Maybe you're going to pass off your code to Jenkins, or call
on another web service via its API, like Travis. After that, you'd
be sure to update the status once more. In our example, we'll just set it to "success":
def process_pull_request(pull_request)
  @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'pending')
  sleep 2 # do busy work...
  @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'success')
  puts "Pull request processed!"
end

Conclusion
At GitHub, we've used a version of Janky to manage our CI for years.
The basic flow is essentially the exact same as the server we've built above.
At GitHub, we:

Fire to Jenkins when a pull request is created or updated (via Janky)
Wait for a response on the state of the CI
If the code is green, we merge the pull request

All of this communication is funneled back to our chat rooms. You don't need to
build your own CI setup to use this example.
You can always rely on GitHub integrations.\n\n\n\nREST API/Guides/Get started - Git databaseUsing the REST API to interact with your Git databaseUse the REST API to read and write raw Git objects to your Git database on GitHub and to list and update your references (branch heads and tags).In this articleOverviewChecking mergeability of pull requestsOverview
This basically allows you to reimplement a lot of Git functionality with the REST API - by creating raw objects directly into the database and updating branch references you could technically do just about anything that Git can do without having Git installed.
The REST API will return a 409 Conflict if the Git repository is empty
or unavailable. An unavailable repository typically means GitHub is in the process of creating the repository. For an empty repository, you can use the PUT /repos/{owner}/{repo}/contents/{path} REST API endpoint to create content and initialize the repository so you can use the API to manage the Git database. Contact us through the GitHub Support portal if this response status persists.
For more information on the Git object database, please read the
Git Internals chapter of
the Pro Git book.
As an example, if you wanted to commit a change to a file in your
repository, you would:

Get the current commit object
Retrieve the tree it points to
Retrieve the content of the blob object that tree has for that particular file path
Change the content somehow and post a new blob object with that new content, getting a blob SHA back
Post a new tree object with that file path pointer replaced with your new blob SHA getting a tree SHA back
Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back
Update the reference of your branch to point to the new commit SHA

It might seem complex, but it's actually pretty simple when you understand
the model and it opens up a ton of things you could potentially do with the API.
Checking mergeability of pull requests
Warning

Please do not depend on using Git directly or GET /repos/{owner}/{repo}/git/refs/{ref} for updates to merge Git refs, because this content becomes outdated without warning.

A consuming API needs to explicitly request a pull request to create a test merge commit. A test merge commit is created when you view the pull request in the UI and the "Merge" button is displayed, or when you get, create, or edit a pull request using the REST API. Without this request, the merge Git refs will fall out of date until the next time someone views the pull request.
If you are currently using polling methods that produce outdated merge Git refs, then GitHub recommends using the following steps to get the latest changes from the default branch:

Receive the pull request webhook.
Call GET /repos/{owner}/{repo}/pulls/{pull_number} to start a background job for creating the merge commit candidate.
Poll your repository using GET /repos/{owner}/{repo}/pulls/{pull_number} to see if the mergeable attribute is true or false. You can use Git directly or GET /repos/{owner}/{repo}/git/refs/{ref} for updates to merge Git refs only after performing the previous steps.\n\n\n\nREST API/Guides/Get started - ChecksUsing the REST API to interact with checksYou can use the REST API to build GitHub Apps that run powerful checks against code changes in a repository. You can create apps that perform continuous integration, code linting, or code scanning services and provide detailed feedback on commits.In this articleOverviewAbout check suitesAbout check runsCheck runs and requested actionsRetention of checks dataOverview
Rather than binary pass/fail build statuses, GitHub Apps can report rich statuses, annotate lines of code with detailed information, and re-run tests. REST API to manage checks is available exclusively to your GitHub Apps.
For an example of how to use the REST API with a GitHub App, see Building CI checks with a GitHub App.
You can use statuses with protected branches to prevent people from merging pull requests prematurely. For more information, see About protected branches.
About check suites
When someone pushes code to a repository, GitHub creates a check suite for the last commit. A check suite is a collection of the check runs created by a single GitHub App for a specific commit. Check suites summarize the status and conclusion of the check runs that a suite includes.
The status can be queued, in_progress, requested, waiting, pending, or completed. Only GitHub Actions can set a status of requested, waiting, or pending.
If the status is completed, the conclusion can be any of the following:

action_required
cancelled
timed_out
failure
neutral
skipped
stale
startup_failure
success

The check suite reports the highest priority check run conclusion in the check suite's conclusion. For example, if three check runs have conclusions of timed_out, success, and neutral the check suite conclusion will be timed_out.
By default, GitHub creates a check suite automatically when code is pushed to the repository. This default flow sends the check_suite event (with requested action) to all GitHub Apps that have the checks:write permission. When your GitHub App receives the check_suite event, it can create new check runs for the latest commit. GitHub automatically adds new check runs to the correct check suite based on the check run's repository and SHA.
If you don't want to use the default automatic flow, you can control when you create check suites. To change the default settings for the creation of check suites, use the Update repository preferences for check suites endpoint. All changes to the automatic flow settings are recorded in the audit log for the repository. If you have disabled the automatic flow, you can create a check suite using the Create a check suite endpoint. You should continue to use the Create a check run endpoint to provide feedback on a commit.
Write permission for the REST API to interact with checks is only available to GitHub Apps. OAuth apps and authenticated users can view check runs and check suites, but they are not able to create them. If you aren't building a GitHub App, you might be interested in using the REST API to interact with commit statuses.
To use the endpoints to manage check suites, the GitHub App must have the checks:write permission and can also subscribe to the check_suite webhook.
For information on how to authenticate as a GitHub App, see About authentication with a GitHub App.
About check runs
A check run is an individual test that is part of a check suite. Each run includes a status and conclusion.
The status can be queued, in_progress, requested, waiting, pending, or completed. Only GitHub Actions can set a status of requested, waiting, or pending.
If the status is completed, the conclusion can be any of the following:

action_required
cancelled
timed_out
failure
neutral
skipped
success

If a check run is in an incomplete state for more than 14 days, then the check run's conclusion becomes stale and appears on GitHub as stale with . Only GitHub can mark check runs as stale. For more information about possible conclusions of a check run, see the conclusion parameter.
As soon as you receive the check_suite webhook, you can create the check run, even if the check is not complete. You can update the status of the check run as it completes with the values queued, in_progress, or completed, and you can update the output as more details become available. A check run can contain timestamps, a link to more details on your external site, detailed annotations for specific lines of code, and information about the analysis performed.
Annotations add information from your check run to specific lines of code. Each annotation includes an annotation_level property, which can be notice, warning, or failure. The annotation also includes path, start_line, and end_line to specify what location the annotation refers to. The annotation includes a message to describe the result. For more information, see REST API endpoints for check runs.
A check can also be manually re-run in the GitHub UI. See About status checks for more details. When this occurs, the GitHub App that created the check run will receive the check_run webhook requesting a new check run. If you create a check run without creating a check suite, GitHub creates the check suite for you automatically.
Write permission for the REST API to interact with checks is only available to GitHub Apps. OAuth apps and authenticated users can view check runs and check suites, but they are not able to create them. If you aren't building a GitHub App, you might be interested in using the REST API to interact with commit statuses.
To use the endpoints to manage check runs, the GitHub App must have the checks:write permission and can also subscribe to the check_run webhook.
Check runs and requested actions
When you set up a check run with requested actions (not to be confused with GitHub Actions), you can display a button in the pull request view on GitHub that allows people to request your GitHub App to perform additional tasks.
For example, a code linting app could use requested actions to display a button in a pull request to automatically fix detected syntax errors.
To create a button that can request additional actions from your app, use the actions object when you Create a check run. For example, the actions object below displays a button in the Checks tab of a pull request with the label "Fix this." The button appears after the check run completes.
"actions": [{
  "label": "Fix this",
  "description": "Let us fix that for you",
  "identifier": "fix_errors"
}]

When a user clicks the button, GitHub sends the check_run.requested_action webhook to your app. When your app receives a check_run.requested_action webhook event, it can look for the requested_action.identifier key in the webhook payload to determine which button was clicked and perform the requested task.
For a detailed example of how to set up requested actions with the REST API, see Building CI checks with a GitHub App.
Retention of checks data
GitHub retains checks data for 400 days. After 400 days, the data is archived. 10 days after archival, the data is permanently deleted.
To merge a pull request with checks that are both required and archived, you must rerun the checks.\n\n\n\nREST API/Guides/Encrypt secretsEncrypting secrets for the REST APIIn order to create or update a secret with the REST API, you must encrypt the value of the secret.In this articleAbout encrypting secretsExample encrypting a secret using Node.jsExample encrypting a secret using PythonExample encrypting a secret using C#Example encrypting a secret using RubyAbout encrypting secrets
Several REST API endpoints let you create secrets on GitHub. To use these endpoints, you must encrypt the secret value using libsodium. For more information, see the libsodium documentation.
In order to encrypt a secret, you need a Base64 encoded public key. You can get a public key from the REST API. To determine which endpoint to use to get the public key, look at the documentation for the encrypted_value parameter in the endpoint that you will use to create a secret .
Example encrypting a secret using Node.js
If you are using Node.js, you can encrypt your secret using the libsodium-wrappers library. For more information, see libsodium-wrappers.
In the following example, replace YOUR_SECRET with the plain text value that you want to encrypt. Replace YOUR_BASE64_KEY with your Base64 encoded public key. The documentation for the endpoint that you will use to create a secret will tell you which endpoint you can use to get the public key. ORIGINAL is not a placeholder; it is a parameter for the libsodium-wrappers library.
JavaScriptconst sodium = require('libsodium-wrappers')

const secret = 'YOUR_SECRET'
const key = 'YOUR_BASE64_KEY'

//Check if libsodium is ready and then proceed.
sodium.ready.then(() => {
  // Convert the secret and key to a Uint8Array.
  let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)
  let binsec = sodium.from_string(secret)

  // Encrypt the secret using libsodium
  let encBytes = sodium.crypto_box_seal(binsec, binkey)

  // Convert the encrypted Uint8Array to Base64
  let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)

  // Print the output
  console.log(output)
});
const sodium = require('libsodium-wrappers')

const secret = 'YOUR_SECRET'
const key = 'YOUR_BASE64_KEY'

//Check if libsodium is ready and then proceed.
sodium.ready.then(() => {
  // Convert the secret and key to a Uint8Array.
  let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)
  let binsec = sodium.from_string(secret)

  // Encrypt the secret using libsodium
  let encBytes = sodium.crypto_box_seal(binsec, binkey)

  // Convert the encrypted Uint8Array to Base64
  let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)

  // Print the output
  console.log(output)
});

Example encrypting a secret using Python
If you are using Python 3, you can encrypt your secret using the PyNaCl library. For more information, see PyNaCl.
In the following example, replace YOUR_SECRET with the plain text value that you want to encrypt. Replace YOUR_BASE64_KEY with your Base64 encoded public key. The documentation for the endpoint that you will use to create a secret will tell you which endpoint you can use to get the public key.
Pythonfrom base64 import b64encode
from nacl import encoding, public

def encrypt(public_key: str, secret_value: str) -> str:
  """Encrypt a Unicode string using the public key."""
  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
  sealed_box = public.SealedBox(public_key)
  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
  return b64encode(encrypted).decode("utf-8")

encrypt("YOUR_BASE64_KEY", "YOUR_SECRET")
from base64 import b64encode
from nacl import encoding, public

def encrypt(public_key: str, secret_value: str) -> str:
  """Encrypt a Unicode string using the public key."""
  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
  sealed_box = public.SealedBox(public_key)
  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
  return b64encode(encrypted).decode("utf-8")

encrypt("YOUR_BASE64_KEY", "YOUR_SECRET")

Example encrypting a secret using C#
If you are using C#, you can encrypt your secret using the Sodium.Core package. For more information, see Sodium.Core.
In the following example, replace YOUR_SECRET with the plain text value that you want to encrypt. Replace YOUR_BASE64_KEY with your Base64 encoded public key. The documentation for the endpoint that you will use to create a secret will tell you which endpoint you can use to get the public key.
C#var secretValue = System.Text.Encoding.UTF8.GetBytes("YOUR_SECRET");
var publicKey = Convert.FromBase64String("YOUR_BASE64_KEY");

var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
var secretValue = System.Text.Encoding.UTF8.GetBytes("YOUR_SECRET");
var publicKey = Convert.FromBase64String("YOUR_BASE64_KEY");

var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));

Example encrypting a secret using Ruby
If you are using Ruby, you can encrypt your secret using the RbNaCl gem. For more information, see RbNaCl.
In the following example, replace YOUR_SECRET with the plain text value that you want to encrypt. Replace YOUR_BASE64_KEY with your Base64 encoded public key. The documentation for the endpoint that you will use to create a secret will tell you which endpoint you can use to get the public key.
Rubyrequire "rbnacl"
require "base64"

key = Base64.decode64("YOUR_BASE64_KEY")
public_key = RbNaCl::PublicKey.new(key)

box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
encrypted_secret = box.encrypt("YOUR_SECRET")

# Print the base64 encoded secret
puts Base64.strict_encode64(encrypted_secret)
require "rbnacl"
require "base64"

key = Base64.decode64("YOUR_BASE64_KEY")
public_key = RbNaCl::PublicKey.new(key)

box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
encrypted_secret = box.encrypt("YOUR_SECRET")

# Print the base64 encoded secret
puts Base64.strict_encode64(encrypted_secret)\n\n\n\nREST API/About the REST API/API VersionsAPI VersionsLearn how to specify which REST API version to use whenever you make a request to the REST API.In this articleAbout API versioningSpecifying an API versionUpgrading to a new API versionSupported API versionsAbout API versioning
The GitHub REST API is versioned. The API version name is based on the date when the API version was released. For example, the API version 2022-11-28 was released on Mon, 28 Nov 2022.
Any breaking changes will be released in a new API version. Breaking changes are changes that can potentially break an integration. Breaking changes include:

Removing an entire operation
Removing or renaming a parameter
Removing or renaming a response field
Adding a new required parameter
Making a previously optional parameter required
Changing the type of a parameter or response field
Removing enum values
Adding a new validation rule to an existing parameter
Changing authentication or authorization requirements

Any additive (non-breaking) changes will be available in all supported API versions. Additive changes are changes that should not break an integration. Additive changes include:

Adding an operation
Adding an optional parameter
Adding an optional request header
Adding a response field
Adding a response header
Adding enum values

When a new REST API version is released, the previous API version will be supported for at least 24 more months following the release of the new API version.
Specifying an API version
You should use the X-GitHub-Api-Version header to specify an API version. For example:
curl --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/zen

Requests without the X-GitHub-Api-Version header will default to use the 2022-11-28 version.
If you specify an API version that is no longer supported, you will receive a 400 error.
Upgrading to a new API version
Before upgrading to a new REST API version, you should read the changelog of breaking changes for the new API version to understand what breaking changes are included and to learn more about how to upgrade to that specific API version. For more information, see Breaking changes.
When you update your integration to specify the new API version in the X-GitHub-Api-Version header, you'll also need to make any changes required for your integration to work with the new API version.
Once your integration is updated, test your integration to verify that it works with the new API version.
Supported API versions
The following REST API versions are currently supported:
2022-11-28
You can also make an API request to get all of the supported API versions. For more information, see REST API endpoints for meta data.\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/IssuesREST API endpoints for issuesUse the REST API to manage issues and pull requests.List issues assigned to the authenticated userList issues assigned to the authenticated user across all visible repositories including owned repositories, member
repositories, and organization repositories. You can use the filter query parameter to fetch issues that are not
necessarily assigned to you.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.collab boolean orgs boolean owned boolean pulls boolean per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issues assigned to the authenticated user"Request exampleget/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List organization issues assigned to the authenticated userList issues in an organization assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List organization issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List organization issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionorg string RequiredThe organization name. The name is not case sensitive.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@hightype string Can be the name of an issue type.sort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List organization issues assigned to the authenticated user"Status codeDescription200OK404Resource not foundCode samples for "List organization issues assigned to the authenticated user"Request exampleget/orgs/{org}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/ORG/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]List repository issuesList issues in a repository. Only open issues will be listed.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List repository issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List repository issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionmilestone string If an integer is passed, it should refer to a milestone by its number field. If the string * is passed, issues with any milestone are accepted. If the string none is passed, issues without milestones are returned.state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all assignee string Can be the name of a user. Pass in none for issues with no assigned user, and * for issues assigned to any user.type string Can be the name of an issue type. If the string * is passed, issues with any type are accepted. If the string none is passed, issues without type are returned.creator string The user that created the issue.mentioned string A user that's mentioned in the issue.labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List repository issues"Status codeDescription200OK301Moved permanently404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List repository issues"Request exampleget/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Create an issueAny user with pull access to a repository can create an issue. If issues are disabled in the repository, the API returns a 410 Gone status.
This endpoint triggers notifications. Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Create an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string or integer RequiredThe title of the issue.body string The contents of the issue.assignee string or null Login for the user that this issue should be assigned to. NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. This field is closing down.milestone null or string or integer The number of the milestone to associate this issue with. NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise.labels array Labels to associate with this issue. NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.assignees array of strings Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.type string or null The name of the issue type to associate with this issue. NOTE: Only users with push access can set the type for new issues. The type is silently dropped otherwise.HTTP response status codes for "Create an issue"Status codeDescription201Created400Bad Request403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Create an issue"Request examplepost/repos/{owner}/{repo}/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"labels":["bug"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Get an issueThe API returns a 301 Moved Permanently status if the issue was
transferred to another repository. If
the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
returns a 404 Not Found status. If the issue was deleted from a repository where the authenticated user has read
access, the API returns a 410 Gone status. To receive webhook events for transferred and deleted issues, subscribe
to the issues webhook.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Get an issue"Status codeDescription200OK301Moved permanently304Not modified404Resource not found410GoneCode samples for "Get an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Update an issueIssue owners and users with push access or Triage role can edit an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptiontitle null or string or integer The title of the issue.body string or null The contents of the issue.assignee string or null Username to assign to this issue. This field is closing down.state string The open or closed state of the issue.Can be one of: open, closed state_reason string or null The reason for the state change. Ignored unless state is changed.Can be one of: completed, not_planned, reopened, null milestone null or string or integer The number of the milestone to associate this issue with or use null to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.labels array Labels to associate with this issue. Pass one or more labels to replace the set of labels on this issue. Send an empty array ([]) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.assignees array of strings Usernames to assign to this issue. Pass one or more user logins to replace the set of assignees on this issue. Send an empty array ([]) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.type string or null The name of the issue type to associate with this issue or use null to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.HTTP response status codes for "Update an issue"Status codeDescription200OK301Moved permanently403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Update an issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER \
  -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","assignees":["octocat"],"milestone":1,"state":"open","labels":["bug"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Lock an issueUsers with push access can lock an issue or pull request's conversation.
Note that, if you choose not to pass any parameters, you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see "HTTP method."Fine-grained access tokens for "Lock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Lock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlock_reason string The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:

off-topic
too heated
resolved
spam
Can be one of: off-topic, too heated, resolved, spam HTTP response status codes for "Lock an issue"Status codeDescription204No Content403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Lock an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lock \
  -d '{"lock_reason":"off-topic"}'ResponseStatus: 204Unlock an issueUsers with push access can unlock an issue's conversation.Fine-grained access tokens for "Unlock an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Unlock an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Unlock an issue"Status codeDescription204No Content403Forbidden404Resource not foundCode samples for "Unlock an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/lockcURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/lockResponseStatus: 204List user account issues assigned to the authenticated userList issues across owned and member repositories assigned to the authenticated user.
Note

GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key. Be aware that the id of a pull request returned from "Issues" endpoints will be an issue id. To find out the pull request id, use the "List pull requests" endpoint.

This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List user account issues assigned to the authenticated user"This endpoint works with the following fine-grained token types:GitHub App user access tokensFine-grained personal access tokensThe fine-grained token does not require any permissions.Parameters for "List user account issues assigned to the authenticated user"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Query parametersName, Type, Descriptionfilter string Indicates which sorts of issues to return. assigned means issues assigned to you. created means issues created by you. mentioned means issues mentioning you. subscribed means issues you're subscribed to updates for. all or repos means all issues you can see, regardless of participation or creation.Default: assignedCan be one of: assigned, created, mentioned, subscribed, repos, all state string Indicates the state of the issues to return.Default: openCan be one of: open, closed, all labels string A list of comma separated label names. Example: bug,ui,@highsort string What to sort results by.Default: createdCan be one of: created, updated, comments direction string The direction to sort the results by.Default: descCan be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List user account issues assigned to the authenticated user"Status codeDescription200OK304Not modified404Resource not foundCode samples for "List user account issues assigned to the authenticated user"Request exampleget/user/issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "repository": {
      "id": 1296269,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
      "name": "Hello-World",
      "full_name": "octocat/Hello-World",
      "owner": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "private": false,
      "html_url": "https://github.com/octocat/Hello-World",
      "description": "This your first repo!",
      "fork": false,
      "url": "https://api.github.com/repos/octocat/Hello-World",
      "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
      "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
      "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
      "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
      "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
      "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
      "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
      "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
      "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
      "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
      "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
      "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
      "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
      "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
      "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
      "git_url": "git:github.com/octocat/Hello-World.git",
      "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
      "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
      "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
      "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
      "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
      "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
      "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
      "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
      "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
      "ssh_url": "git@github.com:octocat/Hello-World.git",
      "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
      "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
      "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
      "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
      "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
      "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
      "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
      "clone_url": "https://github.com/octocat/Hello-World.git",
      "mirror_url": "git:git.example.com/octocat/Hello-World",
      "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
      "svn_url": "https://svn.github.com/octocat/Hello-World",
      "homepage": "https://github.com",
      "language": null,
      "forks_count": 9,
      "stargazers_count": 80,
      "watchers_count": 80,
      "size": 108,
      "default_branch": "master",
      "open_issues_count": 0,
      "is_template": true,
      "topics": [
        "octocat",
        "atom",
        "electron",
        "api"
      ],
      "has_issues": true,
      "has_projects": true,
      "has_wiki": true,
      "has_pages": false,
      "has_downloads": true,
      "archived": false,
      "disabled": false,
      "visibility": "public",
      "pushed_at": "2011-01-26T19:06:43Z",
      "created_at": "2011-01-26T19:01:12Z",
      "updated_at": "2011-01-26T19:14:43Z",
      "permissions": {
        "admin": false,
        "push": false,
        "pull": true
      },
      "allow_rebase_merge": true,
      "template_repository": null,
      "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
      "allow_squash_merge": true,
      "allow_auto_merge": false,
      "delete_branch_on_merge": true,
      "allow_merge_commit": true,
      "subscribers_count": 42,
      "network_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "url": "https://api.github.com/licenses/mit",
        "spdx_id": "MIT",
        "node_id": "MDc6TGljZW5zZW1pdA==",
        "html_url": "https://github.com/licenses/mit"
      },
      "forks": 1,
      "open_issues": 1,
      "watchers": 1
    },
    "author_association": "COLLABORATOR"
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/AssigneesREST API endpoints for issue assigneesUse the REST API to manage assignees on issues and pull requests.About issue and pull request assignees
You can use the REST API to view, add, and remove assignees on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List assigneesLists the available assignees for issues in a repository.Fine-grained access tokens for "List assignees"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List assignees"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List assignees"Status codeDescription200OK404Resource not foundCode samples for "List assignees"Request exampleget/repos/{owner}/{repo}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assigneesResponseExample responseResponse schemaStatus: 200[
  {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  }
]Check if a user can be assignedChecks if a user has permission to be assigned to an issue in this repository.
If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.assignee string RequiredHTTP response status codes for "Check if a user can be assigned"Status codeDescription204If the assignee can be assigned to issues in the repository, a 204 header with no content is returned.404Otherwise a 404 status code is returned.Code samples for "Check if a user can be assigned"Request exampleget/repos/{owner}/{repo}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/assignees/ASSIGNEEIf the assignee can be assigned to issues in the repository, a 204 header with no content is returned.Status: 204Add assignees to an issueAdds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.Fine-grained access tokens for "Add assignees to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add assignees to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of people to assign this issue to. NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Add assignees to an issue"Status codeDescription201CreatedCode samples for "Add assignees to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Remove assignees from an issueRemoves one or more assignees from an issue.Fine-grained access tokens for "Remove assignees from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove assignees from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionassignees array of strings Usernames of assignees to remove from an issue. NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.HTTP response status codes for "Remove assignees from an issue"Status codeDescription200OKCode samples for "Remove assignees from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/assigneescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees \
  -d '{"assignees":["hubot","other_user"]}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Check if a user can be assigned to a issueChecks if a user has permission to be assigned to a specific issue.
If the assignee can be assigned to this issue, a 204 status code with no content is returned.
Otherwise a 404 status code is returned.Fine-grained access tokens for "Check if a user can be assigned to a issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Check if a user can be assigned to a issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.assignee string RequiredHTTP response status codes for "Check if a user can be assigned to a issue"Status codeDescription204Response if assignee can be assigned to issue_number404Response if assignee can not be assigned to issue_numberCode samples for "Check if a user can be assigned to a issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/assignees/ASSIGNEEResponse if assignee can be assigned to issue_numberStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/CommentsREST API endpoints for issue commentsUse the REST API to manage comments on issues and pull requests.About issue and pull request comments
You can use the REST API to create and manage comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints. To manage pull request review comments, see REST API endpoints for pull request review comments.List issue comments for a repositoryYou can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.
By default, issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionsort string The property to sort the results by.Default: createdCan be one of: created, updated direction string Either asc or desc. Ignored without the sort parameter.Can be one of: asc, desc since string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments for a repository"Status codeDescription200OK404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "List issue comments for a repository"Request exampleget/repos/{owner}/{repo}/issues/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Get an issue commentYou can use the REST API to get comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Get an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Get an issue comment"Status codeDescription200OK404Resource not foundCode samples for "Get an issue comment"Request exampleget/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Update an issue commentYou can use the REST API to update comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Update an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Update an issue comment"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "Update an issue comment"Request examplepatch/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_ID \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}Delete an issue commentYou can use the REST API to delete comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.Fine-grained access tokens for "Delete an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.comment_id integer RequiredThe unique identifier of the comment.HTTP response status codes for "Delete an issue comment"Status codeDescription204No ContentCode samples for "Delete an issue comment"Request exampledelete/repos/{owner}/{repo}/issues/comments/{comment_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/comments/COMMENT_IDResponseStatus: 204List issue commentsYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
Issue comments are ordered by ascending ID.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List issue comments"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue comments"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionsince string Only show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue comments"Status codeDescription200OK404Resource not found410GoneCode samples for "List issue comments"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/commentsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
    "body": "Me too",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T16:00:49Z",
    "updated_at": "2011-04-14T16:00:49Z",
    "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "author_association": "COLLABORATOR"
  }
]Create an issue commentYou can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.
This endpoint triggers notifications.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Create an issue comment"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create an issue comment"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionbody string RequiredThe contents of the comment.HTTP response status codes for "Create an issue comment"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Create an issue comment"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/commentscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/comments \
  -d '{"body":"Me too"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
  "body": "Me too",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "created_at": "2011-04-14T16:00:49Z",
  "updated_at": "2011-04-14T16:00:49Z",
  "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "author_association": "COLLABORATOR"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/EventsREST API endpoints for issue eventsUse the REST API to retrieve events triggered by activity in issues and pull requests.About events
You can use the REST API to view different types of events triggered by activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, you can use the Events endpoints.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List issue events for a repositoryLists events for a repository.Fine-grained access tokens for "List issue events for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events for a repository"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "List issue events for a repository"Request exampleget/repos/{owner}/{repo}/issues/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "issue": {
      "id": 1,
      "node_id": "MDU6SXNzdWUx",
      "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
      "repository_url": "https://api.github.com/repos/octocat/Hello-World",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
      "html_url": "https://github.com/octocat/Hello-World/issues/1347",
      "number": 1347,
      "state": "open",
      "title": "Found a bug",
      "body": "I'm having a problem with this.",
      "user": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 208045946,
          "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
          "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
          "name": "bug",
          "description": "Something isn't working",
          "color": "f29513",
          "default": true
        }
      ],
      "assignee": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
        "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
        "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
        "id": 1002604,
        "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
        "number": 1,
        "state": "open",
        "title": "v1.0",
        "description": "Tracking milestone for version 1.0",
        "creator": {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 4,
        "closed_issues": 8,
        "created_at": "2011-04-10T20:09:31Z",
        "updated_at": "2014-03-03T18:58:10Z",
        "closed_at": "2013-02-12T13:22:01Z",
        "due_on": "2012-10-09T23:39:01Z"
      },
      "locked": true,
      "active_lock_reason": "too heated",
      "comments": 0,
      "pull_request": {
        "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
        "html_url": "https://github.com/octocat/Hello-World/pull/1347",
        "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
        "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
      },
      "closed_at": null,
      "created_at": "2011-04-22T13:33:48Z",
      "updated_at": "2011-04-22T13:33:48Z",
      "author_association": "COLLABORATOR",
      "state_reason": "completed"
    }
  }
]Get an issue eventGets a single event by the event id.Fine-grained access tokens for "Get an issue event"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue event"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.event_id integer RequiredHTTP response status codes for "Get an issue event"Status codeDescription200OK403Forbidden404Resource not found410GoneCode samples for "Get an issue event"Request exampleget/repos/{owner}/{repo}/issues/events/{event_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/events/EVENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEwOklzc3VlRXZlbnQx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
  "actor": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "event": "closed",
  "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "created_at": "2011-04-14T16:00:49Z",
  "issue": {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "performed_via_github_app": {
      "id": 1,
      "slug": "octoapp",
      "node_id": "MDExOkludGVncmF0aW9uMQ==",
      "owner": {
        "login": "github",
        "id": 1,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
        "url": "https://api.github.com/orgs/github",
        "repos_url": "https://api.github.com/orgs/github/repos",
        "events_url": "https://api.github.com/orgs/github/events",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": true
      },
      "name": "Octocat App",
      "description": "",
      "external_url": "https://example.com",
      "html_url": "https://github.com/apps/octoapp",
      "created_at": "2017-07-08T16:18:44-04:00",
      "updated_at": "2017-07-08T16:18:44-04:00",
      "permissions": {
        "metadata": "read",
        "contents": "read",
        "issues": "write",
        "single_file": "write"
      },
      "events": [
        "push",
        "pull_request"
      ]
    },
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
}List issue eventsLists all events for an issue.Fine-grained access tokens for "List issue events"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events"Status codeDescription200OK410GoneCode samples for "List issue events"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "performed_via_github_app": null,
    "label": {
      "name": "label",
      "color": "red"
    }
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/EventsREST API endpoints for issue eventsUse the REST API to retrieve events triggered by activity in issues and pull requests.About events
You can use the REST API to view different types of events triggered by activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, you can use the Events endpoints.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List issue events for a repositoryLists events for a repository.Fine-grained access tokens for "List issue events for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events for a repository"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "List issue events for a repository"Request exampleget/repos/{owner}/{repo}/issues/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "issue": {
      "id": 1,
      "node_id": "MDU6SXNzdWUx",
      "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
      "repository_url": "https://api.github.com/repos/octocat/Hello-World",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
      "html_url": "https://github.com/octocat/Hello-World/issues/1347",
      "number": 1347,
      "state": "open",
      "title": "Found a bug",
      "body": "I'm having a problem with this.",
      "user": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 208045946,
          "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
          "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
          "name": "bug",
          "description": "Something isn't working",
          "color": "f29513",
          "default": true
        }
      ],
      "assignee": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
        "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
        "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
        "id": 1002604,
        "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
        "number": 1,
        "state": "open",
        "title": "v1.0",
        "description": "Tracking milestone for version 1.0",
        "creator": {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 4,
        "closed_issues": 8,
        "created_at": "2011-04-10T20:09:31Z",
        "updated_at": "2014-03-03T18:58:10Z",
        "closed_at": "2013-02-12T13:22:01Z",
        "due_on": "2012-10-09T23:39:01Z"
      },
      "locked": true,
      "active_lock_reason": "too heated",
      "comments": 0,
      "pull_request": {
        "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
        "html_url": "https://github.com/octocat/Hello-World/pull/1347",
        "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
        "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
      },
      "closed_at": null,
      "created_at": "2011-04-22T13:33:48Z",
      "updated_at": "2011-04-22T13:33:48Z",
      "author_association": "COLLABORATOR",
      "state_reason": "completed"
    }
  }
]Get an issue eventGets a single event by the event id.Fine-grained access tokens for "Get an issue event"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue event"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.event_id integer RequiredHTTP response status codes for "Get an issue event"Status codeDescription200OK403Forbidden404Resource not found410GoneCode samples for "Get an issue event"Request exampleget/repos/{owner}/{repo}/issues/events/{event_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/events/EVENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEwOklzc3VlRXZlbnQx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
  "actor": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "event": "closed",
  "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "created_at": "2011-04-14T16:00:49Z",
  "issue": {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "performed_via_github_app": {
      "id": 1,
      "slug": "octoapp",
      "node_id": "MDExOkludGVncmF0aW9uMQ==",
      "owner": {
        "login": "github",
        "id": 1,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
        "url": "https://api.github.com/orgs/github",
        "repos_url": "https://api.github.com/orgs/github/repos",
        "events_url": "https://api.github.com/orgs/github/events",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": true
      },
      "name": "Octocat App",
      "description": "",
      "external_url": "https://example.com",
      "html_url": "https://github.com/apps/octoapp",
      "created_at": "2017-07-08T16:18:44-04:00",
      "updated_at": "2017-07-08T16:18:44-04:00",
      "permissions": {
        "metadata": "read",
        "contents": "read",
        "issues": "write",
        "single_file": "write"
      },
      "events": [
        "push",
        "pull_request"
      ]
    },
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
}List issue eventsLists all events for an issue.Fine-grained access tokens for "List issue events"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events"Status codeDescription200OK410GoneCode samples for "List issue events"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "performed_via_github_app": null,
    "label": {
      "name": "label",
      "color": "red"
    }
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/EventsREST API endpoints for issue eventsUse the REST API to retrieve events triggered by activity in issues and pull requests.About events
You can use the REST API to view different types of events triggered by activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, you can use the Events endpoints.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List issue events for a repositoryLists events for a repository.Fine-grained access tokens for "List issue events for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events for a repository"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "List issue events for a repository"Request exampleget/repos/{owner}/{repo}/issues/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "issue": {
      "id": 1,
      "node_id": "MDU6SXNzdWUx",
      "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
      "repository_url": "https://api.github.com/repos/octocat/Hello-World",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
      "html_url": "https://github.com/octocat/Hello-World/issues/1347",
      "number": 1347,
      "state": "open",
      "title": "Found a bug",
      "body": "I'm having a problem with this.",
      "user": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 208045946,
          "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
          "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
          "name": "bug",
          "description": "Something isn't working",
          "color": "f29513",
          "default": true
        }
      ],
      "assignee": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
        "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
        "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
        "id": 1002604,
        "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
        "number": 1,
        "state": "open",
        "title": "v1.0",
        "description": "Tracking milestone for version 1.0",
        "creator": {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 4,
        "closed_issues": 8,
        "created_at": "2011-04-10T20:09:31Z",
        "updated_at": "2014-03-03T18:58:10Z",
        "closed_at": "2013-02-12T13:22:01Z",
        "due_on": "2012-10-09T23:39:01Z"
      },
      "locked": true,
      "active_lock_reason": "too heated",
      "comments": 0,
      "pull_request": {
        "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
        "html_url": "https://github.com/octocat/Hello-World/pull/1347",
        "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
        "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
      },
      "closed_at": null,
      "created_at": "2011-04-22T13:33:48Z",
      "updated_at": "2011-04-22T13:33:48Z",
      "author_association": "COLLABORATOR",
      "state_reason": "completed"
    }
  }
]Get an issue eventGets a single event by the event id.Fine-grained access tokens for "Get an issue event"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue event"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.event_id integer RequiredHTTP response status codes for "Get an issue event"Status codeDescription200OK403Forbidden404Resource not found410GoneCode samples for "Get an issue event"Request exampleget/repos/{owner}/{repo}/issues/events/{event_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/events/EVENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEwOklzc3VlRXZlbnQx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
  "actor": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "event": "closed",
  "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "created_at": "2011-04-14T16:00:49Z",
  "issue": {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "performed_via_github_app": {
      "id": 1,
      "slug": "octoapp",
      "node_id": "MDExOkludGVncmF0aW9uMQ==",
      "owner": {
        "login": "github",
        "id": 1,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
        "url": "https://api.github.com/orgs/github",
        "repos_url": "https://api.github.com/orgs/github/repos",
        "events_url": "https://api.github.com/orgs/github/events",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": true
      },
      "name": "Octocat App",
      "description": "",
      "external_url": "https://example.com",
      "html_url": "https://github.com/apps/octoapp",
      "created_at": "2017-07-08T16:18:44-04:00",
      "updated_at": "2017-07-08T16:18:44-04:00",
      "permissions": {
        "metadata": "read",
        "contents": "read",
        "issues": "write",
        "single_file": "write"
      },
      "events": [
        "push",
        "pull_request"
      ]
    },
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
}List issue eventsLists all events for an issue.Fine-grained access tokens for "List issue events"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events"Status codeDescription200OK410GoneCode samples for "List issue events"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "performed_via_github_app": null,
    "label": {
      "name": "label",
      "color": "red"
    }
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/EventsREST API endpoints for issue eventsUse the REST API to retrieve events triggered by activity in issues and pull requests.About events
You can use the REST API to view different types of events triggered by activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, you can use the Events endpoints.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List issue events for a repositoryLists events for a repository.Fine-grained access tokens for "List issue events for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events for a repository"Status codeDescription200OK422Validation failed, or the endpoint has been spammed.Code samples for "List issue events for a repository"Request exampleget/repos/{owner}/{repo}/issues/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "issue": {
      "id": 1,
      "node_id": "MDU6SXNzdWUx",
      "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
      "repository_url": "https://api.github.com/repos/octocat/Hello-World",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
      "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
      "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
      "html_url": "https://github.com/octocat/Hello-World/issues/1347",
      "number": 1347,
      "state": "open",
      "title": "Found a bug",
      "body": "I'm having a problem with this.",
      "user": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 208045946,
          "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
          "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
          "name": "bug",
          "description": "Something isn't working",
          "color": "f29513",
          "default": true
        }
      ],
      "assignee": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
        "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
        "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
        "id": 1002604,
        "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
        "number": 1,
        "state": "open",
        "title": "v1.0",
        "description": "Tracking milestone for version 1.0",
        "creator": {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 4,
        "closed_issues": 8,
        "created_at": "2011-04-10T20:09:31Z",
        "updated_at": "2014-03-03T18:58:10Z",
        "closed_at": "2013-02-12T13:22:01Z",
        "due_on": "2012-10-09T23:39:01Z"
      },
      "locked": true,
      "active_lock_reason": "too heated",
      "comments": 0,
      "pull_request": {
        "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
        "html_url": "https://github.com/octocat/Hello-World/pull/1347",
        "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
        "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
      },
      "closed_at": null,
      "created_at": "2011-04-22T13:33:48Z",
      "updated_at": "2011-04-22T13:33:48Z",
      "author_association": "COLLABORATOR",
      "state_reason": "completed"
    }
  }
]Get an issue eventGets a single event by the event id.Fine-grained access tokens for "Get an issue event"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get an issue event"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.event_id integer RequiredHTTP response status codes for "Get an issue event"Status codeDescription200OK403Forbidden404Resource not found410GoneCode samples for "Get an issue event"Request exampleget/repos/{owner}/{repo}/issues/events/{event_id}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/events/EVENT_IDResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDEwOklzc3VlRXZlbnQx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
  "actor": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "event": "closed",
  "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
  "created_at": "2011-04-14T16:00:49Z",
  "issue": {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "performed_via_github_app": {
      "id": 1,
      "slug": "octoapp",
      "node_id": "MDExOkludGVncmF0aW9uMQ==",
      "owner": {
        "login": "github",
        "id": 1,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
        "url": "https://api.github.com/orgs/github",
        "repos_url": "https://api.github.com/orgs/github/repos",
        "events_url": "https://api.github.com/orgs/github/events",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": true
      },
      "name": "Octocat App",
      "description": "",
      "external_url": "https://example.com",
      "html_url": "https://github.com/apps/octoapp",
      "created_at": "2017-07-08T16:18:44-04:00",
      "updated_at": "2017-07-08T16:18:44-04:00",
      "permissions": {
        "metadata": "read",
        "contents": "read",
        "issues": "write",
        "single_file": "write"
      },
      "events": [
        "push",
        "pull_request"
      ]
    },
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
}List issue eventsLists all events for an issue.Fine-grained access tokens for "List issue events"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List issue events"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List issue events"Status codeDescription200OK410GoneCode samples for "List issue events"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/eventscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/eventsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDEwOklzc3VlRXZlbnQx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
    "actor": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "closed",
    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
    "created_at": "2011-04-14T16:00:49Z",
    "performed_via_github_app": null,
    "label": {
      "name": "label",
      "color": "red"
    }
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/LabelsREST API endpoints for labelsUse the REST API to manage labels for repositories, issues and pull requests.About labels
You can use the REST API to manage labels for a repository and add or remove labels to issues and pull requests. Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List labels for an issueLists all labels for an issue.Fine-grained access tokens for "List labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "List labels for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Add labels to an issueAdds labels to an issue. If you provide an empty array of labels, all labels are removed from the issue.Fine-grained access tokens for "Add labels to an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Add labels to an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also replace all of the labels for an issue. For more information, see "Set labels for an issue."HTTP response status codes for "Add labels to an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add labels to an issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Set labels for an issueRemoves any previous labels and sets the new labels for an issue.Fine-grained access tokens for "Set labels for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Set labels for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionlabels array of strings The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a string or an array of labels directly, but GitHub recommends passing an object with the labels key. You can also add labels to the existing labels for an issue. For more information, see "Add labels to an issue."HTTP response status codes for "Set labels for an issue"Status codeDescription200OK301Moved permanently404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Set labels for an issue"Request exampleput/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PUT \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels \
  -d '{"labels":["bug","enhancement"]}'ResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Remove all labels from an issueRemoves all labels from an issue.Fine-grained access tokens for "Remove all labels from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove all labels from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.HTTP response status codes for "Remove all labels from an issue"Status codeDescription204No Content301Moved permanently404Resource not found410GoneCode samples for "Remove all labels from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labelsResponseStatus: 204Remove a label from an issueRemoves the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a 404 Not Found status if the label does not exist.Fine-grained access tokens for "Remove a label from an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Remove a label from an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.name string RequiredHTTP response status codes for "Remove a label from an issue"Status codeDescription200OK301Moved permanently404Resource not found410GoneCode samples for "Remove a label from an issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/labels/NAMEResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  }
]List labels for a repositoryLists all labels for a repository.Fine-grained access tokens for "List labels for a repository"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for a repository"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for a repository"Status codeDescription200OK404Resource not foundCode samples for "List labels for a repository"Request exampleget/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]Create a labelCreates a label for the specified repository with the given name and color. The name and color parameters are required. The color must be a valid hexadecimal color code.Fine-grained access tokens for "Create a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptionname string RequiredThe name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Create a label"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a label"Request examplepost/repos/{owner}/{repo}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels \
  -d '{"name":"bug","description":"Something isn'\''t working","color":"f29513"}'ResponseExample responseResponse schemaStatus: 201{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Get a labelGets a label using the given name.Fine-grained access tokens for "Get a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Get a label"Status codeDescription200OK404Resource not foundCode samples for "Get a label"Request exampleget/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
  "name": "bug",
  "description": "Something isn't working",
  "color": "f29513",
  "default": true
}Update a labelUpdates a label using the given label name.Fine-grained access tokens for "Update a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredBody parametersName, Type, Descriptionnew_name string The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing :strawberry: will render the emoji . For a full list of available emoji and codes, see "Emoji cheat sheet."color string The hexadecimal color code for the label, without the leading #.description string A short description of the label. Must be 100 characters or fewer.HTTP response status codes for "Update a label"Status codeDescription200OKCode samples for "Update a label"Request examplepatch/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAME \
  -d '{"new_name":"bug :bug:","description":"Small bug fix required","color":"b01f26"}'ResponseExample responseResponse schemaStatus: 200{
  "id": 208045946,
  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
  "name": "bug :bug:",
  "description": "Small bug fix required",
  "color": "b01f26",
  "default": true
}Delete a labelDeletes a label using the given label name.Fine-grained access tokens for "Delete a label"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a label"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.name string RequiredHTTP response status codes for "Delete a label"Status codeDescription204No ContentCode samples for "Delete a label"Request exampledelete/repos/{owner}/{repo}/labels/{name}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/labels/NAMEResponseStatus: 204List labels for issues in a milestoneLists labels for issues in a milestone.Fine-grained access tokens for "List labels for issues in a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List labels for issues in a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List labels for issues in a milestone"Status codeDescription200OKCode samples for "List labels for issues in a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}/labelscURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER/labelsResponseExample responseResponse schemaStatus: 200[
  {
    "id": 208045946,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
    "name": "bug",
    "description": "Something isn't working",
    "color": "f29513",
    "default": true
  },
  {
    "id": 208045947,
    "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
    "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
    "name": "enhancement",
    "description": "New feature or request",
    "color": "a2eeef",
    "default": false
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/MilestonesREST API endpoints for milestonesUse the REST API to manage milestones.List milestonesLists milestones for a repository.Fine-grained access tokens for "List milestones"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List milestones"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Query parametersName, Type, Descriptionstate string The state of the milestone. Either open, closed, or all.Default: openCan be one of: open, closed, all sort string What to sort results by. Either due_on or completeness.Default: due_onCan be one of: due_on, completeness direction string The direction of the sort. Either asc or desc.Default: ascCan be one of: asc, desc per_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List milestones"Status codeDescription200OK404Resource not foundCode samples for "List milestones"Request exampleget/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestonesResponseExample responseResponse schemaStatus: 200[
  {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  }
]Create a milestoneCreates a milestone.Fine-grained access tokens for "Create a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Create a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.Body parametersName, Type, Descriptiontitle string RequiredThe title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Create a milestone"Status codeDescription201Created404Resource not found422Validation failed, or the endpoint has been spammed.Code samples for "Create a milestone"Request examplepost/repos/{owner}/{repo}/milestonescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 201{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Get a milestoneGets a milestone using the given milestone number.Fine-grained access tokens for "Get a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "Get a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Get a milestone"Status codeDescription200OK404Resource not foundCode samples for "Get a milestone"Request exampleget/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Update a milestoneFine-grained access tokens for "Update a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Update a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.Body parametersName, Type, Descriptiontitle string The title of the milestone.state string The state of the milestone. Either open or closed.Default: openCan be one of: open, closed description string A description of the milestone.due_on string The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.HTTP response status codes for "Update a milestone"Status codeDescription200OKCode samples for "Update a milestone"Request examplepatch/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBER \
  -d '{"title":"v1.0","state":"open","description":"Tracking milestone for version 1.0","due_on":"2012-10-09T23:39:01Z"}'ResponseExample responseResponse schemaStatus: 200{
  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
  "id": 1002604,
  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
  "number": 1,
  "state": "open",
  "title": "v1.0",
  "description": "Tracking milestone for version 1.0",
  "creator": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "open_issues": 4,
  "closed_issues": 8,
  "created_at": "2011-04-10T20:09:31Z",
  "updated_at": "2014-03-03T18:58:10Z",
  "closed_at": "2013-02-12T13:22:01Z",
  "due_on": "2012-10-09T23:39:01Z"
}Delete a milestoneDeletes a milestone using the given milestone number.Fine-grained access tokens for "Delete a milestone"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (write)"Pull requests" repository permissions (write)Parameters for "Delete a milestone"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.milestone_number integer RequiredThe number that identifies the milestone.HTTP response status codes for "Delete a milestone"Status codeDescription204No Content404Resource not foundCode samples for "Delete a milestone"Request exampledelete/repos/{owner}/{repo}/milestones/{milestone_number}cURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/milestones/MILESTONE_NUMBERResponseStatus: 204\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/Sub-issuesREST API endpoints for sub-issuesUse the REST API to view, add, remove, and reprioritize sub-issues.Remove sub-issueYou can use the REST API to remove a sub-issue from an issue.
Removing content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass a specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Remove sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Remove sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to removeHTTP response status codes for "Remove sub-issue"Status codeDescription200OK400Bad Request404Resource not foundCode samples for "Remove sub-issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/sub_issuecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issue \
  -d '{"sub_issue_id":6}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}List sub-issuesYou can use the REST API to list the sub-issues on an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List sub-issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List sub-issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List sub-issues"Status codeDescription200OK404Resource not found410GoneCode samples for "List sub-issues"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Add sub-issueYou can use the REST API to add sub-issues to issues.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Add sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Add sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issuereplace_parent boolean Option that, when true, instructs the operation to replace the sub-issues current parent issueHTTP response status codes for "Add sub-issue"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add sub-issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues \
  -d '{"sub_issue_id":1}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Reprioritize sub-issueYou can use the REST API to reprioritize a sub-issue to a different position in the parent list.Fine-grained access tokens for "Reprioritize sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Reprioritize sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to reprioritizeafter_id integer The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).before_id integer The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).HTTP response status codes for "Reprioritize sub-issue"Status codeDescription200OK403Forbidden404Resource not found422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Reprioritize sub-issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritycURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues/priority \
  -d '{"sub_issue_id":6,"after_id":5}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/Sub-issuesREST API endpoints for sub-issuesUse the REST API to view, add, remove, and reprioritize sub-issues.Remove sub-issueYou can use the REST API to remove a sub-issue from an issue.
Removing content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass a specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Remove sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Remove sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to removeHTTP response status codes for "Remove sub-issue"Status codeDescription200OK400Bad Request404Resource not foundCode samples for "Remove sub-issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/sub_issuecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issue \
  -d '{"sub_issue_id":6}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}List sub-issuesYou can use the REST API to list the sub-issues on an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List sub-issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List sub-issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List sub-issues"Status codeDescription200OK404Resource not found410GoneCode samples for "List sub-issues"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Add sub-issueYou can use the REST API to add sub-issues to issues.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Add sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Add sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issuereplace_parent boolean Option that, when true, instructs the operation to replace the sub-issues current parent issueHTTP response status codes for "Add sub-issue"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add sub-issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues \
  -d '{"sub_issue_id":1}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Reprioritize sub-issueYou can use the REST API to reprioritize a sub-issue to a different position in the parent list.Fine-grained access tokens for "Reprioritize sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Reprioritize sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to reprioritizeafter_id integer The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).before_id integer The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).HTTP response status codes for "Reprioritize sub-issue"Status codeDescription200OK403Forbidden404Resource not found422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Reprioritize sub-issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritycURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues/priority \
  -d '{"sub_issue_id":6,"after_id":5}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/Sub-issuesREST API endpoints for sub-issuesUse the REST API to view, add, remove, and reprioritize sub-issues.Remove sub-issueYou can use the REST API to remove a sub-issue from an issue.
Removing content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass a specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Remove sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Remove sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to removeHTTP response status codes for "Remove sub-issue"Status codeDescription200OK400Bad Request404Resource not foundCode samples for "Remove sub-issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/sub_issuecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issue \
  -d '{"sub_issue_id":6}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}List sub-issuesYou can use the REST API to list the sub-issues on an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List sub-issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List sub-issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List sub-issues"Status codeDescription200OK404Resource not found410GoneCode samples for "List sub-issues"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Add sub-issueYou can use the REST API to add sub-issues to issues.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Add sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Add sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issuereplace_parent boolean Option that, when true, instructs the operation to replace the sub-issues current parent issueHTTP response status codes for "Add sub-issue"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add sub-issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues \
  -d '{"sub_issue_id":1}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Reprioritize sub-issueYou can use the REST API to reprioritize a sub-issue to a different position in the parent list.Fine-grained access tokens for "Reprioritize sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Reprioritize sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to reprioritizeafter_id integer The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).before_id integer The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).HTTP response status codes for "Reprioritize sub-issue"Status codeDescription200OK403Forbidden404Resource not found422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Reprioritize sub-issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritycURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues/priority \
  -d '{"sub_issue_id":6,"after_id":5}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/Sub-issuesREST API endpoints for sub-issuesUse the REST API to view, add, remove, and reprioritize sub-issues.Remove sub-issueYou can use the REST API to remove a sub-issue from an issue.
Removing content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass a specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Remove sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Remove sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to removeHTTP response status codes for "Remove sub-issue"Status codeDescription200OK400Bad Request404Resource not foundCode samples for "Remove sub-issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/sub_issuecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issue \
  -d '{"sub_issue_id":6}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}List sub-issuesYou can use the REST API to list the sub-issues on an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List sub-issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List sub-issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List sub-issues"Status codeDescription200OK404Resource not found410GoneCode samples for "List sub-issues"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Add sub-issueYou can use the REST API to add sub-issues to issues.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Add sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Add sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issuereplace_parent boolean Option that, when true, instructs the operation to replace the sub-issues current parent issueHTTP response status codes for "Add sub-issue"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add sub-issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues \
  -d '{"sub_issue_id":1}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Reprioritize sub-issueYou can use the REST API to reprioritize a sub-issue to a different position in the parent list.Fine-grained access tokens for "Reprioritize sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Reprioritize sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to reprioritizeafter_id integer The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).before_id integer The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).HTTP response status codes for "Reprioritize sub-issue"Status codeDescription200OK403Forbidden404Resource not found422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Reprioritize sub-issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritycURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues/priority \
  -d '{"sub_issue_id":6,"after_id":5}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/Sub-issuesREST API endpoints for sub-issuesUse the REST API to view, add, remove, and reprioritize sub-issues.Remove sub-issueYou can use the REST API to remove a sub-issue from an issue.
Removing content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass a specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Remove sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Remove sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to removeHTTP response status codes for "Remove sub-issue"Status codeDescription200OK400Bad Request404Resource not foundCode samples for "Remove sub-issue"Request exampledelete/repos/{owner}/{repo}/issues/{issue_number}/sub_issuecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X DELETE \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issue \
  -d '{"sub_issue_id":6}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}List sub-issuesYou can use the REST API to list the sub-issues on an issue.
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "List sub-issues"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List sub-issues"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List sub-issues"Status codeDescription200OK404Resource not found410GoneCode samples for "List sub-issues"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issuesResponseExample responseResponse schemaStatus: 200[
  {
    "id": 1,
    "node_id": "MDU6SXNzdWUx",
    "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
    "repository_url": "https://api.github.com/repos/octocat/Hello-World",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
    "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
    "html_url": "https://github.com/octocat/Hello-World/issues/1347",
    "number": 1347,
    "state": "open",
    "title": "Found a bug",
    "body": "I'm having a problem with this.",
    "user": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 208045946,
        "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
        "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
        "name": "bug",
        "description": "Something isn't working",
        "color": "f29513",
        "default": true
      }
    ],
    "assignee": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
      "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
      "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
      "id": 1002604,
      "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
      "number": 1,
      "state": "open",
      "title": "v1.0",
      "description": "Tracking milestone for version 1.0",
      "creator": {
        "login": "octocat",
        "id": 1,
        "node_id": "MDQ6VXNlcjE=",
        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 4,
      "closed_issues": 8,
      "created_at": "2011-04-10T20:09:31Z",
      "updated_at": "2014-03-03T18:58:10Z",
      "closed_at": "2013-02-12T13:22:01Z",
      "due_on": "2012-10-09T23:39:01Z"
    },
    "locked": true,
    "active_lock_reason": "too heated",
    "comments": 0,
    "pull_request": {
      "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
      "html_url": "https://github.com/octocat/Hello-World/pull/1347",
      "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
      "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
    },
    "closed_at": null,
    "created_at": "2011-04-22T13:33:48Z",
    "updated_at": "2011-04-22T13:33:48Z",
    "closed_by": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "author_association": "COLLABORATOR",
    "state_reason": "completed"
  }
]Add sub-issueYou can use the REST API to add sub-issues to issues.
Creating content too quickly using this endpoint may result in secondary rate limiting.
For more information, see "Rate limits for the API"
and "Best practices for using the REST API."
This endpoint supports the following custom media types. For more information, see "Media types."

application/vnd.github.raw+json: Returns the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.
application/vnd.github.text+json: Returns a text only representation of the markdown body. Response will include body_text.
application/vnd.github.html+json: Returns HTML rendered from the body's markdown. Response will include body_html.
application/vnd.github.full+json: Returns raw, text, and HTML representations. Response will include body, body_text, and body_html.
Fine-grained access tokens for "Add sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Add sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issuereplace_parent boolean Option that, when true, instructs the operation to replace the sub-issues current parent issueHTTP response status codes for "Add sub-issue"Status codeDescription201Created403Forbidden404Resource not found410Gone422Validation failed, or the endpoint has been spammed.Code samples for "Add sub-issue"Request examplepost/repos/{owner}/{repo}/issues/{issue_number}/sub_issuescURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues \
  -d '{"sub_issue_id":1}'ResponseExample responseResponse schemaStatus: 201{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}Reprioritize sub-issueYou can use the REST API to reprioritize a sub-issue to a different position in the parent list.Fine-grained access tokens for "Reprioritize sub-issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have the following permission set:"Issues" repository permissions (write)Parameters for "Reprioritize sub-issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Body parametersName, Type, Descriptionsub_issue_id integer RequiredThe id of the sub-issue to reprioritizeafter_id integer The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).before_id integer The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).HTTP response status codes for "Reprioritize sub-issue"Status codeDescription200OK403Forbidden404Resource not found422Validation failed, or the endpoint has been spammed.503Service unavailableCode samples for "Reprioritize sub-issue"Request examplepatch/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/prioritycURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -X PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/sub_issues/priority \
  -d '{"sub_issue_id":6,"after_id":5}'ResponseExample responseResponse schemaStatus: 200{
  "id": 1,
  "node_id": "MDU6SXNzdWUx",
  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
  "number": 1347,
  "state": "open",
  "title": "Found a bug",
  "body": "I'm having a problem with this.",
  "user": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 208045946,
      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
      "name": "bug",
      "description": "Something isn't working",
      "color": "f29513",
      "default": true
    }
  ],
  "assignee": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
    "id": 1002604,
    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
    "number": 1,
    "state": "open",
    "title": "v1.0",
    "description": "Tracking milestone for version 1.0",
    "creator": {
      "login": "octocat",
      "id": 1,
      "node_id": "MDQ6VXNlcjE=",
      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 8,
    "created_at": "2011-04-10T20:09:31Z",
    "updated_at": "2014-03-03T18:58:10Z",
    "closed_at": "2013-02-12T13:22:01Z",
    "due_on": "2012-10-09T23:39:01Z"
  },
  "locked": true,
  "active_lock_reason": "too heated",
  "comments": 0,
  "pull_request": {
    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
  },
  "closed_at": null,
  "created_at": "2011-04-22T13:33:48Z",
  "updated_at": "2011-04-22T13:33:48Z",
  "closed_by": {
    "login": "octocat",
    "id": 1,
    "node_id": "MDQ6VXNlcjE=",
    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false
  },
  "author_association": "COLLABORATOR",
  "state_reason": "completed"
}\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/TimelineREST API endpoints for timeline eventsUse the REST API to receive events triggered by timeline activity in issues and pull requests.About timeline events
You can use the REST API to view different types of events triggered by timeline activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, see GitHub event types.
You can use timeline events to display information about issues and pull requests or determine who should be notified of issue comments.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List timeline events for an issueList all timeline events for an issue.Fine-grained access tokens for "List timeline events for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List timeline events for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List timeline events for an issue"Status codeDescription200OK404Resource not found410GoneCode samples for "List timeline events for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/timelinecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/timelineResponseExample responseResponse schemaStatus: 200[
  {
    "id": 6430295168,
    "node_id": "LOE_lADODwFebM5HwC0kzwAAAAF_RoSA",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6430295168",
    "actor": {
      "login": "github",
      "id": 9919,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github",
      "html_url": "https://github.com/github",
      "followers_url": "https://api.github.com/users/github/followers",
      "following_url": "https://api.github.com/users/github/following{/other_user}",
      "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github/subscriptions",
      "organizations_url": "https://api.github.com/users/github/orgs",
      "repos_url": "https://api.github.com/users/github/repos",
      "events_url": "https://api.github.com/users/github/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "event": "locked",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-04-13T20:49:13Z",
    "lock_reason": null,
    "performed_via_github_app": null
  },
  {
    "id": 6430296748,
    "node_id": "LE_lADODwFebM5HwC0kzwAAAAF_Roqs",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6430296748",
    "actor": {
      "login": "github-product-roadmap",
      "id": 67656570,
      "node_id": "MDQ6VXNlcjY3NjU2NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/67656570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-product-roadmap",
      "html_url": "https://github.com/github-product-roadmap",
      "followers_url": "https://api.github.com/users/github-product-roadmap/followers",
      "following_url": "https://api.github.com/users/github-product-roadmap/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-product-roadmap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-product-roadmap/subscriptions",
      "organizations_url": "https://api.github.com/users/github-product-roadmap/orgs",
      "repos_url": "https://api.github.com/users/github-product-roadmap/repos",
      "events_url": "https://api.github.com/users/github-product-roadmap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-product-roadmap/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "labeled",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-04-13T20:49:34Z",
    "label": {
      "name": "beta",
      "color": "99dd88"
    },
    "performed_via_github_app": null
  },
  {
    "id": 6635165802,
    "node_id": "RTE_lADODwFebM5HwC0kzwAAAAGLfJhq",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6635165802",
    "actor": {
      "login": "github-product-roadmap",
      "id": 67656570,
      "node_id": "MDQ6VXNlcjY3NjU2NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/67656570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-product-roadmap",
      "html_url": "https://github.com/github-product-roadmap",
      "followers_url": "https://api.github.com/users/github-product-roadmap/followers",
      "following_url": "https://api.github.com/users/github-product-roadmap/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-product-roadmap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-product-roadmap/subscriptions",
      "organizations_url": "https://api.github.com/users/github-product-roadmap/orgs",
      "repos_url": "https://api.github.com/users/github-product-roadmap/repos",
      "events_url": "https://api.github.com/users/github-product-roadmap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-product-roadmap/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "renamed",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-05-18T19:29:01Z",
    "rename": {
      "from": "Secret scanning: dry-runs for enterprise-level custom patterns (cloud)",
      "to": "Secret scanning: dry-runs for enterprise-level custom patterns"
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/github/roadmap/issues/comments/1130876857",
    "html_url": "https://github.com/github/roadmap/issues/493#issuecomment-1130876857",
    "issue_url": "https://api.github.com/repos/github/roadmap/issues/493",
    "id": 1130876857,
    "node_id": "IC_kwDODwFebM5DZ8-5",
    "user": {
      "login": "octocat",
      "id": 94867353,
      "node_id": "U_kgDOBaePmQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94867353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2022-05-19T00:52:15Z",
    "updated_at": "2022-05-19T00:52:15Z",
    "author_association": "COLLABORATOR",
    "body": "🚢  Shipped to the cloud: https://github.blog/changelog/2022-05-12-secret-scanning-dry-runs-for-enterprise-level-custom-patterns/",
    "reactions": {
      "url": "https://api.github.com/repos/github/roadmap/issues/comments/1130876857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null,
    "event": "commented",
    "actor": {
      "login": "octocat",
      "id": 94867353,
      "node_id": "U_kgDOBaePmQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94867353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": true
    }
  }
]\n\n\n\nThe REST API is now versioned. For more information, see "About API versioning."REST API/Issues/TimelineREST API endpoints for timeline eventsUse the REST API to receive events triggered by timeline activity in issues and pull requests.About timeline events
You can use the REST API to view different types of events triggered by timeline activity in issues and pull requests. For more information about the specific events that you can receive, see Issue event types. To view GitHub activity outside of issues and pull requests, see GitHub event types.
You can use timeline events to display information about issues and pull requests or determine who should be notified of issue comments.
Every pull request is an issue, but not every issue is a pull request. For this reason, "shared" actions for both features, like managing assignees, labels, and milestones, are provided within the Issues endpoints.List timeline events for an issueList all timeline events for an issue.Fine-grained access tokens for "List timeline events for an issue"This endpoint works with the following fine-grained token types:GitHub App user access tokensGitHub App installation access tokensFine-grained personal access tokensThe fine-grained token must have at least one of the following permission sets:"Issues" repository permissions (read)"Pull requests" repository permissions (read)This endpoint can be used without authentication or the aforementioned permissions if only public resources are requested.Parameters for "List timeline events for an issue"HeadersName, Type, Descriptionaccept string Setting to application/vnd.github+json is recommended.Path parametersName, Type, Descriptionowner string RequiredThe account owner of the repository. The name is not case sensitive.repo string RequiredThe name of the repository without the .git extension. The name is not case sensitive.issue_number integer RequiredThe number that identifies the issue.Query parametersName, Type, Descriptionper_page integer The number of results per page (max 100). For more information, see "Using pagination in the REST API."Default: 30page integer The page number of the results to fetch. For more information, see "Using pagination in the REST API."Default: 1HTTP response status codes for "List timeline events for an issue"Status codeDescription200OK404Resource not found410GoneCode samples for "List timeline events for an issue"Request exampleget/repos/{owner}/{repo}/issues/{issue_number}/timelinecURLJavaScriptGitHub CLICopy to clipboard curl request examplecurl -L \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer <YOUR-TOKEN>" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/OWNER/REPO/issues/ISSUE_NUMBER/timelineResponseExample responseResponse schemaStatus: 200[
  {
    "id": 6430295168,
    "node_id": "LOE_lADODwFebM5HwC0kzwAAAAF_RoSA",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6430295168",
    "actor": {
      "login": "github",
      "id": 9919,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github",
      "html_url": "https://github.com/github",
      "followers_url": "https://api.github.com/users/github/followers",
      "following_url": "https://api.github.com/users/github/following{/other_user}",
      "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github/subscriptions",
      "organizations_url": "https://api.github.com/users/github/orgs",
      "repos_url": "https://api.github.com/users/github/repos",
      "events_url": "https://api.github.com/users/github/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "event": "locked",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-04-13T20:49:13Z",
    "lock_reason": null,
    "performed_via_github_app": null
  },
  {
    "id": 6430296748,
    "node_id": "LE_lADODwFebM5HwC0kzwAAAAF_Roqs",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6430296748",
    "actor": {
      "login": "github-product-roadmap",
      "id": 67656570,
      "node_id": "MDQ6VXNlcjY3NjU2NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/67656570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-product-roadmap",
      "html_url": "https://github.com/github-product-roadmap",
      "followers_url": "https://api.github.com/users/github-product-roadmap/followers",
      "following_url": "https://api.github.com/users/github-product-roadmap/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-product-roadmap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-product-roadmap/subscriptions",
      "organizations_url": "https://api.github.com/users/github-product-roadmap/orgs",
      "repos_url": "https://api.github.com/users/github-product-roadmap/repos",
      "events_url": "https://api.github.com/users/github-product-roadmap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-product-roadmap/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "labeled",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-04-13T20:49:34Z",
    "label": {
      "name": "beta",
      "color": "99dd88"
    },
    "performed_via_github_app": null
  },
  {
    "id": 6635165802,
    "node_id": "RTE_lADODwFebM5HwC0kzwAAAAGLfJhq",
    "url": "https://api.github.com/repos/github/roadmap/issues/events/6635165802",
    "actor": {
      "login": "github-product-roadmap",
      "id": 67656570,
      "node_id": "MDQ6VXNlcjY3NjU2NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/67656570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/github-product-roadmap",
      "html_url": "https://github.com/github-product-roadmap",
      "followers_url": "https://api.github.com/users/github-product-roadmap/followers",
      "following_url": "https://api.github.com/users/github-product-roadmap/following{/other_user}",
      "gists_url": "https://api.github.com/users/github-product-roadmap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/github-product-roadmap/subscriptions",
      "organizations_url": "https://api.github.com/users/github-product-roadmap/orgs",
      "repos_url": "https://api.github.com/users/github-product-roadmap/repos",
      "events_url": "https://api.github.com/users/github-product-roadmap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/github-product-roadmap/received_events",
      "type": "User",
      "site_admin": false
    },
    "event": "renamed",
    "commit_id": null,
    "commit_url": null,
    "created_at": "2022-05-18T19:29:01Z",
    "rename": {
      "from": "Secret scanning: dry-runs for enterprise-level custom patterns (cloud)",
      "to": "Secret scanning: dry-runs for enterprise-level custom patterns"
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/github/roadmap/issues/comments/1130876857",
    "html_url": "https://github.com/github/roadmap/issues/493#issuecomment-1130876857",
    "issue_url": "https://api.github.com/repos/github/roadmap/issues/493",
    "id": 1130876857,
    "node_id": "IC_kwDODwFebM5DZ8-5",
    "user": {
      "login": "octocat",
      "id": 94867353,
      "node_id": "U_kgDOBaePmQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94867353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2022-05-19T00:52:15Z",
    "updated_at": "2022-05-19T00:52:15Z",
    "author_association": "COLLABORATOR",
    "body": "🚢  Shipped to the cloud: https://github.blog/changelog/2022-05-12-secret-scanning-dry-runs-for-enterprise-level-custom-patterns/",
    "reactions": {
      "url": "https://api.github.com/repos/github/roadmap/issues/comments/1130876857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null,
    "event": "commented",
    "actor": {
      "login": "octocat",
      "id": 94867353,
      "node_id": "U_kgDOBaePmQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94867353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/octocat",
      "html_url": "https://github.com/octocat",
      "followers_url": "https://api.github.com/users/octocat/followers",
      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
      "organizations_url": "https://api.github.com/users/octocat/orgs",
      "repos_url": "https://api.github.com/users/octocat/repos",
      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/octocat/received_events",
      "type": "User",
      "site_admin": true
    }
  }
]\n\n\n\nSite policy/Privacy Policies/GitHub General Privacy StatementGitHub General Privacy StatementIn this articleGitHub Privacy StatementPersonal Data We CollectProcessing Purposes: How We Use Your Personal DataSharing of Personal DataPrivate repositories: GitHub AccessLawful Bases for Processing Personal Data (Applicable to EEA and UK End Users)Your Privacy RightsInternational data transfersData Privacy Framework (DPF)Security and RetentionSecurityContact UsInformation for MinorsChanges to Our Privacy StatementTranslationsOur use of cookies and tracking technologiesUS State Specific InformationGitHub Privacy Statement
Effective date: February 1, 2024
Welcome to the GitHub Privacy Statement. This is where we describe how we handle your “Personal Data”, which is information that is directly linked or can be linked to you. It applies to the Personal Data that GitHub, Inc. or GitHub B.V., processes as the “Data Controller” when you interact with websites, applications, and services that display this Statement (collectively, “Services”). This Statement does not apply to services or products that do not display this Statement, such as Previews, where relevant.
End User Notice: Organization-Provided GitHub Accounts
When a school or employer supplies your GitHub account, they assume the role of Data Controller for most Personal Data used in our Services. This enables them to:

Manage and administer your GitHub account, including adjusting privacy settings.
Access and utilize your Personal Data, which includes details on how you use the Services, as well as your content and files.

Should you access a GitHub Service through an account provided by an organization, such as your employer or school, the organization becomes the Data Controller, and this Privacy Statement's direct applicability to you changes. Even so, GitHub remains dedicated to preserving your privacy rights. In such circumstances, GitHub functions as a Data Processor, adhering to the Data Controller's instructions regarding your Personal Data's processing. A Data Protection Agreement governs the relationship between GitHub and the Data Controller. For further details regarding their privacy practices, please refer to the privacy statement of the organization providing your account.
In cases where your organization grants access to GitHub products, GitHub acts as the Data Controller solely for specific processing activities. These activities are clearly defined in a contractual agreement with your organization, known as a Data Protection Agreement. You can review our standard Data Protection Agreement at GitHub Data Protection Agreement. For those limited purposes, this Statement governs the handling of your Personal Data. For all other aspects of GitHub product usage, your organization's policies apply.
Third Party Access and Data Protection
When you use third-party extensions, integrations, or follow references and links within our Services, the privacy policies of these third parties apply to any Personal Data you provide or consent to share with them. Their privacy statements will govern how this data is processed.
Personal Data We Collect
Personal Data is collected from you directly, automatically from your device, and also from third parties. The Personal Data GitHub processes when you use the Services depends on variables like how you interact with our Services (such as through web interfaces, desktop or mobile applications), the features you use (such as pull requests, Codespaces, or GitHub Copilot) and your method of accessing the Services (your preferred IDE). Below, we detail the information we collect through each of these channels:
From You

Account Data: We collect certain information when you open an account such as your GitHub handle, name, email address, password, payment information and transaction information.
User Content and Files: When you use our Services, we collect Personal Data included as part of the information you provide such as code, inputs, text, documents, images, or feedback.
Demographic information: In some cases, you provide us with ethnicity, gender, or similar demographic details.
Feedback Data: This consists of information you submit through surveys, reviews, or interactive features.
Payment Information: For paid subscriptions, we collect details like name, billing address, and payment specifics.
Profile Information: We collect information to create a user profile, which may include a photo, additional email addresses, job title, or biography.
Sales and Marketing Data: This includes information provided for promotional communications, such as name, email address, and company name.
Support Data: When you seek customer support, we collect details like code, text, or multimedia files.

Automatically

Buttons, Tools, and Content from Other Companies: Our Services may contain links or buttons that lead to third-party services like Twitter or LinkedIn. Use of these features may result in data collection. Engaging with these buttons, tools, or content may automatically send certain browser information to these companies. Please review the privacy statements of these companies for more information.
Essential Cookies and Similar Tracking Technologies: We use cookies and similar technologies to provide essential functionality like storing settings and recognizing you while using our Services.
Non-essential Cookies: Depending on your jurisdiction, we may use online analytics products that use cookies to help us analyze how de-identified users use our Services and to enhance your experience when you use the Services. We may also employ third-party Cookies to gather data for interest-based advertising. In some jurisdictions, we only use non-essential cookies after obtaining your consent. See this section for more details and control options.
Email Marketing Interactions: Our emails may have web beacons that offer information on your device type, email client, email reception, opens, and link clicks.
Geolocation Information: Depending on the Service's functionality, we collect regional geolocation data.
Service Usage Information: We collect data about your interactions with the Services, such as IP address, device information, session details, date and time of requests, device type and ID, operating system and application version, information related to your contributions to repositories, and performance of specific features or Services.
Website Usage Data: We automatically log data about your Website interactions, including the referring site, date and time of visit, pages viewed, and links clicked.

From Third Parties

Information from Other Users of the Services: Other users may share information about you when they submit issues and comments. We may also receive information about you if you are identified as a representative or administrator on your company's account.
Publicly Available Sources: We may acquire information about you from publicly available sources like public GitHub repositories.
Services you linked to your GitHub account: When you or your administrator integrate third-party apps or services with our Services, we receive information based on your settings with those services. This can include details like your name and email from services like Google for authentication. The information we receive depends on the third-party's settings and privacy policies. Always review these to understand what data is shared with our Services.
Vendors, Partners, and Affiliates: We may receive information about you from third parties, like vendors, resellers, partners, or affiliates for the purposes outlined in this statement.

Processing Purposes: How We Use Your Personal Data
The Personal Data we process depends on your interaction and access methods with our Services, including the interfaces (web, desktop, mobile apps), features used (pull requests, Codespaces, GitHub Copilot), and your preferred access tools (like your IDE). This section details all the potential ways GitHub may process your Personal Data:

Business Operations: We use Personal Data for activities like billing, accounting, and compensation. This includes creating aggregated statistical data for internal reporting, financial reporting, revenue planning, capacity planning, and forecast modeling (including product strategy).
Communication: We use Personal Data to inform you about new Services, features, offers, promotions, and other pertinent information. This also includes sending confirmations, invoices, technical notices, updates, security alerts, and administrative messages.
Inference: We generate new information from other data we collect to derive likely preferences or other characteristics. For instance, we infer your general geographic location based on your IP address.
Personalization: We use Personal Data to customize the Service to your preferences, to evaluate the effectiveness of enterprise business ads and promotional communications, and to ensure a seamless and consistent user experience.
Safety and Security: To promote safety, integrity, and security across our Services, we process Personal Data, using both automated and, at times, manual techniques for abuse detection, prevention, and violations of terms of service.
Service Provision: We use Personal Data to deliver and update our Services as configured and used by You, and to make ongoing personalized experiences and recommendations.
Troubleshooting: We use Personal Data to identify and resolve technical issues.
Ongoing Service Performance: Personal Data helps us keep the Services up to date and performant, and meet user productivity, reliability, efficacy, quality, privacy, accessibility and security needs.
Complying with and resolving legal obligations: including responding to Data Subject Requests for Personal Data processed by GitHub as Controller (for example website data), tax requirements, agreements and disputes.
Delivering Professional Services: We use Personal Data to deliver training, consulting or implementation (“Professional Services”). This includes providing technical support, professional planning, advice, guidance, data migration, deployment, and solution/software development services.
Improving Professional Services: Enhancing delivery, efficacy, quality, and security of Professional Services and the underlying product(s) based on issues identified while providing Professional Services, including fixing software defects, and otherwise keeping the Professional Services up to date and performant.

When carrying out these activities, GitHub practices data minimization and uses the minimum amount of Personal Information required.
Sharing of Personal Data
We may share Personal Data with the following recipients:

Abuse and Fraud Prevention Entities: We may disclose Personal Data based on a good faith belief it is needed to prevent fraud, abuse, or attacks on our Services, or to protect the safety of GitHub and our users.
Affiliates: Personal Data may be shared with GitHub affiliates, including Microsoft, to facilitate customer service, marketing and advertising, order fulfillment, billing, technical support, and legal and compliance obligations. Our affiliates may only use the Personal Data in a manner consistent with this Privacy Statement.
GitHub Organization Accounts: If an organization adds you to their GitHub account, we might share Personal Data with that organization to fulfill the commercial relationship. In such a case, your use of the Services is protected by a data protection agreement and terms between your organization and GitHub
Competent Authorities: We may disclose Personal Data to authorized law enforcement, regulators, courts, or other public authorities in response to lawful requests or to protect our rights and safety. Please refer to our Guidelines for Legal Requests of User Data for more information.
Corporate Transaction Entities: we might disclose Personal Data within the limits of the law and in accordance with this Privacy Statement for strategic business transactions such as sales or a merger.
Partners and Resellers: We cooperate with third-parties that offer sales, consulting, support, and technical services for our Services. We may share your data with these partners and resellers where allowed, and with your consent when required.
Subprocessors and Service Providers: We may use vendors to provide services on our behalf, including hosting, marketing, advertising, social, analytics, support ticketing, credit card processing, or security services. They are bound by contractual obligations to ensure the security, privacy, and confidentiality of your information. Please visit https://docs.github.com/en/site-policy/privacy-policies/github-subprocessors to see our list of Subprocessors.
Visual Studio Code (GitHub Codespaces): GitHub Codespaces and github.dev offer Visual Studio Code in a web browser, where some telemetry is collected by default. Details on telemetry collection are on the VS Code website. To opt out, go to File > Preferences > Settings in the top left menu of VS Code. Opting out will sync this preference across all future web sessions in GitHub Codespaces and github.dev.
Other Third-party Applications: Upon your instruction, we may share Personal Data with third-party applications available on our Marketplace. You are responsible for the data you instruct us to share with these applications.
Other Users and the Public: Depending on your account settings, we may share Personal Data with other users of the Services and the public. You control what information is made public. To adjust your settings, visit User Settings in your profile. Please be aware that any information you share in a collaborative context may become publicly accessible.

Private repositories: GitHub Access
If your GitHub account has private repositories, you control the access to that information. GitHub personnel does not access private repository information without your consent except as provided in this Privacy Statement and for:

security purposes
automated scanning or manual review for known vulnerabilities, active malware, or other content known to violate our Terms of Service
to assist the repository owner with a support matter
to maintain the integrity of the Services, or
to comply with our legal obligations if we have reason to believe the contents are in violation of the law.

GitHub will provide you with notice regarding private repository access unless doing so is prohibited by law or if GitHub acted in response to a security threat or other risk to security.
Lawful Bases for Processing Personal Data (Applicable to EEA and UK End Users)
GitHub processes Personal Data in compliance with the GDPR, ensuring a lawful basis for each processing activity. The basis varies depending on the data type and the context, including how you access the services. Our processing activities typically fall under these lawful bases:

Contractual Necessity: Processing is required to fulfill our contractual duties to you, in accordance with the GitHub Terms of Service.
Legal Obligation: We process data when it's necessary to comply with applicable laws or to protect the rights, safety, and property of GitHub, our affiliates, users, or third parties.
Legitimate Interests: We process data for purposes that are in our legitimate interests, such as securing our Services, communicating with you, and improving our Services. This is done only when these interests are not overridden by your data protection rights or your fundamental rights and freedoms.
Consent: We process data when you have explicitly consented to such processing. When we rely on consent as the legal basis, you have the right to withdraw your consent for data processing at any time. The procedures for withdrawal are detailed in this Statement and available on our website.

Your Privacy Rights
Depending on your residence location, you may have specific legal rights regarding your Personal Data:

The right to access the data collected about you
The right to request detailed information about the specific types of Personal Data we've collected over the past 12 months, including data disclosed for business purposes
The right to rectify or update inaccurate or incomplete Personal Data under certain circumstances
The right to erase or limit the processing of your Personal Data under specific conditions
The right to object to the processing of your Personal Data, as allowed by applicable law
The right to withdraw consent, where processing is based on your consent
The right to receive your collected Personal Data in a structured, commonly used, and machine-readable format to facilitate its transfer to another company, where technically feasible

To exercise these rights, please send an email to privacy[at]github[dot]com and follow the instructions provided. To verify your identity for security, we may request extra information before addressing your data-related request. Please contact our Data Protection Officer at dpo[at]github[dot]com for any feedback or concerns. Depending on your region, you have the right to complain to your local Data Protection Authority. European users can find authority contacts on the European Data Protection Board website, and UK users on the Information Commissioner’s Office website.
We aim to promptly respond to requests in compliance with legal requirements. Please note that we may retain certain data as necessary for legal obligations or for establishing, exercising, or defending legal claims.
International data transfers
GitHub stores and processes Personal Data in a variety of locations, including your local region, the United States, and other countries where GitHub, its affiliates, subsidiaries, or subprocessors have operations. We transfer Personal Data from the European Union, the United Kingdom, and Switzerland to countries that the European Commission has not recognized as having an adequate level of data protection. When we engage in such transfers, we generally rely on the standard contractual clauses published by the European Commission under Commission Implementing Decision 2021/914, to help protect your rights and enable these protections to travel with your data. To learn more about the European Commission’s decisions on the adequacy of the protection of personal data in the countries where GitHub processes personal data, see this article on the European Commission website.
Data Privacy Framework (DPF)
GitHub also complies with the EU-U.S. Data Privacy Framework (EU-U.S. DPF), the UK Extension to the EU-U.S. DPF, and the Swiss-U.S. Data Privacy Framework (Swiss-U.S. DPF) as set forth by the U.S. Department of Commerce. GitHub has certified to the U.S. Department of Commerce that it adheres to the EU-U.S. Data Privacy Framework Principles (EU-U.S. DPF Principles) with regard to the processing of personal data received from the European Union in reliance on the EU-U.S. DPF and from the United Kingdom (and Gibraltar) in reliance on the UK Extension to the EU-U.S. DPF. GitHub has certified to the U.S. Department of Commerce that it adheres to the Swiss-U.S. Data Privacy Framework Principles (Swiss-U.S. DPF Principles) with regard to the processing of personal data received from Switzerland in reliance on the Swiss-U.S. DPF. If there is any conflict between the terms in this privacy statement and the EU-U.S. DPF Principles and/or the Swiss-U.S. DPF Principles, the Principles shall govern. To learn more about the Data Privacy Framework (DPF) program, and to view our certification, please visit https://www.dataprivacyframework.gov/.
GitHub has the responsibility for the processing of Personal Data it receives under the Data Privacy Framework (DPF) Principles and subsequently transfers to a third party acting as an agent on GitHub’s behalf. GitHub shall remain liable under the DPF Principles if its agent processes such Personal Data in a manner inconsistent with the DPF Principles, unless the organization proves that it is not responsible for the event giving rise to the damage.
Dispute resolution process
In compliance with the EU-U.S. DPF, the UK Extension to the EU-U.S. DPF, and the Swiss-U.S. DPF, GitHub commits to resolve DPF Principles-related complaints about our collection and use of your personal information. EU, UK, and Swiss individuals with inquiries or complaints regarding our handling of personal data received in reliance on the EU-U.S. DPF, the UK Extension, and the Swiss-U.S. DPF should first contact GitHub at: dpo[at]github[dot]com.
If you do not receive timely acknowledgment of your DPF Principles-related complaint from us, or if we have not addressed your DPF Principles-related complaint to your satisfaction, please visit https://go.adr.org/dpf_irm.html for more information or to file a complaint. The services of the International Centre for Dispute Resolution are provided at no cost to you.
An individual has the possibility, under certain conditions, to invoke binding arbitration for complaints regarding DPF compliance not resolved by any of the other DPF mechanisms. For additional information visit https://www.dataprivacyframework.gov/s/article/ANNEX-I-introduction-dpf?tabset-35584=2.
Government Enforcement
GitHub is subject to the investigatory and enforcement powers of the Federal Trade Commission (FTC). Under Section 5 of the Federal Trade Commission Act (15 U.S.C. § 45), an organization's failure to abide by commitments to implement the DPF Principles may be challenged as deceptive by the FTC. The FTC has the power to prohibit such misrepresentations through administrative orders or by seeking court orders.
Security and Retention
GitHub uses appropriate administrative, technical, and physical security controls to protect your Personal Data. We’ll retain your Personal Data as long as your account is active and as needed to fulfill contractual obligations, comply with legal requirements, resolve disputes, and enforce agreements. The retention duration depends on the purpose of data collection and any legal obligations.
Security
GitHub uses administrative, technical, and physical security controls where appropriate to protect your Personal Data.
Contact Us
Contact us via our contact form or by emailing our Data Protection Officer at dpo[at]github[dot]com.
Our addresses are:
GitHub B.V.
Prins Bernhardplein 200, Amsterdam
1097JB
The Netherlands
GitHub, Inc.
88 Colin P. Kelly Jr. St.
San Francisco, CA 94107
United States
Information for Minors
Our Services are not intended for individuals under the age of 13. We do not intentionally gather Personal Data from such individuals. If you become aware that a minor has provided us with Personal Data, please notify us.
Changes to Our Privacy Statement
GitHub may periodically revise this Privacy Statement. If there are material changes to the statement, we will provide at least 30 days prior notice by updating our website or sending an email to your primary email address associated with your GitHub account.
Translations
Below are translations of this document into other languages. In the event of any conflict, uncertainty, or apparent inconsistency between any of those versions and the English version, this English version is the controlling version.
French
Cliquez ici pour obtenir la version française: Déclaration de confidentialité de GitHub (PDF).
Other translations
For translations of this statement into other languages, please visit https://docs.github.com/ and select a language from the drop-down menu under “English.”
Our use of cookies and tracking technologies
Cookies and tracking technologies
GitHub uses cookies to provide, secure and improve our Service or to develop new features and functionality of our Service. For example, we use them to (i) keep you logged in, (ii) remember your preferences, (iii) identify your device for security and fraud purposes, including as needed to maintain the integrity of our Service, (iv) compile statistical reports, and (v) provide information and insight for future development of GitHub. We provide more information about cookies on GitHub that describes the cookies we set, the needs we have for those cookies, and the expiration of such cookies.
For Enterprise Marketing Pages, we may also use non-essential cookies to (i) gather information about enterprise users’ interests and online activities to personalize their experiences, including by making the ads, content, recommendations, and marketing seen or received more relevant and (ii) serve and measure the effectiveness of targeted advertising and other marketing efforts. If you disable the non-essential cookies on the Enterprise Marketing Pages, the ads, content, and marketing you see may be less relevant.
Our emails to users may contain a pixel tag, which is a small, clear image that can tell us whether or not you have opened an email and what your IP address is. We use this pixel tag to make our email communications more effective and to make sure we are not sending you unwanted email.
The length of time a cookie will stay on your browser or device depends on whether it is a “persistent” or “session” cookie. Session cookies will only stay on your device until you stop browsing. Persistent cookies stay until they expire or are deleted. The expiration time or retention period applicable to persistent cookies depends on the purpose of the cookie collection and tool used. You may be able to delete cookie data. For more information, see GitHub General Privacy Statement.
What are cookies and similar technologies?
We use cookies and similar technologies, such as web beacons, local storage, and mobile analytics, to operate and provide our Services. When visiting Enterprise Marketing Pages, like resources.github.com, these and additional cookies, like advertising IDs, may be used for sales and marketing purposes.
Cookies are small text files stored by your browser on your device. A cookie can later be read when your browser connects to a web server in the same domain that placed the cookie. The text in a cookie contains a string of numbers and letters that may uniquely identify your device and can contain other information as well. This allows the web server to recognize your browser over time, each time it connects to that web server.
Web beacons are electronic images (also called “single-pixel” or “clear GIFs”) that are contained within a website or email. When your browser opens a webpage or email that contains a web beacon, it automatically connects to the web server that hosts the image (typically operated by a third party). This allows that web server to log information about your device and to set and read its own cookies. In the same way, third-party content on our websites (such as embedded videos, plug-ins, or ads) results in your browser connecting to the third-party web server that hosts that content.
Mobile identifiers for analytics can be accessed and used by apps on mobile devices in much the same way that websites access and use cookies. When visiting Enterprise Marketing pages, like resources.github.com, on a mobile device these may allow us and our third-party analytics and advertising partners to collect data for sales and marketing purposes.
We may also use so-called “flash cookies” (also known as “Local Shared Objects” or “LSOs”) to collect and store information about your use of our Services. Flash cookies are commonly used for advertisements and videos.
How do we and our partners use cookies and similar technologies?
The GitHub Services use cookies and similar technologies for a variety of purposes, including to store your preferences and settings, enable you to sign-in, analyze how our Services perform, track your interaction with the Services, develop inferences, combat fraud, and fulfill other legitimate purposes. Some of these cookies and technologies may be provided by third parties, including service providers and advertising partners. For example, our analytics and advertising partners may use these technologies in our Services to collect personal information (such as the pages you visit, the links you click on, and similar usage information, identifiers, and device information) related to your online activities over time and across Services for various purposes, including targeted advertising. GitHub will place non-essential cookies on pages where we market products and services to enterprise customers, for example, on resources.github.com.
We and/or our partners also share the information we collect or infer with third parties for these purposes.
The table below provides additional information about how we use different types of cookies:

























PurposeDescriptionRequired CookiesGitHub uses required cookies to perform essential website functions and to provide the services. For example, cookies are used to log you in, save your language preferences, provide a shopping cart experience, improve performance, route traffic between web servers, detect the size of your screen, determine page load times, improve user experience, and for audience measurement. These cookies are necessary for our websites to work.AnalyticsWe allow third parties to use analytics cookies to understand how you use our websites so we can make them better. For example, cookies are used to gather information about the pages you visit and how many clicks you need to accomplish a task. We also use some analytics cookies to provide personalized advertising.Social MediaGitHub and third parties use social media cookies to show you ads and content based on your social media profiles and activity on GitHub’s websites. This ensures that the ads and content you see on our websites and on social media will better reflect your interests. This also enables third parties to develop and improve their products, which they may use on websites that are not owned or operated by GitHub.AdvertisingIn addition, GitHub and third parties use advertising cookies to show you new ads based on ads you've already seen. Cookies also track which ads you click or purchases you make after clicking an ad. This is done both for payment purposes and to show you ads that are more relevant to you. For example, cookies are used to detect when you click an ad and to show you ads based on your social media interests and website browsing history.
What are your cookie choices and controls?
You have several options to disable non-essential cookies:


Specifically on GitHub Enterprise Marketing Pages
Any GitHub page that serves non-essential cookies will have a link in the page’s footer to cookie settings. You can express your preferences at any time by clicking on that linking and updating your settings.
Some users will also be able to manage non-essential cookies via a cookie consent banner, including the options to accept, manage, and reject all non-essential cookies.


Generally for all websites
You can control the cookies you encounter on the web using a variety of widely-available tools. For example:



If your browser sends a Do Not Track (DNT) signal, GitHub will not set non-essential cookies and will not load third party resources which set non-essential cookies.
Many browsers provide cookie controls which may limit the types of cookies you encounter online. Check out the documentation for your browser to learn more.
If you enable a browser extension designed to block tracking, such as Privacy Badger, non-essential cookies set by a website or third parties may be disabled.
If you enable a browser extension designed to block unwanted content, such as uBlock Origin, non-essential cookies will be disabled to the extent that content that sets non-essential cookies will be blocked.
You may use the Global Privacy Control (GPC) to communicate your privacy preferences. If GitHub detects the GPC signal from your device, GitHub will not share your data (we do not sell your data). To learn more, visit Global Privacy Control — Take Control Of Your Privacy
Advertising controls. Our advertising partners may participate in associations that provide simple ways to opt out of ad targeting, which you can access at:
United States: NAI and DAA
Canada: Digital Advertising Alliance of Canada
Europe: European Digital Advertising Alliance

These choices are specific to the browser you are using. If you access our Services from other devices or browsers, take these actions from those systems to ensure your choices apply to the data collected when you use those systems.
US State Specific Information
This section provides extra information specifically for residents of certain US states that have distinct data privacy laws and regulations. These laws may grant specific rights to residents of these states when the laws come into effect. This section uses the term “personal information” as an equivalent to the term “Personal Data.”
Privacy Rights
These rights are common to the US State privacy laws:

Right to Knowledge and Correction: You have the right to request details on the specific personal information we’ve collected about you and the right to correct inaccurate information. You can exercise this right by contacting us. You can also access and edit basic account information in your settings.
Right to Know Data Recipients: We share your information with service providers for legitimate business operations, such as data storage and hosting. For more details, please see “Sharing Your Information” below.
Right to request Deletion: You reserve the right to request the deletion of your data, barring a few exceptions. Such exceptions include circumstances where we are required to retain data to comply with legal obligations, detect fraudulent activity, investigate reports of abuse or other violations of our Terms of Service, or rectify security issues. Upon receiving your verified request, we will promptly delete your personal information (unless an exception applies), and instruct our service providers to do the same. We employ brief retention terms by design.
Right to a Timely Response: You are allowed to make two free requests in any 12-month period. We commit to responding to your request within 45 days. In complex cases, we may extend our response time by an additional 45 days.
Non-Discrimination: We will not hold it against you when you exercise any of your rights. On the contrary, we encourage you to review your privacy settings closely and contact us with any questions.

Notice of Collection of Personal Information
We may collect various categories of personal information about our website visitors and users of "Services" which includes GitHub applications, software, products, or services. That information includes identifiers/contact information, demographic information, payment information, commercial information, internet or electronic network activity information, geolocation data, audio, electronic, visual, or similar information, and inferences drawn from such information.
We collect this information for various purposes. This includes identifying accessibility gaps and offering targeted support, fostering diversity and representation, providing services, troubleshooting, conducting business operations such as billing and security, improving products and supporting research, communicating important information, ensuring personalized experiences, and promoting safety and security.
Exercising your Privacy Rights
To make an access, deletion, correction, or opt-out request, please send an email to privacy[at]github[dot]com and follow the instructions provided. We may need to verify your identity before processing your request. If you choose to use an authorized agent to submit a request on your behalf, please ensure they have your signed permission or power of attorney as required.
To opt out of the sharing of your personal information, you can click on the "Do Not Share My Personal Information" link on the footer of our Websites or use the Global Privacy Control ("GPC") if available. Authorized agents can also submit opt-out requests on your behalf.
California
Mandatory Disclosures
We also make the following disclosures for purposes of compliance with California privacy law:

We collected the following categories of personal information in the last 12 months: identifiers/contact information, demographic information (such as gender), payment card information associated with you, commercial information, Internet or other electronic network activity information, geolocation data, audio, electronic, visual or similar information, and inferences drawn from the above.
The sources of personal information from whom we collected are: directly from you, automatically or from third parties.
The business or commercial purposes of collecting personal information are as summarized above and in our Privacy Statement under Processing Purposes.
We disclosed the following categories of personal information for a business purpose in the last 12 months: identifiers/contact information, demographic information (such as gender and rough geographic location), payment information, commercial information, Internet or other electronic network activity information, geolocation data, audio, electronic, visual or similar information, and inferences drawn from the above. We disclosed each category to third-party business partners and service providers, third-party sites or platforms such as social networking sites, and other third parties as described in the Sharing of Personal Data section of our Privacy Statement.
As defined by applicable law, we “shared” the following categories of personal information in the last 12 months: identifiers/contact information, Internet or other electronic network activity information, and inferences drawn from the above. We shared each category to or with advertising networks, data analytics providers, and social networks.
The business or commercial purpose of sharing personal information is to assist us with marketing, advertising, and audience measurement.
We do not “sell” or “share” the personal information of known minors under 16 years of age.

Shine the Light Act
Under California Civil Code section 1798.83, also known as the “Shine the Light” law, California residents who have provided personal information to a business with which the individual has established a business relationship for personal, family, or household purposes (“California Customers”) may request information about whether the business has disclosed personal information to any third parties for the third parties’ direct marketing purposes. Please be aware that we do not disclose personal information to any third parties for their direct marketing purposes as defined by this law. California Customers may request further information about our compliance with this law by emailing (privacy[at]github[dot]com). Please note that businesses are required to respond to one request per California Customer each year and may not be required to respond to requests made by means other than through the designated email address.
Removal of Content
California residents under the age of 18 who are registered users of online sites, services, or applications have a right under California Business and Professions Code Section 22581 to remove, or request and obtain removal of, content or information they have publicly posted. To remove content or information you have publicly posted, please submit a Private Information Removal request. Alternatively, to request that we remove such content or information, please send a detailed description of the specific content or information you wish to have removed to GitHub support. Please be aware that your request does not guarantee complete or comprehensive removal of content or information posted online and that the law may not permit or require removal in certain circumstances. If you have any questions about our privacy practices with respect to California residents, please send an email to privacy[at]github[dot]com.
We value the trust you place in us and are committed to handling your personal information with care and respect. If you have any questions or concerns about our privacy practices, please email our Data Protection Officer at dpo[at]github[dot]com.
Colorado/Connecticut/Virginia
If you live in Colorado, Connecticut, or Virginia you have some additional rights:

If we deny your rights request, you have the right to appeal that decision. We will provide you with the necessary information to submit an appeal at that time.
You have the right to opt out of profiling in furtherance of decisions that produce legal or similarly significant effects concerning the consumer. GitHub does not engage in such profiling as defined by Colorado law, so there’s no need to opt out.

Nevada
We do not sell your covered information, as defined under Chapter 603A of the Nevada Revised Statutes. If you still have questions about your covered information or anything else in our Privacy Statement, please send an email to privacy[at]github[dot]com.\n\n\n\nContributing to GitHub Docs documentation Learn about how the GitHub Docs team creates documentation and how you can contribute.Start hereBest practices for GitHub DocsFollow these best practices to create documentation that's user-friendly and easy to understand.Style guideFollow this guide to make sure GitHub's documentation stays consistent and follows clear patterns that our readers can understand.About the content modelThe content model describes the structure and types of content that we publish.About contributing to GitHub DocsYou can contribute to GitHub Docs content in several ways.What's newView all Contributing to GitHub DocsOctober 02Docs are being translated to French, German, Korean, and RussianDecember 05Webhook docs generated from the OpenAPI schemaNovember 16All Contribute to GitHub Docs docsWriting for GitHub DocsBest practices for GitHub DocsAbout GitHub's documentation philosophyAbout GitHub's documentation fundamentalsContent design principlesWriting content to be translatedMaking content findable in searchVersioning documentationUsing Markdown and Liquid in GitHub DocsUsing YAML frontmatterUsing videos in GitHub DocsCreating reusable contentCreating screenshotsCreating diagrams for GitHub DocsCreating tool switchers in articlesConfiguring redirectsChanging an article's titleAnnotating code examplesTemplatesStyle guide and content modelStyle guideAbout the content modelContents of a GitHub Docs articleAbout topicsConceptual content typeReferential content typeProcedural content typeTroubleshooting content typeRelease note content typeQuickstart content typeTutorial content typeAbout combining multiple content typesCollaborating on GitHub DocsAbout contributing to GitHub DocsUsing Git on GitHub DocsUsing the TODOCS placeholder to leave notesUsing the content linterLabel referenceSetting up your environment to work on GitHub DocsWorking on GitHub Docs in a codespaceCreating a local environmentTroubleshooting your environment\n\n\n\nSite policy/GitHub Terms/GitHub Terms of ServiceGitHub Terms of ServiceIn this articleSummaryThe GitHub Terms of ServiceA. DefinitionsB. Account TermsC. Acceptable UseD. User-Generated ContentE. Private RepositoriesF. Copyright Infringement and DMCA PolicyG. Intellectual Property NoticeH. API TermsI. GitHub Additional Product TermsJ. Beta PreviewsK. PaymentL. Cancellation and TerminationM. Communications with GitHubN. Disclaimer of WarrantiesO. Limitation of LiabilityP. Release and IndemnificationQ. Changes to These TermsR. MiscellaneousThank you for using GitHub! We're happy you're here. Please read this Terms of Service agreement carefully before accessing or using GitHub. Because it is such an important contract between us and our users, we have tried to make it as clear as possible. For your convenience, we have presented these terms in a short non-binding summary followed by the full legal terms.
Summary

















































































SectionWhat can you find there?A. DefinitionsSome basic terms, defined in a way that will help you understand this agreement. Refer back up to this section for clarification.B. Account TermsThese are the basic requirements of having an Account on GitHub.C. Acceptable UseThese are the basic rules you must follow when using your GitHub Account.D. User-Generated ContentYou own the content you post on GitHub. However, you have some responsibilities regarding it, and we ask you to grant us some rights so we can provide services to you.E. Private RepositoriesThis section talks about how GitHub will treat content you post in private repositories.F. Copyright & DMCA PolicyThis section talks about how GitHub will respond if you believe someone is infringing your copyrights on GitHub.G. Intellectual Property NoticeThis describes GitHub's rights in the website and service.H. API TermsThese are the rules for using GitHub's APIs, whether you are using the API for development or data collection.I. Additional Product TermsWe have a few specific rules for GitHub's features and products.J. Beta PreviewsThese are some of the additional terms that apply to GitHub's features that are still in development.K. PaymentYou are responsible for payment. We are responsible for billing you accurately.L. Cancellation and TerminationYou may cancel this agreement and close your Account at any time.M. Communications with GitHubWe only use email and other electronic means to stay in touch with our users. We do not provide phone support.N. Disclaimer of WarrantiesWe provide our service as is, and we make no promises or guarantees about this service. Please read this section carefully; you should understand what to expect.O. Limitation of LiabilityWe will not be liable for damages or losses arising from your use or inability to use the service or otherwise arising under this agreement. Please read this section carefully; it limits our obligations to you.P. Release and IndemnificationYou are fully responsible for your use of the service.Q. Changes to these Terms of ServiceWe may modify this agreement, but we will give you 30 days' notice of material changes.R. MiscellaneousPlease see this section for legal details including our choice of law.
The GitHub Terms of Service
Effective date: November 16, 2020
A. Definitions
Short version: We use these basic terms throughout the agreement, and they have specific meanings. You should know what we mean when we use each of the terms. There's not going to be a test on it, but it's still useful information.

An "Account" represents your legal relationship with GitHub. A “Personal Account” represents an individual User’s authorization to log in to and use the Service and serves as a User’s identity on GitHub. “Organizations” are shared workspaces that may be associated with a single entity or with one or more Users where multiple Users can collaborate across many projects at once. A Personal Account can be a member of any number of Organizations.
The “Agreement” refers, collectively, to all the terms, conditions, notices contained or referenced in this document (the “Terms of Service” or the "Terms") and all other operating rules, policies (including the GitHub Privacy Statement, available at github.com/site/privacy) and procedures that we may publish from time to time on the Website. Most of our site policies are available at docs.github.com/categories/site-policy.
"Beta Previews" mean software, services, or features identified as alpha, beta, preview, early access, or evaluation, or words or phrases with similar meanings.
“Content” refers to content featured or displayed through the Website, including without limitation code, text, data, articles, images, photographs, graphics, software, applications, packages, designs, features, and other materials that are available on the Website or otherwise available through the Service. "Content" also includes Services. “User-Generated Content” is Content, written or otherwise, created or uploaded by our Users. "Your Content" is Content that you create or own.
“GitHub,” “We,” and “Us” refer to GitHub, Inc., as well as our affiliates, directors, subsidiaries, contractors, licensors, officers, agents, and employees.
The “Service” refers to the applications, software, products, and services provided by GitHub, including any Beta Previews.
“The User,” “You,” and “Your” refer to the individual person, company, or organization that has visited or is using the Website or Service; that accesses or uses any part of the Account; or that directs the use of the Account in the performance of its functions. A User must be at least 13 years of age. Special terms may apply for business or government Accounts (See Section B(5): Additional Terms).
The “Website” refers to GitHub’s website located at github.com, and all content, services, and products provided by GitHub at or through the Website. It also refers to GitHub-owned subdomains of github.com, such as education.github.com and pages.github.com. These Terms also govern GitHub’s conference websites, such as githubuniverse.com, and product websites, such as electronjs.org. Occasionally, websites owned by GitHub may provide different or additional terms of service. If those additional terms conflict with this Agreement, the more specific terms apply to the relevant page or service.

B. Account Terms
Short version: Personal Accounts and Organizations have different administrative controls; a human must create your Account; you must be 13 or over; you must provide a valid email address; and you may not have more than one free Account. You alone are responsible for your Account and anything that happens while you are signed in to or using your Account. You are responsible for keeping your Account secure.
1. Account Controls


Users. Subject to these Terms, you retain ultimate administrative control over your Personal Account and the Content within it.


Organizations. The "owner" of an Organization that was created under these Terms has ultimate administrative control over that Organization and the Content within it. Within the Service, an owner can manage User access to the Organization’s data and projects. An Organization may have multiple owners, but there must be at least one Personal Account designated as an owner of an Organization. If you are the owner of an Organization under these Terms, we consider you responsible for the actions that are performed on or through that Organization.


2. Required Information
You must provide a valid email address in order to complete the signup process. Any other information requested, such as your real name, is optional, unless you are accepting these terms on behalf of a legal entity (in which case we need more information about the legal entity) or if you opt for a paid Account, in which case additional information will be necessary for billing purposes.
3. Account Requirements
We have a few simple rules for Personal Accounts on GitHub's Service.

You must be a human to create an Account. Accounts registered by "bots" or other automated methods are not permitted. We do permit machine accounts:
A machine account is an Account set up by an individual human who accepts the Terms on behalf of the Account, provides a valid email address, and is responsible for its actions. A machine account is used exclusively for performing automated tasks. Multiple users may direct the actions of a machine account, but the owner of the Account is ultimately responsible for the machine's actions. You may maintain no more than one free machine account in addition to your free Personal Account.
One person or legal entity may maintain no more than one free Account (if you choose to control a machine account as well, that's fine, but it can only be used for running a machine).
You must be age 13 or older. While we are thrilled to see brilliant young coders get excited by learning to program, we must comply with United States law. GitHub does not target our Service to children under 13, and we do not permit any Users under 13 on our Service. If we learn of any User under the age of 13, we will terminate that User’s Account immediately. If you are a resident of a country outside the United States, your country’s minimum age may be older; in such a case, you are responsible for complying with your country’s laws.
Your login may only be used by one person — i.e., a single login may not be shared by multiple people. A paid Organization may only provide access to as many Personal Accounts as your subscription allows.
You may not use GitHub in violation of export control or sanctions laws of the United States or any other applicable jurisdiction. You may not use GitHub if you are or are working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions administered by a U.S. government agency. GitHub may allow persons in certain sanctioned countries or territories to access certain GitHub services pursuant to U.S. government authorizations. For more information, please see our Export Controls policy.

4. Account Security
You are responsible for keeping your Account secure while you use our Service. We offer tools such as two-factor authentication to help you maintain your Account's security, but the content of your Account and its security are up to you.

You are responsible for all content posted and activity that occurs under your Account (even when content is posted by others who have Accounts under your Account).
You are responsible for maintaining the security of your Account and password. GitHub cannot and will not be liable for any loss or damage from your failure to comply with this security obligation.
You will promptly notify GitHub by contacting us through the GitHub Support portal if you become aware of any unauthorized use of, or access to, our Service through your Account, including any unauthorized use of your password or Account.

5. Additional Terms
In some situations, third parties' terms may apply to your use of GitHub. For example, you may be a member of an organization on GitHub with its own terms or license agreements; you may download an application that integrates with GitHub; or you may use GitHub to authenticate to another service. Please be aware that while these Terms are our full agreement with you, other parties' terms govern their relationships with you.
If you are a government User or otherwise accessing or using any GitHub Service in a government capacity, this Government Amendment to GitHub Terms of Service applies to you, and you agree to its provisions.
If you have signed up for GitHub Enterprise Cloud, the Enterprise Cloud Addendum applies to you, and you agree to its provisions.
C. Acceptable Use
Short version: GitHub hosts a wide variety of collaborative projects from all over the world, and that collaboration only works when our users are able to work together in good faith. While using the service, you must follow the terms of this section, which include some restrictions on content you can post, conduct on the service, and other limitations. In short, be excellent to each other.
Your use of the Website and Service must not violate any applicable laws, including copyright or trademark laws, export control or sanctions laws, or other laws in your jurisdiction. You are responsible for making sure that your use of the Service is in compliance with laws and any applicable regulations.
You agree that you will not under any circumstances violate our Acceptable Use Policies or Community Guidelines.
D. User-Generated Content
Short version: You own content you create, but you allow us certain rights to it, so that we can display and share the content you post. You still have control over your content, and responsibility for it, and the rights you grant us are limited to those we need to provide the service. We have the right to remove content or close Accounts if we need to.
1. Responsibility for User-Generated Content
You may create or upload User-Generated Content while using the Service. You are solely responsible for the content of, and for any harm resulting from, any User-Generated Content that you post, upload, link to or otherwise make available via the Service, regardless of the form of that Content. We are not responsible for any public display or misuse of your User-Generated Content.
2. GitHub May Remove Content
We have the right to refuse or remove any User-Generated Content that, in our sole discretion, violates any laws or GitHub terms or policies. User-Generated Content displayed on GitHub Mobile may be subject to mobile app stores' additional terms.
3. Ownership of Content, Right to Post, and License Grants
You retain ownership of and responsibility for Your Content. If you're posting anything you did not create yourself or do not own the rights to, you agree that you are responsible for any Content you post; that you will only submit Content that you have the right to post; and that you will fully comply with any third party licenses relating to Content you post.
Because you retain ownership of and responsibility for Your Content, we need you to grant us — and other GitHub Users — certain legal permissions, listed in Sections D.4 — D.7. These license grants apply to Your Content. If you upload Content that already comes with a license granting GitHub the permissions we need to run our Service, no additional license is required. You understand that you will not receive any payment for any of the rights granted in Sections D.4 — D.7. The licenses you grant to us will end when you remove Your Content from our servers, unless other Users have forked it.
4. License Grant to Us
We need the legal right to do things like host Your Content, publish it, and share it. You grant us and our legal successors the right to store, archive, parse, and display Your Content, and make incidental copies, as necessary to provide the Service, including improving the Service over time. This license includes the right to do things like copy it to our database and make backups; show it to you and other users; parse it into a search index or otherwise analyze it on our servers; share it with other users; and perform it, in case Your Content is something like music or video.
This license does not grant GitHub the right to sell Your Content. It also does not grant GitHub the right to otherwise distribute or use Your Content outside of our provision of the Service, except that as part of the right to archive Your Content, GitHub may permit our partners to store and archive Your Content in public repositories in connection with the GitHub Arctic Code Vault and GitHub Archive Program.
5. License Grant to Other Users
Any User-Generated Content you post publicly, including issues, comments, and contributions to other Users' repositories, may be viewed by others. By setting your repositories to be viewed publicly, you agree to allow others to view and "fork" your repositories (this means that others may make their own copies of Content from your repositories in repositories they control).
If you set your pages and repositories to be viewed publicly, you grant each User of GitHub a nonexclusive, worldwide license to use, display, and perform Your Content through the GitHub Service and to reproduce Your Content solely on GitHub as permitted through GitHub's functionality (for example, through forking). You may grant further rights if you adopt a license. If you are uploading Content you did not create or own, you are responsible for ensuring that the Content you upload is licensed under terms that grant these permissions to other GitHub Users.
6. Contributions Under Repository License
Whenever you add Content to a repository containing notice of a license, you license that Content under the same terms, and you agree that you have the right to license that Content under those terms. If you have a separate agreement to license that Content under different terms, such as a contributor license agreement, that agreement will supersede.
Isn't this just how it works already? Yep. This is widely accepted as the norm in the open-source community; it's commonly referred to by the shorthand "inbound=outbound". We're just making it explicit.
7. Moral Rights
You retain all moral rights to Your Content that you upload, publish, or submit to any part of the Service, including the rights of integrity and attribution. However, you waive these rights and agree not to assert them against us, to enable us to reasonably exercise the rights granted in Section D.4, but not otherwise.
To the extent this agreement is not enforceable by applicable law, you grant GitHub the rights we need to use Your Content without attribution and to make reasonable adaptations of Your Content as necessary to render the Website and provide the Service.
E. Private Repositories
Short version: We treat the content of private repositories as confidential, and we only access it as described in our Privacy Statement—for security purposes, to assist the repository owner with a support matter, to maintain the integrity of the Service, to comply with our legal obligations, if we have reason to believe the contents are in violation of the law, or with your consent.
1. Control of Private Repositories
Some Accounts may have private repositories, which allow the User to control access to Content.
2. Confidentiality of Private Repositories
GitHub considers the contents of private repositories to be confidential to you. GitHub will protect the contents of private repositories from unauthorized use, access, or disclosure in the same manner that we would use to protect our own confidential information of a similar nature and in no event with less than a reasonable degree of care.
3. Access
GitHub personnel may only access the content of your private repositories in the situations described in our Privacy Statement.
You may choose to enable additional access to your private repositories. For example:

You may enable various GitHub services or features that require additional rights to Your Content in private repositories. These rights may vary depending on the service or feature, but GitHub will continue to treat your private repository Content as confidential. If those services or features require rights in addition to those we need to provide the GitHub Service, we will provide an explanation of those rights.

Additionally, we may be compelled by law to disclose the contents of your private repositories.
GitHub will provide notice regarding our access to private repository content, unless for legal disclosure, to comply with our legal obligations, or where otherwise bound by requirements under law, for automated scanning, or if in response to a security threat or other risk to security.
F. Copyright Infringement and DMCA Policy
If you believe that content on our website violates your copyright, please contact us in accordance with our Digital Millennium Copyright Act Policy. If you are a copyright owner and you believe that content on GitHub violates your rights, please contact us via our convenient DMCA form or by emailing copyright@github.com. There may be legal consequences for sending a false or frivolous takedown notice. Before sending a takedown request, you must consider legal uses such as fair use and licensed uses.
We will terminate the Accounts of repeat infringers of this policy.
G. Intellectual Property Notice
Short version: We own the service and all of our content. In order for you to use our content, we give you certain rights to it, but you may only use our content in the way we have allowed.
1. GitHub's Rights to Content
GitHub and our licensors, vendors, agents, and/or our content providers retain ownership of all intellectual property rights of any kind related to the Website and Service. We reserve all rights that are not expressly granted to you under this Agreement or by law. The look and feel of the Website and Service is copyright © GitHub, Inc. All rights reserved. You may not duplicate, copy, or reuse any portion of the HTML/CSS, JavaScript, or visual design elements or concepts without express written permission from GitHub.
2. GitHub Trademarks and Logos
If you’d like to use GitHub’s trademarks, you must follow all of our trademark guidelines, including those on our logos page: https://github.com/logos.
3. License to GitHub Policies
This Agreement is licensed under this Creative Commons Zero license. For details, see our site-policy repository.
H. API Terms
Short version: You agree to these Terms of Service, plus this Section H, when using any of GitHub's APIs (Application Provider Interface), including use of the API through a third party product that accesses GitHub.
Abuse or excessively frequent requests to GitHub via the API may result in the temporary or permanent suspension of your Account's access to the API. GitHub, in our sole discretion, will determine abuse or excessive usage of the API. We will make a reasonable attempt to warn you via email prior to suspension.
You may not share API tokens to exceed GitHub's rate limitations.
You may not use the API to download data or Content from GitHub for spamming purposes, including for the purposes of selling GitHub users' personal information, such as to recruiters, headhunters, and job boards.
All use of the GitHub API is subject to these Terms of Service and the GitHub Privacy Statement.
GitHub may offer subscription-based access to our API for those Users who require high-throughput access or access that would result in resale of GitHub's Service.
I. GitHub Additional Product Terms
Short version: You need to follow certain specific terms and conditions for GitHub's various features and products, and you agree to the Supplemental Terms and Conditions when you agree to this Agreement.
Some Service features may be subject to additional terms specific to that feature or product as set forth in the GitHub Additional Product Terms. By accessing or using the Services, you also agree to the GitHub Additional Product Terms.
J. Beta Previews
Short version: Beta Previews may not be supported or may change at any time. You may receive confidential information through those programs that must remain confidential while the program is private. We'd love your feedback to make our Beta Previews better.
1. Subject to Change
Beta Previews may not be supported and may be changed at any time without notice. In addition, Beta Previews are not subject to the same security measures and auditing to which the Service has been and is subject. By using a Beta Preview, you use it at your own risk.
2. Confidentiality
As a user of Beta Previews, you may get access to special information that isn’t available to the rest of the world. Due to the sensitive nature of this information, it’s important for us to make sure that you keep that information secret.
Confidentiality Obligations. You agree that any non-public Beta Preview information we give you, such as information about a private Beta Preview, will be considered GitHub’s confidential information (collectively, “Confidential Information”), regardless of whether it is marked or identified as such. You agree to only use such Confidential Information for the express purpose of testing and evaluating the Beta Preview (the “Purpose”), and not for any other purpose. You should use the same degree of care as you would with your own confidential information, but no less than reasonable precautions to prevent any unauthorized use, disclosure, publication, or dissemination of our Confidential Information. You promise not to disclose, publish, or disseminate any Confidential Information to any third party, unless we don’t otherwise prohibit or restrict such disclosure (for example, you might be part of a GitHub-organized group discussion about a private Beta Preview feature).
Exceptions. Confidential Information will not include information that is: (a) or becomes publicly available without breach of this Agreement through no act or inaction on your part (such as when a private Beta Preview becomes a public Beta Preview); (b) known to you before we disclose it to you; (c) independently developed by you without breach of any confidentiality obligation to us or any third party; or (d) disclosed with permission from GitHub. You will not violate the terms of this Agreement if you are required to disclose Confidential Information pursuant to operation of law, provided GitHub has been given reasonable advance written notice to object, unless prohibited by law.
3. Feedback
We’re always trying to improve of products and services, and your feedback as a Beta Preview user will help us do that. If you choose to give us any ideas, know-how, algorithms, code contributions, suggestions, enhancement requests, recommendations or any other feedback for our products or services (collectively, “Feedback”), you acknowledge and agree that GitHub will have a royalty-free, fully paid-up, worldwide, transferable, sub-licensable, irrevocable and perpetual license to implement, use, modify, commercially exploit and/or incorporate the Feedback into our products, services, and documentation.
K. Payment
Short version: You are responsible for any fees associated with your use of GitHub. We are responsible for communicating those fees to you clearly and accurately, and letting you know well in advance if those prices change.
1. Pricing
Our pricing and payment terms are available at github.com/pricing. If you agree to a subscription price, that will remain your price for the duration of the payment term; however, prices are subject to change at the end of a payment term.
2. Upgrades, Downgrades, and Changes

We will immediately bill you when you upgrade from the free plan to any paying plan.
If you change from a monthly billing plan to a yearly billing plan, GitHub will bill you for a full year at the next monthly billing date.
If you upgrade to a higher level of service, we will bill you for the upgraded plan immediately.
You may change your level of service at any time by choosing a plan option or going into your Billing settings. If you choose to downgrade your Account, you may lose access to Content, features, or capacity of your Account. Please see our section on Cancellation for information on getting a copy of that Content.

3. Billing Schedule; No Refunds
Payment Based on Plan For monthly or yearly payment plans, the Service is billed in advance on a monthly or yearly basis respectively and is non-refundable. There will be no refunds or credits for partial months of service, downgrade refunds, or refunds for months unused with an open Account; however, the service will remain active for the length of the paid billing period. In order to treat everyone equally, no exceptions will be made.
Payment Based on Usage Some Service features are billed based on your usage. A limited quantity of these Service features may be included in your plan for a limited term without additional charge. If you choose to use paid Service features beyond the quantity included in your plan, you pay for those Service features based on your actual usage in the preceding month. Monthly payment for these purchases will be charged on a periodic basis in arrears. See GitHub Additional Product Terms for Details.
Invoicing For invoiced Users, User agrees to pay the fees in full, up front without deduction or setoff of any kind, in U.S. Dollars. User must pay the fees within thirty (30) days of the GitHub invoice date. Amounts payable under this Agreement are non-refundable, except as otherwise provided in this Agreement. If User fails to pay any fees on time, GitHub reserves the right, in addition to taking any other action at law or equity, to (i) charge interest on past due amounts at 1.0% per month or the highest interest rate allowed by law, whichever is less, and to charge all expenses of recovery, and (ii) terminate the applicable order form. User is solely responsible for all taxes, fees, duties and governmental assessments (except for taxes based on GitHub's net income) that are imposed or become due in connection with this Agreement.
4. Authorization
By agreeing to these Terms, you are giving us permission to charge your on-file credit card, PayPal account, or other approved methods of payment for fees that you authorize for GitHub.
5. Responsibility for Payment
You are responsible for all fees, including taxes, associated with your use of the Service. By using the Service, you agree to pay GitHub any charge incurred in connection with your use of the Service. If you dispute the matter, contact us through the GitHub Support portal. You are responsible for providing us with a valid means of payment for paid Accounts. Free Accounts are not required to provide payment information.
L. Cancellation and Termination
Short version: You may close your Account at any time. If you do, we'll treat your information responsibly.
1. Account Cancellation
It is your responsibility to properly cancel your Account with GitHub. You can cancel your Account at any time by going into your Settings in the global navigation bar at the top of the screen. The Account screen provides a simple, no questions asked cancellation link. We are not able to cancel Accounts in response to an email or phone request.
2. Upon Cancellation
We will retain and use your information as necessary to comply with our legal obligations, resolve disputes, and enforce our agreements, but barring legal requirements, we will delete your full profile and the Content of your repositories within 90 days of cancellation or termination (though some information may remain in encrypted backups). This information cannot be recovered once your Account is canceled.
We will not delete Content that you have contributed to other Users' repositories or that other Users have forked.
Upon request, we will make a reasonable effort to provide an Account owner with a copy of your lawful, non-infringing Account contents after Account cancellation, termination, or downgrade. You must make this request within 90 days of cancellation, termination, or downgrade.
3. GitHub May Terminate
GitHub has the right to suspend or terminate your access to all or any part of the Website at any time, with or without cause, with or without notice, effective immediately. GitHub reserves the right to refuse service to anyone for any reason at any time.
4. Survival
All provisions of this Agreement which, by their nature, should survive termination will survive termination — including, without limitation: ownership provisions, warranty disclaimers, indemnity, and limitations of liability.
M. Communications with GitHub
Short version: We use email and other electronic means to stay in touch with our users.
1. Electronic Communication Required
For contractual purposes, you (1) consent to receive communications from us in an electronic form via the email address you have submitted or via the Service; and (2) agree that all Terms of Service, agreements, notices, disclosures, and other communications that we provide to you electronically satisfy any legal requirement that those communications would satisfy if they were on paper. This section does not affect your non-waivable rights.
2. Legal Notice to GitHub Must Be in Writing
Communications made through email or GitHub Support's messaging system will not constitute legal notice to GitHub or any of its officers, employees, agents or representatives in any situation where notice to GitHub is required by contract or any law or regulation. Legal notice to GitHub must be in writing and served on GitHub's legal agent.
3. No Phone Support
GitHub only offers support via email, in-Service communications, and electronic messages. We do not offer telephone support.
N. Disclaimer of Warranties
Short version: We provide our service as is, and we make no promises or guarantees about this service. Please read this section carefully; you should understand what to expect.
GitHub provides the Website and the Service “as is” and “as available,” without warranty of any kind. Without limiting this, we expressly disclaim all warranties, whether express, implied or statutory, regarding the Website and the Service including without limitation any warranty of merchantability, fitness for a particular purpose, title, security, accuracy and non-infringement.
GitHub does not warrant that the Service will meet your requirements; that the Service will be uninterrupted, timely, secure, or error-free; that the information provided through the Service is accurate, reliable or correct; that any defects or errors will be corrected; that the Service will be available at any particular time or location; or that the Service is free of viruses or other harmful components. You assume full responsibility and risk of loss resulting from your downloading and/or use of files, information, content or other material obtained from the Service.
O. Limitation of Liability
Short version: We will not be liable for damages or losses arising from your use or inability to use the service or otherwise arising under this agreement. Please read this section carefully; it limits our obligations to you.
You understand and agree that we will not be liable to you or any third party for any loss of profits, use, goodwill, or data, or for any incidental, indirect, special, consequential or exemplary damages, however arising, that result from

the use, disclosure, or display of your User-Generated Content;
your use or inability to use the Service;
any modification, price change, suspension or discontinuance of the Service;
the Service generally or the software or systems that make the Service available;
unauthorized access to or alterations of your transmissions or data;
statements or conduct of any third party on the Service;
any other user interactions that you input or receive through your use of the Service; or
any other matter relating to the Service.

Our liability is limited whether or not we have been informed of the possibility of such damages, and even if a remedy set forth in this Agreement is found to have failed of its essential purpose. We will have no liability for any failure or delay due to matters beyond our reasonable control.
P. Release and Indemnification
Short version: You are responsible for your use of the service. If you harm someone else or get into a dispute with someone else, we will not be involved.
If you have a dispute with one or more Users, you agree to release GitHub from any and all claims, demands and damages (actual and consequential) of every kind and nature, known and unknown, arising out of or in any way connected with such disputes.
You agree to indemnify us, defend us, and hold us harmless from and against any and all claims, liabilities, and expenses, including attorneys’ fees, arising out of your use of the Website and the Service, including but not limited to your violation of this Agreement, provided that GitHub (1) promptly gives you written notice of the claim, demand, suit or proceeding; (2) gives you sole control of the defense and settlement of the claim, demand, suit or proceeding (provided that you may not settle any claim, demand, suit or proceeding unless the settlement unconditionally releases GitHub of all liability); and (3) provides to you all reasonable assistance, at your expense.
Q. Changes to These Terms
Short version: We want our users to be informed of important changes to our terms, but some changes aren't that important — we don't want to bother you every time we fix a typo. So while we may modify this agreement at any time, we will notify users of any material changes and give you time to adjust to them.
We reserve the right, at our sole discretion, to amend these Terms of Service at any time and will update these Terms of Service in the event of any such amendments. We will notify our Users of material changes to this Agreement, such as price increases, at least 30 days prior to the change taking effect by posting a notice on our Website or sending email to the primary email address specified in your GitHub account. Customer's continued use of the Service after those 30 days constitutes agreement to those revisions of this Agreement. For any other modifications, your continued use of the Website constitutes agreement to our revisions of these Terms of Service. You can view all changes to these Terms in our Site Policy repository.
We reserve the right at any time and from time to time to modify or discontinue, temporarily or permanently, the Website (or any part of it) with or without notice.
R. Miscellaneous
1. Governing Law
Except to the extent applicable law provides otherwise, this Agreement between you and GitHub and any access to or use of the Website or the Service are governed by the federal laws of the United States of America and the laws of the State of California, without regard to conflict of law provisions. You and GitHub agree to submit to the exclusive jurisdiction and venue of the courts located in the City and County of San Francisco, California.
2. Non-Assignability
GitHub may assign or delegate these Terms of Service and/or the GitHub Privacy Statement, in whole or in part, to any person or entity at any time with or without your consent, including the license grant in Section D.4. You may not assign or delegate any rights or obligations under the Terms of Service or Privacy Statement without our prior written consent, and any unauthorized assignment and delegation by you is void.
3. Section Headings and Summaries
Throughout this Agreement, each section includes titles and brief summaries of the following terms and conditions. These section titles and brief summaries are not legally binding.
4. Severability, No Waiver, and Survival
If any part of this Agreement is held invalid or unenforceable, that portion of the Agreement will be construed to reflect the parties’ original intent. The remaining portions will remain in full force and effect. Any failure on the part of GitHub to enforce any provision of this Agreement will not be considered a waiver of our right to enforce such provision. Our rights under this Agreement will survive any termination of this Agreement.
5. Amendments; Complete Agreement
This Agreement may only be modified by a written amendment signed by an authorized representative of GitHub, or by the posting by GitHub of a revised version in accordance with Section Q. Changes to These Terms. These Terms of Service, together with the GitHub Privacy Statement, represent the complete and exclusive statement of the agreement between you and us. This Agreement supersedes any proposal or prior agreement oral or written, and any other communications between you and GitHub relating to the subject matter of these terms including any confidentiality or nondisclosure agreements.
6. Questions
Questions about the Terms of Service? Contact us through the GitHub Support portal.\n\n\n\nGitHub DocsHelp for wherever you are on your GitHub journey.Get startedGet startedMigrationsAccount and profileAuthenticationBilling and paymentsSite policyCollaborative codingCodespacesRepositoriesPull requestsGitHub DiscussionsGitHub CopilotGitHub CopilotGet code suggestionsPrompt engineeringChat in GitHubCopilot Chat CookbookExtensions quickstartCI/CD and DevOpsGitHub ActionsGitHub PackagesGitHub PagesSecuritySecure codingSecret scanningSupply chain securityDependabotCode scanningSecurity advisoriesClient appsGitHub CLIGitHub MobileGitHub DesktopProject managementGitHub IssuesProjectsSearch on GitHubEnterprise and TeamsOrganizationsSecure your organizationEnterprise onboardingEnterprise administratorsGitHub Well-ArchitectedDevelopersAppsREST APIGraphQL APIWebhooksBuild Copilot ExtensionsGitHub ModelsCommunityBuilding communitiesGitHub SponsorsGitHub EducationGitHub for NonprofitsGitHub SupportContribute to GitHub DocsMore docsCodeQL query writingElectronnpmGetting startedSet up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.Connecting to GitHub with SSHYou can connect to GitHub using the Secure Shell Protocol (SSH), which provides a secure channel over an unsecured network.Creating and managing repositoriesYou can create a repository on GitHub to store and collaborate on your project's files, then manage the repository's name and location.Basic writing and formatting syntaxCreate sophisticated formatting for your prose and code on GitHub with simple syntax.PopularAbout pull requestsLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.Authentication documentationKeep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Managing remote repositoriesLearn to work with your local repositories on your computer and remote repositories hosted on GitHub.\n\n\n\nGet started with GitHub documentation Learn how to start building, shipping, and maintaining software with GitHub. Explore our products, sign up for an account, and connect with the world's largest development community.Quickstart Start hereAbout GitHub and GitYou can use GitHub and Git to collaborate on work.GitHub’s plansAn overview of GitHub's pricing plans.Getting started with your GitHub accountWith a personal account on GitHub, you can import or create repositories, collaborate with others, and connect with the GitHub community.Getting started with GitHub TeamWith GitHub Team groups of people can collaborate across many projects at the same time in an organization account.PopularCreating an account on GitHubCreate a personal account to get started with GitHub.Hello WorldFollow this Hello World exercise to learn GitHub's pull request workflow.Set up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.About versions of GitHub DocsYou can read documentation that reflects the GitHub product you're currently using.GuidesTypes of GitHub accountsAccounts on GitHub allow you to organize and control access to code.@GitHubFinding ways to contribute to open source on GitHubYou can find ways to contribute to open source projects on GitHub that are relevant to you.@GitHubTroubleshooting connectivity problemsIf you're having trouble connecting to GitHub, you can troubleshoot your connection, then use the GitHub Debug tool to diagnose problems.@GitHubAll Get started docsStart your journeyAbout GitHub and GitCreating an account on GitHubHello WorldSetting up your profileFinding inspiration on GitHubDownloading files from GitHubUploading a project to GitHubGit and GitHub learning resourcesOnboardingGetting started with your GitHub accountGetting started with GitHub TeamGetting started with the GitHub Enterprise Cloud trialGetting started with GitHub Enterprise CloudUsing GitHubGitHub flowConnecting to GitHubCommunicating on GitHubExploring early access releases with feature previewSupported browsersGitHub MobileAllowing access to GitHub's services from a restricted networkTroubleshooting connectivity problemsLearning about GitHubGitHub’s plansGitHub language supportTypes of GitHub accountsAccess permissions on GitHubAbout GitHub Advanced SecurityFAQ about changes to GitHub’s plansGitHub glossaryLearning to codeGetting started with GitFinding and understanding example codeReusing other people's code in your projectsSetting up Copilot for learning to codeLearning to debug with GitHub CopilotStoring your secrets safelyAccessibilityManaging your theme settingsKeyboard shortcutsGitHub Command PaletteWriting on GitHubGetting started with writing and formatting on GitHub • 3 articlesWorking with advanced formatting • 10 articlesWorking with saved replies • 5 articlesEditing and sharing content with gists • 4 articlesExploring projects on GitHubFinding ways to contribute to open source on GitHubUsing GitHub Copilot to explore projectsContributing to a projectSaving repositories with starsFollowing peopleFollowing organizationsGit basicsSet up GitSetting your username in GitCaching your GitHub credentials in GitWhy is Git always asking for my password?Updating credentials from the macOS KeychainGit workflowsAbout remote repositoriesManaging remote repositoriesAssociating text editors with GitConfiguring Git to handle line endingsIgnoring filesGit cheatsheetUsing GitAbout GitPushing commits to a remote repositoryGetting changes from a remote repositoryDealing with non-fast-forward errorsSplitting a subfolder out into a new repositoryAbout Git subtree mergesAbout Git rebaseUsing Git rebase on the command lineResolving merge conflicts after a Git rebaseDealing with special characters in branch and tag namesTroubleshooting the 2 GB push limitExploring integrationsAbout using integrationsAbout building integrationsFeatured GitHub integrationsGitHub Developer ProgramArchiving your GitHub personal account and public repositoriesRequesting an archive of your personal account’s dataOpting into or out of the GitHub Archive Program for your public repositoryUsing GitHub DocsAbout versions of GitHub DocsUsing hover cards on GitHub DocsShowcase your expertise with GitHub CertificationsAbout GitHub CertificationsRegistering for a GitHub Certifications exam\n\n\n\nMigrations documentation If you're moving to GitHub from another code hosting platform or moving between GitHub products, learn how to use our migration tooling to bring your work with you.Overview Plan your migration Start hereAbout GitHub ImporterIf your source code is stored on another Git-based hosting service, you can move the code to GitHub.com using GitHub Importer.About GitHub Enterprise ImporterWith GitHub Enterprise Importer, you can migrate your enterprise to GitHub Enterprise Cloud from various sources.Automating migration with GitHub Actions ImporterUse GitHub Actions Importer to plan and automate your migration to GitHub Actions.PopularImporting a repository with GitHub ImporterIf you have a project hosted on another Git-based hosting service, you can quickly import it to GitHub using the GitHub Importer tool.Adding locally hosted code to GitHubIf your code is stored locally on your computer and is tracked by Git or not tracked by any version control system (VCS), you can import the code to GitHub using GitHub CLI or Git commands.Migrating repositories from GitHub Enterprise Server to GitHub Enterprise CloudYou can migrate repositories from GitHub Enterprise Server to GitHub Enterprise Cloud, using the GitHub CLI or API.GuidesReclaiming mannequins for GitHub Enterprise ImporterAfter your migration, you can assign the history of a placeholder identity, or mannequin, to a member of your organization.@GitHubTroubleshooting your migration with GitHub Enterprise ImporterIf your migration fails or produces unexpected results, you can try common troubleshooting steps.@GitHubAll Migrations docsOverviewAbout GitHub's migration toolingPlanning your migration to GitHubMigration paths to GitHubAbout locked repositoriesProgrammatically importing repositoriesImporting source codeUsing GitHub Importer • 2 articlesUsing the command line to import source code • 6 articlesUsing GitHub Enterprise ImporterUnderstanding GitHub Enterprise Importer • 1 articlesMigrating from Azure DevOps to GitHub Enterprise Cloud • 4 articlesMigrating from Bitbucket Server to GitHub Enterprise Cloud • 4 articlesMigrating between GitHub products • 6 articlesCompleting your migration with GitHub Enterprise Importer • 3 articlesUsing ghe-migratorAbout ghe-migratorExporting migration data from GitHub Enterprise ServerExporting migration data from GitHub.comMigrating data to GitHub Enterprise Server\n\n\n\nAccount and profile documentation Make GitHub work best for you by adjusting the settings for your personal account, personalizing your profile page, and managing the notifications you receive.Quickstart Start hereChanging your GitHub usernameYou can change the username for your account on GitHub.Managing your profile READMEYou can add a README to your GitHub profile to tell other people about yourself.About notificationsNotifications provide updates about the activity on GitHub that you've subscribed to. You can use the notifications inbox to customize, triage, and manage your updates.PopularSetting your commit email addressYou can set the email address that is used to author commits on GitHub and on your computer.Inviting collaborators to a personal repositoryYou can invite users to become collaborators to your personal repository.Configuring notificationsChoose the type of activity on GitHub that you want to receive notifications for and how you want these updates delivered.What's newView all Sunset notice for automatic watching of repositories and teamsApril 15GitHub Actions workflow notifications in Slack and Microsoft TeamsDecember 06Local timezones available on profilesSeptember 23GuidesWhy are my contributions not showing up on my profile?Learn common reasons that contributions may be missing from your contributions graph.@GitHubManaging notifications from your inboxUse your inbox to quickly triage and sync your notifications across email and mobile.@GitHubBlocking command line pushes that expose your personal email addressIf you've chosen to keep your email address private when performing web-based operations, you can also choose to block command line pushes that may expose your personal email address.@GitHubAll Account and profile docsSetting up and managing your personal account on GitHubManaging user account settings • 9 articlesManaging your personal account • 6 articlesManaging email preferences • 9 articlesManaging access to your personal repositories • 4 articlesManaging your membership in organizations • 7 articlesSetting up and managing your GitHub profileCustomizing your profile • 7 articlesManaging contribution settings on your profile • 6 articlesManaging subscriptions and notifications on GitHubSetting up notifications • 2 articlesViewing and triaging notifications • 3 articlesManaging subscriptions for activity on GitHub • 2 articles\n\n\n\nBilling and payments documentation Learn about the different components of your bill, and how you can view and manage those components.Overview Start hereAbout the new billing platformLearn about the billing platform's key functionalities, and how it can help you manage your spending more effectively.Managing your payment and billing informationLearn how to manage your payment information and history, and update your billing contacts using the new billing platform.About the billing cycleLearn about the billing cycle for the new billing platform.Preventing overspendingLearn how to set budgets and track when they are nearing or above a threshold to prevent overspending.PopularDowngrading your account's planYou can downgrade the plan for any type of account on GitHub at any time.About billing for GitHub ActionsIf you want to use GitHub Actions beyond the storage or minutes included in your account, you will be billed for additional usage.About billing for GitHub CodespacesLearn about the costs for using GitHub Codespaces, and the monthly usage quotas included with GitHub personal accounts.GuidesHow does upgrading or downgrading affect the billing process?When you upgrade the subscription for your personal account or organization, changes are applied immediately. When you downgrade your subscription, changes are applied at the end of your current billing cycle.@GitHubUpgrading Git Large File StorageYou can purchase additional data packs to increase your monthly bandwidth quota and total storage capacity for Git LFS.@GitHubAll Billing and payments docsManaging your billingAbout billing on GitHubAbout the new billing platformAbout the billing cycleAdding licenses to an organizationRoles for the new billing platformEstimating spendingGathering insights on your spendingPreventing overspendingManaging your payment and billing informationRedeeming a couponTroubleshooting a declined credit card chargeUnlocking a locked accountManaging the plan for your GitHub accountAbout billing for plansAbout per-user pricingUpgrading your account's planViewing and managing pending changes to your planDowngrading your account's planConnecting an Azure subscriptionHow does upgrading or downgrading affect the billing process?One-time payments for customers in IndiaDiscounted plans for GitHub accountsManaging billing for your productsManaging billing for GitHub Actions • 3 articlesManaging billing for GitHub Codespaces • 3 articlesManaging billing for GitHub Packages • 3 articlesManaging billing for GitHub Copilot • 1 articlesManaging billing for GitHub Advanced Security products • 4 articlesManaging billing for GitHub Sponsors • 4 articlesManaging billing for GitHub Marketplace apps • 4 articlesManaging billing for Git Large File Storage • 4 articlesSetting up paid accounts for procurement companiesSetting up paid organizations for procurement companies • 4 articlesSetting up enterprise accounts for procurement companies • 4 articles\n\n\n\nSite policySite policy documentationGitHub TermsAcceptable Use PoliciesPrivacy PoliciesOther Site PoliciesContent Removal PoliciesSecurity PoliciesGitHub Company Policies\n\n\n\n