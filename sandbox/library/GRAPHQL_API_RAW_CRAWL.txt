GitHub GraphQL API documentation To create integrations, retrieve data, and automate your workflows, use the GitHub GraphQL API. The GitHub GraphQL API offers more precise and flexible queries than the GitHub REST API.Overview Start hereView all Forming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.Introduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.Using the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.PopularExplorerPublic schemaDownload the public schema for the GitHub GraphQL API.Using pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.What's newView all Check if private vulnerability reporting is enabled via REST APIMarch 08New limits on scoped token creation for GitHub AppsFebruary 23Upcoming changes to repository insightsNovember 29GuidesMigrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.@GitHubManaging enterprise accountsYou can manage your enterprise account and the organizations it owns with the GraphQL API.@GitHubUsing global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.@GitHubExplore guides All GraphQL API docsOverviewAbout the GraphQL APIPublic schemaBreaking changesChangelogExplorerRate limits and node limits for the GraphQL APIReferenceQueriesMutationsObjectsInterfacesEnumsUnionsInput objectsScalarsGuidesIntroduction to GraphQLForming calls with GraphQLUsing global node IDsMigrating from REST to GraphQLUsing the ExplorerUsing pagination in the GraphQL APIUsing the GraphQL API for DiscussionsMigrating GraphQL global node IDs\n\n\n\nGitHub GraphQL API documentation To create integrations, retrieve data, and automate your workflows, use the GitHub GraphQL API. The GitHub GraphQL API offers more precise and flexible queries than the GitHub REST API.Overview Start hereView all Forming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.Introduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.Using the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.PopularExplorerPublic schemaDownload the public schema for the GitHub GraphQL API.Using pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.What's newView all Check if private vulnerability reporting is enabled via REST APIMarch 08New limits on scoped token creation for GitHub AppsFebruary 23Upcoming changes to repository insightsNovember 29GuidesMigrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.@GitHubManaging enterprise accountsYou can manage your enterprise account and the organizations it owns with the GraphQL API.@GitHubUsing global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.@GitHubExplore guides All GraphQL API docsOverviewAbout the GraphQL APIPublic schemaBreaking changesChangelogExplorerRate limits and node limits for the GraphQL APIReferenceQueriesMutationsObjectsInterfacesEnumsUnionsInput objectsScalarsGuidesIntroduction to GraphQLForming calls with GraphQLUsing global node IDsMigrating from REST to GraphQLUsing the ExplorerUsing pagination in the GraphQL APIUsing the GraphQL API for DiscussionsMigrating GraphQL global node IDs\n\n\n\nGitHub DocsHelp for wherever you are on your GitHub journey.Get startedGet startedMigrationsAccount and profileAuthenticationBilling and paymentsSite policyCollaborative codingCodespacesRepositoriesPull requestsGitHub DiscussionsGitHub CopilotGitHub CopilotGet code suggestionsPrompt engineeringChat in GitHubCopilot Chat CookbookExtensions quickstartCI/CD and DevOpsGitHub ActionsGitHub PackagesGitHub PagesSecuritySecure codingSecret scanningSupply chain securityDependabotCode scanningSecurity advisoriesClient appsGitHub CLIGitHub MobileGitHub DesktopProject managementGitHub IssuesProjectsSearch on GitHubEnterprise and TeamsOrganizationsSecure your organizationEnterprise onboardingEnterprise administratorsGitHub Well-ArchitectedDevelopersAppsREST APIGraphQL APIWebhooksBuild Copilot ExtensionsGitHub ModelsCommunityBuilding communitiesGitHub SponsorsGitHub EducationGitHub for NonprofitsGitHub SupportContribute to GitHub DocsMore docsCodeQL query writingElectronnpmGetting startedSet up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.Connecting to GitHub with SSHYou can connect to GitHub using the Secure Shell Protocol (SSH), which provides a secure channel over an unsecured network.Creating and managing repositoriesYou can create a repository on GitHub to store and collaborate on your project's files, then manage the repository's name and location.Basic writing and formatting syntaxCreate sophisticated formatting for your prose and code on GitHub with simple syntax.PopularAbout pull requestsLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.Authentication documentationKeep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Managing remote repositoriesLearn to work with your local repositories on your computer and remote repositories hosted on GitHub.\n\n\n\nGraphQL API/Overview/About the GraphQL APIAbout the GraphQL APIThe GitHub GraphQL API offers flexibility and the ability to define precisely the data you want to fetch.In this articleOverviewAbout GraphQLWhy GitHub is using GraphQLAbout the GraphQL schema referenceRequesting supportOverview
Here are some quick links to get you up and running with the GraphQL API:

Authentication
Root endpoint
Schema introspection
Rate limits
Migrating from REST

For more information about GitHub's APIs, see Comparing GitHub's REST API and GraphQL API.
About GraphQL
The GraphQL data query language is:


A specification. The spec determines the validity of the schema on the API server. The schema determines the validity of client calls.


Strongly typed. The schema defines an API's type system and all object relationships.


Introspective. A client can query the schema for details about the schema.


Hierarchical. The shape of a GraphQL call mirrors the shape of the JSON data it returns. Nested fields let you query for and receive only the data you specify in a single round trip.


An application layer. GraphQL is not a storage model or a database query language. The graph refers to graph structures defined in the schema, where nodes define objects and edges define relationships between objects. The API traverses and returns application data based on the schema definitions, independent of how the data is stored.


Why GitHub is using GraphQL
GitHub chose GraphQL because it offers significantly more flexibility for our integrators. The ability to define precisely the data you want—and only the data you want—is a powerful advantage over traditional REST API endpoints. GraphQL lets you replace multiple REST requests with a single call to fetch the data you specify.
For more details about why GitHub invested in GraphQL, see the original announcement blog post.
About the GraphQL schema reference
The docs in the sidebar are generated from the GitHub GraphQL schema. All calls are validated and executed against the schema. Use these docs to find out what data you can call:


Allowed operations: queries and mutations.


Schema-defined types: scalars, objects, enums, interfaces, unions, and input objects.


You can access this same content via the Explorer Docs sidebar. Note that you may need to rely on both the docs and the schema validation to successfully call the GraphQL API.
For other information, such as authentication and rate limit details, check out the guides.
Requesting support
For questions, bug reports, and discussions about GitHub Apps, OAuth apps, and API development, explore the API and Webhooks category in GitHub's Community Discussions. The discussions are moderated and maintained by GitHub staff, and answered by the GitHub community.
Consider reaching out to GitHub Support directly using the contact form for:

Guaranteed response from GitHub staff
Support requests involving sensitive data or private concerns
Feature requests
Feedback about GitHub products

If you observe unexpected failures, you can use githubstatus.com or the GitHub status API to check for incidents affecting the API.\n\n\n\nGraphQL API/Overview/Public schemaPublic schemaDownload the public schema for the GitHub GraphQL API.You can perform introspection against the GraphQL API directly.
Alternatively, you can download the latest version of the public schema here:
 schema.docs.graphql\n\n\n\nGraphQL API/Overview/Breaking changesBreaking changesLearn about recent and upcoming breaking changes to the GitHub GraphQL API.In this articleAbout breaking changesChanges scheduled for 2026-04-01Changes scheduled for 2025-10-01Changes scheduled for 2025-09-04Changes scheduled for 2025-04-01Changes scheduled for 2025-01-01Changes scheduled for 2024-10-01Changes scheduled for 2024-07-01Changes scheduled for 2024-04-01Changes scheduled for 2023-10-01Changes scheduled for 2023-07-01Changes scheduled for 2023-04-01Changes scheduled for 2023-02-10Changes scheduled for 2023-01-01Changes scheduled for 2022-12-28Changes scheduled for 2022-11-21Changes scheduled for 2022-10-01Changes scheduled for 2022-07-01Changes scheduled for 2021-10-01Changes scheduled for 2021-06-21Changes scheduled for 2021-01-01Changes scheduled for 2020-10-01Changes scheduled for 2020-04-01Changes scheduled for 2020-01-01Changes scheduled for 2019-04-01About breaking changes
Breaking changes are any changes that might require action from our integrators. We divide these changes into two categories:

Breaking: Changes that will break existing queries to the GraphQL API. For example, removing a field would be a breaking change.
Dangerous: Changes that won't break existing queries but could affect the runtime behavior of clients. Adding an enum value is an example of a dangerous change.

We'll announce upcoming breaking changes at least three months before making changes to the GraphQL schema, to give integrators time to make the necessary adjustments. Changes go into effect on the first day of a quarter (January 1st, April 1st, July 1st, or October 1st). For example, if we announce a change on January 15th, it will be made on July 1st.Changes scheduled for 2026-04-01Breaking A change will be made to TeamRemoveRepositoryAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.isLdapMapped.Description: isLdapMapped will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveRepositoryAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.isLdapMapped.Description: isLdapMapped will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamRemoveMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamWasUrl.Description: parentTeamWasUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamWasResourcePath.Description: parentTeamWasResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamWas.Description: parentTeamWas will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamUrl.Description: parentTeamUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamResourcePath.Description: parentTeamResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamNameWas.Description: parentTeamNameWas will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeamName.Description: parentTeamName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.parentTeam.Description: parentTeam will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.isLdapMapped.Description: isLdapMapped will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamChangeParentTeamAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.isLdapMapped.Description: isLdapMapped will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddRepositoryAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.isLdapMapped.Description: isLdapMapped will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to TeamAddMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeEnableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepositoryVisibilityChangeDisableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveTopicAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoRemoveMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoDestroyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.forkSourceName.Description: forkSourceName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.forkParentName.Description: forkParentName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoCreateAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigUnlockAnonymousGitAccessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigLockAnonymousGitAccessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableSockpuppetDisallowedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableContributorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableCollaboratorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigEnableAnonymousGitAccessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableSockpuppetDisallowedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableContributorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableCollaboratorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoConfigDisableAnonymousGitAccessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.mergeType.Description: mergeType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.isEnabled.Description: isEnabled will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoChangeMergeSettingAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoArchivedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddTopicAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAddMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to RepoAccessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingEnableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to PrivateRepositoryForkingDisableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrganizationAuditEntryData.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrganizationAuditEntryData.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrganizationAuditEntryData.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrganizationAuditEntryData.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to Organization.auditLog.Description: auditLog will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.canInviteOutsideCollaboratorsToRepositories.Description: canInviteOutsideCollaboratorsToRepositories will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.visibility.Description: visibility will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.canCreateRepositories.Description: canCreateRepositories will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberRepositoryCreationPermissionAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.permissionWas.Description: permissionWas will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.permission.Description: permission will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.permissionWas.Description: permissionWas will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.permission.Description: permission will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUpdateDefaultRepositoryPermissionAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.blockedUserUrl.Description: blockedUserUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.blockedUserResourcePath.Description: blockedUserResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.blockedUserName.Description: blockedUserName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.blockedUser.Description: blockedUser will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgUnblockUserAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberMembershipOrganizationAuditEntryData.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredRepositoryWatchesCount.Description: restoredRepositoryWatchesCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredRepositoryStarsCount.Description: restoredRepositoryStarsCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredRepositoriesCount.Description: restoredRepositoriesCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredMembershipsCount.Description: restoredMembershipsCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredMemberships.Description: restoredMemberships will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredIssueAssignmentsCount.Description: restoredIssueAssignmentsCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.restoredCustomEmailRoutingsCount.Description: restoredCustomEmailRoutingsCount will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRestoreMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.reason.Description: reason will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.membershipTypes.Description: membershipTypes will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveOutsideCollaboratorAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.reason.Description: reason will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.membershipTypes.Description: membershipTypes will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.reason.Description: reason will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgRemoveBillingManagerAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessUnblockedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessRequestedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessDeniedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessBlockedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgOauthAppAccessApprovedAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteToBusinessAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.organizationInvitation.Description: organizationInvitation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.email.Description: email will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgInviteMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableTwoFactorRequirementAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.singleSignOnUrl.Description: singleSignOnUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.signatureMethodUrl.Description: signatureMethodUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.issuerUrl.Description: issuerUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.digestMethodUrl.Description: digestMethodUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableSamlAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgEnableOauthAppRestrictionsAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableTwoFactorRequirementAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.singleSignOnUrl.Description: singleSignOnUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.signatureMethodUrl.Description: signatureMethodUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.issuerUrl.Description: issuerUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.digestMethodUrl.Description: digestMethodUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableSamlAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgDisableOauthAppRestrictionsAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.billingPlan.Description: billingPlan will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgCreateAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigEnableCollaboratorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgConfigDisableCollaboratorsOnlyAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.blockedUserUrl.Description: blockedUserUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.blockedUserResourcePath.Description: blockedUserResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.blockedUserName.Description: blockedUserName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.blockedUser.Description: blockedUser will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgBlockUserAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.permission.Description: permission will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddMemberAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.invitationEmail.Description: invitationEmail will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OrgAddBillingManagerAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.state.Description: state will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.rateLimit.Description: rateLimit will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.callbackUrl.Description: callbackUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.applicationUrl.Description: applicationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to OauthApplicationCreateAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposEnableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposDisableAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.organizationUrl.Description: organizationUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.organizationResourcePath.Description: organizationResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.organizationName.Description: organizationName will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.organization.Description: organization will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to MembersCanDeleteReposClearAuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.userUrl.Description: userUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.userResourcePath.Description: userResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.userLogin.Description: userLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.user.Description: user will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.operationType.Description: operationType will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.createdAt.Description: createdAt will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actorUrl.Description: actorUrl will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actorResourcePath.Description: actorResourcePath will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actorLogin.Description: actorLogin will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actorLocation.Description: actorLocation will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actorIp.Description: actorIp will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.actor.Description: actor will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Breaking A change will be made to AuditEntry.action.Description: action will be removed.Reason:  The GraphQL audit-log is deprecated. Please use the REST API instead.Changes scheduled for 2025-10-01Breaking A change will be made to SecurityAdvisory.cvss.Description: cvss will be removed. New cvss_severities field will now contain both cvss_v3 and cvss_v4 properties.Reason:  cvss will be removed.Changes scheduled for 2025-09-04Breaking A change will be made to SearchType.ISSUE_ADVANCED.Description: ISSUE_ADVANCED will be removed.Reason:  Search for issues and pull requests will be overridden by advanced search on September 4, 2025. You can read more about this change on https://github.blog/changelog/2025-03-06-github-issues-projects-api-support-for-issues-advanced-search-and-more/.Changes scheduled for 2025-04-01Breaking A change will be made to User.viewerCanCreateProjects.Description: viewerCanCreateProjects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to User.projects.Description: projects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to User.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to SearchShortcutQueryProjectTerm.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Repository.viewerCanCreateProjects.Description: viewerCanCreateProjects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Repository.projects.Description: projects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Repository.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to RemovedFromProjectEvent.projectColumnName.Description: projectColumnName will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to RemovedFromProjectEvent.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to RemovedFromProjectEvent.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to PullRequest.projectCards.Description: projectCards will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectV2Workflow.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to ProjectV2View.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to ProjectV2StatusUpdate.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to ProjectV2Item.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to ProjectV2.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to ProjectProgress.todoPercentage.Description: todoPercentage will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.todoCount.Description: todoCount will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.inProgressPercentage.Description: inProgressPercentage will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.inProgressCount.Description: inProgressCount will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.enabled.Description: enabled will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.donePercentage.Description: donePercentage will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectProgress.doneCount.Description: doneCount will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.viewerCanCreateProjects.Description: viewerCanCreateProjects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.projectsUrl.Description: projectsUrl will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.projectsResourcePath.Description: projectsResourcePath will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.projects.Description: projects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectOwner.id.Description: id will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.url.Description: url will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.updatedAt.Description: updatedAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.resourcePath.Description: resourcePath will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.purpose.Description: purpose will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.name.Description: name will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.id.Description: id will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.createdAt.Description: createdAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectColumn.cards.Description: cards will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCardArchivedState.NOT_ARCHIVED.Description: NOT_ARCHIVED will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCardArchivedState.ARCHIVED.Description: ARCHIVED will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.url.Description: url will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.updatedAt.Description: updatedAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.state.Description: state will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.resourcePath.Description: resourcePath will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.note.Description: note will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.isArchived.Description: isArchived will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.id.Description: id will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.creator.Description: creator will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.createdAt.Description: createdAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.content.Description: content will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ProjectCard.column.Description: column will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.url.Description: url will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.updatedAt.Description: updatedAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.state.Description: state will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.resourcePath.Description: resourcePath will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.progress.Description: progress will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.pendingCards.Description: pendingCards will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.owner.Description: owner will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.number.Description: number will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.name.Description: name will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.id.Description: id will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.creator.Description: creator will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.createdAt.Description: createdAt will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.columns.Description: columns will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.bodyHTML.Description: bodyHtml will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Project.body.Description: body will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Organization.viewerCanCreateProjects.Description: viewerCanCreateProjects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Organization.projects.Description: projects will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Organization.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.updateProjectColumn.Description: updateProjectColumn will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.updateProjectCard.Description: updateProjectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.updateProject.Description: updateProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.unlinkRepositoryFromProject.Description: unlinkRepositoryFromProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.moveProjectColumn.Description: moveProjectColumn will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.moveProjectCard.Description: moveProjectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.linkRepositoryToProject.Description: linkRepositoryToProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.importProject.Description: importProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.deleteProjectColumn.Description: deleteProjectColumn will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.deleteProjectCard.Description: deleteProjectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.deleteProject.Description: deleteProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.createProject.Description: createProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.convertProjectCardNoteToIssue.Description: convertProjectCardNoteToIssue will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.cloneProject.Description: cloneProject will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.addProjectColumn.Description: addProjectColumn will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to Mutation.addProjectCard.Description: addProjectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to MovedColumnsInProjectEvent.projectColumnName.Description: projectColumnName will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to MovedColumnsInProjectEvent.projectCard.Description: projectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to MovedColumnsInProjectEvent.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to MovedColumnsInProjectEvent.previousProjectColumnName.Description: previousProjectColumnName will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to MovedColumnsInProjectEvent.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to IssueType.isPrivate.Description: isPrivate will be removed.Reason:  Private issue types are being deprecated and can no longer be created.Breaking A change will be made to Issue.projectCards.Description: projectCards will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to EnterpriseOwnerInfo.outsideCollaborators.hasTwoFactorEnabled.Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.Reason:  has_two_factor_enabled will be removed.Breaking A change will be made to EnterpriseOwnerInfo.admins.hasTwoFactorEnabled.Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.Reason:  has_two_factor_enabled will be removed.Breaking A change will be made to Enterprise.members.hasTwoFactorEnabled.Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.Reason:  has_two_factor_enabled will be removed.Breaking A change will be made to ConvertedNoteToIssueEvent.projectCard.Description: projectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to ConvertedNoteToIssueEvent.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to AddedToProjectEvent.projectColumnName.Description: projectColumnName will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to AddedToProjectEvent.projectCard.Description: projectCard will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to AddedToProjectEvent.project.Description: project will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Breaking A change will be made to AddedToProjectEvent.databaseId.Description: databaseId will be removed.Reason:  Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/.Changes scheduled for 2025-01-01Breaking A change will be made to AddMobileDevicePublicKeyPayload.expiresAt.Description: expiresAt will be removed. Do not rely on this field, it is currently set to a date far in the future if a device key is expirationlessReason:  We are deprecating expirations for mobile device keys used in mobile 2FAChanges scheduled for 2024-10-01Breaking A change will be made to Workflow.hasWorkflowDispatchTrigger.Description: hasWorkflowDispatchTrigger will be removed. Use has_workflow_dispatch_trigger_for_branch(branch_ref) instead.Reason:  has_workflow_dispatch_trigger is being removed because it can be misleading and only checks a repository's default branchChanges scheduled for 2024-07-01Breaking A change will be made to TeamDiscussionComment.url.Description: url will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussionComment.resourcePath.Description: resourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussionComment.number.Description: number will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussionComment.discussion.Description: discussion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussionComment.bodyVersion.Description: bodyVersion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussionComment.authorAssociation.Description: authorAssociation will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.viewerCanPin.Description: viewerCanPin will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.url.Description: url will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.title.Description: title will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.team.Description: team will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.resourcePath.Description: resourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.number.Description: number will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.isPrivate.Description: isPrivate will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.isPinned.Description: isPinned will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.commentsUrl.Description: commentsUrl will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.commentsResourcePath.Description: commentsResourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.comments.Description: comments will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.bodyVersion.Description: bodyVersion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to TeamDiscussion.authorAssociation.Description: authorAssociation will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to PullRequestReviewComment.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to PullRequestReview.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to PullRequest.databaseId.Description: databaseId will be removed. Use fullDatabaseId instead.Reason:  databaseId will be removed because it does not support 64-bit signed integer identifiers.Breaking A change will be made to OrganizationInvitation.inviter.Description: inviter will be removed. inviter will be replaced by inviterActor.Reason:  inviter will be removed.Breaking A change will be made to CreateTeamDiscussionPayload.teamDiscussion.Description: teamDiscussion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionInput.title.Description: title will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionInput.teamId.Description: teamId will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionInput.private.Description: private will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionInput.body.Description: body will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionCommentPayload.teamDiscussionComment.Description: teamDiscussionComment will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionCommentInput.discussionId.Description: discussionId will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Breaking A change will be made to CreateTeamDiscussionCommentInput.body.Description: body will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement.Reason:  The Team Discussions feature is deprecated in favor of Organization Discussions.Changes scheduled for 2024-04-01Breaking A change will be made to TopicSuggestionDeclineReason.TOO_SPECIFIC.Description: TOO_SPECIFIC will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to TopicSuggestionDeclineReason.TOO_GENERAL.Description: TOO_GENERAL will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to TopicSuggestionDeclineReason.PERSONAL_PREFERENCE.Description: PERSONAL_PREFERENCE will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to TopicSuggestionDeclineReason.NOT_RELEVANT.Description: NOT_RELEVANT will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to DeclineTopicSuggestionPayload.topic.Description: topic will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to DeclineTopicSuggestionInput.repositoryId.Description: repositoryId will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to DeclineTopicSuggestionInput.reason.Description: reason will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to DeclineTopicSuggestionInput.name.Description: name will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to AcceptTopicSuggestionPayload.topic.Description: topic will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to AcceptTopicSuggestionInput.repositoryId.Description: repositoryId will be removed.Reason:  Suggested topics are no longer supportedBreaking A change will be made to AcceptTopicSuggestionInput.name.Description: name will be removed.Reason:  Suggested topics are no longer supportedChanges scheduled for 2023-10-01Breaking A change will be made to PullRequestReviewComment.position.Description: position will be removed. Use the line and startLine fields instead, which are file line numbers instead of diff line numbersReason:  We are phasing out diff-relative positioning for PR commentsBreaking A change will be made to PullRequestReviewComment.originalPosition.Description: originalPosition will be removed.Reason:  We are phasing out diff-relative positioning for PR commentsBreaking A change will be made to AddPullRequestReviewInput.comments.Description: comments will be removed. use the threads argument insteadReason:  We are deprecating comment fields that use diff-relative positioningBreaking A change will be made to AddPullRequestReviewCommentInput.pullRequestReviewId.Description: pullRequestReviewId will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.pullRequestId.Description: pullRequestId will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.position.Description: position will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.path.Description: path will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.inReplyTo.Description: inReplyTo will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.commitOID.Description: commitOID will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationBreaking A change will be made to AddPullRequestReviewCommentInput.body.Description: body will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply insteadReason:  We are deprecating the addPullRequestReviewComment mutationChanges scheduled for 2023-07-01Breaking A change will be made to ProjectV2ItemFieldGroup.field.Description: field will be removed. Check out the ProjectV2ItemFieldGroup#groupByField API as an example for the more capable alternative.Reason:  The ProjectV2ItemFieldGroup#field API is deprecated in favour of the more capable ProjectV2ItemFieldGroup#groupByField API.Breaking A change will be made to MergeQueueEntry.isSolo.Description: isSolo will be removed. Use solo instead.Reason:  isSolo will be removed.Breaking A change will be made to MergeQueueEntry.headOid.Description: headOid will be removed. Use headCommit instead.Reason:  headOid will be removed.Breaking A change will be made to MergeQueueEntry.hasJumpedQueue.Description: hasJumpedQueue will be removed. Use jump instead.Reason:  hasJumpedQueue will be removed.Breaking A change will be made to MergeQueueEntry.checkStatus.Description: checkStatus will be removed. Use state instead.Reason:  checkStatus will be removed.Breaking A change will be made to MergeQueueEntry.blockedByMergeConflicts.Description: blockedByMergeConflicts will be removed. Use state instead.Reason:  blockedByMergeConflicts will be removed.Breaking A change will be made to MergeQueueEntry.baseOid.Description: baseOid will be removed. Use baseCommit instead.Reason:  baseOid will be removed.Breaking A change will be made to MergeQueue.pendingRemovalEntries.Description: pendingRemovalEntries will be removed.Reason:  pendingRemovalEntries will be removed.Breaking A change will be made to MergeQueue.mergingEntries.Description: mergingEntries will be removed.Reason:  mergingEntries will be removed.Breaking A change will be made to MergeQueue.mergeMethod.Description: mergeMethod will be removed. Use configuration.merge_method instead.Reason:  mergeMethod will be removed.Breaking A change will be made to MergeQueue.headOid.Description: headOid will be removed. Use entry.headOid instead.Reason:  headOid will be removed.Breaking A change will be made to Commit.pushedDate.Description: pushedDate will be removed.Reason:  pushedDate is no longer supported.Changes scheduled for 2023-04-01Breaking A change will be made to Repository.squashPrTitleUsedAsDefault.Description: squashPrTitleUsedAsDefault will be removed. Use Repository.squashMergeCommitTitle instead.Reason:  squashPrTitleUsedAsDefault will be removed.Breaking A change will be made to ProjectV2View.verticalGroupBy.Description: verticalGroupBy will be removed. Check out the ProjectV2View#vertical_group_by_fields API as an example for the more capable alternative.Reason:  The ProjectV2View#vertical_group_by API is deprecated in favour of the more capable ProjectV2View#vertical_group_by_fields API.Breaking A change will be made to ProjectV2View.sortBy.Description: sortBy will be removed. Check out the ProjectV2View#sort_by_fields API as an example for the more capable alternative.Reason:  The ProjectV2View#sort_by API is deprecated in favour of the more capable ProjectV2View#sort_by_fields API.Breaking A change will be made to ProjectV2View.groupBy.Description: groupBy will be removed. Check out the ProjectV2View#group_by_fields API as an example for the more capable alternative.Reason:  The ProjectV2View#order_by API is deprecated in favour of the more capable ProjectV2View#group_by_field API.Changes scheduled for 2023-02-10Breaking A change will be made to PackageType.MAVEN.Description: MAVEN will be removed.Reason:  MAVEN will be removed from this enum as this type will be migrated to only be used by the Packages REST API.Changes scheduled for 2023-01-01Breaking A change will be made to ProjectV2View.visibleFields.Description: visibleFields will be removed. Check out the ProjectV2View#fields API as an example for the more capable alternative.Reason:  The ProjectV2View#visibleFields API is deprecated in favour of the more capable ProjectV2View#fields API.Breaking A change will be made to Commit.changedFiles.Description: changedFiles will be removed. Use changedFilesIfAvailable instead.Reason:  changedFiles will be removed.Changes scheduled for 2022-12-28Breaking A change will be made to PackageType.RUBYGEMS.Description: RUBYGEMS will be removed.Reason:  RUBYGEMS will be removed from this enum as this type will be migrated to only be used by the Packages REST API.Changes scheduled for 2022-11-21Breaking A change will be made to PackageType.NUGET.Description: NUGET will be removed.Reason:  NUGET will be removed from this enum as this type will be migrated to only be used by the Packages REST API.Breaking A change will be made to PackageType.NPM.Description: NPM will be removed.Reason:  NPM will be removed from this enum as this type will be migrated to only be used by the Packages REST API.Changes scheduled for 2022-10-01Breaking A change will be made to RemovePullRequestFromMergeQueueInput.branch.Description: branch will be removed.Reason:  PRs are removed from the merge queue for the base branch, the branch argument is now a no-opBreaking A change will be made to DependencyGraphDependency.packageLabel.Description: packageLabel will be removed. Use normalized packageName field instead.Reason:  packageLabel will be removed.Changes scheduled for 2022-07-01Breaking A change will be made to Query.sponsorables.dependencyEcosystem.Description: dependencyEcosystem will be removed. Use the ecosystem argument instead.Reason:  The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem.Breaking A change will be made to AddPullRequestToMergeQueueInput.branch.Description: branch will be removed.Reason:  PRs are added to the merge queue for the base branch, the branch argument is now a no-opChanges scheduled for 2021-10-01Breaking A change will be made to ReactionGroup.users.Description: users will be removed. Use the reactors field instead.Reason:  Reactors can now be mannequins, bots, and organizations.Changes scheduled for 2021-06-21Breaking A change will be made to PackageType.DOCKER.Description: DOCKER will be removed.Reason:  DOCKER will be removed from this enum as this type will be migrated to only be used by the Packages REST API.Changes scheduled for 2021-01-01Breaking A change will be made to MergeStateStatus.DRAFT.Description: DRAFT will be removed. Use PullRequest.isDraft instead.Reason:  DRAFT state will be removed from this enum and isDraft should be used insteadChanges scheduled for 2020-10-01Breaking A change will be made to Sponsorship.sponsor.Description: sponsor will be removed. Use Sponsorship.sponsorEntity instead.Reason:  Sponsorship.sponsor will be removed.Breaking A change will be made to PullRequest.timeline.Description: timeline will be removed. Use PullRequest.timelineItems instead.Reason:  timeline will be removedBreaking A change will be made to Issue.timeline.Description: timeline will be removed. Use Issue.timelineItems instead.Reason:  timeline will be removedChanges scheduled for 2020-04-01Breaking A change will be made to Sponsorship.maintainer.Description: maintainer will be removed. Use Sponsorship.sponsorable instead.Reason:  Sponsorship.maintainer will be removed.Changes scheduled for 2020-01-01Breaking A change will be made to UnassignedEvent.user.Description: user will be removed. Use the assignee field instead.Reason:  Assignees can now be mannequins.Breaking A change will be made to AssignedEvent.user.Description: user will be removed. Use the assignee field instead.Reason:  Assignees can now be mannequins.Changes scheduled for 2019-04-01Breaking A change will be made to LegacyMigration.uploadUrlTemplate.Description: uploadUrlTemplate will be removed. Use uploadUrl instead.Reason:  uploadUrlTemplate is being removed because it is not a standard URL and adds an extra user step.\n\n\n\nGraphQL API/Overview/ChangelogChangelogThe GraphQL schema changelog is a list of recent and upcoming changes to our GraphQL API schema. It includes backwards-compatible changes and upcoming breaking changes.In this articleSchema changes for 2025-05-06Schema changes for 2025-05-01Schema changes for 2025-04-30Schema changes for 2025-04-29Schema changes for 2025-04-15Schema changes for 2025-04-15Schema changes for 2025-04-14Schema changes for 2025-03-27Schema changes for 2025-02-26Schema changes for 2025-02-14Schema changes for 2025-02-06Schema changes for 2025-02-01Schema changes for 2025-01-31Schema changes for 2025-01-16Schema changes for 2025-01-14Schema changes for 2025-01-13Schema changes for 2025-01-10Schema changes for 2024-12-04Schema changes for 2024-12-02Schema changes for 2024-11-07Schema changes for 2024-11-01Schema changes for 2024-10-18Schema changes for 2024-10-11Schema changes for 2024-10-09Schema changes for 2024-10-08Schema changes for 2024-08-29Schema changes for 2024-08-10Schema changes for 2024-07-25Schema changes for 2024-07-24Schema changes for 2024-07-16Schema changes for 2024-07-08Schema changes for 2024-06-27Schema changes for 2024-06-25Schema changes for 2024-06-21Schema changes for 2024-06-14Schema changes for 2024-06-13Schema changes for 2024-05-24Schema changes for 2024-05-20Schema changes for 2024-05-17Schema changes for 2024-05-15Schema changes for 2024-05-02Schema changes for 2024-04-27Schema changes for 2024-04-26Schema changes for 2024-04-16Schema changes for 2024-04-11Schema changes for 2024-04-09Schema changes for 2024-03-12Schema changes for 2024-03-09Schema changes for 2024-03-08Schema changes for 2024-03-07Schema changes for 2024-03-02Schema changes for 2024-02-27Schema changes for 2024-02-25Schema changes for 2024-02-15Schema changes for 2024-02-09Schema changes for 2024-02-07Schema changes for 2024-02-01Schema changes for 2024-01-31Schema changes for 2024-01-27Schema changes for 2024-01-25Schema changes for 2024-01-23Schema changes for 2024-01-10Schema changes for 2024-01-09Schema changes for 2024-01-01Schema changes for 2023-11-30Schema changes for 2023-11-22Schema changes for 2023-11-18Schema changes for 2023-11-17Schema changes for 2023-11-14Schema changes for 2023-11-04Schema changes for 2023-11-01Schema changes for 2023-10-23Schema changes for 2023-10-17Schema changes for 2023-10-12Schema changes for 2023-10-11Schema changes for 2023-10-07Schema changes for 2023-09-27Schema changes for 2023-09-22Schema changes for 2023-09-13Schema changes for 2023-09-12Schema changes for 2023-09-12Schema changes for 2023-09-08Schema changes for 2023-08-14Schema changes for 2023-07-31Schema changes for 2023-07-21Schema changes for 2023-07-19Schema changes for 2023-07-13Schema changes for 2023-07-12Schema changes for 2023-07-11Schema changes for 2023-07-10Schema changes for 2023-06-20Schema changes for 2023-06-16Schema changes for 2023-06-13Schema changes for 2023-06-09Schema changes for 2023-06-07Schema changes for 2023-06-06Schema changes for 2023-06-01Schema changes for 2023-05-31Schema changes for 2023-04-21Schema changes for 2023-04-20Schema changes for 2023-04-19Schema changes for 2023-04-18Schema changes for 2023-04-14Schema changes for 2023-04-13Schema changes for 2023-04-11Schema changes for 2023-04-08Schema changes for 2023-04-07Schema changes for 2023-04-04Schema changes for 2023-04-03Schema changes for 2023-04-01Schema changes for 2023-03-29Schema changes for 2023-03-28Schema changes for 2023-03-24Schema changes for 2023-03-23Schema changes for 2023-03-16Schema changes for 2023-03-11Schema changes for 2023-03-07Schema changes for 2023-03-03Schema changes for 2023-03-01Schema changes for 2023-02-24Schema changes for 2023-02-22Schema changes for 2023-02-16Schema changes for 2023-02-15Schema changes for 2023-02-11Schema changes for 2023-02-09Schema changes for 2023-02-08Schema changes for 2023-02-07Schema changes for 2023-02-05Schema changes for 2023-02-03Schema changes for 2023-02-01Schema changes for 2023-01-31Schema changes for 2023-01-28Schema changes for 2023-01-27Schema changes for 2023-01-19Schema changes for 2023-01-18Schema changes for 2023-01-15Schema changes for 2023-01-10Schema changes for 2022-12-09Schema changes for 2022-12-07Schema changes for 2022-12-02Schema changes for 2022-12-01Schema changes for 2022-11-29Schema changes for 2022-11-24Schema changes for 2022-11-18Schema changes for 2022-11-17Schema changes for 2022-11-16Schema changes for 2022-11-15Schema changes for 2022-11-12Schema changes for 2022-11-11Schema changes for 2022-11-10Schema changes for 2022-11-05Schema changes for 2022-11-02Schema changes for 2022-10-24Schema changes for 2022-10-21Schema changes for 2022-10-19Schema changes for 2022-10-18Schema changes for 2022-10-07Schema changes for 2022-10-03Schema changes for 2022-09-30Schema changes for 2022-09-28Schema changes for 2022-09-27Schema changes for 2022-09-22Schema changes for 2022-09-16Schema changes for 2022-09-15Schema changes for 2022-09-14Schema changes for 2022-09-08Schema changes for 2022-09-07Schema changes for 2022-09-01Schema changes for 2022-08-26Schema changes for 2022-08-24Schema changes for 2022-08-22Schema changes for 2022-08-19Schema changes for 2022-08-16Schema changes for 2022-08-11Schema changes for 2022-08-06Schema changes for 2022-08-04Schema changes for 2022-08-03Schema changes for 2022-08-02Schema changes for 2022-07-28Schema changes for 2022-07-23Schema changes for 2022-07-22Schema changes for 2022-07-19Schema changes for 2022-07-14Schema changes for 2022-07-11Schema changes for 2022-06-29Schema changes for 2022-06-24Schema changes for 2022-06-23Schema changes for 2022-06-13Schema changes for 2022-06-10Schema changes for 2022-06-06Schema changes for 2022-05-31Schema changes for 2022-05-29Schema changes for 2022-05-10Schema changes for 2022-04-28Schema changes for 2022-04-21Schema changes for 2022-04-14Schema changes for 2022-04-03Schema changes for 2022-03-30Schema changes for 2022-02-28Schema changes for 2022-02-16Schema changes for 2022-02-07Schema changes for 2022-02-03Schema changes for 2022-01-16Schema changes for 2022-01-04Schema changes for 2021-12-15Schema changes for 2021-12-11Schema changes for 2021-12-09Schema changes for 2021-12-03Schema changes for 2021-11-18Schema changes for 2021-11-16Schema changes for 2021-11-10Schema changes for 2021-10-29Schema changes for 2021-10-22Schema changes for 2021-10-04Schema changes for 2021-09-23Schema changes for 2021-09-15Schema changes for 2021-09-14Schema changes for 2021-09-09Schema changes for 2021-09-03Schema changes for 2021-08-27Schema changes for 2021-08-25Schema changes for 2021-08-24Schema changes for 2021-08-19Schema changes for 2021-08-18Schema changes for 2021-08-13Schema changes for 2021-08-12Schema changes for 2021-08-04Schema changes for 2021-08-03Schema changes for 2021-08-01Schema changes for 2021-07-27Schema changes for 2021-07-13Schema changes for 2021-06-22Schema changes for 2021-06-20Schema changes for 2021-06-18Schema changes for 2021-06-07Schema changes for 2021-05-16Schema changes for 2021-05-12Schema changes for 2021-05-04Schema changes for 2021-04-20Schema changes for 2021-04-07Schema changes for 2021-03-27Schema changes for 2021-03-25Schema changes for 2021-03-21Schema changes for 2021-03-19Schema changes for 2021-03-18Schema changes for 2021-03-03Schema changes for 2021-03-02Schema changes for 2021-02-25Schema changes for 2021-02-16Schema changes for 2021-02-05Schema changes for 2021-02-01Schema changes for 2021-01-19Schema changes for 2021-01-12Schema changes for 2020-12-09Schema changes for 2020-11-13Schema changes for 2020-10-12Schema changes for 2020-09-30Schema changes for 2020-09-23Schema changes for 2020-06-26Schema changes for 2020-06-23Schema changes for 2020-06-18Schema changes for 2020-06-05Schema changes for 2020-06-01Schema changes for 2020-05-23Schema changes for 2020-05-21Schema changes for 2020-05-19Schema changes for 2020-05-13Schema changes for 2020-05-12Schema changes for 2020-05-11Schema changes for 2020-05-01Schema changes for 2020-04-23Schema changes for 2020-04-20Schema changes for 2020-04-15Schema changes for 2020-03-23Schema changes for 2020-03-10Schema changes for 2020-03-05Schema changes for 2020-02-19Schema changes for 2020-02-12Schema changes for 2020-02-05Schema changes for 2020-01-09Schema changes for 2020-01-06Schema changes for 2019-12-16Schema changes for 2019-12-11Schema changes for 2019-12-05Schema changes for 2019-11-25Schema changes for 2019-11-22Schema changes for 2019-11-19Schema changes for 2019-11-06Schema changes for 2019-10-31Schema changes for 2019-10-23Schema changes for 2019-10-09Schema changes for 2019-09-24Schema changes for 2019-09-20Schema changes for 2019-09-19Schema changes for 2019-09-17Schema changes for 2019-09-14Schema changes for 2019-09-12Schema changes for 2019-09-10Schema changes for 2019-09-08Schema changes for 2019-09-05Schema changes for 2019-08-29Schema changes for 2019-08-27Schema changes for 2019-08-23Schema changes for 2019-08-21Schema changes for 2019-08-15Schema changes for 2019-08-13Schema changes for 2019-08-09Schema changes for 2019-08-08Schema changes for 2019-07-31Schema changes for 2019-07-29Schema changes for 2019-07-26Schema changes for 2019-07-24Schema changes for 2019-07-23Schema changes for 2019-07-19Schema changes for 2019-07-17Schema changes for 2019-07-04Schema changes for 2019-06-28Schema changes for 2019-06-26Schema changes for 2019-06-25Schema changes for 2019-06-19Schema changes for 2019-06-14Schema changes for 2019-06-13Schema changes for 2019-06-12Schema changes for 2019-06-04Schema changes for 2019-05-31Schema changes for 2019-05-29Schema changes for 2019-05-23Schema changes for 2019-05-13Schema changes for 2019-05-09Schema changes for 2019-04-23Schema changes for 2019-04-10Schema changes for 2019-04-04Schema changes for 2019-03-30Schema changes for 2019-03-29Schema changes for 2019-03-23Schema changes for 2019-03-21Schema changes for 2019-03-19Schema changes for 2019-03-08Schema changes for 2019-03-06Schema changes for 2019-03-04Schema changes for 2019-03-02Schema changes for 2019-02-26Schema changes for 2019-02-23Schema changes for 2019-02-21Schema changes for 2019-02-20Schema changes for 2019-02-15Schema changes for 2019-02-13Schema changes for 2019-02-12Schema changes for 2019-02-09Schema changes for 2019-02-07Schema changes for 2019-02-06Schema changes for 2019-02-04Schema changes for 2019-01-31Schema changes for 2019-01-30Schema changes for 2019-01-19Schema changes for 2019-01-18Schema changes for 2019-01-16Schema changes for 2019-01-11Schema changes for 2019-01-08Schema changes for 2019-01-05Schema changes for 2019-01-03Schema changes for 2018-12-21Schema changes for 2018-12-20Schema changes for 2018-12-18Schema changes for 2018-12-14Schema changes for 2018-12-13Schema changes for 2018-12-11Schema changes for 2018-12-06Schema changes for 2018-12-03Schema changes for 2018-12-01Schema changes for 2018-11-16Schema changes for 2018-11-12Schema changes for 2018-11-07Schema changes for 2018-10-24Schema changes for 2018-10-19Schema changes for 2018-10-16Schema changes for 2018-10-12Schema changes for 2018-10-11Schema changes for 2018-10-08Schema changes for 2018-09-26Schema changes for 2018-09-25Schema changes for 2018-09-19Schema changes for 2018-09-14Schema changes for 2018-09-13Schema changes for 2018-09-12Schema changes for 2018-09-10Schema changes for 2018-09-06Schema changes for 2018-09-04Schema changes for 2018-08-31Schema changes for 2018-08-24Schema changes for 2018-08-13Schema changes for 2018-08-09Schema changes for 2018-08-07Schema changes for 2018-08-01Schema changes for 2018-07-26Schema changes for 2018-07-16Schema changes for 2018-07-13Schema changes for 2018-07-11Schema changes for 2018-07-06Schema changes for 2018-07-04Schema changes for 2018-07-03Schema changes for 2018-06-26Schema changes for 2018-06-22Schema changes for 2018-06-21Schema changes for 2018-06-14Schema changes for 2018-06-12Schema changes for 2018-06-11Schema changes for 2018-05-30Schema changes for 2018-05-25Schema changes for 2018-05-18Schema changes for 2018-05-17Schema changes for 2018-05-09Schema changes for 2018-05-08Schema changes for 2018-05-03Schema changes for 2018-04-28Schema changes for 2018-04-27Schema changes for 2018-04-24Schema changes for 2018-04-23Schema changes for 2018-04-19Schema changes for 2018-04-13Schema changes for 2018-04-12Schema changes for 2018-04-10Schema changes for 2018-04-03Schema changes for 2018-03-28Schema changes for 2018-03-22Schema changes for 2018-03-16Schema changes for 2018-03-14Schema changes for 2018-03-13Schema changes for 2018-03-10Schema changes for 2018-03-09Schema changes for 2018-03-07Schema changes for 2018-02-14Schema changes for 2018-01-19Schema changes for 2018-01-10Schema changes for 2017-12-15Schema changes for 2017-12-12Schema changes for 2017-12-09Schema changes for 2017-12-05Schema changes for 2017-12-02Schema changes for 2017-11-28Schema changes for 2017-11-24Schema changes for 2017-11-18Schema changes for 2017-11-17Schema changes for 2017-11-16Schema changes for 2017-11-15Schema changes for 2017-11-14Schema changes for 2017-11-10Schema changes for 2017-11-08Schema changes for 2017-11-03Schema changes for 2017-11-02Schema changes for 2017-10-27Schema changes for 2017-10-25Schema changes for 2017-10-24Schema changes for 2017-10-20Schema changes for 2017-10-14Schema changes for 2017-10-04Schema changes for 2017-09-28Schema changes for 2017-09-22Schema changes for 2017-09-18Schema changes for 2017-09-15Schema changes for 2017-09-14Schema changes for 2017-09-13Schema changes for 2017-09-11Schema changes for 2017-09-08Schema changes for 2017-09-07Schema changes for 2017-09-06Schema changes for 2017-09-05Schema changes for 2017-09-04Schema changes for 2017-09-01Schema changes for 2017-08-31Schema changes for 2017-08-30Schema changes for 2017-08-21Schema changes for 2017-08-16Schema changes for 2017-08-15Schema changes for 2017-08-14Schema changes for 2017-08-11Schema changes for 2017-08-10Schema changes for 2017-08-09Schema changes for 2017-08-08Schema changes for 2017-08-07Schema changes for 2017-08-03Schema changes for 2017-08-02Schema changes for 2017-08-01Schema changes for 2017-07-28Schema changes for 2017-07-27Schema changes for 2017-07-26Schema changes for 2017-07-25Schema changes for 2017-07-24Schema changes for 2017-07-21Schema changes for 2017-07-20Schema changes for 2017-07-19Schema changes for 2017-07-18Schema changes for 2017-07-17Schema changes for 2017-07-13Schema changes for 2017-07-11Schema changes for 2017-07-10Schema changes for 2017-07-07Schema changes for 2017-07-06Schema changes for 2017-07-05Schema changes for 2017-07-04Schema changes for 2017-07-01Schema changes for 2017-06-30Schema changes for 2017-06-29Schema changes for 2017-06-28Schema changes for 2017-06-27Schema changes for 2017-06-26Schema changes for 2017-06-25Schema changes for 2017-06-23Schema changes for 2017-06-22Schema changes for 2017-06-21Schema changes for 2017-06-20Schema changes for 2017-06-16Schema changes for 2017-06-15Schema changes for 2017-06-14Schema changes for 2017-06-12Schema changes for 2017-06-09Schema changes for 2017-06-06Schema changes for 2017-06-05Schema changes for 2017-06-02Schema changes for 2017-06-01Schema changes for 2017-05-31Schema changes for 2017-05-30Schema changes for 2017-05-26Schema changes for 2017-05-25Schema changes for 2017-05-24Schema changes for 2017-05-23Schema changes for 2017-05-22Breaking changes include changes that will break existing queries or could affect the runtime behavior of clients. For a list of breaking changes and when they will occur, see our breaking changes log.Schema changes for 2025-05-06The GraphQL schema includes these changes:Type BotOrUser was addedSchema changes for 2025-05-01The GraphQL schema includes these changes:Input field AddPullRequestReviewThreadInput.path changed type from String! to StringSchema changes for 2025-04-30The GraphQL schema includes these changes:Field closedIssueCount was added to object type MilestoneField openIssueCount was added to object type MilestoneSchema changes for 2025-04-29The GraphQL schema includes these changes:Input field DraftPullRequestReviewThread.line changed type from Int! to IntInput field DraftPullRequestReviewThread.path changed type from String! to StringSchema changes for 2025-04-15The GraphQL schema includes these changes:Type RepositorySuggestedActorFilter was addedArgument 'capabilities: [RepositorySuggestedActorFilter!]!added to fieldRepository.suggestedActors'Schema changes for 2025-04-15The GraphQL schema includes these changes:Type ActorConnection was addedType ActorEdge was addedType AssigneeConnection was addedType AssigneeEdge was addedType ReplaceActorsForAssignableInput was addedType ReplaceActorsForAssignablePayload was addedField assignedActors was added to interface AssignableField suggestedActors was added to interface AssignableField assignedActors was added to object type IssueField suggestedActors was added to object type IssueField replaceActorsForAssignable was added to object type MutationField assignedActors was added to object type PullRequestField suggestedActors was added to object type PullRequestField suggestedActors was added to object type RepositorySchema changes for 2025-04-14The GraphQL schema includes these changes:Type AnnouncementBannerI was removedInput field isPrivate was removed from input object type CreateIssueTypeInputEnterprise object type no longer implements AnnouncementBannerI interfaceField announcement (deprecated) was removed from object type EnterpriseField announcementCreatedAt (deprecated) was removed from object type EnterpriseField announcementExpiresAt (deprecated) was removed from object type EnterpriseField announcementUserDismissible (deprecated) was removed from object type EnterpriseInput field type of type String was added to input object type IssueFiltersOrganization object type no longer implements AnnouncementBannerI interfaceField announcement (deprecated) was removed from object type OrganizationField announcementCreatedAt (deprecated) was removed from object type OrganizationField announcementExpiresAt (deprecated) was removed from object type OrganizationField announcementUserDismissible (deprecated) was removed from object type OrganizationInput field isPrivate was removed from input object type UpdateIssueTypeInputThe following changes will be made to the schema:On member AuditEntry.action:action will be removed. Effective 2026-04-01.On member AuditEntry.actor:actor will be removed. Effective 2026-04-01.On member AuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member AuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member AuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member AuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member AuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member AuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member AuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member AuditEntry.user:user will be removed. Effective 2026-04-01.On member AuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member AuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member AuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.action:action will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.user:user will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposClearAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.action:action will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.user:user will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposDisableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.action:action will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.user:user will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member MembersCanDeleteReposEnableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.action:action will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.applicationUrl:applicationUrl will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.callbackUrl:callbackUrl will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.rateLimit:rateLimit will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.state:state will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.user:user will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OauthApplicationCreateAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.invitationEmail:invitationEmail will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgAddBillingManagerAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.permission:permission will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgAddMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.blockedUser:blockedUser will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.blockedUserName:blockedUserName will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.blockedUserResourcePath:blockedUserResourcePath will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.blockedUserUrl:blockedUserUrl will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgBlockUserAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgConfigDisableCollaboratorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgConfigEnableCollaboratorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.billingPlan:billingPlan will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgCreateAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgDisableOauthAppRestrictionsAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.digestMethodUrl:digestMethodUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.issuerUrl:issuerUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.signatureMethodUrl:signatureMethodUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.singleSignOnUrl:singleSignOnUrl will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgDisableSamlAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgDisableTwoFactorRequirementAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgEnableOauthAppRestrictionsAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.digestMethodUrl:digestMethodUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.issuerUrl:issuerUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.signatureMethodUrl:signatureMethodUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.singleSignOnUrl:singleSignOnUrl will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgEnableSamlAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgEnableTwoFactorRequirementAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.email:email will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.organizationInvitation:organizationInvitation will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgInviteMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgInviteToBusinessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessApprovedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessBlockedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessDeniedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessRequestedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgOauthAppAccessUnblockedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.reason:reason will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveBillingManagerAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.membershipTypes:membershipTypes will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.reason:reason will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.membershipTypes:membershipTypes will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.reason:reason will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgRemoveOutsideCollaboratorAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredCustomEmailRoutingsCount:restoredCustomEmailRoutingsCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredIssueAssignmentsCount:restoredIssueAssignmentsCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredMemberships:restoredMemberships will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredMembershipsCount:restoredMembershipsCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredRepositoriesCount:restoredRepositoriesCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredRepositoryStarsCount:restoredRepositoryStarsCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.restoredRepositoryWatchesCount:restoredRepositoryWatchesCount will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgRestoreMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgRestoreMemberMembershipOrganizationAuditEntryData.organization:organization will be removed. Effective 2026-04-01.On member OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgRestoreMemberMembershipOrganizationAuditEntryData.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.blockedUser:blockedUser will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.blockedUserName:blockedUserName will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.blockedUserResourcePath:blockedUserResourcePath will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.blockedUserUrl:blockedUserUrl will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgUnblockUserAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.permission:permission will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.permissionWas:permissionWas will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateDefaultRepositoryPermissionAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.permission:permission will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.permissionWas:permissionWas will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.canCreateRepositories:canCreateRepositories will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryCreationPermissionAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.action:action will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.canInviteOutsideCollaboratorsToRepositories:canInviteOutsideCollaboratorsToRepositories will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.user:user will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member Organization.auditLog:auditLog will be removed. Effective 2026-04-01.On member OrganizationAuditEntryData.organization:organization will be removed. Effective 2026-04-01.On member OrganizationAuditEntryData.organizationName:organizationName will be removed. Effective 2026-04-01.On member OrganizationAuditEntryData.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member OrganizationAuditEntryData.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.action:action will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.user:user will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingDisableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.action:action will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.user:user will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member PrivateRepositoryForkingEnableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoAccessAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoAddMemberAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoAddTopicAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoArchivedAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.isEnabled:isEnabled will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.mergeType:mergeType will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoChangeMergeSettingAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableAnonymousGitAccessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableCollaboratorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableContributorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigDisableSockpuppetDisallowedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableAnonymousGitAccessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableCollaboratorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableContributorsOnlyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigEnableSockpuppetDisallowedAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigLockAnonymousGitAccessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoConfigUnlockAnonymousGitAccessAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.forkParentName:forkParentName will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.forkSourceName:forkSourceName will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoCreateAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoDestroyAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepoRemoveMemberAuditEntry.visibility:visibility will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepoRemoveTopicAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeDisableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.action:action will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.user:user will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member RepositoryVisibilityChangeEnableAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.isLdapMapped:isLdapMapped will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member TeamAddMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.action:action will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.isLdapMapped:isLdapMapped will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.user:user will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member TeamAddRepositoryAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.action:action will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.isLdapMapped:isLdapMapped will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeam:parentTeam will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamName:parentTeamName will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamNameWas:parentTeamNameWas will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamResourcePath:parentTeamResourcePath will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamUrl:parentTeamUrl will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamWas:parentTeamWas will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamWasResourcePath:parentTeamWasResourcePath will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.parentTeamWasUrl:parentTeamWasUrl will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.user:user will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member TeamChangeParentTeamAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.action:action will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.isLdapMapped:isLdapMapped will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.user:user will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveMemberAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.action:action will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actor:actor will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actorIp:actorIp will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actorLocation:actorLocation will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actorLogin:actorLogin will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actorResourcePath:actorResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.actorUrl:actorUrl will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.createdAt:createdAt will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.isLdapMapped:isLdapMapped will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.operationType:operationType will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.organization:organization will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.organizationName:organizationName will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.organizationResourcePath:organizationResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.organizationUrl:organizationUrl will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.user:user will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.userLogin:userLogin will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.userResourcePath:userResourcePath will be removed. Effective 2026-04-01.On member TeamRemoveRepositoryAuditEntry.userUrl:userUrl will be removed. Effective 2026-04-01.Schema changes for 2025-03-27The GraphQL schema includes these changes:Type CreateIssueTypeInput was addedType CreateIssueTypePayload was addedType DeleteIssueTypeInput was addedType DeleteIssueTypePayload was addedType IssueType was addedType IssueTypeAddedEvent was addedType IssueTypeChangedEvent was addedType IssueTypeColor was addedType IssueTypeConnection was addedType IssueTypeEdge was addedType IssueTypeOrder was addedType IssueTypeOrderField was addedType IssueTypeRemovedEvent was addedType PullRequestAllowedMergeMethods was addedType RepositoryVulnerabilityAlertDependencyRelationship was addedType UpdateIssueIssueTypeInput was addedType UpdateIssueIssueTypePayload was addedType UpdateIssueTypeInput was addedType UpdateIssueTypePayload was addedInput field issueTypeId of type ID was added to input object type CreateIssueInputField packageUrl was added to object type DependencyGraphDependencyField issueType was added to object type IssueField type was added to object type IssueTemplateMember IssueTypeAddedEvent was added to Union type IssueTimelineItemsMember IssueTypeChangedEvent was added to Union type IssueTimelineItemsMember IssueTypeRemovedEvent was added to Union type IssueTimelineItemsEnum value 'ISSUE_TYPE_ADDED_EVENTwas added to enumIssueTimelineItemsItemType'Enum value 'ISSUE_TYPE_CHANGED_EVENTwas added to enumIssueTimelineItemsItemType'Enum value 'ISSUE_TYPE_REMOVED_EVENTwas added to enumIssueTimelineItemsItemType'Field descriptionHTML was added to object type MilestoneField createIssueType was added to object type MutationField deleteIssueType was added to object type MutationField updateIssueIssueType was added to object type MutationField updateIssueType was added to object type MutationField issueTypes was added to object type OrganizationEnum value 'ISSUE_TYPEwas added to enumProjectV2FieldType'Field automaticCopilotCodeReviewEnabled was added to object type PullRequestParametersField PullRequestParameters.allowedMergeMethods changed type from '[String!]to[PullRequestAllowedMergeMethods!]'Input field automaticCopilotCodeReviewEnabled of type Boolean was added to input object type PullRequestParametersInputInput field PullRequestParametersInput.allowedMergeMethods changed type from '[String!]to[PullRequestAllowedMergeMethods!]'Member IssueTypeAddedEvent was added to Union type PullRequestTimelineItemsMember IssueTypeChangedEvent was added to Union type PullRequestTimelineItemsMember IssueTypeRemovedEvent was added to Union type PullRequestTimelineItemsEnum value 'ISSUE_TYPE_ADDED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'ISSUE_TYPE_CHANGED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'ISSUE_TYPE_REMOVED_EVENTwas added to enumPullRequestTimelineItemsItemType'Field issueType was added to object type RepositoryField issueTypes was added to object type RepositoryField dependencyRelationship was added to object type RepositoryVulnerabilityAlertEnum value 'ISSUE_ADVANCEDwas added to enumSearchType'Input field issueTypeId of type ID was added to input object type UpdateIssueInputThe following changes will be made to the schema:On member AddedToProjectEvent.project:project will be removed. Effective 2025-04-01.On member ConvertedNoteToIssueEvent.project:project will be removed. Effective 2025-04-01.On member CreateIssueTypeInput.isPrivate:isPrivate will be removed. Effective 2025-04-01.On member Issue.projectCards:projectCards will be removed. Effective 2025-04-01.On member IssueType.isPrivate:isPrivate will be removed. Effective 2025-04-01.On member MovedColumnsInProjectEvent.project:project will be removed. Effective 2025-04-01.On member Organization.viewerCanCreateProjects:viewerCanCreateProjects will be removed. Effective 2025-04-01.On member ProjectCardArchivedState.ARCHIVED:ARCHIVED will be removed. Effective 2025-04-01.On member ProjectCardArchivedState.NOT_ARCHIVED:NOT_ARCHIVED will be removed. Effective 2025-04-01.On member ProjectOwner.id:id will be removed. Effective 2025-04-01.On member ProjectOwner.projectsResourcePath:projectsResourcePath will be removed. Effective 2025-04-01.On member ProjectOwner.projectsUrl:projectsUrl will be removed. Effective 2025-04-01.On member ProjectOwner.viewerCanCreateProjects:viewerCanCreateProjects will be removed. Effective 2025-04-01.On member PullRequest.projectCards:projectCards will be removed. Effective 2025-04-01.On member RemovedFromProjectEvent.project:project will be removed. Effective 2025-04-01.On member Repository.viewerCanCreateProjects:viewerCanCreateProjects will be removed. Effective 2025-04-01.On member UpdateIssueTypeInput.isPrivate:isPrivate will be removed. Effective 2025-04-01.On member User.viewerCanCreateProjects:viewerCanCreateProjects will be removed. Effective 2025-04-01.On member SearchType.ISSUE_ADVANCED:ISSUE_ADVANCED will be removed. Effective 2025-09-04.Schema changes for 2025-02-26The GraphQL schema includes these changes:Field repository was removed from object type UserNamespaceRepositorySchema changes for 2025-02-14The GraphQL schema includes these changes:Type 'ProjectV2Iteration' was addedType 'ProjectV2IterationFieldConfigurationInput' was addedInput field iterationConfiguration of type 'ProjectV2IterationFieldConfigurationInputwas added to input object typeCreateProjectV2FieldInput'Enum value ITERATION was added to enum 'ProjectV2CustomFieldType'Input field iterationConfiguration of type 'ProjectV2IterationFieldConfigurationInputwas added to input object typeUpdateProjectV2FieldInput'Schema changes for 2025-02-06The GraphQL schema includes these changes:Enum value UNAFFILIATED was added to enum EnterpriseAdministratorRoleSchema changes for 2025-02-01The GraphQL schema includes these changes:Enum value 'PARENT_ISSUEwas added to enumProjectV2FieldType'Enum value 'SUB_ISSUES_PROGRESSwas added to enumProjectV2FieldType'Schema changes for 2025-01-31The GraphQL schema includes these changes:The following changes will be made to the schema:On member AddedToProjectEvent.databaseId:databaseId will be removed. Effective 2025-04-01.On member AddedToProjectEvent.projectCard:projectCard will be removed. Effective 2025-04-01.On member AddedToProjectEvent.projectColumnName:projectColumnName will be removed. Effective 2025-04-01.On member ConvertedNoteToIssueEvent.projectCard:projectCard will be removed. Effective 2025-04-01.On member MovedColumnsInProjectEvent.databaseId:databaseId will be removed. Effective 2025-04-01.On member MovedColumnsInProjectEvent.previousProjectColumnName:previousProjectColumnName will be removed. Effective 2025-04-01.On member MovedColumnsInProjectEvent.projectCard:projectCard will be removed. Effective 2025-04-01.On member MovedColumnsInProjectEvent.projectColumnName:projectColumnName will be removed. Effective 2025-04-01.On member Mutation.addProjectCard:addProjectCard will be removed. Effective 2025-04-01.On member Mutation.addProjectColumn:addProjectColumn will be removed. Effective 2025-04-01.On member Mutation.cloneProject:cloneProject will be removed. Effective 2025-04-01.On member Mutation.convertProjectCardNoteToIssue:convertProjectCardNoteToIssue will be removed. Effective 2025-04-01.On member Mutation.createProject:createProject will be removed. Effective 2025-04-01.On member Mutation.deleteProject:deleteProject will be removed. Effective 2025-04-01.On member Mutation.deleteProjectCard:deleteProjectCard will be removed. Effective 2025-04-01.On member Mutation.deleteProjectColumn:deleteProjectColumn will be removed. Effective 2025-04-01.On member Mutation.importProject:importProject will be removed. Effective 2025-04-01.On member Mutation.linkRepositoryToProject:linkRepositoryToProject will be removed. Effective 2025-04-01.On member Mutation.moveProjectCard:moveProjectCard will be removed. Effective 2025-04-01.On member Mutation.moveProjectColumn:moveProjectColumn will be removed. Effective 2025-04-01.On member Mutation.unlinkRepositoryFromProject:unlinkRepositoryFromProject will be removed. Effective 2025-04-01.On member Mutation.updateProject:updateProject will be removed. Effective 2025-04-01.On member Mutation.updateProjectCard:updateProjectCard will be removed. Effective 2025-04-01.On member Mutation.updateProjectColumn:updateProjectColumn will be removed. Effective 2025-04-01.On member Organization.project:project will be removed. Effective 2025-04-01.On member Organization.projects:projects will be removed. Effective 2025-04-01.On member Project.body:body will be removed. Effective 2025-04-01.On member Project.bodyHTML:bodyHtml will be removed. Effective 2025-04-01.On member Project.columns:columns will be removed. Effective 2025-04-01.On member Project.createdAt:createdAt will be removed. Effective 2025-04-01.On member Project.creator:creator will be removed. Effective 2025-04-01.On member Project.databaseId:databaseId will be removed. Effective 2025-04-01.On member Project.id:id will be removed. Effective 2025-04-01.On member Project.name:name will be removed. Effective 2025-04-01.On member Project.number:number will be removed. Effective 2025-04-01.On member Project.owner:owner will be removed. Effective 2025-04-01.On member Project.pendingCards:pendingCards will be removed. Effective 2025-04-01.On member Project.progress:progress will be removed. Effective 2025-04-01.On member Project.resourcePath:resourcePath will be removed. Effective 2025-04-01.On member Project.state:state will be removed. Effective 2025-04-01.On member Project.updatedAt:updatedAt will be removed. Effective 2025-04-01.On member Project.url:url will be removed. Effective 2025-04-01.On member ProjectCard.column:column will be removed. Effective 2025-04-01.On member ProjectCard.content:content will be removed. Effective 2025-04-01.On member ProjectCard.createdAt:createdAt will be removed. Effective 2025-04-01.On member ProjectCard.creator:creator will be removed. Effective 2025-04-01.On member ProjectCard.databaseId:databaseId will be removed. Effective 2025-04-01.On member ProjectCard.id:id will be removed. Effective 2025-04-01.On member ProjectCard.isArchived:isArchived will be removed. Effective 2025-04-01.On member ProjectCard.note:note will be removed. Effective 2025-04-01.On member ProjectCard.project:project will be removed. Effective 2025-04-01.On member ProjectCard.resourcePath:resourcePath will be removed. Effective 2025-04-01.On member ProjectCard.state:state will be removed. Effective 2025-04-01.On member ProjectCard.updatedAt:updatedAt will be removed. Effective 2025-04-01.On member ProjectCard.url:url will be removed. Effective 2025-04-01.On member ProjectColumn.cards:cards will be removed. Effective 2025-04-01.On member ProjectColumn.createdAt:createdAt will be removed. Effective 2025-04-01.On member ProjectColumn.databaseId:databaseId will be removed. Effective 2025-04-01.On member ProjectColumn.id:id will be removed. Effective 2025-04-01.On member ProjectColumn.name:name will be removed. Effective 2025-04-01.On member ProjectColumn.project:project will be removed. Effective 2025-04-01.On member ProjectColumn.purpose:purpose will be removed. Effective 2025-04-01.On member ProjectColumn.resourcePath:resourcePath will be removed. Effective 2025-04-01.On member ProjectColumn.updatedAt:updatedAt will be removed. Effective 2025-04-01.On member ProjectColumn.url:url will be removed. Effective 2025-04-01.On member ProjectOwner.project:project will be removed. Effective 2025-04-01.On member ProjectOwner.projects:projects will be removed. Effective 2025-04-01.On member ProjectProgress.doneCount:doneCount will be removed. Effective 2025-04-01.On member ProjectProgress.donePercentage:donePercentage will be removed. Effective 2025-04-01.On member ProjectProgress.enabled:enabled will be removed. Effective 2025-04-01.On member ProjectProgress.inProgressCount:inProgressCount will be removed. Effective 2025-04-01.On member ProjectProgress.inProgressPercentage:inProgressPercentage will be removed. Effective 2025-04-01.On member ProjectProgress.todoCount:todoCount will be removed. Effective 2025-04-01.On member ProjectProgress.todoPercentage:todoPercentage will be removed. Effective 2025-04-01.On member RemovedFromProjectEvent.databaseId:databaseId will be removed. Effective 2025-04-01.On member RemovedFromProjectEvent.projectColumnName:projectColumnName will be removed. Effective 2025-04-01.On member Repository.project:project will be removed. Effective 2025-04-01.On member Repository.projects:projects will be removed. Effective 2025-04-01.On member SearchShortcutQueryProjectTerm.project:project will be removed. Effective 2025-04-01.On member User.project:project will be removed. Effective 2025-04-01.On member User.projects:projects will be removed. Effective 2025-04-01.Schema changes for 2025-01-16The GraphQL schema includes these changes:Field updatedAt was added to object type EnterpriseSchema changes for 2025-01-14The GraphQL schema includes these changes:Type CopilotLicenseType was removedType CopilotLimitedFeature was removedType CopilotLimitedUser was removedType CreateSavedNotificationThreadInput was removedType CreateSavedNotificationThreadPayload was removedType DeleteSavedNotificationThreadInput was removedType DeleteSavedNotificationThreadPayload was removedType DiscussionPubSubTopic was removedType IssuePubSubTopic was removedType MarkAllNotificationsInput was removedType MarkAllNotificationsPayload was removedType MarkNotificationAsDoneInput was removedType MarkNotificationAsDonePayload was removedType MarkNotificationAsReadInput was removedType MarkNotificationAsReadPayload was removedType MarkNotificationAsUndoneInput was removedType MarkNotificationAsUndonePayload was removedType MarkNotificationAsUnreadInput was removedType MarkNotificationAsUnreadPayload was removedType MarkNotificationSubjectAsReadInput was removedType MarkNotificationSubjectAsReadPayload was removedType MarkNotificationsAsDoneInput was removedType MarkNotificationsAsDonePayload was removedType MarkNotificationsAsReadInput was removedType MarkNotificationsAsReadPayload was removedType MarkNotificationsAsUndoneInput was removedType MarkNotificationsAsUndonePayload was removedType MarkNotificationsAsUnreadInput was removedType MarkNotificationsAsUnreadPayload was removedType NotificationReason was removedType NotificationStatus was removedType NotificationThread was removedType NotificationThreadConnection was removedType NotificationThreadEdge was removedType NotificationThreadFilters was removedType NotificationThreadSubscriptionState was removedType NotificationsList was removedType NotificationsSubject was removedType PullRequestPubSubTopic was removedType RepositoryDependabotAlertsThread was removedType UnsubscribeFromNotificationsInput was removedType UnsubscribeFromNotificationsPayload was removedType UserPubSubTopic was removedField updatesChannel was removed from object type CommitField comment was removed from object type DiscussionField updatesChannel was removed from object type DiscussionArgument renderMobileTasklistBlocks: Boolean was removed from field Discussion.bodyHTMLField updatesChannel was removed from object type IssueArgument renderMobileTasklistBlocks: Boolean was removed from field Issue.bodyHTMLField createSavedNotificationThread was removed from object type MutationField deleteSavedNotificationThread was removed from object type MutationField markAllNotifications was removed from object type MutationField markNotificationAsDone was removed from object type MutationField markNotificationAsRead was removed from object type MutationField markNotificationAsUndone was removed from object type MutationField markNotificationAsUnread was removed from object type MutationField markNotificationSubjectAsRead was removed from object type MutationField markNotificationsAsDone was removed from object type MutationField markNotificationsAsRead was removed from object type MutationField markNotificationsAsUndone was removed from object type MutationField markNotificationsAsUnread was removed from object type MutationField unsubscribeFromNotifications was removed from object type MutationField updatesChannel was removed from object type 'ProjectV2'Field updatesChannel was removed from object type PullRequestArgument renderMobileTasklistBlocks: Boolean was removed from field PullRequest.bodyHTMLField mobileUpdatesUrl was removed from object type QueryField viewerUpdatesChannel was removed from object type QueryField updatesChannel was removed from object type RefField copilotLicenseType was removed from object type UserField copilotLimitedUser was removed from object type UserField notificationThreads was removed from object type UserSchema changes for 2025-01-13The GraphQL schema includes these changes:Type CopilotLicenseType was addedField copilotLicenseType was added to object type UserSchema changes for 2025-01-10The GraphQL schema includes these changes:Type AccessUserNamespaceRepositoryInput was addedType AccessUserNamespaceRepositoryPayload was addedType AnnouncementBanner was addedType CopilotLimitedFeature was addedType CopilotLimitedUser was addedType CreateSavedNotificationThreadInput was addedType CreateSavedNotificationThreadPayload was addedType CvssSeverities was addedType DeleteSavedNotificationThreadInput was addedType DeleteSavedNotificationThreadPayload was addedType DiscussionPubSubTopic was addedType IssuePubSubTopic was addedType MarkAllNotificationsInput was addedType MarkAllNotificationsPayload was addedType MarkNotificationAsReadInput was addedType MarkNotificationAsReadPayload was addedType MarkNotificationAsUndoneInput was addedType MarkNotificationAsUndonePayload was addedType MarkNotificationAsUnreadInput was addedType MarkNotificationAsUnreadPayload was addedType MarkNotificationSubjectAsReadInput was addedType MarkNotificationSubjectAsReadPayload was addedType MarkNotificationsAsDoneInput was addedType MarkNotificationsAsDonePayload was addedType MarkNotificationsAsReadInput was addedType MarkNotificationsAsReadPayload was addedType MarkNotificationsAsUndoneInput was addedType MarkNotificationsAsUndonePayload was addedType MarkNotificationsAsUnreadInput was addedType MarkNotificationsAsUnreadPayload was addedType NotificationReason was addedType NotificationStatus was addedType NotificationThread was addedType NotificationThreadConnection was addedType NotificationThreadEdge was addedType NotificationThreadFilters was addedType NotificationThreadSubscriptionState was addedType NotificationsList was addedType NotificationsSubject was addedType ParentIssueAddedEvent was addedType ParentIssueRemovedEvent was addedType PullRequestPubSubTopic was addedType RepositoryDependabotAlertsThread was addedType SubIssueAddedEvent was addedType SubIssueRemovedEvent was addedType UserNamespaceRepository was addedType UserNamespaceRepositoryConnection was addedType UserNamespaceRepositoryEdge was addedType UserPubSubTopic was addedInput field duplicateIssueId of type ID was added to input object type CloseIssueInputField updatesChannel was added to object type CommitField relationship was added to object type DependencyGraphDependencyField comment was added to object type DiscussionField updatesChannel was added to object type DiscussionArgument renderMobileTasklistBlocks: Boolean (with default value) added to field Discussion.bodyHTMLField announcementBanner was added to object type EnterpriseField ruleset was added to object type EnterpriseField rulesets was added to object type EnterpriseField userNamespaceRepositories was added to object type EnterpriseField updatesChannel was added to object type IssueArgument renderMobileTasklistBlocks: Boolean (with default value) added to field Issue.bodyHTMLArgument enableDuplicate: Boolean (with default value) added to field Issue.stateReasonMember ParentIssueAddedEvent was added to Union type IssueTimelineItemsMember ParentIssueRemovedEvent was added to Union type IssueTimelineItemsMember SubIssueAddedEvent was added to Union type IssueTimelineItemsMember SubIssueRemovedEvent was added to Union type IssueTimelineItemsEnum value 'PARENT_ISSUE_ADDED_EVENTwas added to enumIssueTimelineItemsItemType'Enum value 'PARENT_ISSUE_REMOVED_EVENTwas added to enumIssueTimelineItemsItemType'Enum value 'SUB_ISSUE_ADDED_EVENTwas added to enumIssueTimelineItemsItemType'Enum value 'SUB_ISSUE_REMOVED_EVENTwas added to enumIssueTimelineItemsItemType'Field accessUserNamespaceRepository was added to object type MutationField createSavedNotificationThread was added to object type MutationField deleteSavedNotificationThread was added to object type MutationField markAllNotifications was added to object type MutationField markNotificationAsRead was added to object type MutationField markNotificationAsUndone was added to object type MutationField markNotificationAsUnread was added to object type MutationField markNotificationSubjectAsRead was added to object type MutationField markNotificationsAsDone was added to object type MutationField markNotificationsAsRead was added to object type MutationField markNotificationsAsUndone was added to object type MutationField markNotificationsAsUnread was added to object type MutationField announcementBanner was added to object type OrganizationField updatesChannel was added to object type 'ProjectV2'Field updatesChannel was added to object type PullRequestArgument renderMobileTasklistBlocks: Boolean (with default value) added to field PullRequest.bodyHTMLField allowedMergeMethods was added to object type PullRequestParametersInput field allowedMergeMethods of type '[String!]was added to input object typePullRequestParametersInput'Member ParentIssueAddedEvent was added to Union type PullRequestTimelineItemsMember ParentIssueRemovedEvent was added to Union type PullRequestTimelineItemsMember SubIssueAddedEvent was added to Union type PullRequestTimelineItemsMember SubIssueRemovedEvent was added to Union type PullRequestTimelineItemsEnum value 'PARENT_ISSUE_ADDED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'PARENT_ISSUE_REMOVED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'SUB_ISSUE_ADDED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'SUB_ISSUE_REMOVED_EVENTwas added to enumPullRequestTimelineItemsItemType'Field mobileUpdatesUrl was added to object type QueryField viewerUpdatesChannel was added to object type QueryField updatesChannel was added to object type RefEnum value REPOSITORY was added to enum RepositoryRulesetTargetField cvssSeverities was added to object type SecurityAdvisoryField copilotLimitedUser was added to object type UserField notificationThreads was added to object type UserThe following changes will be made to the schema:On member AnnouncementBannerI.announcement:announcement will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member AnnouncementBannerI.announcementCreatedAt:announcementCreatedAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member AnnouncementBannerI.announcementExpiresAt:announcementExpiresAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member AnnouncementBannerI.announcementUserDismissible:announcementUserDismissible will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Enterprise.announcement:announcement will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Enterprise.announcementCreatedAt:announcementCreatedAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Enterprise.announcementExpiresAt:announcementExpiresAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Enterprise.announcementUserDismissible:announcementUserDismissible will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Organization.announcement:announcement will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Organization.announcementCreatedAt:announcementCreatedAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Organization.announcementExpiresAt:announcementExpiresAt will be removed. Use the announcementBanner object instead. Effective 2025-04-01.On member Organization.announcementUserDismissible:announcementUserDismissible will be removed. Use the announcementBanner object instead. Effective 2025-04-01.Schema changes for 2024-12-04The GraphQL schema includes these changes:Type 'UpdateProjectV2FieldInput' was addedType 'UpdateProjectV2FieldPayload' was addedField 'updateProjectV2Fieldwas added to object typeMutation'Schema changes for 2024-12-02The GraphQL schema includes these changes:Type AddSubIssueInput was addedType AddSubIssuePayload was addedType AnnouncementBannerI was addedType RemoveSubIssueInput was addedType RemoveSubIssuePayload was addedType ReprioritizeSubIssueInput was addedType ReprioritizeSubIssuePayload was addedType SubIssuesSummary was addedType AnnouncementBanner was removedInput field parentIssueId of type ID was added to input object type CreateIssueInputField enabled was added to object type DeployKeyEnterprise object implements AnnouncementBannerI interfaceEnterprise object type no longer implements AnnouncementBanner interfaceField repositoryDeployKeySetting was added to object type EnterpriseOwnerInfoField repositoryDeployKeySettingOrganizations was added to object type EnterpriseOwnerInfoField verifiedAt was added to interface GitSignatureField verifiedAt was added to object type GpgSignatureField parent was added to object type IssueField subIssues was added to object type IssueField subIssuesSummary was added to object type IssueField addSubIssue was added to object type MutationField removeSubIssue was added to object type MutationField reprioritizeSubIssue was added to object type MutationOrganization object implements AnnouncementBannerI interfaceOrganization object type no longer implements AnnouncementBanner interfaceField verifiedAt was added to object type SmimeSignatureField verifiedAt was added to object type SshSignatureField verifiedAt was added to object type UnknownSignatureSchema changes for 2024-11-07The GraphQL schema includes these changes:Type UpdateEnterpriseDeployKeySettingInput was addedType UpdateEnterpriseDeployKeySettingPayload was addedField updateEnterpriseDeployKeySetting was added to object type MutationSchema changes for 2024-11-01The GraphQL schema includes these changes:Enum value BLUESKY was added to enum SocialAccountProviderSchema changes for 2024-10-18The GraphQL schema includes these changes:Type EPSS was addedType UserViewType was addedArgument epssPercentage: Float added to field Query.securityAdvisoriesArgument epssPercentile: Float added to field Query.securityAdvisoriesField epss was added to object type SecurityAdvisoryField userViewType was added to object type UserSchema changes for 2024-10-11The GraphQL schema includes these changes:Enum value DUPLICATE was added to enum IssueClosedStateReasonEnum value DUPLICATE was added to enum IssueStateReasonSchema changes for 2024-10-09The GraphQL schema includes these changes:Argument 'targets: [RepositoryRulesetTarget!]added to fieldOrganization.rulesets'Argument 'targets: [RepositoryRulesetTarget!]added to fieldRepository.rulesets'Schema changes for 2024-10-08The GraphQL schema includes these changes:Type EnterpriseDisallowedMethodsSettingValue was addedType TwoFactorCredentialSecurityType was addedType UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput was addedType UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload was addedField clientId was added to object type AppArgument twoFactorMethodSecurity: TwoFactorCredentialSecurityType added to field Enterprise.membersField twoFactorDisallowedMethodsSetting was added to object type EnterpriseOwnerInfoArgument twoFactorMethodSecurity: TwoFactorCredentialSecurityType added to field EnterpriseOwnerInfo.adminsArgument twoFactorMethodSecurity: TwoFactorCredentialSecurityType added to field EnterpriseOwnerInfo.outsideCollaboratorsField updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting was added to object type MutationArgument includeParents: Boolean (with default value) added to field Organization.rulesetField fullDatabaseId was added to object type 'ProjectV2'Field fullDatabaseId was added to object type 'ProjectV2StatusUpdate'Field fullDatabaseId was added to object type 'ProjectV2View'Field fullDatabaseId was added to object type 'ProjectV2Workflow'Query object implements Node interfaceField id was added to object type QueryField enterpriseOwner was added to object type RepositoryRulesetBypassActorInput field enterpriseOwner of type Boolean was added to input object type RepositoryRulesetBypassActorInputMember Enterprise was added to Union type RuleSourceEnum value 'EPSS_PERCENTAGEwas added to enumSecurityAdvisoryOrderField'Enum value 'EPSS_PERCENTILEwas added to enumSecurityAdvisoryOrderField'The following changes will be made to the schema:On member Enterprise.members.hasTwoFactorEnabled:hasTwoFactorEnabled will be removed. Use two_factor_method_security instead. Effective 2025-04-01.On member EnterpriseOwnerInfo.admins.hasTwoFactorEnabled:hasTwoFactorEnabled will be removed. Use two_factor_method_security instead. Effective 2025-04-01.On member EnterpriseOwnerInfo.outsideCollaborators.hasTwoFactorEnabled:hasTwoFactorEnabled will be removed. Use two_factor_method_security instead. Effective 2025-04-01.On member ProjectV2.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2025-04-01.On member ProjectV2Item.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2025-04-01.On member ProjectV2StatusUpdate.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2025-04-01.On member ProjectV2View.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2025-04-01.On member ProjectV2Workflow.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2025-04-01.On member SecurityAdvisory.cvss:cvss will be removed. New cvss_severities field will now contain both cvss_v3 and cvss_v4 properties. Effective 2025-10-01.Schema changes for 2024-08-29The GraphQL schema includes these changes:The following changes will be made to the schema:On member AddMobileDevicePublicKeyPayload.expiresAt:expiresAt will be removed. Do not rely on this field, it is currently set to a date far in the future if a device key is expirationless Effective 2025-01-01.Schema changes for 2024-08-10The GraphQL schema includes these changes:Enum value 'THANKS_DEVwas added to enumFundingPlatform'Schema changes for 2024-07-25The GraphQL schema includes these changes:Field doNotEnforceOnCreate was added to object type RequiredStatusChecksParametersInput field doNotEnforceOnCreate of type Boolean was added to input object type RequiredStatusChecksParametersInputField doNotEnforceOnCreate was added to object type WorkflowsParametersInput field doNotEnforceOnCreate of type Boolean was added to input object type WorkflowsParametersInputSchema changes for 2024-07-24The GraphQL schema includes these changes:Type MergeQueueGroupingStrategy was addedType MergeQueueMergeMethod was addedType MergeQueueParameters was addedType MergeQueueParametersInput was addedField viewerCanLabel was added to object type DiscussionField viewerCanLabel was added to object type IssueField viewerCanLabel was added to interface LabelableField viewerCanLabel was added to object type PullRequestMember MergeQueueParameters was added to Union type RuleParametersInput field mergeQueue of type MergeQueueParametersInput was added to input object type RuleParametersInputSchema changes for 2024-07-16The GraphQL schema includes these changes:Field closedByPullRequestsReferences was added to object type IssueSchema changes for 2024-07-08The GraphQL schema includes these changes:Type 'ProjectV2PermissionLevel' was addedArgument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'Issue.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'Organization.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'ProjectV2Owner.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'PullRequest.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'Repository.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'Team.projectsV2'Argument 'minPermissionLevel: ProjectV2PermissionLevel' (with default value) added to field 'User.projectsV2'Schema changes for 2024-06-27The GraphQL schema includes these changes:Field source was added to object type PropertyTargetDefinitionInput field source of type String was added to input object type PropertyTargetDefinitionInputSchema changes for 2024-06-25The GraphQL schema includes these changes:The following changes will be made to the schema:On member Workflow.hasWorkflowDispatchTrigger:hasWorkflowDispatchTrigger will be removed. Use has_workflow_dispatch_trigger_for_branch(branch_ref) instead. Effective 2024-10-01.Schema changes for 2024-06-21The GraphQL schema includes these changes:Type 'ConvertProjectV2DraftIssueItemToIssueInput' was addedType 'ConvertProjectV2DraftIssueItemToIssuePayload' was addedType 'CreateProjectV2StatusUpdateInput' was addedType 'CreateProjectV2StatusUpdatePayload' was addedType 'DeleteProjectV2StatusUpdateInput' was addedType 'DeleteProjectV2StatusUpdatePayload' was addedType 'ProjectV2StatusOrder' was addedType 'ProjectV2StatusUpdate' was addedType 'ProjectV2StatusUpdateConnection' was addedType 'ProjectV2StatusUpdateEdge' was addedType 'ProjectV2StatusUpdateOrderField' was addedType 'ProjectV2StatusUpdateStatus' was addedType 'UpdateProjectV2StatusUpdateInput' was addedType 'UpdateProjectV2StatusUpdatePayload' was addedField 'convertProjectV2DraftIssueItemToIssuewas added to object typeMutation'Field 'createProjectV2StatusUpdatewas added to object typeMutation'Field 'deleteProjectV2StatusUpdatewas added to object typeMutation'Field 'updateProjectV2StatusUpdatewas added to object typeMutation'Field statusUpdates was added to object type 'ProjectV2'Schema changes for 2024-06-14The GraphQL schema includes these changes:Field readme was added to object type EnterpriseField readmeHTML was added to object type EnterpriseSchema changes for 2024-06-13The GraphQL schema includes these changes:Type AcceptEnterpriseMemberInvitationInput was addedType AcceptEnterpriseMemberInvitationPayload was addedType CancelEnterpriseMemberInvitationInput was addedType CancelEnterpriseMemberInvitationPayload was addedType EnterpriseMemberInvitation was addedType EnterpriseMemberInvitationConnection was addedType EnterpriseMemberInvitationEdge was addedType EnterpriseMemberInvitationOrder was addedType EnterpriseMemberInvitationOrderField was addedType InviteEnterpriseMemberInput was addedType InviteEnterpriseMemberPayload was addedField pendingUnaffiliatedMemberInvitations was added to object type EnterpriseOwnerInfoField acceptEnterpriseMemberInvitation was added to object type MutationField cancelEnterpriseMemberInvitation was added to object type MutationField inviteEnterpriseMember was added to object type MutationField enterpriseMemberInvitation was added to object type QueryField enterpriseMemberInvitationByToken was added to object type QuerySchema changes for 2024-05-24The GraphQL schema includes these changes:Type CopilotEndpoints was addedField copilotEndpoints was added to object type UserSchema changes for 2024-05-20The GraphQL schema includes these changes:Field announcementCreatedAt was added to interface AnnouncementBannerField announcementCreatedAt was added to object type EnterpriseField announcementCreatedAt was added to object type OrganizationSchema changes for 2024-05-17The GraphQL schema includes these changes:Enum value 'BRANCH_POLICYwas added to enumDeploymentProtectionRuleType'Schema changes for 2024-05-15The GraphQL schema includes these changes:Type EnvironmentPinnedFilterField was addedType PinEnvironmentInput was addedType PinEnvironmentPayload was addedType PinnedEnvironment was addedType PinnedEnvironmentConnection was addedType PinnedEnvironmentEdge was addedType PinnedEnvironmentOrder was addedType PinnedEnvironmentOrderField was addedType ReorderEnvironmentInput was addedType ReorderEnvironmentPayload was addedField isPinned was added to object type EnvironmentField latestCompletedDeployment was added to object type EnvironmentField pinnedPosition was added to object type EnvironmentField pinEnvironment was added to object type MutationField reorderEnvironment was added to object type MutationField pinnedEnvironments was added to object type RepositoryArgument pinnedEnvironmentFilter: EnvironmentPinnedFilterField (with default value) added to field Repository.environmentsSchema changes for 2024-05-02The GraphQL schema includes these changes:Type CodeScanningParameters was addedType CodeScanningParametersInput was addedType CodeScanningTool was addedType CodeScanningToolInput was addedEnum value 'CODE_SCANNINGwas added to enumRepositoryRuleType'Member CodeScanningParameters was added to Union type RuleParametersInput field codeScanning of type CodeScanningParametersInput was added to input object type RuleParametersInputSchema changes for 2024-04-27The GraphQL schema includes these changes:Field deployKey was added to object type RepositoryRulesetBypassActorInput field deployKey of type Boolean was added to input object type RepositoryRulesetBypassActorInputSchema changes for 2024-04-26The GraphQL schema includes these changes:Type FileExtensionRestrictionParameters was addedType FileExtensionRestrictionParametersInput was addedType FilePathRestrictionParameters was addedType FilePathRestrictionParametersInput was addedType MaxFilePathLengthParameters was addedType MaxFilePathLengthParametersInput was addedType MaxFileSizeParameters was addedType MaxFileSizeParametersInput was addedMember 'ProjectV2was added to Union typeCloser'Enum value 'FILE_EXTENSION_RESTRICTIONwas added to enumRepositoryRuleType'Enum value 'FILE_PATH_RESTRICTIONwas added to enumRepositoryRuleType'Enum value 'MAX_FILE_PATH_LENGTHwas added to enumRepositoryRuleType'Enum value 'MAX_FILE_SIZEwas added to enumRepositoryRuleType'Enum value PUSH was added to enum RepositoryRulesetTargetMember FileExtensionRestrictionParameters was added to Union type RuleParametersMember FilePathRestrictionParameters was added to Union type RuleParametersMember MaxFilePathLengthParameters was added to Union type RuleParametersMember MaxFileSizeParameters was added to Union type RuleParametersInput field fileExtensionRestriction of type FileExtensionRestrictionParametersInput was added to input object type RuleParametersInputInput field filePathRestriction of type FilePathRestrictionParametersInput was added to input object type RuleParametersInputInput field maxFilePathLength of type MaxFilePathLengthParametersInput was added to input object type RuleParametersInputInput field maxFileSize of type MaxFileSizeParametersInput was added to input object type RuleParametersInputSchema changes for 2024-04-16The GraphQL schema includes these changes:Input field StartRepositoryMigrationInput.sourceRepositoryUrl changed type from URI to URI!Schema changes for 2024-04-11The GraphQL schema includes these changes:Field statusCheckRollup was added to object type PullRequestSchema changes for 2024-04-09The GraphQL schema includes these changes:Type RepositoryPlanFeatures was addedField planFeatures was added to object type RepositorySchema changes for 2024-03-12The GraphQL schema includes these changes:Enum value 'BUY_ME_A_COFFEEwas added to enumFundingPlatform'Schema changes for 2024-03-09The GraphQL schema includes these changes:Input field recurring of type Boolean was added to input object type CreateSponsorshipsInputSchema changes for 2024-03-08The GraphQL schema includes these changes:Enum value OTECHIE was removed from enum FundingPlatformSchema changes for 2024-03-07The GraphQL schema includes these changes:Argument 'names: [String!]' (with default value) added to field Repository.environmentsSchema changes for 2024-03-02The GraphQL schema includes these changes:Enum value 'RULESET_REQUIRED_SIGNATURESwas removed from enumRepositoryRuleType'Schema changes for 2024-02-27The GraphQL schema includes these changes:Field fullDatabaseId was added to object type 'ProjectV2Item'Schema changes for 2024-02-25The GraphQL schema includes these changes:Type MarkNotificationAsDoneInput was addedType MarkNotificationAsDonePayload was addedField markNotificationAsDone was added to object type MutationSchema changes for 2024-02-15The GraphQL schema includes these changes:Enum value POLAR was added to enum FundingPlatformSchema changes for 2024-02-09The GraphQL schema includes these changes:Field fullDatabaseId was added to object type PullRequestField fullDatabaseId was added to object type PullRequestReviewField fullDatabaseId was added to object type PullRequestReviewCommentThe following changes will be made to the schema:On member PullRequest.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2024-07-01.On member PullRequestReview.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2024-07-01.On member PullRequestReviewComment.databaseId:databaseId will be removed. Use fullDatabaseId instead. Effective 2024-07-01.Schema changes for 2024-02-07The GraphQL schema includes these changes:Field hasSponsorshipsEnabled was added to object type RepositoryField hasSponsorshipsEnabled was added to interface RepositoryInfoInput field hasSponsorshipsEnabled of type Boolean was added to input object type UpdateRepositoryInputSchema changes for 2024-02-01The GraphQL schema includes these changes:Field isInMergeQueue was added to object type PullRequestField isMergeQueueEnabled was added to object type PullRequestField mergeQueue was added to object type PullRequestInput field countMembersAlreadyRequested of type Boolean was added to input object type UpdateTeamReviewAssignmentInputInput field includeChildTeamMembers of type Boolean was added to input object type UpdateTeamReviewAssignmentInputInput field removeTeamRequest of type Boolean was added to input object type UpdateTeamReviewAssignmentInputSchema changes for 2024-01-31The GraphQL schema includes these changes:Type PropertyTargetDefinition was addedType PropertyTargetDefinitionInput was addedType RepositoryPropertyConditionTarget was addedType RepositoryPropertyConditionTargetInput was addedField repositoryProperty was added to object type RepositoryRuleConditionsInput field repositoryProperty of type RepositoryPropertyConditionTargetInput was added to input object type RepositoryRuleConditionsInputSchema changes for 2024-01-27The GraphQL schema includes these changes:Field billingEmail was added to object type EnterpriseSchema changes for 2024-01-25The GraphQL schema includes these changes:Type SponsorAndLifetimeValue was addedType SponsorAndLifetimeValueConnection was addedType SponsorAndLifetimeValueEdge was addedType SponsorAndLifetimeValueOrder was addedType SponsorAndLifetimeValueOrderField was addedField lifetimeReceivedSponsorshipValues was added to object type OrganizationField lifetimeReceivedSponsorshipValues was added to interface SponsorableField lifetimeReceivedSponsorshipValues was added to object type UserSchema changes for 2024-01-23The GraphQL schema includes these changes:Field id was added to object type UnpinIssuePayloadSchema changes for 2024-01-10The GraphQL schema includes these changes:Argument visibility: RepositoryVisibility added to field Organization.repositoriesArgument visibility: RepositoryVisibility added to field Repository.forksArgument visibility: RepositoryVisibility added to field RepositoryOwner.repositoriesArgument visibility: RepositoryVisibility added to field Topic.repositoriesArgument visibility: RepositoryVisibility added to field User.repositoriesArgument visibility: RepositoryVisibility added to field User.watchingSchema changes for 2024-01-09The GraphQL schema includes these changes:Type RepositoryRuleOrder was addedType RepositoryRuleOrderField was addedField inviterActor was added to object type OrganizationInvitationField rules was added to object type RefThe following changes will be made to the schema:On member OrganizationInvitation.inviter:inviter will be removed. inviter will be replaced by inviterActor. Effective 2024-07-01.Schema changes for 2024-01-01The GraphQL schema includes these changes:Input field AcceptTopicSuggestionInput.name changed type from String! to StringInput field AcceptTopicSuggestionInput.repositoryId changed type from ID! to IDInput field DeclineTopicSuggestionInput.name changed type from String! to StringInput field DeclineTopicSuggestionInput.reason changed type from TopicSuggestionDeclineReason! to TopicSuggestionDeclineReasonInput field DeclineTopicSuggestionInput.repositoryId changed type from ID! to IDThe following changes will be made to the schema:On member AcceptTopicSuggestionInput.name:name will be removed. Effective 2024-04-01.On member AcceptTopicSuggestionInput.repositoryId:repositoryId will be removed. Effective 2024-04-01.On member AcceptTopicSuggestionPayload.topic:topic will be removed. Effective 2024-04-01.On member DeclineTopicSuggestionInput.name:name will be removed. Effective 2024-04-01.On member DeclineTopicSuggestionInput.reason:reason will be removed. Effective 2024-04-01.On member DeclineTopicSuggestionInput.repositoryId:repositoryId will be removed. Effective 2024-04-01.On member DeclineTopicSuggestionPayload.topic:topic will be removed. Effective 2024-04-01.On member TopicSuggestionDeclineReason.NOT_RELEVANT:NOT_RELEVANT will be removed. Effective 2024-04-01.On member TopicSuggestionDeclineReason.PERSONAL_PREFERENCE:PERSONAL_PREFERENCE will be removed. Effective 2024-04-01.On member TopicSuggestionDeclineReason.TOO_GENERAL:TOO_GENERAL will be removed. Effective 2024-04-01.On member TopicSuggestionDeclineReason.TOO_SPECIFIC:TOO_SPECIFIC will be removed. Effective 2024-04-01.Schema changes for 2023-11-30The GraphQL schema includes these changes:Type CreateUserListInput was addedType CreateUserListPayload was addedType DeleteUserListInput was addedType DeleteUserListPayload was addedType UpdateUserListInput was addedType UpdateUserListPayload was addedType UpdateUserListsForItemInput was addedType UpdateUserListsForItemPayload was addedType UserList was addedType UserListConnection was addedType UserListEdge was addedType UserListItems was addedType UserListItemsConnection was addedType UserListItemsEdge was addedType UserListSuggestion was addedField createUserList was added to object type MutationField deleteUserList was added to object type MutationField updateUserList was added to object type MutationField updateUserListsForItem was added to object type MutationField lists was added to object type UserField suggestedListNames was added to object type UserSchema changes for 2023-11-22The GraphQL schema includes these changes:Type UnsubscribeFromNotificationsInput was addedType UnsubscribeFromNotificationsPayload was addedField unsubscribeFromNotifications was added to object type MutationSchema changes for 2023-11-18The GraphQL schema includes these changes:Type UpdatePatreonSponsorabilityInput was addedType UpdatePatreonSponsorabilityPayload was addedField updatePatreonSponsorability was added to object type MutationSchema changes for 2023-11-17The GraphQL schema includes these changes:Type MemberFeatureRequestNotification was addedField paymentSource was added to object type SponsorsActivitySchema changes for 2023-11-14The GraphQL schema includes these changes:Type SponsorshipPaymentSource was addedField paymentSource was added to object type SponsorshipSchema changes for 2023-11-04The GraphQL schema includes these changes:Type AbortRepositoryMigrationInput was addedType AbortRepositoryMigrationPayload was addedField abortRepositoryMigration was added to object type MutationPullRequestReview object implements Minimizable interfaceField isMinimized was added to object type PullRequestReviewField minimizedReason was added to object type PullRequestReviewField viewerCanMinimize was added to object type PullRequestReviewSchema changes for 2023-11-01The GraphQL schema includes these changes:Enum value 'FILE_PATH_PATTERNwas removed from enumRepositoryRuleType'Schema changes for 2023-10-23The GraphQL schema includes these changes:Field roleName was added to object type PermissionSourceSchema changes for 2023-10-17The GraphQL schema includes these changes:Enum value 'TRANSFERRING_OWNERSHIPwas added to enumRepositoryLockReason'Schema changes for 2023-10-12The GraphQL schema includes these changes:Enum value NPM was added to enum SocialAccountProviderSchema changes for 2023-10-11The GraphQL schema includes these changes:Type WorkflowFileReference was addedType WorkflowFileReferenceInput was addedType WorkflowsParameters was addedType WorkflowsParametersInput was addedEnum value AUTHORIZATION was added to enum RepositoryRuleTypeEnum value 'FILE_PATH_PATTERNwas added to enumRepositoryRuleType'Enum value 'LOCK_BRANCHwas added to enumRepositoryRuleType'Enum value 'MAX_REF_UPDATESwas added to enumRepositoryRuleType'Enum value 'MERGE_QUEUEwas added to enumRepositoryRuleType'Enum value 'MERGE_QUEUE_LOCKED_REFwas added to enumRepositoryRuleType'Enum value 'REQUIRED_REVIEW_THREAD_RESOLUTIONwas added to enumRepositoryRuleType'Enum value 'REQUIRED_WORKFLOW_STATUS_CHECKSwas added to enumRepositoryRuleType'Enum value 'RULESET_REQUIRED_SIGNATURESwas added to enumRepositoryRuleType'Enum value 'SECRET_SCANNINGwas added to enumRepositoryRuleType'Enum value TAG was added to enum RepositoryRuleTypeEnum value WORKFLOWS was added to enum RepositoryRuleTypeEnum value 'WORKFLOW_UPDATESwas added to enumRepositoryRuleType'Member WorkflowsParameters was added to Union type RuleParametersInput field workflows of type WorkflowsParametersInput was added to input object type RuleParametersInputSchema changes for 2023-10-07The GraphQL schema includes these changes:Field preventSelfReview was added to object type DeploymentProtectionRuleInput field preventSelfReview of type Boolean was added to input object type UpdateEnvironmentInputSchema changes for 2023-09-27The GraphQL schema includes these changes:Field issue was added to object type CreateLinkedBranchPayloadSchema changes for 2023-09-22The GraphQL schema includes these changes:Field isAnswered was added to object type DiscussionArgument answered: Boolean added to field Repository.discussionsSchema changes for 2023-09-13The GraphQL schema includes these changes:Field repositoryRuleset was added to object type RepositoryRuleSchema changes for 2023-09-12The GraphQL schema includes these changes:Type ContributingGuidelines was addedField contributingGuidelines was added to object type RepositorySchema changes for 2023-09-12The GraphQL schema includes these changes:Field archivedAt was added to object type OrganizationSchema changes for 2023-09-08The GraphQL schema includes these changes:Type EnterpriseConnection was addedType EnterpriseEdge was addedType EnterpriseMembershipType was addedType EnterpriseOrder was addedType EnterpriseOrderField was addedField enterprises was added to object type UserSchema changes for 2023-08-14The GraphQL schema includes these changes:Type AddPullRequestReviewThreadReplyInput was addedType AddPullRequestReviewThreadReplyPayload was addedType PullRequestBranchUpdateMethod was addedField githubEnterpriseImporterIpAddresses was added to object type GitHubMetadataField addPullRequestReviewThreadReply was added to object type MutationInput field updateMethod of type PullRequestBranchUpdateMethod was added to input object type UpdatePullRequestBranchInputSchema changes for 2023-07-31The GraphQL schema includes these changes:Argument hasIssuesEnabled: Boolean added to field Organization.repositoriesArgument hasIssuesEnabled: Boolean added to field Repository.forksArgument hasIssuesEnabled: Boolean added to field RepositoryOwner.repositoriesArgument hasIssuesEnabled: Boolean added to field Topic.repositoriesArgument hasIssuesEnabled: Boolean added to field User.repositoriesArgument hasIssues: Boolean added to field User.repositoriesContributedToArgument hasIssuesEnabled: Boolean added to field User.watchingSchema changes for 2023-07-21The GraphQL schema includes these changes:Type SubscribableThread was addedType ThreadSubscriptionFormAction was addedType ThreadSubscriptionState was addedIssue object implements SubscribableThread interfaceField viewerThreadSubscriptionFormAction was added to object type IssueField viewerThreadSubscriptionStatus was added to object type IssueSchema changes for 2023-07-19The GraphQL schema includes these changes:Argument includePrivate: Boolean (with default value) added to field Organization.sponsorsActivitiesArgument includePrivate: Boolean (with default value) added to field Sponsorable.sponsorsActivitiesArgument includePrivate: Boolean (with default value) added to field User.sponsorsActivitiesSchema changes for 2023-07-13The GraphQL schema includes these changes:Type EnvironmentOrderField was addedType Environments was addedArgument orderBy: Environments (with default value) added to field Repository.environmentsSchema changes for 2023-07-12The GraphQL schema includes these changes:Member Bot was added to Union type RequestedReviewerSchema changes for 2023-07-11The GraphQL schema includes these changes:Argument login: String added to field Organization.mannequinsSchema changes for 2023-07-10The GraphQL schema includes these changes:Type OrgOauthAppAccessBlockedAuditEntry was addedType OrgOauthAppAccessUnblockedAuditEntry was addedType RepositoryIdConditionTarget was addedType RepositoryIdConditionTargetInput was addedType RepositoryRulesetBypassActorBypassMode was addedType RepositoryRulesetBypassActorInput was addedType RuleBypassMode was removedInput field bypassActors of type '[RepositoryRulesetBypassActorInput!]was added to input object typeCreateRepositoryRulesetInput'Input field bypassActorIds was removed from input object type CreateRepositoryRulesetInputInput field bypassMode was removed from input object type CreateRepositoryRulesetInputInput field CreateTeamDiscussionCommentInput.body changed type from String! to StringInput field CreateTeamDiscussionCommentInput.discussionId changed type from ID! to IDInput field CreateTeamDiscussionInput.body changed type from String! to StringInput field CreateTeamDiscussionInput.teamId changed type from ID! to IDInput field CreateTeamDiscussionInput.title changed type from String! to StringArgument isArchived: Boolean added to field Organization.repositoriesMember OrgOauthAppAccessBlockedAuditEntry was added to Union type OrganizationAuditEntryMember OrgOauthAppAccessUnblockedAuditEntry was added to Union type OrganizationAuditEntryField color was added to object type 'ProjectV2ItemFieldSingleSelectValue'Field description was added to object type 'ProjectV2ItemFieldSingleSelectValue'Field descriptionHTML was added to object type 'ProjectV2ItemFieldSingleSelectValue'Field color was added to object type 'ProjectV2SingleSelectFieldOption'Field description was added to object type 'ProjectV2SingleSelectFieldOption'Field descriptionHTML was added to object type 'ProjectV2SingleSelectFieldOption'Field path was added to object type PullRequestThreadField subjectType was added to object type PullRequestThreadArgument isArchived: Boolean added to field RepositoryOwner.repositoriesField repositoryId was added to object type RepositoryRuleConditionsInput field repositoryId of type RepositoryIdConditionTargetInput was added to input object type RepositoryRuleConditionsInputField bypassMode was removed from object type RepositoryRulesetField bypassMode was added to object type RepositoryRulesetBypassActorField organizationAdmin was added to object type RepositoryRulesetBypassActorField repositoryRoleDatabaseId was added to object type RepositoryRulesetBypassActorField repositoryRoleName was added to object type RepositoryRulesetBypassActorField currentPrivacyLevel was added to object type SponsorsActivityInput field bypassActors of type '[RepositoryRulesetBypassActorInput!]was added to input object typeUpdateRepositoryRulesetInput'Input field bypassActorIds was removed from input object type UpdateRepositoryRulesetInputInput field bypassMode was removed from input object type UpdateRepositoryRulesetInputArgument isArchived: Boolean added to field User.repositoriesThe following changes will be made to the schema:On member CreateTeamDiscussionCommentInput.body:body will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionCommentInput.discussionId:discussionId will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionCommentPayload.teamDiscussionComment:teamDiscussionComment will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionInput.body:body will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionInput.private:private will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionInput.teamId:teamId will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionInput.title:title will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member CreateTeamDiscussionPayload.teamDiscussion:teamDiscussion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.authorAssociation:authorAssociation will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.bodyVersion:bodyVersion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.comments:comments will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.commentsResourcePath:commentsResourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.commentsUrl:commentsUrl will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.isPinned:isPinned will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.isPrivate:isPrivate will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.number:number will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.resourcePath:resourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.team:team will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.title:title will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.url:url will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussion.viewerCanPin:viewerCanPin will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.authorAssociation:authorAssociation will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.bodyVersion:bodyVersion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.discussion:discussion will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.number:number will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.resourcePath:resourcePath will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.On member TeamDiscussionComment.url:url will be removed. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Effective 2024-07-01.Schema changes for 2023-06-20The GraphQL schema includes these changes:Enum value SWIFT was added to enum DependencyGraphEcosystemDefault value for argument includeParents on field Organization.rulesets changed from false to trueArgument 'names: [String!]added to fieldProjectV2SingleSelectField.options'Argument includeParents: Boolean (with default value) added to field Repository.rulesetDefault value for argument includeParents on field Repository.rulesets changed from false to trueEnum value SWIFT was added to enum SecurityAdvisoryEcosystemSchema changes for 2023-06-16The GraphQL schema includes these changes:Type 'ProjectV2Actor' was addedType 'ProjectV2ActorConnection' was addedType 'ProjectV2ActorEdge' was addedType 'ProjectV2Collaborator' was addedType 'ProjectV2Roles' was addedType 'UpdateProjectV2CollaboratorsInput' was addedType 'UpdateProjectV2CollaboratorsPayload' was addedField 'updateProjectV2Collaboratorswas added to object typeMutation'Schema changes for 2023-06-13The GraphQL schema includes these changes:Type 'MarkProjectV2AsTemplateInput' was addedType 'MarkProjectV2AsTemplatePayload' was addedType 'UnmarkProjectV2AsTemplateInput' was addedType 'UnmarkProjectV2AsTemplatePayload' was addedField 'markProjectV2AsTemplatewas added to object typeMutation'Field 'unmarkProjectV2AsTemplatewas added to object typeMutation'Enum value 'ORGANIZATION_ALWAYSwas added to enumRuleBypassMode'Enum value 'ORGANIZATION_NONEwas added to enumRuleBypassMode'Enum value 'ORGANIZATION_PRS_ONLYwas added to enumRuleBypassMode'Schema changes for 2023-06-09The GraphQL schema includes these changes:Type WorkflowRunFile was addedField file was added to object type WorkflowRunSchema changes for 2023-06-07The GraphQL schema includes these changes:Enum value 'FAILED_VALIDATIONwas added to enumOrganizationMigrationState'Enum value 'PENDING_VALIDATIONwas added to enumOrganizationMigrationState'Schema changes for 2023-06-06The GraphQL schema includes these changes:Issue object implements Deletable interfaceField viewerCanDelete was added to object type IssueSchema changes for 2023-06-01The GraphQL schema includes these changes:Field ruleset was added to object type OrganizationField ruleset was added to object type RepositoryField createdAt was added to object type RepositoryRulesetField updatedAt was added to object type RepositoryRulesetSchema changes for 2023-05-31The GraphQL schema includes these changes:Field warningsCount was added to interface MigrationField warningsCount was added to object type RepositoryMigrationSchema changes for 2023-04-21The GraphQL schema includes these changes:Field BranchNamePatternParameters.name changed type from String! to StringField BranchNamePatternParameters.operator changed type from String to String!Field BranchNamePatternParameters.pattern changed type from String to String!Field CommitAuthorEmailPatternParameters.name changed type from String! to StringField CommitAuthorEmailPatternParameters.operator changed type from String to String!Field CommitAuthorEmailPatternParameters.pattern changed type from String to String!Field CommitMessagePatternParameters.name changed type from String! to StringField CommitMessagePatternParameters.operator changed type from String to String!Field CommitMessagePatternParameters.pattern changed type from String to String!Field CommitterEmailPatternParameters.name changed type from String! to StringField CommitterEmailPatternParameters.operator changed type from String to String!Field CommitterEmailPatternParameters.pattern changed type from String to String!Field PullRequestParameters.dismissStaleReviewsOnPush changed type from Boolean to Boolean!Field PullRequestParameters.requireCodeOwnerReview changed type from Boolean to Boolean!Field PullRequestParameters.requireLastPushApproval changed type from Boolean to Boolean!Field PullRequestParameters.requiredApprovingReviewCount changed type from Int to Int!Field PullRequestParameters.requiredReviewThreadResolution changed type from Boolean to Boolean!Field RefNameConditionTarget.exclude changed type from '[String!]to[String!]!'Field RefNameConditionTarget.include changed type from '[String!]to[String!]!'Field RepositoryNameConditionTarget.exclude changed type from '[String!]to[String!]!'Field RepositoryNameConditionTarget.include changed type from '[String!]to[String!]!'Field RequiredDeploymentsParameters.requiredDeploymentEnvironments changed type from '[String!]to[String!]!'Field RequiredStatusChecksParameters.requiredStatusChecks changed type from '[StatusCheckConfiguration!]to[StatusCheckConfiguration!]!'Field RequiredStatusChecksParameters.strictRequiredStatusChecksPolicy changed type from Boolean to Boolean!Field StatusCheckConfiguration.context changed type from String to String!Field StatusCheckConfiguration.integrationId changed type from Int! to IntField TagNamePatternParameters.name changed type from String! to StringField TagNamePatternParameters.operator changed type from String to String!Field TagNamePatternParameters.pattern changed type from String to String!Field UpdateParameters.updateAllowsFetchAndMerge changed type from Boolean to Boolean!Schema changes for 2023-04-20The GraphQL schema includes these changes:Field assignees was added to object type IssueTemplateSchema changes for 2023-04-19The GraphQL schema includes these changes:Field labels was added to object type IssueTemplateWorkflow object implements UniformResourceLocatable interfaceField resourcePath was added to object type WorkflowField url was added to object type WorkflowSchema changes for 2023-04-18The GraphQL schema includes these changes:Type BranchNamePatternParameters was addedType BranchNamePatternParametersInput was addedType BypassActor was addedType CommitAuthorEmailPatternParameters was addedType CommitAuthorEmailPatternParametersInput was addedType CommitMessagePatternParameters was addedType CommitMessagePatternParametersInput was addedType CommitterEmailPatternParameters was addedType CommitterEmailPatternParametersInput was addedType CreateRepositoryRulesetInput was addedType CreateRepositoryRulesetPayload was addedType DeleteRepositoryRulesetInput was addedType DeleteRepositoryRulesetPayload was addedType PullRequestParameters was addedType PullRequestParametersInput was addedType RefNameConditionTarget was addedType RefNameConditionTargetInput was addedType RepositoryNameConditionTarget was addedType RepositoryNameConditionTargetInput was addedType RepositoryRule was addedType RepositoryRuleConditions was addedType RepositoryRuleConditionsInput was addedType RepositoryRuleConnection was addedType RepositoryRuleEdge was addedType RepositoryRuleInput was addedType RepositoryRuleType was addedType RepositoryRuleset was addedType RepositoryRulesetBypassActor was addedType RepositoryRulesetBypassActorConnection was addedType RepositoryRulesetBypassActorEdge was addedType RepositoryRulesetConnection was addedType RepositoryRulesetEdge was addedType RepositoryRulesetTarget was addedType RequiredDeploymentsParameters was addedType RequiredDeploymentsParametersInput was addedType RequiredStatusChecksParameters was addedType RequiredStatusChecksParametersInput was addedType RuleBypassMode was addedType RuleEnforcement was addedType RuleParameters was addedType RuleParametersInput was addedType RuleSource was addedType StatusCheckConfiguration was addedType StatusCheckConfigurationInput was addedType TagNamePatternParameters was addedType TagNamePatternParametersInput was addedType UpdateParameters was addedType UpdateParametersInput was addedType UpdateRepositoryRulesetInput was addedType UpdateRepositoryRulesetPayload was addedField createRepositoryRuleset was added to object type MutationField deleteRepositoryRuleset was added to object type MutationField updateRepositoryRuleset was added to object type MutationField rulesets was added to object type OrganizationField rulesets was added to object type RepositorySchema changes for 2023-04-14The GraphQL schema includes these changes:Type BulkSponsorship was addedType CreateSponsorshipsInput was addedType CreateSponsorshipsPayload was addedField createSponsorships was added to object type MutationField autoDismissedAt was added to object type RepositoryVulnerabilityAlertEnum value 'AUTO_DISMISSEDwas added to enumRepositoryVulnerabilityAlertState'Field viaBulkSponsorship was added to object type SponsorsActivitySchema changes for 2023-04-13The GraphQL schema includes these changes:Type AddedToMergeQueueEvent was addedType DequeuePullRequestInput was addedType DequeuePullRequestPayload was addedType EnqueuePullRequestInput was addedType EnqueuePullRequestPayload was addedType MergeQueue was addedType MergeQueueConfiguration was addedType MergeQueueEntry was addedType MergeQueueEntryConnection was addedType MergeQueueEntryEdge was addedType MergeQueueEntryState was addedType MergeQueueMergingStrategy was addedType RemovedFromMergeQueueEvent was addedField dequeuePullRequest was added to object type MutationField enqueuePullRequest was added to object type MutationField mergeQueueEntry was added to object type PullRequestMember AddedToMergeQueueEvent was added to Union type PullRequestTimelineItemsMember RemovedFromMergeQueueEvent was added to Union type PullRequestTimelineItemsField mergeQueue was added to object type RepositorySchema changes for 2023-04-11The GraphQL schema includes these changes:Field archivedAt was added to object type RepositoryField archivedAt was added to interface RepositoryInfoSchema changes for 2023-04-08The GraphQL schema includes these changes:Type TeamNotificationSetting was addedArgument notificationSetting: TeamNotificationSetting added to field Organization.teamsField notificationSetting was added to object type TeamSchema changes for 2023-04-07The GraphQL schema includes these changes:Field fixReason (deprecated) was removed from object type RepositoryVulnerabilityAlertSchema changes for 2023-04-04The GraphQL schema includes these changes:Input field AddPullRequestReviewThreadInput.line changed type from Int! to IntSchema changes for 2023-04-03The GraphQL schema includes these changes:Type BigInt was addedField fullDatabaseId was added to object type IssueField fullDatabaseId was added to object type IssueCommentField fullDatabaseId was added to object type PinnedIssueSchema changes for 2023-04-01The GraphQL schema includes these changes:Enum value SUCCESS was added to enum DeploymentStateThe following changes will be made to the schema:On member Commit.pushedDate:pushedDate will be removed. Effective 2023-07-01.Schema changes for 2023-03-29The GraphQL schema includes these changes:Input field AddPullRequestReviewCommentInput.body changed type from String! to StringThe following changes will be made to the schema:On member AddPullRequestReviewCommentInput.body:body will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.commitOID:commitOID will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.inReplyTo:inReplyTo will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.path:path will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.position:position will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.pullRequestId:pullRequestId will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewCommentInput.pullRequestReviewId:pullRequestReviewId will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead Effective 2023-10-01.On member AddPullRequestReviewInput.comments:comments will be removed. use the threads argument instead Effective 2023-10-01.On member PullRequestReviewComment.originalPosition:originalPosition will be removed. Effective 2023-10-01.On member PullRequestReviewComment.position:position will be removed. Use the line and startLine fields instead, which are file line numbers instead of diff line numbers Effective 2023-10-01.Schema changes for 2023-03-28The GraphQL schema includes these changes:Type PullRequestReviewThreadSubjectType was addedInput field subjectType was added to input object type AddPullRequestReviewThreadInputField subjectType was added to object type PullRequestReviewCommentField subjectType was added to object type PullRequestReviewThreadSchema changes for 2023-03-24The GraphQL schema includes these changes:Field line was added to object type PullRequestReviewCommentField originalLine was added to object type PullRequestReviewCommentField originalStartLine was added to object type PullRequestReviewCommentField startLine was added to object type PullRequestReviewCommentSchema changes for 2023-03-23The GraphQL schema includes these changes:Type EnterpriseServerInstallationMembershipConnection was addedType EnterpriseServerInstallationMembershipEdge was addedType WorkflowState was addedInput field CreateMigrationSourceInput.url changed type from String! to StringField enterpriseInstallations was added to object type EnterpriseUserAccountInput field StartRepositoryMigrationInput.accessToken changed type from String! to StringInput field StartRepositoryMigrationInput.sourceRepositoryUrl changed type from URI! to URIField pronouns was added to object type UserField state was added to object type WorkflowSchema changes for 2023-03-16The GraphQL schema includes these changes:Type CloseDiscussionInput was addedType CloseDiscussionPayload was addedType 'DeleteProjectV2WorkflowInput' was addedType 'DeleteProjectV2WorkflowPayload' was addedType DiscussionCloseReason was addedType DiscussionState was addedType DiscussionStateReason was addedType ReopenDiscussionInput was addedType ReopenDiscussionPayload was addedField viewerCanClose was added to interface ClosableField viewerCanReopen was added to interface ClosableField stateReason was added to object type DiscussionField viewerCanClose was added to object type DiscussionField viewerCanReopen was added to object type DiscussionField viewerCanClose was added to object type IssueField viewerCanReopen was added to object type IssueField viewerCanClose was added to object type MilestoneField viewerCanReopen was added to object type MilestoneField closeDiscussion was added to object type MutationField 'deleteProjectV2Workflowwas added to object typeMutation'Field reopenDiscussion was added to object type MutationArgument 'states: [DiscussionState!]added to fieldOrganization.repositoryDiscussions'Field viewerCanClose was added to object type ProjectField viewerCanReopen was added to object type ProjectField viewerCanClose was added to object type 'ProjectV2'Field viewerCanReopen was added to object type 'ProjectV2'Field viewerCanClose was added to object type PullRequestField viewerCanReopen was added to object type PullRequestField viewerCanUpdateBranch was added to object type PullRequestArgument 'states: [DiscussionState!]added to fieldRepository.discussions'Argument 'states: [DiscussionState!]added to fieldRepositoryDiscussionAuthor.repositoryDiscussions'Argument 'states: [DiscussionState!]added to fieldUser.repositoryDiscussions'Schema changes for 2023-03-11The GraphQL schema includes these changes:Argument login: String added to field Repository.collaboratorsSchema changes for 2023-03-07The GraphQL schema includes these changes:Field template was added to object type 'ProjectV2'Schema changes for 2023-03-03The GraphQL schema includes these changes:Type SocialAccount was addedType SocialAccountConnection was addedType SocialAccountEdge was addedType SocialAccountProvider was addedField socialAccounts was added to object type UserSchema changes for 2023-03-01The GraphQL schema includes these changes:Field requiredDeploymentEnvironments was added to object type BranchProtectionRuleField requiresDeployments was added to object type BranchProtectionRuleInput field requiredDeploymentEnvironments was added to input object type CreateBranchProtectionRuleInputInput field requiresDeployments was added to input object type CreateBranchProtectionRuleInputInput field requiredDeploymentEnvironments was added to input object type UpdateBranchProtectionRuleInputInput field requiresDeployments was added to input object type UpdateBranchProtectionRuleInputField event was added to object type WorkflowRunSchema changes for 2023-02-24The GraphQL schema includes these changes:Input field expectedHeadOid was added to input object type EnablePullRequestAutoMergeInputSchema changes for 2023-02-22The GraphQL schema includes these changes:Type 'CreateProjectV2FieldInput' was addedType 'CreateProjectV2FieldPayload' was addedType 'DeleteProjectV2FieldInput' was addedType 'DeleteProjectV2FieldPayload' was addedType 'ProjectV2CustomFieldType' was addedType 'ProjectV2SingleSelectFieldOptionColor' was addedType 'ProjectV2SingleSelectFieldOptionInput' was addedField 'createProjectV2Fieldwas added to object typeMutation'Field 'deleteProjectV2Fieldwas added to object typeMutation'Schema changes for 2023-02-16The GraphQL schema includes these changes:Enum value 'ROADMAP_LAYOUTwas added to enumProjectV2ViewLayout'Schema changes for 2023-02-15The GraphQL schema includes these changes:Field vulnerabilityAlert was added to object type RepositorySchema changes for 2023-02-11The GraphQL schema includes these changes:Type 'DeleteProjectV2Input' was addedType 'DeleteProjectV2Payload' was addedField 'deleteProjectV2was added to object typeMutation'Schema changes for 2023-02-09The GraphQL schema includes these changes:Type 'ProjectV2Workflow' was addedType 'ProjectV2WorkflowConnection' was addedType 'ProjectV2WorkflowEdge' was addedType 'ProjectV2WorkflowOrder' was addedType 'ProjectV2WorkflowsOrderField' was addedField workflow was added to object type 'ProjectV2'Field workflows was added to object type 'ProjectV2'Schema changes for 2023-02-08The GraphQL schema includes these changes:The following changes will be made to the schema:On member MergeQueueEntry.baseOid:baseOid will be removed. Use baseCommit instead. Effective 2023-07-01.On member MergeQueueEntry.headOid:headOid will be removed. Use headCommit instead. Effective 2023-07-01.Schema changes for 2023-02-07The GraphQL schema includes these changes:The following changes will be made to the schema:On member MergeQueue.headOid:headOid will be removed. Use entry.headOid instead. Effective 2023-07-01.On member MergeQueue.mergeMethod:mergeMethod will be removed. Use configuration.merge_method instead. Effective 2023-07-01.On member MergeQueue.mergingEntries:mergingEntries will be removed. Effective 2023-07-01.On member MergeQueue.pendingRemovalEntries:pendingRemovalEntries will be removed. Effective 2023-07-01.On member MergeQueueEntry.blockedByMergeConflicts:blockedByMergeConflicts will be removed. Use state instead. Effective 2023-07-01.On member MergeQueueEntry.checkStatus:checkStatus will be removed. Use state instead. Effective 2023-07-01.On member MergeQueueEntry.hasJumpedQueue:hasJumpedQueue will be removed. Use jump instead. Effective 2023-07-01.On member MergeQueueEntry.isSolo:isSolo will be removed. Use solo instead. Effective 2023-07-01.Schema changes for 2023-02-05The GraphQL schema includes these changes:Type 'CopyProjectV2Input' was addedType 'CopyProjectV2Payload' was addedField 'copyProjectV2was added to object typeMutation'Schema changes for 2023-02-03The GraphQL schema includes these changes:Discussion object implements Closable interfaceField closed was added to object type DiscussionField closedAt was added to object type DiscussionSchema changes for 2023-02-01The GraphQL schema includes these changes:The following changes will be made to the schema:On member ProjectV2ItemFieldGroup.field:field will be removed. Check out the ProjectV2ItemFieldGroup#groupByField API as an example for the more capable alternative. Effective 2023-07-01.Schema changes for 2023-01-31The GraphQL schema includes these changes:Type AnnouncementBanner was addedType EnterpriseFailedInvitationConnection was addedType EnterpriseFailedInvitationEdge was addedType OrganizationInvitationSource was addedEnterprise object implements AnnouncementBanner interfaceField announcement was added to object type EnterpriseField announcementExpiresAt was added to object type EnterpriseField announcementUserDismissible was added to object type EnterpriseField failedInvitations was added to object type EnterpriseOwnerInfoArgument invitationSource: OrganizationInvitationSource added to field EnterpriseOwnerInfo.pendingMemberInvitationsOrganization object implements AnnouncementBanner interfaceField announcement was added to object type OrganizationField announcementExpiresAt was added to object type OrganizationField announcementUserDismissible was added to object type OrganizationField invitationSource was added to object type OrganizationInvitationSchema changes for 2023-01-28The GraphQL schema includes these changes:Type RemoveEnterpriseMemberInput was addedType RemoveEnterpriseMemberPayload was addedField removeEnterpriseMember was added to object type MutationSchema changes for 2023-01-27The GraphQL schema includes these changes:Type RevertPullRequestInput was addedType RevertPullRequestPayload was addedField revertPullRequest was added to object type MutationThe following changes will be made to the schema:On member MergeQueue.headOid:headOid will be removed. Use entry.headOid instead. Effective 2023-07-01.On member MergeQueue.mergeMethod:mergeMethod will be removed. Use configuration.merge_method instead. Effective 2023-07-01.On member MergeQueue.mergingEntries:mergingEntries will be removed. Effective 2023-07-01.On member MergeQueue.pendingRemovalEntries:pendingRemovalEntries will be removed. Effective 2023-07-01.On member MergeQueueEntry.blockedByMergeConflicts:blockedByMergeConflicts will be removed. Use state instead. Effective 2023-07-01.On member MergeQueueEntry.checkStatus:checkStatus will be removed. Use state instead. Effective 2023-07-01.On member MergeQueueEntry.hasJumpedQueue:hasJumpedQueue will be removed. Use jump instead. Effective 2023-07-01.On member MergeQueueEntry.isSolo:isSolo will be removed. Use solo instead. Effective 2023-07-01.Schema changes for 2023-01-19The GraphQL schema includes these changes:Argument orderBy: OrganizationOrder added to field OrganizationsHovercardContext.relevantOrganizationsArgument orderBy: OrganizationOrder added to field User.organizationsSchema changes for 2023-01-18The GraphQL schema includes these changes:Type AddProjectDraftIssueInput was removedType AddProjectDraftIssuePayload was removedType AddProjectNextItemInput was removedType AddProjectNextItemPayload was removedType DeleteProjectNextItemInput was removedType DeleteProjectNextItemPayload was removedType ProjectItemType was removedType ProjectNext was removedType ProjectNextConnection was removedType ProjectNextEdge was removedType ProjectNextField was removedType ProjectNextFieldCommon was removedType ProjectNextFieldConfiguration was removedType ProjectNextFieldConfigurationConnection was removedType ProjectNextFieldConfigurationEdge was removedType ProjectNextFieldConnection was removedType ProjectNextFieldEdge was removedType ProjectNextFieldType was removedType ProjectNextItem was removedType ProjectNextItemConnection was removedType ProjectNextItemContent was removedType ProjectNextItemEdge was removedType ProjectNextItemFieldValue was removedType ProjectNextItemFieldValueConnection was removedType ProjectNextItemFieldValueEdge was removedType ProjectNextIterationField was removedType ProjectNextIterationFieldConfiguration was removedType ProjectNextIterationFieldIteration was removedType ProjectNextOrderField was removedType ProjectNextOwner was removedType ProjectNextSingleSelectField was removedType ProjectNextSingleSelectFieldOption was removedType ProjectView was removedType ProjectViewConnection was removedType ProjectViewEdge was removedType ProjectViewLayout was removedType SortBy was removedType UpdateProjectDraftIssueInput was removedType UpdateProjectDraftIssuePayload was removedType UpdateProjectNextInput was removedType UpdateProjectNextItemFieldInput was removedType UpdateProjectNextItemFieldPayload was removedType UpdateProjectNextPayload was removedField project was removed from object type DraftIssueField projectItem was removed from object type DraftIssueIssue object type no longer implements ProjectNextOwner interfaceField projectNext (deprecated) was removed from object type IssueField projectNextItems was removed from object type IssueField projectsNext (deprecated) was removed from object type IssueField addProjectDraftIssue (deprecated) was removed from object type MutationField addProjectNextItem (deprecated) was removed from object type MutationField deleteProjectNextItem (deprecated) was removed from object type MutationField updateProjectDraftIssue (deprecated) was removed from object type MutationField updateProjectNext (deprecated) was removed from object type MutationField updateProjectNextItemField (deprecated) was removed from object type MutationOrganization object type no longer implements ProjectNextOwner interfaceField projectNext (deprecated) was removed from object type OrganizationField projectsNext (deprecated) was removed from object type OrganizationPullRequest object type no longer implements ProjectNextOwner interfaceField projectNext (deprecated) was removed from object type PullRequestField projectNextItems (deprecated) was removed from object type PullRequestField projectsNext (deprecated) was removed from object type PullRequestField projectNext (deprecated) was removed from object type RepositoryField projectsNext (deprecated) was removed from object type RepositoryUser object type no longer implements ProjectNextOwner interfaceField projectNext (deprecated) was removed from object type UserField projectsNext (deprecated) was removed from object type UserSchema changes for 2023-01-15The GraphQL schema includes these changes:Argument includeUnpublished: Boolean added to field SponsorsListing.tiersSchema changes for 2023-01-10The GraphQL schema includes these changes:Type OrganizationMigration was addedType OrganizationMigrationState was addedType ProjectNextFieldConfiguration was addedType ProjectNextFieldConfigurationConnection was addedType ProjectNextFieldConfigurationEdge was addedType ProjectNextIterationField was addedType ProjectNextIterationFieldConfiguration was addedType ProjectNextIterationFieldIteration was addedType ProjectNextSingleSelectField was addedType ProjectNextSingleSelectFieldOption was addedType PublishSponsorsTierInput was addedType PublishSponsorsTierPayload was addedType RetireSponsorsTierInput was addedType RetireSponsorsTierPayload was addedType StartOrganizationMigrationInput was addedType StartOrganizationMigrationPayload was addedType StripeConnectAccount was addedField reactionGroups was added to object type AddReactionPayloadInput field headRepositoryId was added to input object type CreatePullRequestInputField publishSponsorsTier was added to object type MutationField retireSponsorsTier was added to object type MutationField startOrganizationMigration was added to object type MutationField totalSponsorshipAmountAsSponsorInCents was added to object type OrganizationArgument activeOnly: Boolean added to field Organization.sponsorshipForViewerAsSponsorArgument activeOnly: Boolean added to field Organization.sponsorshipForViewerAsSponsorableArgument activeOnly: Boolean added to field Organization.sponsorshipsAsMaintainerArgument activeOnly: Boolean added to field Organization.sponsorshipsAsSponsorField fieldConstraints was added to object type ProjectNextField projectFieldConstraint was added to object type ProjectNextItemFieldValueField reactionGroups was added to object type RemoveReactionPayloadField hasVulnerabilityAlertsEnabled was added to object type RepositoryField totalSponsorshipAmountAsSponsorInCents was added to interface SponsorableArgument activeOnly: Boolean added to field Sponsorable.sponsorshipForViewerAsSponsorArgument activeOnly: Boolean added to field Sponsorable.sponsorshipForViewerAsSponsorableArgument activeOnly: Boolean added to field Sponsorable.sponsorshipsAsMaintainerArgument activeOnly: Boolean added to field Sponsorable.sponsorshipsAsSponsorField activeStripeConnectAccount was added to object type SponsorsListingField isActive was added to object type SponsorshipField author was added to object type SponsorshipNewsletterInput field fieldConstraintId was added to input object type UpdateProjectNextItemFieldInputInput field fieldWithSettingId was added to input object type UpdateProjectNextItemFieldInputField totalSponsorshipAmountAsSponsorInCents was added to object type UserArgument activeOnly: Boolean added to field User.sponsorshipForViewerAsSponsorArgument activeOnly: Boolean added to field User.sponsorshipForViewerAsSponsorableArgument activeOnly: Boolean added to field User.sponsorshipsAsMaintainerArgument activeOnly: Boolean added to field User.sponsorshipsAsSponsorThe following changes will be made to the schema:On member PackageType.RUBYGEMS:RUBYGEMS will be removed. Effective 2022-12-28.On member PackageType.MAVEN:MAVEN will be removed. Effective 2023-02-10.Schema changes for 2022-12-09The GraphQL schema includes these changes:Type Claimable was addedType CreateAttributionInvitationInput was addedType CreateAttributionInvitationPayload was addedType CreateSponsorsListingInput was addedType CreateSponsorsListingPayload was addedType MannequinConnection was addedType MannequinEdge was addedType MannequinOrder was addedType MannequinOrderField was addedType SponsorsCountryOrRegionCode was addedField createAttributionInvitation was added to object type MutationField createSponsorsListing was added to object type MutationField mannequins was added to object type OrganizationField isDraft was added to object type SponsorsTierAdminInfoField isPublished was added to object type SponsorsTierAdminInfoField isRetired was added to object type SponsorsTierAdminInfoThe following changes will be made to the schema:On member RepositoryVulnerabilityAlert.fixReason:fixReason will be removed. Effective 2023-04-01.Schema changes for 2022-12-07The GraphQL schema includes these changes:Field fiscalHost was added to object type SponsorsListingWorkflowRun object implements UniformResourceLocatable interfaceThe following changes will be made to the schema:On member PackageType.NPM:NPM will be removed. Effective 2022-11-21.On member PackageType.NUGET:NUGET will be removed. Effective 2022-11-21.Schema changes for 2022-12-02The GraphQL schema includes these changes:Type SponsorsListingFeatureableItem was addedField featureable was added to object type SponsorsListingFeaturedItemSchema changes for 2022-12-01The GraphQL schema includes these changes:Field totalCommentsCount was added to object type PullRequestSchema changes for 2022-11-29The GraphQL schema includes these changes:Enum value 'TRADE_RESTRICTIONwas added to enumRepositoryLockReason'Schema changes for 2022-11-24The GraphQL schema includes these changes:Type AddEnterpriseOrganizationMemberInput was addedType AddEnterpriseOrganizationMemberPayload was addedField addEnterpriseOrganizationMember was added to object type MutationSchema changes for 2022-11-18The GraphQL schema includes these changes:Type SponsorsListingFeaturedItem was addedType SponsorsListingFeaturedItemFeatureableType was addedField featuredItems was added to object type SponsorsListingSchema changes for 2022-11-17The GraphQL schema includes these changes:Argument includeAsSponsor: Boolean added to field Organization.sponsorsActivitiesArgument includeAsSponsor: Boolean added to field Sponsorable.sponsorsActivitiesArgument includeAsSponsor: Boolean added to field User.sponsorsActivitiesSchema changes for 2022-11-16The GraphQL schema includes these changes:Type TransferEnterpriseOrganizationInput was addedType TransferEnterpriseOrganizationPayload was addedField transferEnterpriseOrganization was added to object type MutationArgument 'maintainerLogins: [String!]added to fieldOrganization.sponsorshipsAsSponsor'Argument 'maintainerLogins: [String!]added to fieldSponsorable.sponsorshipsAsSponsor'Field contactEmailAddress was added to object type SponsorsListingField nameRaw was added to object type SubmoduleField pathRaw was added to object type SubmoduleField nameRaw was added to object type TreeEntryField pathRaw was added to object type TreeEntryArgument 'maintainerLogins: [String!]added to fieldUser.sponsorshipsAsSponsor'Schema changes for 2022-11-15The GraphQL schema includes these changes:Input field teamId was added to input object type 'CreateProjectV2Input'Field billingCountryOrRegion was added to object type SponsorsListingField residenceCountryOrRegion was added to object type SponsorsListingThe following changes will be made to the schema:On member Repository.squashPrTitleUsedAsDefault:squashPrTitleUsedAsDefault will be removed. Use Repository.squashMergeCommitTitle instead. Effective 2023-04-01.Schema changes for 2022-11-12The GraphQL schema includes these changes:Input field repositoryId was added to input object type 'CreateProjectV2Input'Schema changes for 2022-11-11The GraphQL schema includes these changes:Type 'LinkProjectV2ToTeamInput' was addedType 'LinkProjectV2ToTeamPayload' was addedType 'ProjectV2Filters' was addedType 'ProjectV2State' was addedType 'UnlinkProjectV2FromTeamInput' was addedType 'UnlinkProjectV2FromTeamPayload' was addedField 'linkProjectV2ToTeamwas added to object typeMutation'Field 'unlinkProjectV2FromTeamwas added to object typeMutation'Argument 'filterBy: ProjectV2Filtersadded to fieldTeam.projectsV2'Argument query: String added to field 'Team.projectsV2'Schema changes for 2022-11-10The GraphQL schema includes these changes:Argument since: DateTime added to field Organization.sponsorsActivitiesArgument until: DateTime added to field Organization.sponsorsActivitiesArgument since: DateTime added to field Sponsorable.sponsorsActivitiesArgument until: DateTime added to field Sponsorable.sponsorsActivitiesArgument since: DateTime added to field User.sponsorsActivitiesArgument until: DateTime added to field User.sponsorsActivitiesSchema changes for 2022-11-05The GraphQL schema includes these changes:Field hasDiscussionsEnabled was added to interface RepositoryInfoSchema changes for 2022-11-02The GraphQL schema includes these changes:Type 'ArchiveProjectV2ItemInput' was addedType 'ArchiveProjectV2ItemPayload' was addedType 'LinkProjectV2ToRepositoryInput' was addedType 'LinkProjectV2ToRepositoryPayload' was addedType 'UnarchiveProjectV2ItemInput' was addedType 'UnarchiveProjectV2ItemPayload' was addedType 'UnlinkProjectV2FromRepositoryInput' was addedType 'UnlinkProjectV2FromRepositoryPayload' was addedField lockAllowsFetchAndMerge was added to object type BranchProtectionRuleField lockBranch was added to object type BranchProtectionRuleField requireLastPushApproval was added to object type BranchProtectionRuleInput field lockAllowsFetchAndMerge was added to input object type CreateBranchProtectionRuleInputInput field lockBranch was added to input object type CreateBranchProtectionRuleInputInput field requireLastPushApproval was added to input object type CreateBranchProtectionRuleInputField 'archiveProjectV2Itemwas added to object typeMutation'Field 'linkProjectV2ToRepositorywas added to object typeMutation'Field 'unarchiveProjectV2Itemwas added to object typeMutation'Field 'unlinkProjectV2FromRepositorywas added to object typeMutation'Enum value 'TRACKED_BYwas added to enumProjectNextFieldType'Enum value 'TRACKED_BYwas added to enumProjectV2FieldType'Field hasDiscussionsEnabled was added to object type RepositoryInput field lockAllowsFetchAndMerge was added to input object type UpdateBranchProtectionRuleInputInput field lockBranch was added to input object type UpdateBranchProtectionRuleInputInput field requireLastPushApproval was added to input object type UpdateBranchProtectionRuleInputInput field hasDiscussionsEnabled was added to input object type UpdateRepositoryInputThe following changes will be made to the schema:On member ProjectNextFieldType.TRACKED_BY:TRACKED_BY will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.Schema changes for 2022-10-24The GraphQL schema includes these changes:Field filename was added to object type IssueTemplateSchema changes for 2022-10-21The GraphQL schema includes these changes:Field teams was added to object type 'ProjectV2'Field 'projectV2was added to object typeTeam'Field 'projectsV2was added to object typeTeam'Schema changes for 2022-10-19The GraphQL schema includes these changes:Field language was added to object type TreeEntrySchema changes for 2022-10-18The GraphQL schema includes these changes:Type Comparison was addedType ComparisonCommitConnection was addedType ComparisonStatus was addedType 'ProjectV2SortByField' was addedType 'ProjectV2SortByFieldConnection' was addedType 'ProjectV2SortByFieldEdge' was addedField sortByFields was added to object type 'ProjectV2View'Field verticalGroupByFields was added to object type 'ProjectV2View'Field compare was added to object type RefThe following changes will be made to the schema:On member ProjectV2View.sortBy:sortBy will be removed. Check out the ProjectV2View#sort_by_fields API as an example for the more capable alternative. Effective 2023-04-01.On member ProjectV2View.verticalGroupBy:verticalGroupBy will be removed. Check out the ProjectV2View#vertical_group_by_fields API as an example for the more capable alternative. Effective 2023-04-01.Schema changes for 2022-10-07The GraphQL schema includes these changes:Enum value PUB was added to enum DependencyGraphEcosystemField groupByFields was added to object type 'ProjectV2View'Enum value PUB was added to enum SecurityAdvisoryEcosystemThe following changes will be made to the schema:On member ProjectV2View.groupBy:groupBy will be removed. Check out the ProjectV2View#group_by_fields API as an example for the more capable alternative. Effective 2023-04-01.Schema changes for 2022-10-03The GraphQL schema includes these changes:Type CreateLinkedBranchInput was addedType CreateLinkedBranchPayload was addedType DeleteLinkedBranchInput was addedType DeleteLinkedBranchPayload was addedType LinkedBranch was addedType LinkedBranchConnection was addedType LinkedBranchEdge was addedField linkedBranches was added to object type IssueField createLinkedBranch was added to object type MutationField deleteLinkedBranch was added to object type MutationSchema changes for 2022-09-30The GraphQL schema includes these changes:Field view was added to object type 'ProjectV2'Schema changes for 2022-09-28The GraphQL schema includes these changes:The following changes will be made to the schema:On member AddProjectDraftIssueInput.assigneeIds:assigneeIds will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectDraftIssueInput.body:body will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectDraftIssueInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectDraftIssueInput.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectDraftIssuePayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectNextItemInput.contentId:contentId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectNextItemInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member AddProjectNextItemPayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member DeleteProjectNextItemInput.itemId:itemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member DeleteProjectNextItemInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member DeleteProjectNextItemPayload.deletedItemId:deletedItemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Issue.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Issue.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.addProjectDraftIssue:addProjectDraftIssue will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.addProjectNextItem:addProjectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.deleteProjectNextItem:deleteProjectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.updateProjectDraftIssue:updateProjectDraftIssue will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.updateProjectNext:updateProjectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Mutation.updateProjectNextItemField:updateProjectNextItemField will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Organization.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Organization.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Organization.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.closed:closed will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.defaultView:defaultView will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.description:description will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.fieldConstraints:fieldConstraints will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.fields:fields will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.items:items will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.number:number will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.owner:owner will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.public:public will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.repositories:repositories will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.resourcePath:resourcePath will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.shortDescription:shortDescription will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.url:url will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNext.views:views will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldCommon.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.ASSIGNEES:ASSIGNEES will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.DATE:DATE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.ITERATION:ITERATION will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.LABELS:LABELS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.LINKED_PULL_REQUESTS:LINKED_PULL_REQUESTS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.MILESTONE:MILESTONE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.NUMBER:NUMBER will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.REPOSITORY:REPOSITORY will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.REVIEWERS:REVIEWERS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.SINGLE_SELECT:SINGLE_SELECT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.TEXT:TEXT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.TITLE:TITLE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextFieldType.TRACKS:TRACKS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.content:content will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.fieldValues:fieldValues will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.isArchived:isArchived will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.type:type will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItem.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.projectField:projectField will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.projectFieldConstraint:projectFieldConstraint will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.projectItem:projectItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextItemFieldValue.value:value will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.configuration:configuration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldConfiguration.completedIterations:completedIterations will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldConfiguration.duration:duration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldConfiguration.iterations:iterations will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldConfiguration.startDay:startDay will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldIteration.duration:duration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldIteration.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldIteration.startDate:startDate will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldIteration.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextIterationFieldIteration.titleHTML:titleHtml will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOrderField.CREATED_AT:CREATED_AT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOrderField.NUMBER:NUMBER will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOrderField.TITLE:TITLE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOrderField.UPDATED_AT:UPDATED_AT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOwner.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextOwner.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextRecent.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.options:options will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectFieldOption.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectFieldOption.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectNextSingleSelectFieldOption.nameHTML:nameHtml will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.filter:filter will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.groupBy:groupBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.groupedItems:groupedItems will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.items:items will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.layout:layout will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.number:number will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.sortBy:sortBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.verticalGroupBy:verticalGroupBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member ProjectView.visibleFields:visibleFields will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member PullRequest.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member PullRequest.projectNextItems:projectNextItems will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member PullRequest.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Repository.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Repository.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member Repository.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.closed:closed will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.description:description will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.public:public will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.shortDescription:shortDescription will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextInput.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextItemFieldInput.fieldConstraintId:fieldConstraintId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextItemFieldInput.fieldId:fieldId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextItemFieldInput.itemId:itemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextItemFieldInput.value:value will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextItemFieldPayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member UpdateProjectNextPayload.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member User.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member User.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.On member User.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2023-01-01.Schema changes for 2022-09-27The GraphQL schema includes these changes:Field dashboardResourcePath was added to object type SponsorsListingField dashboardUrl was added to object type SponsorsListingField resourcePath was added to object type SponsorsListingField url was added to object type SponsorsListingSchema changes for 2022-09-22The GraphQL schema includes these changes:Field databaseId was added to interface MigrationField databaseId was added to object type RepositoryMigrationSchema changes for 2022-09-16The GraphQL schema includes these changes:Type 'ClearProjectV2ItemFieldValueInput' was addedType 'ClearProjectV2ItemFieldValuePayload' was addedField pullRequestReviewComment was added to object type DeletePullRequestReviewCommentPayloadArgument hasTwoFactorEnabled: Boolean added to field Enterprise.membersArgument hasTwoFactorEnabled: Boolean added to field EnterpriseOwnerInfo.adminsField 'clearProjectV2ItemFieldValuewas added to object typeMutation'Schema changes for 2022-09-15The GraphQL schema includes these changes:Type CheckRunState was addedType CheckRunStateCount was addedType StatusContextStateCount was addedField fields was added to object type 'ProjectV2View'Field checkRunCount was added to object type StatusCheckRollupContextConnectionField checkRunCountsByState was added to object type StatusCheckRollupContextConnectionField statusContextCount was added to object type StatusCheckRollupContextConnectionField statusContextCountsByState was added to object type StatusCheckRollupContextConnectionThe following changes will be made to the schema:On member ProjectV2View.visibleFields:visibleFields will be removed. Check out the ProjectV2View#fields API as an example for the more capable alternative. Effective 2023-01-01.Schema changes for 2022-09-14The GraphQL schema includes these changes:Field diffSide was added to object type PullRequestThreadField line was added to object type PullRequestThreadField startDiffSide was added to object type PullRequestThreadField startLine was added to object type PullRequestThreadSchema changes for 2022-09-08The GraphQL schema includes these changes:Type EnterpriseAllowPrivateRepositoryForkingPolicyValue was addedField changedFilesIfAvailable was added to object type CommitField allowPrivateRepositoryForkingSettingPolicyValue was added to object type EnterpriseOwnerInfoInput field policyValue was added to input object type UpdateEnterpriseAllowPrivateRepositoryForkingSettingInputThe following changes will be made to the schema:On member Commit.changedFiles:changedFiles will be removed. Use changedFilesIfAvailable instead. Effective 2023-01-01.Schema changes for 2022-09-07The GraphQL schema includes these changes:Type SshSignature was addedType WorkflowRunConnection was addedType WorkflowRunEdge was addedType WorkflowRunOrder was addedType WorkflowRunOrderField was addedInput field conclusions was added to input object type CheckRunFilterInput field statuses was added to input object type CheckRunFilterField runs was added to object type WorkflowSchema changes for 2022-09-01The GraphQL schema includes these changes:Type MergeCommitMessage was addedType MergeCommitTitle was addedType SquashMergeCommitMessage was addedType SquashMergeCommitTitle was addedField mergeCommitMessage was added to object type RepositoryField mergeCommitTitle was added to object type RepositoryField squashMergeCommitMessage was added to object type RepositoryField squashMergeCommitTitle was added to object type RepositorySchema changes for 2022-08-26The GraphQL schema includes these changes:Enum value GITHUB was removed from enum MigrationSourceTypeEnum value GITLAB was removed from enum MigrationSourceTypeSchema changes for 2022-08-24The GraphQL schema includes these changes:Input field createLabelsIfMissing was added to input object type TransferIssueInputSchema changes for 2022-08-22The GraphQL schema includes these changes:The following changes will be made to the schema:On member ProjectView.groupedItems:groupedItems will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.Schema changes for 2022-08-19The GraphQL schema includes these changes:Type UpdateOrganizationWebCommitSignoffSettingInput was addedType UpdateOrganizationWebCommitSignoffSettingPayload was addedType UpdateRepositoryWebCommitSignoffSettingInput was addedType UpdateRepositoryWebCommitSignoffSettingPayload was addedEnum value UNAFFILIATED was added to enum EnterpriseUserAccountMembershipRoleField updateOrganizationWebCommitSignoffSetting was added to object type MutationField updateRepositoryWebCommitSignoffSetting was added to object type MutationField webCommitSignoffRequired was added to object type OrganizationEnum value TRACKS was added to enum ProjectNextFieldTypeEnum value TASKS (deprecated) was removed from enum ProjectNextFieldTypeEnum value TRACKS was added to enum 'ProjectV2FieldType'Enum value TASKS was removed from enum 'ProjectV2FieldType'Field webCommitSignoffRequired was added to object type RepositoryField dismissComment was added to object type RepositoryVulnerabilityAlertInput field lockSource was added to input object type StartRepositoryMigrationInputThe following changes will be made to the schema:On member ProjectNextFieldType.TRACKS:TRACKS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.Schema changes for 2022-08-16The GraphQL schema includes these changes:Field slug was added to object type DiscussionCategoryField discussionCategory was added to object type RepositorySchema changes for 2022-08-11The GraphQL schema includes these changes:Input field targetRepoVisibility was added to input object type StartRepositoryMigrationInputSchema changes for 2022-08-06The GraphQL schema includes these changes:Enum value TASKS was added to enum ProjectNextFieldTypeEnum value TRACKS (deprecated) was removed from enum ProjectNextFieldTypeEnum value TASKS was added to enum 'ProjectV2FieldType'Enum value TRACKS was removed from enum 'ProjectV2FieldType'The following changes will be made to the schema:On member ProjectNextFieldType.TASKS:TASKS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.Schema changes for 2022-08-04The GraphQL schema includes these changes:Enum value ACTIONS was added to enum SecurityAdvisoryEcosystemSchema changes for 2022-08-03The GraphQL schema includes these changes:Field size was added to object type TreeEntrySchema changes for 2022-08-02The GraphQL schema includes these changes:Field fieldValueByName was added to object type 'ProjectV2Item'Schema changes for 2022-07-28The GraphQL schema includes these changes:Type PullRequestThread was addedSchema changes for 2022-07-23The GraphQL schema includes these changes:Field fieldValueByName was removed from object type 'ProjectV2Item'Schema changes for 2022-07-22The GraphQL schema includes these changes:Argument 'actions: [SponsorsActivityAction!]added to fieldOrganization.sponsorsActivities'Field fieldValueByName was added to object type 'ProjectV2Item'Argument 'actions: [SponsorsActivityAction!]added to fieldSponsorable.sponsorsActivities'Argument 'actions: [SponsorsActivityAction!]added to fieldUser.sponsorsActivities'Schema changes for 2022-07-19The GraphQL schema includes these changes:Type EnterpriseUserAccountConnection was removedType EnterpriseUserAccountEdge was removedField userAccounts (deprecated) was removed from object type EnterpriseField items was removed from object type 'ProjectV2View'Argument 'orderBy: ProjectV2FieldOrderadded to fieldProjectV2View.groupBy'Argument 'orderBy: ProjectV2FieldOrderadded to fieldProjectV2View.verticalGroupBy'Argument 'orderBy: ProjectV2FieldOrderadded to fieldProjectV2View.visibleFields'Field items (deprecated) was removed from object type ProjectViewSchema changes for 2022-07-14The GraphQL schema includes these changes:Type 'ProjectV2ItemFieldValueOrder' was addedType 'ProjectV2ItemFieldValueOrderField' was addedArgument 'orderBy: ProjectV2ItemFieldValueOrderadded to fieldProjectV2Item.fieldValues'Argument orderBy: PullRequestOrder added to field 'ProjectV2ItemFieldPullRequestValue.pullRequests'Schema changes for 2022-07-11The GraphQL schema includes these changes:Type 'ProjectV2FieldOrder' was addedType 'ProjectV2FieldOrderField' was addedType 'ProjectV2ItemOrder' was addedType 'ProjectV2ItemOrderField' was addedType 'ProjectV2ViewOrder' was addedType 'ProjectV2ViewOrderField' was addedArgument 'orderBy: ProjectV2FieldOrderadded to fieldProjectV2.fields'Argument 'orderBy: ProjectV2ItemOrderadded to fieldProjectV2.items'Argument orderBy: RepositoryOrder added to field 'ProjectV2.repositories'Argument 'orderBy: ProjectV2ViewOrderadded to fieldProjectV2.views'Schema changes for 2022-06-29The GraphQL schema includes these changes:Type RepositoryVulnerabilityAlertDependencyScope was addedArgument 'dependencyScopes: [RepositoryVulnerabilityAlertDependencyScope!]added to fieldRepository.vulnerabilityAlerts'Field dependencyScope was added to object type RepositoryVulnerabilityAlertEnum value ERLANG was added to enum SecurityAdvisoryEcosystemSchema changes for 2022-06-24The GraphQL schema includes these changes:Input field AddProjectDraftIssueInput.projectId changed type from ID! to IDInput field AddProjectDraftIssueInput.title changed type from String! to StringInput field AddProjectNextItemInput.contentId changed type from ID! to IDInput field AddProjectNextItemInput.projectId changed type from ID! to IDInput field DeleteProjectNextItemInput.itemId changed type from ID! to IDInput field DeleteProjectNextItemInput.projectId changed type from ID! to IDInput field UpdateProjectNextInput.projectId changed type from ID! to IDInput field UpdateProjectNextItemFieldInput.itemId changed type from ID! to IDInput field UpdateProjectNextItemFieldInput.projectId changed type from ID! to IDInput field UpdateProjectNextItemFieldInput.value changed type from String! to StringThe following changes will be made to the schema:On member AddProjectDraftIssueInput.assigneeIds:assigneeIds will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectDraftIssueInput.body:body will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectDraftIssueInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectDraftIssueInput.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectDraftIssuePayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectNextItemInput.contentId:contentId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectNextItemInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member AddProjectNextItemPayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member DeleteProjectNextItemInput.itemId:itemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member DeleteProjectNextItemInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member DeleteProjectNextItemPayload.deletedItemId:deletedItemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Issue.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Issue.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member LockMergeQueueInput.branch:branch will be removed. Effective 2022-10-01.On member MergeLockedMergeGroupInput.branch:branch will be removed. Effective 2022-10-01.On member Mutation.addProjectDraftIssue:addProjectDraftIssue will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Mutation.addProjectNextItem:addProjectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Mutation.deleteProjectNextItem:deleteProjectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Mutation.updateProjectDraftIssue:updateProjectDraftIssue will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Mutation.updateProjectNext:updateProjectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Mutation.updateProjectNextItemField:updateProjectNextItemField will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Organization.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Organization.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Organization.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.closed:closed will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.defaultView:defaultView will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.description:description will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.fieldConstraints:fieldConstraints will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.fields:fields will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.items:items will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.number:number will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.owner:owner will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.public:public will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.repositories:repositories will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.resourcePath:resourcePath will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.shortDescription:shortDescription will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.url:url will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNext.views:views will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldCommon.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.ASSIGNEES:ASSIGNEES will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.DATE:DATE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.ITERATION:ITERATION will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.LABELS:LABELS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.LINKED_PULL_REQUESTS:LINKED_PULL_REQUESTS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.MILESTONE:MILESTONE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.NUMBER:NUMBER will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.REPOSITORY:REPOSITORY will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.REVIEWERS:REVIEWERS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.SINGLE_SELECT:SINGLE_SELECT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.TEXT:TEXT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.TITLE:TITLE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextFieldType.TRACKS:TRACKS will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.content:content will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.fieldValues:fieldValues will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.isArchived:isArchived will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.type:type will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItem.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.creator:creator will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.projectField:projectField will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.projectFieldConstraint:projectFieldConstraint will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.projectItem:projectItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextItemFieldValue.value:value will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.configuration:configuration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldConfiguration.completedIterations:completedIterations will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldConfiguration.duration:duration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldConfiguration.iterations:iterations will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldConfiguration.startDay:startDay will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldIteration.duration:duration will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldIteration.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldIteration.startDate:startDate will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldIteration.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextIterationFieldIteration.titleHTML:titleHtml will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOrderField.CREATED_AT:CREATED_AT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOrderField.NUMBER:NUMBER will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOrderField.TITLE:TITLE will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOrderField.UPDATED_AT:UPDATED_AT will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOwner.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextOwner.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextRecent.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.dataType:dataType will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.options:options will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.settings:settings will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectField.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectFieldOption.id:id will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectFieldOption.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectNextSingleSelectFieldOption.nameHTML:nameHtml will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.createdAt:createdAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.databaseId:databaseId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.filter:filter will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.groupBy:groupBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.items:items will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.layout:layout will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.name:name will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.number:number will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.project:project will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.sortBy:sortBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.updatedAt:updatedAt will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.verticalGroupBy:verticalGroupBy will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member ProjectView.visibleFields:visibleFields will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member PullRequest.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member PullRequest.projectNextItems:projectNextItems will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member PullRequest.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Repository.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Repository.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member Repository.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UnlockAndResetMergeGroupInput.branch:branch will be removed. Effective 2022-10-01.On member UpdateProjectNextInput.closed:closed will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextInput.description:description will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextInput.projectId:projectId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextInput.public:public will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextInput.shortDescription:shortDescription will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextInput.title:title will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextItemFieldInput.fieldConstraintId:fieldConstraintId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextItemFieldInput.fieldId:fieldId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextItemFieldInput.itemId:itemId will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextItemFieldInput.value:value will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextItemFieldPayload.projectNextItem:projectNextItem will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member UpdateProjectNextPayload.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member User.projectNext:projectNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member User.projectsNext:projectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.On member User.recentProjectsNext:recentProjectsNext will be removed. Follow the ProjectV2 guide at https://github.blog/changelog/2022-06-23-the-new-github-issues-june-23rd-update/, to find a suitable replacement. Effective 2022-10-01.Schema changes for 2022-06-23The GraphQL schema includes these changes:Type AddDiscussionPollVoteInput was addedType AddDiscussionPollVotePayload was addedType 'AddProjectV2DraftIssueInput' was addedType 'AddProjectV2DraftIssuePayload' was addedType 'AddProjectV2ItemByIdInput' was addedType 'AddProjectV2ItemByIdPayload' was addedType 'CreateProjectV2Input' was addedType 'CreateProjectV2Payload' was addedType 'DeleteProjectV2ItemInput' was addedType 'DeleteProjectV2ItemPayload' was addedType DiscussionPoll was addedType DiscussionPollOption was addedType DiscussionPollOptionConnection was addedType DiscussionPollOptionEdge was addedType DiscussionPollOptionOrder was addedType DiscussionPollOptionOrderField was addedType OrganizationOrUser was addedType 'ProjectV2' was addedType 'ProjectV2Connection' was addedType 'ProjectV2Edge' was addedType 'ProjectV2Field' was addedType 'ProjectV2FieldCommon' was addedType 'ProjectV2FieldConfiguration' was addedType 'ProjectV2FieldConfigurationConnection' was addedType 'ProjectV2FieldConfigurationEdge' was addedType 'ProjectV2FieldConnection' was addedType 'ProjectV2FieldEdge' was addedType 'ProjectV2FieldType' was addedType 'ProjectV2FieldValue' was addedType 'ProjectV2Item' was addedType 'ProjectV2ItemConnection' was addedType 'ProjectV2ItemContent' was addedType 'ProjectV2ItemEdge' was addedType 'ProjectV2ItemFieldDateValue' was addedType 'ProjectV2ItemFieldIterationValue' was addedType 'ProjectV2ItemFieldLabelValue' was addedType 'ProjectV2ItemFieldMilestoneValue' was addedType 'ProjectV2ItemFieldNumberValue' was addedType 'ProjectV2ItemFieldPullRequestValue' was addedType 'ProjectV2ItemFieldRepositoryValue' was addedType 'ProjectV2ItemFieldReviewerValue' was addedType 'ProjectV2ItemFieldSingleSelectValue' was addedType 'ProjectV2ItemFieldTextValue' was addedType 'ProjectV2ItemFieldUserValue' was addedType 'ProjectV2ItemFieldValue' was addedType 'ProjectV2ItemFieldValueCommon' was addedType 'ProjectV2ItemFieldValueConnection' was addedType 'ProjectV2ItemFieldValueEdge' was addedType 'ProjectV2ItemType' was addedType 'ProjectV2IterationField' was addedType 'ProjectV2IterationFieldConfiguration' was addedType 'ProjectV2IterationFieldIteration' was addedType 'ProjectV2Order' was addedType 'ProjectV2OrderField' was addedType 'ProjectV2Owner' was addedType 'ProjectV2Recent' was addedType 'ProjectV2SingleSelectField' was addedType 'ProjectV2SingleSelectFieldOption' was addedType 'ProjectV2SortBy' was addedType 'ProjectV2SortByConnection' was addedType 'ProjectV2SortByEdge' was addedType 'ProjectV2View' was addedType 'ProjectV2ViewConnection' was addedType 'ProjectV2ViewEdge' was addedType 'ProjectV2ViewLayout' was addedType RequestedReviewerConnection was addedType RequestedReviewerEdge was addedType 'UpdateProjectV2DraftIssueInput' was addedType 'UpdateProjectV2DraftIssuePayload' was addedType 'UpdateProjectV2Input' was addedType 'UpdateProjectV2ItemFieldValueInput' was addedType 'UpdateProjectV2ItemFieldValuePayload' was addedType 'UpdateProjectV2ItemPositionInput' was addedType 'UpdateProjectV2ItemPositionPayload' was addedType 'UpdateProjectV2Payload' was addedField poll was added to object type DiscussionField 'projectV2Itemswas added to object typeDraftIssue'Field 'projectsV2was added to object typeDraftIssue'Issue object implements 'ProjectV2Owner' interfaceField projectItems was added to object type IssueField 'projectV2was added to object typeIssue'Field 'projectsV2was added to object typeIssue'Field addDiscussionPollVote was added to object type MutationField 'addProjectV2DraftIssuewas added to object typeMutation'Field 'addProjectV2ItemByIdwas added to object typeMutation'Field 'createProjectV2was added to object typeMutation'Field 'deleteProjectV2Itemwas added to object typeMutation'Field 'updateProjectV2was added to object typeMutation'Field 'updateProjectV2DraftIssuewas added to object typeMutation'Field 'updateProjectV2ItemFieldValuewas added to object typeMutation'Field 'updateProjectV2ItemPositionwas added to object typeMutation'Enum value SUSPENDED was added to enum OrgRemoveMemberAuditEntryMembershipTypeOrganization object implements 'ProjectV2Owner' interfaceOrganization object implements 'ProjectV2Recent' interfaceField 'projectV2was added to object typeOrganization'Field 'projectsV2was added to object typeOrganization'Field recentProjects was added to object type OrganizationPullRequest object implements 'ProjectV2Owner' interfaceField projectItems was added to object type PullRequestField 'projectV2was added to object typePullRequest'Field 'projectsV2was added to object typePullRequest'Field viewerCanEditFiles was added to object type PullRequestRepository object implements 'ProjectV2Recent' interfaceField allowUpdateBranch was added to object type RepositoryField 'projectV2was added to object typeRepository'Field 'projectsV2was added to object typeRepository'Field recentProjects was added to object type RepositoryUser object implements 'ProjectV2Owner' interfaceUser object implements 'ProjectV2Recent' interfaceField 'projectV2was added to object typeUser'Field 'projectsV2was added to object typeUser'Field recentProjects was added to object type UserThe following changes will be made to the schema:On member RepositoryVulnerabilityAlert.fixReason:fixReason will be removed. Effective 2022-10-01.Schema changes for 2022-06-13The GraphQL schema includes these changes:The following changes will be made to the schema:On member DependencyGraphDependency.packageLabel:packageLabel will be removed. Use normalized packageName field instead. Effective 2022-10-01.Schema changes for 2022-06-10The GraphQL schema includes these changes:Enum value RUST was added to enum DependencyGraphEcosystemField squashPrTitleUsedAsDefault was added to object type RepositorySchema changes for 2022-06-06The GraphQL schema includes these changes:Type SecurityAdvisoryClassification was addedType 'ProjectV2Owner' was removedIssue object type no longer implements 'ProjectV2Owner' interfaceOrganization object type no longer implements 'ProjectV2Owner' interfacePullRequest object type no longer implements 'ProjectV2Owner' interfaceArgument 'classifications: [SecurityAdvisoryClassification!]added to fieldQuery.securityAdvisories'Argument 'classifications: [SecurityAdvisoryClassification!]added to fieldQuery.securityVulnerabilities'Field classification was added to object type SecurityAdvisoryArgument 'classifications: [SecurityAdvisoryClassification!]added to fieldSecurityAdvisory.vulnerabilities'User object type no longer implements 'ProjectV2Owner' interfaceSchema changes for 2022-05-31The GraphQL schema includes these changes:Field viewerIsFollowing was added to object type OrganizationSchema changes for 2022-05-29The GraphQL schema includes these changes:Type ExternalIdentityAttribute was addedType IssueClosedStateReason was addedType IssueStateReason was addedMember App was added to Union type BranchActorAllowanceActorInput field stateReason was added to input object type CloseIssueInputField stateReason was added to object type ClosedEventField attributes was added to object type ExternalIdentitySamlAttributesField stateReason was added to object type IssueEnum value 'FAILED_VALIDATIONwas added to enumMigrationState'Enum value 'PENDING_VALIDATIONwas added to enumMigrationState'Field stateReason was added to object type ReopenedEventMember App was added to Union type ReviewDismissalAllowanceActorInput field StartRepositoryMigrationInput.accessToken changed type from String to String!The following changes will be made to the schema:On member RemovePullRequestFromMergeQueueInput.branch:branch will be removed. Effective 2022-10-01.Schema changes for 2022-05-10The GraphQL schema includes these changes:Type FollowOrganizationInput was addedType FollowOrganizationPayload was addedType UnfollowOrganizationInput was addedType UnfollowOrganizationPayload was addedType UpdateTeamsRepositoryInput was addedType UpdateTeamsRepositoryPayload was addedArgument 'organizationLogins: [String!]added to fieldEnterpriseOwnerInfo.pendingMemberInvitations'Field migrationLogUrl was added to interface MigrationField repositoryName was added to interface MigrationField followOrganization was added to object type MutationField unfollowOrganization was added to object type MutationField updateTeamsRepository was added to object type MutationArgument repositoryName: String added to field Organization.repositoryMigrationsField items was added to object type ProjectViewField migrationLogUrl was added to object type RepositoryMigrationField repositoryName was added to object type RepositoryMigrationSchema changes for 2022-04-28The GraphQL schema includes these changes:Type PatchStatus was addedField isUnlicensed (deprecated) was removed from object type EnterpriseMemberEdgeField isUnlicensed (deprecated) was removed from object type EnterpriseOutsideCollaboratorEdgeArgument 'organizationLogins: [String!]added to fieldEnterpriseOwnerInfo.admins'Argument hasTwoFactorEnabled: Boolean added to field EnterpriseOwnerInfo.outsideCollaboratorsArgument 'organizationLogins: [String!]added to fieldEnterpriseOwnerInfo.outsideCollaborators'Field isUnlicensed (deprecated) was removed from object type EnterprisePendingMemberInvitationEdgeField changeType was added to object type PullRequestChangedFileSchema changes for 2022-04-21The GraphQL schema includes these changes:Type AddProjectDraftIssueInput was addedType AddProjectDraftIssuePayload was addedType UpdateProjectDraftIssueInput was addedType UpdateProjectDraftIssuePayload was addedField availableSeats (deprecated) was removed from object type EnterpriseBillingInfoField seats (deprecated) was removed from object type EnterpriseBillingInfoField addProjectDraftIssue was added to object type MutationField updateProjectDraftIssue was added to object type MutationSchema changes for 2022-04-14The GraphQL schema includes these changes:Type 'ProjectV2Owner' was addedIssue object implements 'ProjectV2Owner' interfaceOrganization object implements 'ProjectV2Owner' interfacePullRequest object implements 'ProjectV2Owner' interfaceInput field skipReleases was added to input object type StartRepositoryMigrationInputField lineCount was added to object type TreeEntryUser object implements 'ProjectV2Owner' interfaceThe following changes will be made to the schema:On member UpdateProjectNextItemFieldInput.fieldWithSettingId:fieldWithSettingId will be removed. Use fieldConstraintId instead Effective 2022-10-01.Schema changes for 2022-04-03The GraphQL schema includes these changes:Field blocksCreations was added to object type BranchProtectionRuleInput field blocksCreations was added to input object type CreateBranchProtectionRuleInputField blocksCreations was added to object type RefUpdateRuleInput field blocksCreations was added to input object type UpdateBranchProtectionRuleInputSchema changes for 2022-03-30The GraphQL schema includes these changes:Type CreateSponsorsTierInput was addedType CreateSponsorsTierPayload was addedType DependabotUpdate was addedType DependabotUpdateError was addedType DraftIssue was addedType ProjectItemType was addedType ProjectNextFieldCommon was addedType ProjectNextFieldType was addedType ProjectView was addedType ProjectViewConnection was addedType ProjectViewEdge was addedType ProjectViewLayout was addedType SortBy was addedType TrackedIssueStates was addedType EnterprisePendingCollaboratorConnection was removedType EnterprisePendingCollaboratorEdge was removedInput field CreateMigrationSourceInput.accessToken changed type from String! to StringField pendingCollaborators (deprecated) was removed from object type EnterpriseOwnerInfoField trackedInIssues was added to object type IssueField trackedIssues was added to object type IssueField trackedIssuesCount was added to object type IssueField createSponsorsTier was added to object type MutationField views was added to object type ProjectNextProjectNextField object implements Node interfaceProjectNextField object implements ProjectNextFieldCommon interfaceField dataType was added to object type ProjectNextFieldField type was added to object type ProjectNextItemMember DraftIssue was added to Union type ProjectNextItemContentEnum value 'INVITEE_LOGIN' (deprecated) was removed from enum RepositoryInvitationOrderFieldField dependabotUpdate was added to object type RepositoryVulnerabilityAlertInput field UpdateProjectNextItemFieldInput.fieldId changed type from ID! to IDThe following changes will be made to the schema:On member AddPullRequestToMergeQueueInput.branch:branch will be removed. Effective 2022-07-01.On member Enterprise.userAccounts:userAccounts will be removed. Use the Enterprise.members field instead. Effective 2022-07-01.Schema changes for 2022-02-28The GraphQL schema includes these changes:Type DependencyGraphEcosystem was addedField viewerCanMergeAsAdmin was added to object type PullRequestArgument ecosystem: DependencyGraphEcosystem added to field Query.sponsorablesInput field accessToken was added to input object type StartRepositoryMigrationInputInput field githubPat was added to input object type StartRepositoryMigrationInputThe following changes will be made to the schema:On member PullRequest.viewerCanOverrideMergeQueue:viewerCanOverrideMergeQueue will be removed. Use PullRequest.viewerCanMergeAsAdmin instead. Effective 2022-04-01.On member Repository.defaultMergeQueue:defaultMergeQueue will be removed. Use Repository.mergeQueue instead. Effective 2022-04-01.On member Query.sponsorables.dependencyEcosystem:dependencyEcosystem will be removed. Use the ecosystem argument instead. Effective 2022-07-01.Schema changes for 2022-02-16The GraphQL schema includes these changes:Type RepositoryCodeowners was addedType RepositoryCodeownersError was addedType RepositoryVulnerabilityAlertState was addedType UpdateProjectNextInput was addedType UpdateProjectNextPayload was addedInput field milestoneNumber was added to input object type IssueFiltersField updateProjectNext was added to object type MutationField repositories was added to object type ProjectNextArgument userLinkedOnly: Boolean added to field PullRequest.closingIssuesReferencesField codeowners was added to object type RepositoryField projectNext was added to object type RepositoryField projectsNext was added to object type RepositoryArgument 'states: [RepositoryVulnerabilityAlertState!]added to fieldRepository.vulnerabilityAlerts'Field fixReason was added to object type RepositoryVulnerabilityAlertField fixedAt was added to object type RepositoryVulnerabilityAlertField number was added to object type RepositoryVulnerabilityAlertField state was added to object type RepositoryVulnerabilityAlertSchema changes for 2022-02-07The GraphQL schema includes these changes:Type Import was removedInput field gitArchiveUrl was added to input object type StartRepositoryMigrationInputInput field metadataArchiveUrl was added to input object type StartRepositoryMigrationInputSchema changes for 2022-02-03The GraphQL schema includes these changes:Type AbortQueuedMigrationsInput was addedType AbortQueuedMigrationsPayload was addedType ActorType was addedType CreateMigrationSourceInput was addedType CreateMigrationSourcePayload was addedType GrantEnterpriseOrganizationsMigratorRoleInput was addedType GrantEnterpriseOrganizationsMigratorRolePayload was addedType GrantMigratorRoleInput was addedType GrantMigratorRolePayload was addedType Import was addedType Migration was addedType MigrationSource was addedType MigrationSourceType was addedType MigrationState was addedType RepositoryMigration was addedType RepositoryMigrationConnection was addedType RepositoryMigrationEdge was addedType RepositoryMigrationOrder was addedType RepositoryMigrationOrderDirection was addedType RepositoryMigrationOrderField was addedType RevokeEnterpriseOrganizationsMigratorRoleInput was addedType RevokeEnterpriseOrganizationsMigratorRolePayload was addedType RevokeMigratorRoleInput was addedType RevokeMigratorRolePayload was addedType StartRepositoryMigrationInput was addedType StartRepositoryMigrationPayload was addedType UpdateEnterpriseOwnerOrganizationRoleInput was addedType UpdateEnterpriseOwnerOrganizationRolePayload was addedArgument login: String added to field EnterpriseIdentityProvider.externalIdentitiesArgument userName: String added to field EnterpriseIdentityProvider.externalIdentitiesField projectNextItems was added to object type IssueField abortQueuedMigrations was added to object type MutationField createMigrationSource was added to object type MutationField grantEnterpriseOrganizationsMigratorRole was added to object type MutationField grantMigratorRole was added to object type MutationField revokeEnterpriseOrganizationsMigratorRole was added to object type MutationField revokeMigratorRole was added to object type MutationField startRepositoryMigration was added to object type MutationField updateEnterpriseOwnerOrganizationRole was added to object type MutationArgument login: String added to field OIDCProvider.externalIdentitiesArgument userName: String added to field OIDCProvider.externalIdentitiesField repositoryMigrations was added to object type OrganizationArgument login: String added to field OrganizationIdentityProvider.externalIdentitiesArgument userName: String added to field OrganizationIdentityProvider.externalIdentitiesField public was added to object type ProjectNextField shortDescription was added to object type ProjectNextField isArchived was added to object type ProjectNextItemField projectNextItems was added to object type PullRequestSchema changes for 2022-01-16The GraphQL schema includes these changes:Type OrgEnterpriseOwnerOrder was addedType OrgEnterpriseOwnerOrderField was addedType OrganizationEnterpriseOwnerConnection was addedType OrganizationEnterpriseOwnerEdge was addedEnum value 'LFX_CROWDFUNDINGwas added to enumFundingPlatform'Field enterpriseOwners was added to object type OrganizationEnum value 'ADDED_TO_MERGE_QUEUE_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'REMOVED_FROM_MERGE_QUEUE_EVENTwas added to enumPullRequestTimelineItemsItemType'Schema changes for 2022-01-04The GraphQL schema includes these changes:Type BypassForcePushAllowance was addedType BypassForcePushAllowanceConnection was addedType BypassForcePushAllowanceEdge was addedField bypassForcePushAllowances was added to object type BranchProtectionRuleInput field bypassForcePushActorIds was added to input object type CreateBranchProtectionRuleInputField Push.pusher changed type from User! to Actor!Input field bypassForcePushActorIds was added to input object type UpdateBranchProtectionRuleInputSchema changes for 2021-12-15The GraphQL schema includes these changes:Type ProjectNextOrderField was addedType RoleInOrganization was addedType UpdateOrganizationAllowPrivateRepositoryForkingSettingInput was addedType UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload was addedArgument viewerOrganizationRole: RoleInOrganization added to field Enterprise.organizationsIssue object implements ProjectNextOwner interfaceField projectNext was added to object type IssueField projectsNext was added to object type IssueField updateOrganizationAllowPrivateRepositoryForkingSetting was added to object type MutationField membersCanForkPrivateRepositories was added to object type OrganizationArgument query: String added to field Organization.projectsNextArgument sortBy: ProjectNextOrderField added to field Organization.projectsNextArgument query: String added to field ProjectNextOwner.projectsNextArgument sortBy: ProjectNextOrderField added to field ProjectNextOwner.projectsNextPullRequest object implements ProjectNextOwner interfaceField projectNext was added to object type PullRequestField projectsNext was added to object type PullRequestArgument query: String added to field User.projectsNextArgument sortBy: ProjectNextOrderField added to field User.projectsNextSchema changes for 2021-12-11The GraphQL schema includes these changes:Type ConvertedToDiscussionEvent was addedMember ConvertedToDiscussionEvent was added to Union type IssueTimelineItemsEnum value 'CONVERTED_TO_DISCUSSION_EVENTwas added to enumIssueTimelineItemsItemType'Member ConvertedToDiscussionEvent was added to Union type PullRequestTimelineItemsEnum value 'CONVERTED_TO_DISCUSSION_EVENTwas added to enumPullRequestTimelineItemsItemType'Schema changes for 2021-12-09The GraphQL schema includes these changes:Argument filterByAssignable: Boolean added to field Repository.discussionCategoriesSchema changes for 2021-12-03The GraphQL schema includes these changes:Type BranchActorAllowanceActor was addedType BypassPullRequestAllowance was addedType BypassPullRequestAllowanceConnection was addedType BypassPullRequestAllowanceEdge was addedType ContentAttachment was removedType ContentReference was removedType CreateContentAttachmentInput was removedType CreateContentAttachmentPayload was removedField bypassPullRequestAllowances was added to object type BranchProtectionRuleInput field bypassPullRequestActorIds was added to input object type CreateBranchProtectionRuleInputField createContentAttachment was removed from object type MutationInput field bypassPullRequestActorIds was added to input object type UpdateBranchProtectionRuleInputSchema changes for 2021-11-18The GraphQL schema includes these changes:Type RequiredStatusCheckDescription was addedType RequiredStatusCheckInput was addedField requiredStatusChecks was added to object type BranchProtectionRuleInput field requiredStatusChecks was added to input object type CreateBranchProtectionRuleInputInput field requiredStatusChecks was added to input object type UpdateBranchProtectionRuleInputSchema changes for 2021-11-16The GraphQL schema includes these changes:Argument followRenames: Boolean added to field Organization.repositoryArgument followRenames: Boolean added to field Query.repositoryArgument followRenames: Boolean added to field RepositoryOwner.repositoryArgument followRenames: Boolean added to field User.repositorySchema changes for 2021-11-10The GraphQL schema includes these changes:Type UpdatePullRequestBranchInput was addedType UpdatePullRequestBranchPayload was addedField updatePullRequestBranch was added to object type MutationSchema changes for 2021-10-29The GraphQL schema includes these changes:Type DismissReason was addedType DismissRepositoryVulnerabilityAlertInput was addedType DismissRepositoryVulnerabilityAlertPayload was addedField dismissRepositoryVulnerabilityAlert was added to object type MutationSchema changes for 2021-10-22The GraphQL schema includes these changes:Type AddProjectNextItemInput was addedType AddProjectNextItemPayload was addedType DeleteProjectNextItemInput was addedType DeleteProjectNextItemPayload was addedType OIDCProvider was addedType OIDCProviderType was addedType ProjectNext was addedType ProjectNextConnection was addedType ProjectNextEdge was addedType ProjectNextField was addedType ProjectNextFieldConnection was addedType ProjectNextFieldEdge was addedType ProjectNextItem was addedType ProjectNextItemConnection was addedType ProjectNextItemContent was addedType ProjectNextItemEdge was addedType ProjectNextItemFieldValue was addedType ProjectNextItemFieldValueConnection was addedType ProjectNextItemFieldValueEdge was addedType ProjectNextOwner was addedType UpdateProjectNextItemFieldInput was addedType UpdateProjectNextItemFieldPayload was addedField oidcProvider was added to object type EnterpriseOwnerInfoField addProjectNextItem was added to object type MutationField deleteProjectNextItem was added to object type MutationField updateProjectNextItemField was added to object type MutationOrganization object implements ProjectNextOwner interfaceField projectNext was added to object type OrganizationField projectsNext was added to object type OrganizationUser object implements ProjectNextOwner interfaceField projectNext was added to object type UserField projectsNext was added to object type UserSchema changes for 2021-10-04The GraphQL schema includes these changes:Field repositories was added to object type TopicSchema changes for 2021-09-23The GraphQL schema includes these changes:Enum value RUST was added to enum SecurityAdvisoryEcosystemSchema changes for 2021-09-15The GraphQL schema includes these changes:Type UpdateSponsorshipPreferencesInput was addedType UpdateSponsorshipPreferencesPayload was addedField updateSponsorshipPreferences was added to object type MutationSchema changes for 2021-09-14The GraphQL schema includes these changes:Field forkingAllowed was added to object type RepositorySchema changes for 2021-09-09The GraphQL schema includes these changes:Type 'Base64String' was addedType CancelSponsorshipInput was addedType CancelSponsorshipPayload was addedType CommitMessage was addedType CommittableBranch was addedType CreateCommitOnBranchInput was addedType CreateCommitOnBranchPayload was addedType FileAddition was addedType FileChanges was addedType FileDeletion was addedField cancelSponsorship was added to object type MutationField createCommitOnBranch was added to object type MutationField sponsorsListing (deprecated) was removed from object type QuerySchema changes for 2021-09-03The GraphQL schema includes these changes:Field sponsorshipForViewerAsSponsorable was added to object type OrganizationField sponsorshipForViewerAsSponsorable was added to interface SponsorableField isSponsorOptedIntoEmail was added to object type SponsorshipField sponsorshipForViewerAsSponsorable was added to object type UserSchema changes for 2021-08-27The GraphQL schema includes these changes:DeploymentProtectionRule object type no longer implements Node interfaceField id was removed from object type DeploymentProtectionRuleField isFollowingViewer was added to object type UserSchema changes for 2021-08-25The GraphQL schema includes these changes:Field visibility was added to object type RepositoryField visibility was added to interface RepositoryInfoSchema changes for 2021-08-24The GraphQL schema includes these changes:Input field amount was added to input object type CreateSponsorshipInputInput field isRecurring was added to input object type CreateSponsorshipInputInput field sponsorLogin was added to input object type CreateSponsorshipInputInput field sponsorableLogin was added to input object type CreateSponsorshipInputInput field CreateSponsorshipInput.sponsorId changed type from ID! to IDInput field CreateSponsorshipInput.sponsorableId changed type from ID! to IDInput field CreateSponsorshipInput.tierId changed type from ID! to IDSchema changes for 2021-08-19The GraphQL schema includes these changes:Type CreateSponsorshipInput was addedType CreateSponsorshipPayload was addedField createSponsorship was added to object type MutationSchema changes for 2021-08-18The GraphQL schema includes these changes:Field estimatedNextSponsorsPayoutInCents was added to object type OrganizationField monthlyEstimatedSponsorsIncomeInCents was added to object type OrganizationEnum value INTERNAL was added to enum OrganizationMembersCanCreateRepositoriesSettingValueField estimatedNextSponsorsPayoutInCents was added to interface SponsorableField monthlyEstimatedSponsorsIncomeInCents was added to interface SponsorableField estimatedNextSponsorsPayoutInCents was added to object type UserField monthlyEstimatedSponsorsIncomeInCents was added to object type UserSchema changes for 2021-08-13The GraphQL schema includes these changes:Enum value OTHER was removed from enum SecurityAdvisoryEcosystemSchema changes for 2021-08-12The GraphQL schema includes these changes:Type SponsorshipNewsletter was addedType SponsorshipNewsletterConnection was addedType SponsorshipNewsletterEdge was addedType SponsorshipNewsletterOrder was addedType SponsorshipNewsletterOrderField was addedField sponsorshipNewsletters was added to object type OrganizationField sponsorshipNewsletters was added to interface SponsorableField sponsorshipNewsletters was added to object type UserSchema changes for 2021-08-04The GraphQL schema includes these changes:Field sponsoring was added to object type OrganizationField sponsoring was added to interface SponsorableField sponsoring was added to object type UserSchema changes for 2021-08-03The GraphQL schema includes these changes:Field autoMergeAllowed was added to object type RepositorySchema changes for 2021-08-01The GraphQL schema includes these changes:Type SponsorConnection was addedType SponsorEdge was addedType SponsorOrder was addedType SponsorOrderField was addedField sponsors was added to object type OrganizationField sponsors was added to interface SponsorableField sponsors was added to object type UserSchema changes for 2021-07-27The GraphQL schema includes these changes:Argument membersOnly: Boolean added to field EnterpriseIdentityProvider.externalIdentitiesArgument membersOnly: Boolean added to field OrganizationIdentityProvider.externalIdentitiesField mentions was added to object type ReleaseField isPublic was added to object type SponsorsListingField nextPayoutDate was added to object type SponsorsListingField sponsorable was added to object type SponsorsListingSchema changes for 2021-07-13The GraphQL schema includes these changes:Type SponsorsActivity was addedType SponsorsActivityAction was addedType SponsorsActivityConnection was addedType SponsorsActivityEdge was addedType SponsorsActivityOrder was addedType SponsorsActivityOrderField was addedType SponsorsActivityPeriod was addedField sponsorsActivities was added to object type OrganizationEnum value OTHER was added to enum SecurityAdvisoryEcosystemField sponsorsActivities was added to interface SponsorableField sponsorsActivities was added to object type UserSchema changes for 2021-06-22The GraphQL schema includes these changes:Field ipAllowListEntries was added to object type AppMember App was added to Union type IpAllowListOwnerThe [Access to a repositories dependency graph preview](/graphql/overview/schema-previews#access-to-a-repositories-dependency-graph-preview) includes these changes:Field packageLabel was added to object type DependencyGraphDependencySchema changes for 2021-06-20The GraphQL schema includes these changes:Type Reactor was addedType ReactorConnection was addedType ReactorEdge was addedField reactors was added to object type ReactionGroupThe following changes will be made to the schema:On member ReactionGroup.users:users will be removed. Use the reactors field instead. Effective 2021-10-01.Schema changes for 2021-06-18The GraphQL schema includes these changes:Type IpAllowListForInstalledAppsEnabledSettingValue was addedType UpdateIpAllowListForInstalledAppsEnabledSettingInput was addedType UpdateIpAllowListForInstalledAppsEnabledSettingPayload was addedField requiresConversationResolution was added to object type BranchProtectionRuleInput field requiresConversationResolution was added to input object type CreateBranchProtectionRuleInputField ipAllowListForInstalledAppsEnabledSetting was added to object type EnterpriseOwnerInfoField titleHTML was added to object type IssueField updateIpAllowListForInstalledAppsEnabledSetting was added to object type MutationField ipAllowListForInstalledAppsEnabledSetting was added to object type OrganizationField titleHTML was added to object type PullRequestField requiresConversationResolution was added to object type RefUpdateRuleInput field requiresConversationResolution was added to input object type UpdateBranchProtectionRuleInputSchema changes for 2021-06-07The GraphQL schema includes these changes:Type AddDiscussionCommentInput was addedType AddDiscussionCommentPayload was addedType AddUpvoteInput was addedType AddUpvotePayload was addedType ApproveDeploymentsInput was addedType ApproveDeploymentsPayload was addedType CheckStep was addedType CheckStepConnection was addedType CheckStepEdge was addedType CreateDiscussionInput was addedType CreateDiscussionPayload was addedType CreateEnvironmentInput was addedType CreateEnvironmentPayload was addedType DeleteDiscussionCommentInput was addedType DeleteDiscussionCommentPayload was addedType DeleteDiscussionInput was addedType DeleteDiscussionPayload was addedType DeleteEnvironmentInput was addedType DeleteEnvironmentPayload was addedType DeploymentProtectionRule was addedType DeploymentProtectionRuleConnection was addedType DeploymentProtectionRuleEdge was addedType DeploymentProtectionRuleType was addedType DeploymentRequest was addedType DeploymentRequestConnection was addedType DeploymentRequestEdge was addedType DeploymentReview was addedType DeploymentReviewConnection was addedType DeploymentReviewEdge was addedType DeploymentReviewState was addedType DeploymentReviewer was addedType DeploymentReviewerConnection was addedType DeploymentReviewerEdge was addedType Discussion was addedType DiscussionCategory was addedType DiscussionCategoryConnection was addedType DiscussionCategoryEdge was addedType DiscussionComment was addedType DiscussionCommentConnection was addedType DiscussionCommentEdge was addedType DiscussionConnection was addedType DiscussionEdge was addedType DiscussionOrder was addedType DiscussionOrderField was addedType Environment was addedType EnvironmentConnection was addedType EnvironmentEdge was addedType MarkDiscussionCommentAsAnswerInput was addedType MarkDiscussionCommentAsAnswerPayload was addedType PinnedDiscussion was addedType PinnedDiscussionConnection was addedType PinnedDiscussionEdge was addedType PinnedDiscussionGradient was addedType PinnedDiscussionPattern was addedType RejectDeploymentsInput was addedType RejectDeploymentsPayload was addedType RemoveUpvoteInput was addedType RemoveUpvotePayload was addedType RepositoryDiscussionAuthor was addedType RepositoryDiscussionCommentAuthor was addedType UnmarkDiscussionCommentAsAnswerInput was addedType UnmarkDiscussionCommentAsAnswerPayload was addedType UpdateDiscussionCommentInput was addedType UpdateDiscussionCommentPayload was addedType UpdateDiscussionInput was addedType UpdateDiscussionPayload was addedType UpdateEnvironmentInput was addedType UpdateEnvironmentPayload was addedType Votable was addedType Workflow was addedType WorkflowRun was addedField deployment was added to object type CheckRunField pendingDeploymentRequest was added to object type CheckRunField steps was added to object type CheckRunEnum value PENDING was added to enum CheckStatusStateField creator was added to object type CheckSuiteField workflowRun was added to object type CheckSuiteField addDiscussionComment was added to object type MutationField addUpvote was added to object type MutationField approveDeployments was added to object type MutationField createDiscussion was added to object type MutationField createEnvironment was added to object type MutationField deleteDiscussion was added to object type MutationField deleteDiscussionComment was added to object type MutationField deleteEnvironment was added to object type MutationField markDiscussionCommentAsAnswer was added to object type MutationField rejectDeployments was added to object type MutationField removeUpvote was added to object type MutationField unmarkDiscussionCommentAsAnswer was added to object type MutationField updateDiscussion was added to object type MutationField updateDiscussionComment was added to object type MutationField updateEnvironment was added to object type MutationOrganization object implements RepositoryDiscussionAuthor interfaceOrganization object implements RepositoryDiscussionCommentAuthor interfaceField repositoryDiscussionComments was added to object type OrganizationField repositoryDiscussions was added to object type OrganizationField closingIssuesReferences was added to object type PullRequestRelease object implements Reactable interfaceField databaseId was added to object type ReleaseField reactionGroups was added to object type ReleaseField reactions was added to object type ReleaseField viewerCanReact was added to object type ReleaseField discussion was added to object type RepositoryField discussionCategories was added to object type RepositoryField discussions was added to object type RepositoryField environment was added to object type RepositoryField environments was added to object type RepositoryField pinnedDiscussions was added to object type RepositoryEnum value PENDING was added to enum RequestableCheckStatusStateMember Discussion was added to Union type SearchResultItemField discussionCount was added to object type SearchResultItemConnectionEnum value DISCUSSION was added to enum SearchTypeEnum value GO was added to enum SecurityAdvisoryEcosystemField totalRecurringMonthlyPriceInCents was added to object type SponsorshipConnectionField totalRecurringMonthlyPriceInDollars was added to object type SponsorshipConnectionUser object implements RepositoryDiscussionAuthor interfaceUser object implements RepositoryDiscussionCommentAuthor interfaceField repositoryDiscussionComments was added to object type UserField repositoryDiscussions was added to object type UserThe following changes will be made to the schema:On member PackageType.DOCKER:DOCKER will be removed. Effective 2021-06-21.Schema changes for 2021-05-16The GraphQL schema includes these changes:Argument isApproved: Boolean added to field Organization.domainsField canReceiveOrganizationEmailsWhenNotificationsRestricted was added to object type UserField isApproved was added to object type VerifiableDomainArgument isApproved: Boolean added to field EnterpriseOwnerInfo.domainsSchema changes for 2021-05-12The GraphQL schema includes these changes:Field claimant was added to object type MannequinSchema changes for 2021-05-04The GraphQL schema includes these changes:Type PullRequestTemplate was addedField pullRequestTemplates was added to object type RepositorySchema changes for 2021-04-20The GraphQL schema includes these changes:Type ConvertPullRequestToDraftInput was addedType ConvertPullRequestToDraftPayload was addedField convertPullRequestToDraft was added to object type MutationSchema changes for 2021-04-07The GraphQL schema includes these changes:Field tierSelectedAt was added to object type SponsorshipSchema changes for 2021-03-27The GraphQL schema includes these changes:Field closestLesserValueTier was added to object type SponsorsTierField isCustomAmount was added to object type SponsorsTierField isOneTimePayment was added to object type SponsorshipSchema changes for 2021-03-25The GraphQL schema includes these changes:Field isOneTime was added to object type SponsorsTierSchema changes for 2021-03-21The GraphQL schema includes these changes:Type RequirableByPullRequest was addedField viewerLatestReview was added to object type PullRequestField viewerLatestReviewRequest was added to object type PullRequestCheckRun object implements RequirableByPullRequest interfaceType for argument pullRequestId on field CheckRun.isRequired changed from ID! to IDArgument pullRequestNumber: Int added to field CheckRun.isRequiredStatusContext object implements RequirableByPullRequest interfaceType for argument pullRequestId on field StatusContext.isRequired changed from ID! to IDArgument pullRequestNumber: Int added to field StatusContext.isRequiredSchema changes for 2021-03-19The GraphQL schema includes these changes:Field requiresCodeOwnerReviews was added to object type RefUpdateRuleField viewerAllowedToDismissReviews was added to object type RefUpdateRuleSchema changes for 2021-03-18The GraphQL schema includes these changes:Field isRequired was added to object type CheckRunField isRequired was added to object type StatusContextSchema changes for 2021-03-03The GraphQL schema includes these changes:Field isPinned was added to object type IssueEnum value 'CREATED_ATwas added to enumVerifiableDomainOrderField'Field createdAt was added to object type VerifiableDomainField updatedAt was added to object type VerifiableDomainSchema changes for 2021-03-02The GraphQL schema includes these changes:Field isGitHubStar was added to object type UserField tagCommit was added to object type ReleaseSchema changes for 2021-02-25The GraphQL schema includes these changes:Type ApproveVerifiableDomainInput was addedType ApproveVerifiableDomainPayload was addedField approveVerifiableDomain was added to object type MutationSchema changes for 2021-02-16The GraphQL schema includes these changes:Type CVSS was addedType CWEConnection was addedType CWEEdge was addedType CWE was addedType SponsorsGoal was addedType SponsorsGoalKind was addedField repository was added to object type ReleaseField cvss was added to object type SecurityAdvisoryField cwes was added to object type SecurityAdvisoryField activeGoal was added to object type SponsorsListingSchema changes for 2021-02-05The GraphQL schema includes these changes:Type AutoMergeRequest was addedType SponsorableOrder was addedType SponsorableOrderField was addedType SponsorableItemConnection was addedType SponsorableItemEdge was addedType SponsorableItem was addedType DisablePullRequestAutoMergeInput was addedType DisablePullRequestAutoMergePayload was addedType EnablePullRequestAutoMergeInput was addedType EnablePullRequestAutoMergePayload was addedField sponsorables was added to object type QueryField isSponsoredBy was added to object type OrganizationField sponsorshipForViewerAsSponsor was added to object type OrganizationField isSponsoredBy was added to object type UserField sponsorshipForViewerAsSponsor was added to object type UserField autoMergeRequest was added to object type PullRequestField viewerCanDisableAutoMerge was added to object type PullRequestField viewerCanEnableAutoMerge was added to object type PullRequestField isSponsoredBy was added to interface SponsorableField sponsorshipForViewerAsSponsor was added to interface SponsorableField disablePullRequestAutoMerge was added to object type MutationField enablePullRequestAutoMerge was added to object type MutationSchema changes for 2021-02-01The GraphQL schema includes these changes:Type NotificationRestrictionSettingValue was addedType UpdateNotificationRestrictionSettingInput was addedType UpdateNotificationRestrictionSettingPayload was addedField notificationDeliveryRestrictionEnabledSetting was added to object type OrganizationField notificationsPermalink was added to object type SecurityAdvisoryField notificationDeliveryRestrictionEnabledSetting was added to object type EnterpriseOwnerInfoField updateNotificationRestrictionSetting was added to object type MutationSchema changes for 2021-01-19The GraphQL schema includes these changes:Type ContributionLevel was addedType VerifiableDomainOrder was addedType VerifiableDomainOrderField was addedType VerifiableDomainConnection was addedType VerifiableDomainEdge was addedType VerifiableDomain was addedType VerifiableDomainOwner was addedType AddVerifiableDomainInput was addedType AddVerifiableDomainPayload was addedType DeleteVerifiableDomainInput was addedType DeleteVerifiableDomainPayload was addedType RegenerateVerifiableDomainTokenInput was addedType RegenerateVerifiableDomainTokenPayload was addedType VerifyVerifiableDomainInput was addedType VerifyVerifiableDomainPayload was addedField domains was added to object type OrganizationField isLatest was added to object type ReleaseField latestRelease was added to object type RepositoryEnum value WAITING was added to enum DeploymentStatusStateField contributionLevel was added to object type ContributionCalendarDayField domains was added to object type EnterpriseOwnerInfoField addVerifiableDomain was added to object type MutationField deleteVerifiableDomain was added to object type MutationField regenerateVerifiableDomainToken was added to object type MutationField verifyVerifiableDomain was added to object type MutationSchema changes for 2021-01-12The GraphQL schema includes these changes:Type AutoMergeDisabledEvent was addedType AutoMergeEnabledEvent was addedType AutoRebaseEnabledEvent was addedType AutoSquashEnabledEvent was addedType AddEnterpriseSupportEntitlementInput was addedType AddEnterpriseSupportEntitlementPayload was addedType RemoveEnterpriseSupportEntitlementInput was addedType RemoveEnterpriseSupportEntitlementPayload was addedEnum value WAITING was added to enum CheckStatusStateEnum value 'AUTO_MERGE_DISABLED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'AUTO_MERGE_ENABLED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'AUTO_REBASE_ENABLED_EVENTwas added to enumPullRequestTimelineItemsItemType'Enum value 'AUTO_SQUASH_ENABLED_EVENTwas added to enumPullRequestTimelineItemsItemType'Member AutoMergeDisabledEvent was added to Union type PullRequestTimelineItemsMember AutoMergeEnabledEvent was added to Union type PullRequestTimelineItemsMember AutoRebaseEnabledEvent was added to Union type PullRequestTimelineItemsMember AutoSquashEnabledEvent was added to Union type PullRequestTimelineItemsField supportEntitlements was added to object type EnterpriseOwnerInfoField addEnterpriseSupportEntitlement was added to object type MutationField removeEnterpriseSupportEntitlement was added to object type MutationEnum value WAITING was added to enum RequestableCheckStatusStateSchema changes for 2020-12-09The GraphQL schema includes these changes:Field hasVerifiedOwner was added to object type MarketplaceListingSchema changes for 2020-11-13The GraphQL schema includes these changes:Input field requiresLinearHistory was added to input object type UpdateBranchProtectionRuleInputInput field allowsForcePushes was added to input object type UpdateBranchProtectionRuleInputInput field allowsDeletions was added to input object type UpdateBranchProtectionRuleInputInput field requiresLinearHistory was added to input object type CreateBranchProtectionRuleInputInput field allowsForcePushes was added to input object type CreateBranchProtectionRuleInputInput field allowsDeletions was added to input object type CreateBranchProtectionRuleInputField requiresLinearHistory was added to object type BranchProtectionRuleField allowsForcePushes was added to object type BranchProtectionRuleField allowsDeletions was added to object type BranchProtectionRuleSchema changes for 2020-10-12The GraphQL schema includes these changes:Field updateEnterpriseActionExecutionCapabilitySetting was removed from object type MutationField actionExecutionCapabilitySettingOrganizations was removed from object type EnterpriseOwnerInfoType UpdateEnterpriseActionExecutionCapabilitySettingInput was removedType UpdateEnterpriseActionExecutionCapabilitySettingPayload was removedType ActionExecutionCapabilitySetting was removedSchema changes for 2020-09-30The GraphQL schema includes these changes:Field issuePrioritiesDebug was removed from object type MilestoneSchema changes for 2020-09-23The GraphQL schema includes these changes:Field Blob.isBinary changed type from Boolean! to BooleanField Ref.target changed type from GitObject! to GitObjectUnion member BaseRefDeletedEvent was added to Union type PullRequestTimelineItemEnum value BASE_REF_DELETED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member BaseRefDeletedEvent was added to Union type PullRequestTimelineItemsEnum value PUBLIC_PRIVATE was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value PUBLIC_INTERNAL was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value PRIVATE_INTERNAL was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value PRIVATE was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value NONE was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value INTERNAL was added to enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityEnum value MANNEQUIN was added to enum CommentAuthorAssociationField path was added to object type TreeEntryField isGenerated was added to object type TreeEntryField extension was added to object type TreeEntryField used was added to object type RateLimitField asCodeOwner was added to object type ReviewRequestField viewerViewedState was added to object type PullRequestChangedFileField unmarkFileAsViewed was added to object type MutationField markFileAsViewed was added to object type MutationInput field authorEmail was added to input object type MergePullRequestInputInput field authorEmail was added to input object type MergeBranchInputField isCrossRepository was added to object type UnmarkedAsDuplicateEventField duplicate was added to object type UnmarkedAsDuplicateEventField canonical was added to object type UnmarkedAsDuplicateEventField isCrossRepository was added to object type MarkedAsDuplicateEventField duplicate was added to object type MarkedAsDuplicateEventField canonical was added to object type MarkedAsDuplicateEventField groups was added to object type ExternalIdentityScimAttributesField givenName was added to object type ExternalIdentityScimAttributesField familyName was added to object type ExternalIdentityScimAttributesField emails was added to object type ExternalIdentityScimAttributesField username was added to object type ExternalIdentitySamlAttributesField groups was added to object type ExternalIdentitySamlAttributesField givenName was added to object type ExternalIdentitySamlAttributesField familyName was added to object type ExternalIdentitySamlAttributesField emails was added to object type ExternalIdentitySamlAttributesField isInOrganization was added to object type RepositoryInfoField permalink was added to object type RepositoryInvitationInput field issueTemplate was added to input object type CreateIssueInputField combinedContexts was added to object type StatusField deletedCommentAuthor was added to object type CommentDeletedEventField pullRequest was added to object type BaseRefChangedEventField previousRefName was added to object type BaseRefChangedEventField currentRefName was added to object type BaseRefChangedEventField stargazerCount was added to object type GistField refUpdateRule was added to object type RefField branchProtectionRule was added to object type RefArgument query: String added to field Repository.milestonesField viewerPossibleCommitEmails was added to object type RepositoryField viewerDefaultMergeMethod was added to object type RepositoryField viewerDefaultCommitEmail was added to object type RepositoryField securityPolicyUrl was added to object type RepositoryField issueTemplates was added to object type RepositoryField isUserConfigurationRepository was added to object type RepositoryField isSecurityPolicyEnabled was added to object type RepositoryField isEmpty was added to object type RepositoryField isBlankIssuesEnabled was added to object type RepositoryField contactLinks was added to object type RepositoryField stargazerCount was added to object type RepositoryField isInOrganization was added to object type RepositoryField viewerCanReply was added to object type PullRequestReviewThreadField path was added to object type PullRequestReviewThreadField isOutdated was added to object type PullRequestReviewThreadField isCollapsed was added to object type PullRequestReviewThreadInput field AddPullRequestReviewThreadInput.pullRequestReviewId changed type from ID! to IDInput field pullRequestId was added to input object type AddPullRequestReviewThreadInputField authorCanPushToRepository was added to object type PullRequestReviewField progressPercentage was added to object type MilestoneEnum value MergeStateStatus.DRAFT was deprecated with reason DRAFT state will be removed from this enum and isDraft should be used instead Use PullRequest.isDraft instead. Removal on 2021-01-01 UTC.Field viewerMergeHeadlineText was added to object type PullRequestField viewerMergeBodyText was added to object type PullRequestField viewerCanDeleteHeadRef was added to object type PullRequestField latestReviews was added to object type PullRequestField latestOpinionatedReviews was added to object type PullRequestField isReadByViewer was added to object type PullRequestField progress was added to object type ProjectField file was added to object type CommitField authors was added to object type CommitField isReadByViewer was added to object type IssueField bodyUrl was added to object type IssueField bodyResourcePath was added to object type IssueField stargazerCount was added to object type StarrableField stargazerCount was added to object type TopicType RepositoryContactLink was addedType RefUpdateRule was addedType ProjectProgress was addedType UnmarkFileAsViewedInput was addedType UnmarkFileAsViewedPayload was addedType MarkFileAsViewedPayload was addedType MarkFileAsViewedInput was addedType GitActorEdge was addedType FileViewedState was addedType UserEmailMetadata was addedType GitActorConnection was addedType BaseRefDeletedEvent was addedType IssueTemplate was addedThe following changes will be made to the schema:On member EnterprisePendingMemberInvitationEdge.isUnlicensed: isUnlicensed will be removed. Effective 2020-07-01.On member EnterpriseMemberEdge.isUnlicensed: isUnlicensed will be removed. Effective 2021-01-01.On member EnterpriseOutsideCollaboratorEdge.isUnlicensed: isUnlicensed will be removed. Effective 2021-01-01.On member EnterprisePendingCollaboratorEdge.isUnlicensed: isUnlicensed will be removed. Effective 2021-01-01.On member MergeStateStatus.DRAFT: DRAFT will be removed. Use PullRequest.isDraft instead. Effective 2021-01-01.Schema changes for 2020-06-26The GraphQL schema includes these changes:Type TopicEdge was removedType RegistryPackageVersionEdge was removedType RegistryPackageVersionStatistics was removedType RegistryPackageTagEdge was removedType RegistryPackageFileEdge was removedType RegistryPackageDependencyEdge was removedType RegistryPackageMetadatum was removedType TopicConnection was removedType RegistryPackageTag was removedType RegistryPackageTagConnection was removedType RegistryPackageStatistics was removedType RegistryPackageVersionConnection was removedType RegistryPackageType was removedType RegistryPackage was removedType RegistryPackageFileConnection was removedType RegistryPackageFile was removedType RegistryPackageDependencyType was removedType RegistryPackageDependency was removedType RegistryPackageDependencyConnection was removedType RegistryPackageVersion was removedSchema changes for 2020-06-23The GraphQL schema includes these changes:Argument packageType: PackageType added to field Organization.packagesArgument packageType: PackageType added to field User.packagesArgument packageType: PackageType added to field PackageOwner.packagesArgument packageType: PackageType added to field Repository.packagesSchema changes for 2020-06-18The GraphQL schema includes these changes:Field databaseId was added to object type TeamSchema changes for 2020-06-05The GraphQL schema includes these changes:Enum value TWO_FACTOR_ACCOUNT_RECOVERY was added to enum OrgRemoveMemberAuditEntryReasonSchema changes for 2020-06-01The GraphQL schema includes these changes:Field twitterUsername was added to object type OrganizationField twitterUsername was added to object type UserThe following changes will be made to the schema:On member Blob.isBinary: Type for isBinary will change from Boolean! to Boolean. Effective 2019-07-01.On member Ref.target: Type for target will change from GitObject! to GitObject. Effective 2019-07-01.Schema changes for 2020-05-23The GraphQL schema includes these changes:Field ipAllowListEntries was added to object type OrganizationField ipAllowListEnabledSetting was added to object type OrganizationSchema changes for 2020-05-21The GraphQL schema includes these changes:Enum value AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT was added to enum PullRequestTimelineItemsItemTypeEnum value AUTOMATIC_BASE_CHANGE_FAILED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member AutomaticBaseChangeSucceededEvent was added to Union type PullRequestTimelineItemsUnion member AutomaticBaseChangeFailedEvent was added to Union type PullRequestTimelineItemsType AutomaticBaseChangeSucceededEvent was addedType AutomaticBaseChangeFailedEvent was addedThe following changes will be made to the schema:On member RepositoryCollaboratorEdge.permission: Type for permission will change from RepositoryPermission! to String. Effective 2020-10-01.On member RepositoryInvitation.permission: Type for permission will change from RepositoryPermission! to String. Effective 2020-10-01.On member TeamRepositoryEdge.permission: Type for permission will change from RepositoryPermission! to String. Effective 2020-10-01.Schema changes for 2020-05-19The GraphQL schema includes these changes:Field RepositoryInvitation.invitee changed type from User! to UserDefault value for argument orderBy on field EnterpriseOwnerInfo.pendingCollaborators changed from {"field"=>"INVITEE_LOGIN", "direction"=>"ASC"} to {"field"=>"CREATED_AT", "direction"=>"DESC"}Enum value RepositoryInvitationOrderField.INVITEE_LOGIN was deprecated with reason `INVITEE_LOGIN is no longer a valid field value. Repository invitations can now be associated with an email, not only an invitee. Removal on 2020-10-01 UTC.`Field email was added to object type RepositoryInvitationField pendingCollaboratorInvitations was added to object type EnterpriseOwnerInfoType RepositoryInvitationEdge was addedType RepositoryInvitationConnection was addedThe following changes will be made to the schema:On member EnterpriseOwnerInfo.pendingCollaborators: pendingCollaborators will be removed. Use the pendingCollaboratorInvitations field instead. Effective 2020-10-01.On member RepositoryInvitationOrderField.INVITEE_LOGIN: INVITEE_LOGIN will be removed. Effective 2020-10-01.Schema changes for 2020-05-13The GraphQL schema includes these changes:Field packageName was removed from object type RepositoryVulnerabilityAlertField fixedIn was removed from object type RepositoryVulnerabilityAlertField externalReference was removed from object type RepositoryVulnerabilityAlertField externalIdentifier was removed from object type RepositoryVulnerabilityAlertField affectedRange was removed from object type RepositoryVulnerabilityAlertField isDelisted was removed from object type MarketplaceListingField isApproved was removed from object type MarketplaceListingField hasApprovalBeenRequested was removed from object type MarketplaceListingField pinnedRepositories was removed from object type RepositoryOwnerInput field field was removed from input object type ContributionOrderField pinnedRepositories was removed from object type OrganizationField pinnedRepositories was removed from object type UserType ContributionOrderField was removedDefault value for argument orderBy on field PullRequestReviewContributionsByRepository.contributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field PullRequestContributionsByRepository.contributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field IssueContributionsByRepository.contributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field ContributionsCollection.repositoryContributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field ContributionsCollection.pullRequestReviewContributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field ContributionsCollection.pullRequestContributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Default value for argument orderBy on field ContributionsCollection.issueContributions changed from {"field"=>"OCCURRED_AT", "direction"=>"DESC"} to {"direction"=>"DESC"}Schema changes for 2020-05-12The GraphQL schema includes these changes:Field organizationVerifiedDomainEmails was added to object type UserSchema changes for 2020-05-11The GraphQL schema includes these changes:Field sponsorEntity was added to object type SponsorshipType Sponsor was addedThe following changes will be made to the schema:On member Sponsorship.sponsor: sponsor will be removed. Use Sponsorship.sponsorEntity instead. Effective 2020-10-01.Schema changes for 2020-05-01The GraphQL schema includes these changes:Input field includeAllBranches was added to input object type CloneTemplateRepositoryInputSchema changes for 2020-04-23The following changes will be made to the schema:On member Issue.timeline: timeline will be removed. Use Issue.timelineItems instead. Effective 2020-10-01.On member PullRequest.timeline: timeline will be removed. Use PullRequest.timelineItems instead. Effective 2020-10-01.Schema changes for 2020-04-20The GraphQL schema includes these changes:Enum value USER_ACCOUNT_DELETED was added to enum OrgRemoveMemberAuditEntryReasonSchema changes for 2020-04-15The GraphQL schema includes these changes:Enum value CONVERT_TO_DRAFT_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member ConvertToDraftEvent was added to Union type PullRequestTimelineItemsField DeploymentStatus.creator changed type from Actor to Actor!Field isOverLimit was added to object type StarredRepositoryConnectionField Deployment.creator changed type from Actor to Actor!Field onBehalfOf was added to object type CommitType ConvertToDraftEvent was addedSchema changes for 2020-03-23The GraphQL schema includes these changes:Type IssueOrPullRequestEdge was removedDefault value for argument affiliations on field RepositoryOwner.repositories changed from ["OWNER", "COLLABORATOR"] to __no_default__Default value for argument affiliations on field RepositoryOwner.pinnedRepositories changed from ["OWNER", "COLLABORATOR"] to __no_default__Default value for argument affiliations on field Organization.repositories changed from ["OWNER", "COLLABORATOR"] to ``Default value for argument affiliations on field Organization.pinnedRepositories changed from ["OWNER", "COLLABORATOR"] to ``Default value for argument affiliations on field User.watching changed from ["OWNER", "COLLABORATOR", "ORGANIZATION_MEMBER"] to ``Default value for argument affiliations on field User.repositories changed from ["OWNER", "COLLABORATOR"] to ``Default value for argument affiliations on field User.pinnedRepositories changed from ["OWNER", "COLLABORATOR"] to ``Default value for argument affiliations on field Repository.forks changed from ["OWNER", "COLLABORATOR"] to ``Field submodule was added to object type TreeEntryField reviewDecision was added to object type ReviewStatusHovercardContextField permalink was added to object type SecurityAdvisoryField updateIpAllowListEntry was added to object type MutationField updateIpAllowListEnabledSetting was added to object type MutationField setEnterpriseIdentityProvider was added to object type MutationField removeEnterpriseIdentityProvider was added to object type MutationField deleteIpAllowListEntry was added to object type MutationField createIpAllowListEntry was added to object type MutationField ipAllowListEntries was added to object type EnterpriseOwnerInfoField ipAllowListEnabledSetting was added to object type EnterpriseOwnerInfoField submodules was added to object type RepositoryField reviewDecision was added to object type PullRequestField submodules was added to object type CommitField slug was added to object type EnterpriseType SubmoduleEdge was addedType PullRequestReviewDecision was addedType UpdateIpAllowListEntryInput was addedType UpdateIpAllowListEntryPayload was addedType UpdateIpAllowListEnabledSettingInput was addedType UpdateIpAllowListEnabledSettingPayload was addedType SetEnterpriseIdentityProviderInput was addedType SetEnterpriseIdentityProviderPayload was addedType RemoveEnterpriseIdentityProviderInput was addedType RemoveEnterpriseIdentityProviderPayload was addedType IpAllowListEntryOrderField was addedType IpAllowListEntryEdge was addedType IpAllowListOwner was addedType IpAllowListEntryOrder was addedType IpAllowListEntryConnection was addedType IpAllowListEnabledSettingValue was addedType DeleteIpAllowListEntryPayload was addedType DeleteIpAllowListEntryInput was addedType CreateIpAllowListEntryPayload was addedType IpAllowListEntry was addedType CreateIpAllowListEntryInput was addedType Submodule was addedType SubmoduleConnection was addedSchema changes for 2020-03-10The GraphQL schema includes these changes:Type MentionableItemEdge was removedType MentionableItem was removedField statusCheckRollup was added to object type CommitType StatusCheckRollupContext was addedType StatusCheckRollupContextEdge was addedType StatusCheckRollupContextConnection was addedType StatusCheckRollup was addedSchema changes for 2020-03-05The GraphQL schema includes these changes:Field actor was added to object type RequestReviewsPayloadType MentionableItemEdge was addedType MentionableItem was addedSchema changes for 2020-02-19The GraphQL schema includes these changes:Type PackageType was addedThe GitHub Packages preview includes these changes:Field packageType was added to object type PackageSchema changes for 2020-02-12The GraphQL schema includes these changes:Field deleteDeployment was added to object type MutationType DeleteDeploymentInput was addedType DeleteDeploymentPayload was addedSchema changes for 2020-02-05The GraphQL schema includes these changes:Type EnterpriseOrderField was removedType CollectionItemContent was removedEnum value UNMARKED_AS_DUPLICATE_EVENT was added to enum PullRequestTimelineItemsItemTypeEnum value DISCONNECTED_EVENT was added to enum PullRequestTimelineItemsItemTypeEnum value CONNECTED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member UnmarkedAsDuplicateEvent was added to Union type PullRequestTimelineItemsUnion member DisconnectedEvent was added to Union type PullRequestTimelineItemsUnion member ConnectedEvent was added to Union type PullRequestTimelineItemsEnum value UNMARKED_AS_DUPLICATE_EVENT was added to enum IssueTimelineItemsItemTypeEnum value DISCONNECTED_EVENT was added to enum IssueTimelineItemsItemTypeEnum value CONNECTED_EVENT was added to enum IssueTimelineItemsItemTypeUnion member UnmarkedAsDuplicateEvent was added to Union type IssueTimelineItemsUnion member DisconnectedEvent was added to Union type IssueTimelineItemsUnion member ConnectedEvent was added to Union type IssueTimelineItemsInput field SubmitPullRequestReviewInput.pullRequestReviewId changed type from ID! to IDInput field pullRequestId was added to input object type SubmitPullRequestReviewInputInput field AddPullRequestReviewCommentInput.pullRequestReviewId changed type from ID! to IDInput field pullRequestId was added to input object type AddPullRequestReviewCommentInputField originalEnvironment was added to object type DeploymentField latestEnvironment was added to object type DeploymentField checksUrl was added to object type PullRequestField checksResourcePath was added to object type PullRequestType UnmarkedAsDuplicateEvent was addedType DisconnectedEvent was addedType ConnectedEvent was addedThe [Checks preview](/graphql/overview/schema-previews#checks-preview) includes these changes:Enum value STALE was added to enum CheckConclusionStateEnum value SKIPPED was added to enum CheckConclusionStateSchema changes for 2020-01-09The GraphQL schema includes these changes:Enum value DUPLICATE was added to enum ReportedContentClassifiersField deleteBranchOnMerge was added to object type RepositorySchema changes for 2020-01-06The GraphQL schema includes these changes:Field sponsorable was added to object type SponsorshipThe following changes will be made to the schema:On member Sponsorship.maintainer: maintainer will be removed. Use Sponsorship.sponsorable instead. Effective 2020-04-01.Schema changes for 2019-12-16The GraphQL schema includes these changes:Field actor was added to object type UpdatePullRequestPayloadField actor was added to object type UpdateIssuePayloadField actor was added to object type UnlockLockablePayloadField actor was added to object type MergePullRequestPayloadField actor was added to object type LockLockablePayloadArgument orderBy: LabelOrder added to field Repository.labelsArgument orderBy: LabelOrder added to field Issue.labelsArgument orderBy: LabelOrder added to field Labelable.labelsArgument orderBy: LabelOrder added to field PullRequest.labelsType LabelOrderField was addedType LabelOrder was addedSchema changes for 2019-12-11The GraphQL schema includes these changes:Field createdAt was added to object type RepositoryVulnerabilityAlertSchema changes for 2019-12-05The GraphQL schema includes these changes:Field createdAt was added to object type SponsorsListingSchema changes for 2019-11-25The GitHub Packages preview includes these changes:Field statistics was added to object type PackageVersionField statistics was added to object type PackageType PackageStatistics was addedType PackageVersionStatistics was addedThe following changes will be made to the schema:On member Organization.registryPackages: registryPackages will be removed. Use the PackageOwner object instead. Effective 2020-04-01.On member Organization.registryPackagesForQuery: registryPackagesForQuery will be removed. Use the PackageSearch object instead. Effective 2020-04-01.On member RegistryPackage.color: color will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.latestVersion: latestVersion will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.name: name will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.nameWithOwner: nameWithOwner will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.packageFileByGuid: packageFileByGuid will be removed. Use the Package object. Effective 2020-04-01.On member RegistryPackage.packageFileBySha256: packageFileBySha256 will be removed. Use the Package object. Effective 2020-04-01.On member RegistryPackage.packageType: packageType will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.preReleaseVersions: preReleaseVersions will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.registryPackageType: registryPackageType will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.repository: repository will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.statistics: statistics will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.tags: tags will be removed. Use the Package object. Effective 2020-04-01.On member RegistryPackage.topics: topics will be removed. Use the Package object. Effective 2020-04-01.On member RegistryPackage.version: version will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.versionByPlatform: versionByPlatform will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.versionBySha256: versionBySha256 will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.versions: versions will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackage.versionsByMetadatum: versionsByMetadatum will be removed. Use the Package object instead. Effective 2020-04-01.On member RegistryPackageDependency.dependencyType: dependencyType will be removed. Use the PackageDependency object instead. Effective 2020-04-01.On member RegistryPackageDependency.name: name will be removed. Use the PackageDependency object instead. Effective 2020-04-01.On member RegistryPackageDependency.version: version will be removed. Use the PackageDependency object instead. Effective 2020-04-01.On member RegistryPackageFile.guid: guid will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.md5: md5 will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.metadataUrl: metadataUrl will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.name: name will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.packageVersion: packageVersion will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.sha1: sha1 will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.sha256: sha256 will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.size: size will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageFile.url: url will be removed. Use the PackageFile object instead. Effective 2020-04-01.On member RegistryPackageOwner.registryPackages: registryPackages will be removed. Use the PackageOwner object instead. Effective 2020-04-01.On member RegistryPackageSearch.registryPackagesForQuery: registryPackagesForQuery will be removed. Use the PackageSearch object instead. Effective 2020-04-01.On member RegistryPackageStatistics.downloadsThisMonth: downloadsThisMonth will be removed. Use the PackageStatistics object instead. Effective 2020-04-01.On member RegistryPackageStatistics.downloadsThisWeek: downloadsThisWeek will be removed. Use the PackageStatistics object instead. Effective 2020-04-01.On member RegistryPackageStatistics.downloadsThisYear: downloadsThisYear will be removed. Use the PackageStatistics object instead. Effective 2020-04-01.On member RegistryPackageStatistics.downloadsToday: downloadsToday will be removed. Use the PackageStatistics object instead. Effective 2020-04-01.On member RegistryPackageStatistics.downloadsTotalCount: downloadsTotalCount will be removed. Use the PackageStatistics object instead. Effective 2020-04-01.On member RegistryPackageTag.name: name will be removed. Use the PackageTag object instead. Effective 2020-04-01.On member RegistryPackageTag.version: version will be removed. Use the PackageTag object instead. Effective 2020-04-01.On member RegistryPackageVersion.deleted: deleted will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.dependencies: dependencies will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.fileByName: fileByName will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.files: files will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.installationCommand: installationCommand will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.manifest: manifest will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.platform: platform will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.preRelease: preRelease will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.readme: readme will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.readmeHtml: readmeHtml will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.registryPackage: registryPackage will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.release: release will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.sha256: sha256 will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.size: size will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.statistics: statistics will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.summary: summary will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.updatedAt: updatedAt will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.version: version will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersion.viewerCanEdit: viewerCanEdit will be removed. Use the PackageVersion object instead. Effective 2020-04-01.On member RegistryPackageVersionStatistics.downloadsThisMonth: downloadsThisMonth will be removed. Use the PackageVersionStatistics object instead. Effective 2020-04-01.On member RegistryPackageVersionStatistics.downloadsThisWeek: downloadsThisWeek will be removed. Use the PackageVersionStatistics object instead. Effective 2020-04-01.On member RegistryPackageVersionStatistics.downloadsThisYear: downloadsThisYear will be removed. Use the PackageVersionStatistics object instead. Effective 2020-04-01.On member RegistryPackageVersionStatistics.downloadsToday: downloadsToday will be removed. Use the PackageVersionStatistics object instead. Effective 2020-04-01.On member RegistryPackageVersionStatistics.downloadsTotalCount: downloadsTotalCount will be removed. Use the PackageVersionStatistics object instead. Effective 2020-04-01.On member Repository.registryPackages: registryPackages will be removed. Use the PackageOwner object instead. Effective 2020-04-01.On member Repository.registryPackagesForQuery: registryPackagesForQuery will be removed. Use the PackageSearch object instead. Effective 2020-04-01.On member User.registryPackages: registryPackages will be removed. Use the PackageOwner object instead. Effective 2020-04-01.On member User.registryPackagesForQuery: registryPackagesForQuery will be removed. Use the PackageSearch object instead. Effective 2020-04-01.Schema changes for 2019-11-22The GraphQL schema includes these changes:Field unarchiveRepository was added to object type MutationField archiveRepository was added to object type MutationField fundingLinks was added to object type RepositoryType UpdateTeamReviewAssignmentPayload was addedType UnarchiveRepositoryInput was addedType UnarchiveRepositoryPayload was addedType ArchiveRepositoryInput was addedType ArchiveRepositoryPayload was addedType FundingPlatform was addedType FundingLink was addedThe [Team Review Assignments Preview preview](/graphql/overview/schema-previews#team-review-assignments-preview) includes these changes:Field updateTeamReviewAssignment was added to object type MutationField reviewRequestDelegationNotifyTeam was added to object type TeamField reviewRequestDelegationMemberCount was added to object type TeamField reviewRequestDelegationEnabled was added to object type TeamField reviewRequestDelegationAlgorithm was added to object type TeamType UpdateTeamReviewAssignmentInput was addedType TeamReviewAssignmentAlgorithm was addedSchema changes for 2019-11-19The GraphQL schema includes these changes:Field hasProjectsEnabled was added to object type RepositoryInfoField hasProjectsEnabled was added to object type RepositorySchema changes for 2019-11-06The [Update refs preview](/graphql/overview/schema-previews#update-refs-preview) includes these changes:Field updateRefs was added to object type MutationType GitRefname was addedType RefUpdate was addedType UpdateRefsInput was addedType UpdateRefsPayload was addedSchema changes for 2019-10-31The GraphQL schema includes these changes:Input field field was added to input object type SponsorshipOrderRepository object implements PackageOwner interfaceUser object implements PackageOwner interfaceOrganization object implements PackageOwner interfaceField tiers was added to object type SponsorsListingField adminInfo was added to object type SponsorsTierField sponsorsListing was added to object type SponsorableField sponsorsListing was added to object type UserField sponsorsListing was added to object type OrganizationType SponsorsTierOrderField was addedType SponsorsTierOrder was addedType SponsorshipOrderField was addedType SponsorsTierAdminInfo was addedType SponsorsTierConnection was addedType PackageVersionEdge was addedType PackageVersionConnection was addedType PackageFileEdge was addedType PackageFileConnection was addedType PackageEdge was addedType PackageConnection was addedThe GitHub Packages preview includes these changes:Field packages was added to object type RepositoryField packages was added to object type UserField packages was added to object type OrganizationType PackageTag was addedType PackageVersionOrderField was addedType PackageVersionOrder was addedType PackageOrderField was addedType PackageOrder was addedType PackageFileOrderField was addedType PackageFileOrder was addedType PackageFile was addedType PackageVersion was addedType Package was addedType PackageOwner was addedThe following changes will be made to the schema:On member Query.sponsorsListing: sponsorsListing will be removed. Use Sponsorable.sponsorsListing instead. Effective 2020-04-01.Schema changes for 2019-10-23The GraphQL schema includes these changes:Field tier was added to object type SponsorshipType SponsorsTierEdge was addedType SponsorsTier was addedSchema changes for 2019-10-09The GraphQL schema includes these changes:Argument query: String added to field Repository.mentionableUsersSchema changes for 2019-09-24The GraphQL schema includes these changes:Field unfollowUser was added to object type MutationType UnfollowUserInput was addedType UnfollowUserPayload was addedSchema changes for 2019-09-20The GraphQL schema includes these changes:Organization object implements Sponsorable interfaceField followUser was added to object type MutationField sponsorshipsAsSponsor was added to object type OrganizationField sponsorshipsAsMaintainer was added to object type OrganizationType FollowUserInput was addedType FollowUserPayload was addedSchema changes for 2019-09-19The GraphQL schema includes these changes:Union member OrgCreateAuditEntry was added to Union type OrganizationAuditEntryEnum value COMPOSER was added to enum SecurityAdvisoryEcosystemField email was added to object type MannequinType OrgCreateAuditEntryBillingPlan was addedType OrgCreateAuditEntry was addedSchema changes for 2019-09-17The GraphQL schema includes these changes:Repository object implements RegistryPackageSearch interfaceField registryPackagesForQuery was added to object type RepositorySchema changes for 2019-09-14The GraphQL schema includes these changes:Argument query: String added to field Repository.assignableUsersSchema changes for 2019-09-12The GraphQL schema includes these changes:Argument query: String added to field Repository.collaboratorsSchema changes for 2019-09-10The GraphQL schema includes these changes:Field updatedAt was added to object type OrganizationField createdAt was added to object type OrganizationSchema changes for 2019-09-08The GraphQL schema includes these changes:Argument skip: Int added to field PullRequestReviewThread.commentsSchema changes for 2019-09-05The GraphQL schema includes these changes:Input field mergeMethod was added to input object type MergePullRequestInputField operationType was added to object type TeamRemoveRepositoryAuditEntryField operationType was added to object type TeamRemoveMemberAuditEntryField operationType was added to object type TeamChangeParentTeamAuditEntryField operationType was added to object type TeamAddRepositoryAuditEntryField operationType was added to object type TeamAddMemberAuditEntryField operationType was added to object type RepositoryVisibilityChangeEnableAuditEntryField operationType was added to object type RepositoryVisibilityChangeDisableAuditEntryField operationType was added to object type RepoRemoveTopicAuditEntryField operationType was added to object type RepoRemoveMemberAuditEntryField operationType was added to object type RepoDestroyAuditEntryField operationType was added to object type RepoCreateAuditEntryField operationType was added to object type RepoConfigUnlockAnonymousGitAccessAuditEntryField operationType was added to object type RepoConfigLockAnonymousGitAccessAuditEntryField operationType was added to object type RepoConfigEnableSockpuppetDisallowedAuditEntryField operationType was added to object type RepoConfigEnableContributorsOnlyAuditEntryField operationType was added to object type RepoConfigEnableCollaboratorsOnlyAuditEntryField operationType was added to object type RepoConfigEnableAnonymousGitAccessAuditEntryField operationType was added to object type RepoConfigDisableSockpuppetDisallowedAuditEntryField operationType was added to object type RepoConfigDisableContributorsOnlyAuditEntryField operationType was added to object type RepoConfigDisableCollaboratorsOnlyAuditEntryField operationType was added to object type RepoConfigDisableAnonymousGitAccessAuditEntryField operationType was added to object type RepoChangeMergeSettingAuditEntryField operationType was added to object type RepoArchivedAuditEntryField operationType was added to object type RepoAddTopicAuditEntryField operationType was added to object type RepoAddMemberAuditEntryField operationType was added to object type RepoAccessAuditEntryField operationType was added to object type PrivateRepositoryForkingEnableAuditEntryField operationType was added to object type PrivateRepositoryForkingDisableAuditEntryField operationType was added to object type OrgUpdateMemberRepositoryInvitationPermissionAuditEntryField operationType was added to object type OrgUpdateMemberRepositoryCreationPermissionAuditEntryField operationType was added to object type OrgUpdateMemberAuditEntryField operationType was added to object type OrgUpdateDefaultRepositoryPermissionAuditEntryField operationType was added to object type OrgUnblockUserAuditEntryField operationType was added to object type OrgRestoreMemberAuditEntryField operationType was added to object type OrgRemoveOutsideCollaboratorAuditEntryField operationType was added to object type OrgRemoveMemberAuditEntryField operationType was added to object type OrgRemoveBillingManagerAuditEntryField operationType was added to object type OrgOauthAppAccessRequestedAuditEntryField operationType was added to object type OrgOauthAppAccessDeniedAuditEntryField operationType was added to object type OrgOauthAppAccessApprovedAuditEntryField operationType was added to object type OrgInviteToBusinessAuditEntryField operationType was added to object type OrgInviteMemberAuditEntryField operationType was added to object type OrgEnableTwoFactorRequirementAuditEntryField operationType was added to object type OrgEnableSamlAuditEntryField operationType was added to object type OrgEnableOauthAppRestrictionsAuditEntryField operationType was added to object type OrgDisableTwoFactorRequirementAuditEntryField operationType was added to object type OrgDisableSamlAuditEntryField operationType was added to object type OrgDisableOauthAppRestrictionsAuditEntryField operationType was added to object type OrgConfigEnableCollaboratorsOnlyAuditEntryField operationType was added to object type OrgConfigDisableCollaboratorsOnlyAuditEntryField operationType was added to object type OrgBlockUserAuditEntryField operationType was added to object type OrgAddMemberAuditEntryField operationType was added to object type OrgAddBillingManagerAuditEntryField operationType was added to object type OauthApplicationCreateAuditEntryField operationType was added to object type MembersCanDeleteReposEnableAuditEntryField operationType was added to object type MembersCanDeleteReposDisableAuditEntryField operationType was added to object type AuditEntryField operationType was added to object type MembersCanDeleteReposClearAuditEntryField descriptionHTML was added to object type OrganizationType PullRequestMergeMethod was addedType OperationType was addedSchema changes for 2019-08-29The GraphQL schema includes these changes:Field topRepositories was added to object type UserSchema changes for 2019-08-27The GraphQL schema includes these changes:Field preRelease was added to object type RegistryPackageVersionSchema changes for 2019-08-23The GraphQL schema includes these changes:Union member App was added to Union type PushAllowanceActorSchema changes for 2019-08-21The GraphQL schema includes these changes:Field shortDescriptionHTML was added to object type ReleaseField descriptionHTML was added to object type ReleaseSchema changes for 2019-08-15The GraphQL schema includes these changes:Field removeEnterpriseIdentityProvider was removed from object type MutationType RemoveEnterpriseIdentityProviderInput was removedType RemoveEnterpriseIdentityProviderPayload was removedEnum value ARCHIVED was added to enum CommentCannotUpdateReasonSchema changes for 2019-08-13The GraphQL schema includes these changes:Field setEnterpriseIdentityProvider was removed from object type MutationType SetEnterpriseIdentityProviderInput was removedType SetEnterpriseIdentityProviderPayload was removedSchema changes for 2019-08-09The GraphQL schema includes these changes:Field transferIssue was added to object type MutationType TransferIssueInput was addedType TransferIssuePayload was addedSchema changes for 2019-08-08The GraphQL schema includes these changes:Union member RepoRemoveTopicAuditEntry was added to Union type OrganizationAuditEntryUnion member RepoDestroyAuditEntry was added to Union type OrganizationAuditEntryUnion member RepoCreateAuditEntry was added to Union type OrganizationAuditEntryUnion member RepoChangeMergeSettingAuditEntry was added to Union type OrganizationAuditEntryUnion member RepoArchivedAuditEntry was added to Union type OrganizationAuditEntryUnion member RepoAddTopicAuditEntry was added to Union type OrganizationAuditEntryType UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput was addedType UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload was addedType UpdateEnterpriseTeamDiscussionsSettingInput was addedType UpdateEnterpriseTeamDiscussionsSettingPayload was addedType UpdateEnterpriseRepositoryProjectsSettingInput was addedType UpdateEnterpriseRepositoryProjectsSettingPayload was addedType UpdateEnterpriseProfileInput was addedType UpdateEnterpriseProfilePayload was addedType UpdateEnterpriseOrganizationProjectsSettingInput was addedType UpdateEnterpriseOrganizationProjectsSettingPayload was addedType UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput was addedType UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload was addedType UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput was addedType UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload was addedType UpdateEnterpriseMembersCanMakePurchasesSettingInput was addedType UpdateEnterpriseMembersCanMakePurchasesSettingPayload was addedType UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput was addedType UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload was addedType UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput was addedType UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload was addedType UpdateEnterpriseMembersCanDeleteIssuesSettingInput was addedType UpdateEnterpriseMembersCanDeleteIssuesSettingPayload was addedType UpdateEnterpriseMembersCanCreateRepositoriesSettingInput was addedType UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload was addedType UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput was addedType UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload was addedType UpdateEnterpriseDefaultRepositoryPermissionSettingInput was addedType UpdateEnterpriseDefaultRepositoryPermissionSettingPayload was addedType UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput was addedType UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload was addedType UpdateEnterpriseAdministratorRoleInput was addedType UpdateEnterpriseAdministratorRolePayload was addedType UpdateEnterpriseActionExecutionCapabilitySettingInput was addedType UpdateEnterpriseActionExecutionCapabilitySettingPayload was addedType SetEnterpriseIdentityProviderInput was addedType SetEnterpriseIdentityProviderPayload was addedType RemoveEnterpriseOrganizationInput was addedType RemoveEnterpriseOrganizationPayload was addedType RemoveEnterpriseIdentityProviderInput was addedType RemoveEnterpriseIdentityProviderPayload was addedType RemoveEnterpriseAdminInput was addedType RemoveEnterpriseAdminPayload was addedType RegenerateEnterpriseIdentityProviderRecoveryCodesInput was addedType RegenerateEnterpriseIdentityProviderRecoveryCodesPayload was addedType InviteEnterpriseAdminInput was addedType InviteEnterpriseAdminPayload was addedType CreateEnterpriseOrganizationInput was addedType CreateEnterpriseOrganizationPayload was addedType CancelEnterpriseAdminInvitationInput was addedType CancelEnterpriseAdminInvitationPayload was addedType AcceptEnterpriseAdministratorInvitationInput was addedType AcceptEnterpriseAdministratorInvitationPayload was addedType EnterpriseUserAccountEdge was addedType EnterpriseUserAccountConnection was addedType IdentityProviderConfigurationState was addedType EnterpriseAdministratorInvitationEdge was addedType EnterpriseAdministratorInvitationConnection was addedType EnterpriseRepositoryInfoEdge was addedType EnterpriseRepositoryInfoConnection was addedType EnterpriseServerUserAccountsUploadEdge was addedType EnterpriseServerUserAccountsUploadConnection was addedType EnterpriseServerUserAccountEmailEdge was addedType EnterpriseServerUserAccountEmailConnection was addedType EnterpriseServerUserAccountEdge was addedType EnterpriseServerUserAccountConnection was addedType EnterpriseServerInstallationEdge was addedType EnterpriseServerInstallationConnection was addedType RepoRemoveTopicAuditEntry was addedType RepoDestroyAuditEntryVisibility was addedType RepoDestroyAuditEntry was addedType RepoCreateAuditEntryVisibility was addedType RepoCreateAuditEntry was addedType RepoChangeMergeSettingAuditEntryMergeType was addedType RepoChangeMergeSettingAuditEntry was addedType RepoArchivedAuditEntryVisibility was addedType RepoArchivedAuditEntry was addedType TopicAuditEntryData was addedType RepoAddTopicAuditEntry was addedThe Enterprise accounts preview includes these changes:Field updateEnterpriseTwoFactorAuthenticationRequiredSetting was added to object type MutationField updateEnterpriseTeamDiscussionsSetting was added to object type MutationField updateEnterpriseRepositoryProjectsSetting was added to object type MutationField updateEnterpriseProfile was added to object type MutationField updateEnterpriseOrganizationProjectsSetting was added to object type MutationField updateEnterpriseMembersCanViewDependencyInsightsSetting was added to object type MutationField updateEnterpriseMembersCanUpdateProtectedBranchesSetting was added to object type MutationField updateEnterpriseMembersCanMakePurchasesSetting was added to object type MutationField updateEnterpriseMembersCanInviteCollaboratorsSetting was added to object type MutationField updateEnterpriseMembersCanDeleteRepositoriesSetting was added to object type MutationField updateEnterpriseMembersCanDeleteIssuesSetting was added to object type MutationField updateEnterpriseMembersCanCreateRepositoriesSetting was added to object type MutationField updateEnterpriseMembersCanChangeRepositoryVisibilitySetting was added to object type MutationField updateEnterpriseDefaultRepositoryPermissionSetting was added to object type MutationField updateEnterpriseAllowPrivateRepositoryForkingSetting was added to object type MutationField updateEnterpriseAdministratorRole was added to object type MutationField updateEnterpriseActionExecutionCapabilitySetting was added to object type MutationField setEnterpriseIdentityProvider was added to object type MutationField removeEnterpriseOrganization was added to object type MutationField removeEnterpriseIdentityProvider was added to object type MutationField removeEnterpriseAdmin was added to object type MutationField regenerateEnterpriseIdentityProviderRecoveryCodes was added to object type MutationField inviteEnterpriseAdmin was added to object type MutationField createEnterpriseOrganization was added to object type MutationField cancelEnterpriseAdminInvitation was added to object type MutationField acceptEnterpriseAdministratorInvitation was added to object type MutationField enterpriseAdministratorInvitationByToken was added to object type QueryField enterpriseAdministratorInvitation was added to object type QueryField enterprise was added to object type QueryType EnterpriseOrderField was addedType ActionExecutionCapabilitySetting was addedType EnterpriseEnabledSettingValue was addedType SamlSignatureAlgorithm was addedType SamlDigestAlgorithm was addedType EnterpriseIdentityProvider was addedType EnterprisePendingMemberInvitationEdge was addedType EnterprisePendingMemberInvitationConnection was addedType RepositoryInvitationOrderField was addedType RepositoryInvitationOrder was addedType EnterprisePendingCollaboratorEdge was addedType EnterprisePendingCollaboratorConnection was addedType EnterpriseAdministratorInvitationOrderField was addedType EnterpriseAdministratorInvitationOrder was addedType EnterpriseAdministratorInvitation was addedType EnterpriseRepositoryInfo was addedType EnterpriseOutsideCollaboratorEdge was addedType EnterpriseOutsideCollaboratorConnection was addedType EnterpriseMembersCanMakePurchasesSettingValue was addedType OrganizationMembersCanCreateRepositoriesSettingValue was addedType EnterpriseMembersCanCreateRepositoriesSettingValue was addedType EnterpriseServerInstallationOrderField was addedType EnterpriseServerInstallationOrder was addedType EnterpriseServerUserAccountsUploadOrderField was addedType EnterpriseServerUserAccountsUploadOrder was addedType EnterpriseServerUserAccountsUploadSyncState was addedType EnterpriseServerUserAccountsUpload was addedType EnterpriseServerUserAccountOrderField was addedType EnterpriseServerUserAccountOrder was addedType EnterpriseServerUserAccountEmailOrderField was addedType EnterpriseServerUserAccountEmailOrder was addedType EnterpriseServerUserAccountEmail was addedType EnterpriseServerUserAccount was addedType EnterpriseServerInstallation was addedType EnterpriseDefaultRepositoryPermissionSettingValue was addedType EnterpriseEnabledDisabledSettingValue was addedType EnterpriseAdministratorRole was addedType EnterpriseAdministratorEdge was addedType EnterpriseAdministratorConnection was addedType EnterpriseOwnerInfo was addedType EnterpriseMemberOrderField was addedType EnterpriseMemberOrder was addedType EnterpriseUserDeployment was addedType OrganizationOrderField was addedType OrganizationOrder was addedType EnterpriseUserAccountMembershipRole was addedType EnterpriseOrganizationMembershipEdge was addedType EnterpriseOrganizationMembershipConnection was addedType EnterpriseUserAccount was addedType EnterpriseMember was addedType EnterpriseMemberEdge was addedType EnterpriseMemberConnection was addedType EnterpriseBillingInfo was addedType Enterprise was addedSchema changes for 2019-07-31The GraphQL schema includes these changes:Enum value MARKED_AS_DUPLICATE_EVENT was added to enum IssueTimelineItemsItemTypeUnion member MarkedAsDuplicateEvent was added to Union type IssueTimelineItemsEnum value MARKED_AS_DUPLICATE_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member MarkedAsDuplicateEvent was added to Union type PullRequestTimelineItemsArgument publicOnly: Boolean added to field RegistryPackageOwner.registryPackagesArgument publicOnly: Boolean added to field Repository.registryPackagesArgument publicOnly: Boolean added to field User.registryPackagesArgument publicOnly: Boolean added to field Organization.registryPackagesType IssueOrPullRequestEdge was addedType MarkedAsDuplicateEvent was addedSchema changes for 2019-07-29The GraphQL schema includes these changes:User object implements Sponsorable interfaceField sponsorshipsAsSponsor was added to object type UserField sponsorshipsAsMaintainer was added to object type UserType SponsorshipOrder was addedType SponsorshipPrivacy was addedType Sponsorship was addedType SponsorshipEdge was addedType SponsorshipConnection was addedType Sponsorable was addedSchema changes for 2019-07-26The GraphQL schema includes these changes:Field registryPackagesForQuery was added to object type RegistryPackageSearchField registryPackages was added to object type RegistryPackageOwnerField registryPackages was added to object type RepositoryField registryPackagesForQuery was added to object type UserField registryPackages was added to object type UserField registryPackagesForQuery was added to object type OrganizationField registryPackages was added to object type OrganizationType RegistryPackageMetadatum was addedType RegistryPackageTag was addedType RegistryPackageTagEdge was addedType RegistryPackageTagConnection was addedType RegistryPackageStatistics was addedType RegistryPackageVersionEdge was addedType RegistryPackageVersionConnection was addedType RegistryPackageType was addedType RegistryPackageVersionStatistics was addedType RegistryPackageFileEdge was addedType RegistryPackageFileConnection was addedType RegistryPackageFile was addedType RegistryPackageDependencyType was addedType RegistryPackageDependency was addedType RegistryPackageDependencyEdge was addedType RegistryPackageDependencyConnection was addedType RegistryPackageVersion was addedType RegistryPackage was addedType RegistryPackageEdge was addedType RegistryPackageConnection was addedSchema changes for 2019-07-24The GraphQL schema includes these changes:Union member Bot was added to Union type AssigneeField emojiHTML was added to object type UserStatusThe [Checks preview](/graphql/overview/schema-previews#checks-preview) includes these changes:Field url was added to object type CheckSuiteField resourcePath was added to object type CheckSuiteSchema changes for 2019-07-23The GraphQL schema includes these changes:Input field repositoryIds was added to input object type CreateProjectInputField unlinkRepositoryFromProject was added to object type MutationField linkRepositoryToProject was added to object type MutationType UnlinkRepositoryFromProjectInput was addedType UnlinkRepositoryFromProjectPayload was addedType LinkRepositoryToProjectInput was addedType LinkRepositoryToProjectPayload was addedSchema changes for 2019-07-19The GraphQL schema includes these changes:Argument ignoreTimeRange: Boolean was removed from field ContributionsCollection.joinedGitHubContributionArgument ignoreTimeRange: Boolean was removed from field ContributionsCollection.firstRepositoryContributionArgument ignoreTimeRange: Boolean was removed from field ContributionsCollection.firstPullRequestContributionArgument ignoreTimeRange: Boolean was removed from field ContributionsCollection.firstIssueContributionField messageHtml was removed from object type ReviewDismissedEventField message was removed from object type ReviewDismissedEventField members was removed from object type OrganizationGist object implements UniformResourceLocatable interfaceField assignee was added to object type UnassignedEventField assignee was added to object type AssignedEventField url was added to object type GistField resourcePath was added to object type GistField savedReplies was added to object type UserField sponsorsListing was added to object type QueryType SponsorsListing was addedType SavedReplyOrderField was addedType SavedReplyOrder was addedType SavedReply was addedType SavedReplyEdge was addedType SavedReplyConnection was addedType Assignee was addedThe following changes will be made to the schema:On member AssignedEvent.user: user will be removed. Use the assignee field instead. Effective 2020-01-01.On member UnassignedEvent.user: user will be removed. Use the assignee field instead. Effective 2020-01-01.Schema changes for 2019-07-17The GraphQL schema includes these changes:Type BusinessAuditEntryData was removedInput field template was added to input object type CreateProjectInputField updateRepository was added to object type MutationField mergeBranch was added to object type MutationType UpdateRepositoryInput was addedType UpdateRepositoryPayload was addedType MergeBranchInput was addedType MergeBranchPayload was addedType ProjectTemplate was addedThe Audit Log preview includes these changes:Field businessUrl was removed from object type RepositoryVisibilityChangeEnableAuditEntryField businessSlug was removed from object type RepositoryVisibilityChangeEnableAuditEntryField businessResourcePath was removed from object type RepositoryVisibilityChangeEnableAuditEntryRepositoryVisibilityChangeEnableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type RepositoryVisibilityChangeDisableAuditEntryField businessSlug was removed from object type RepositoryVisibilityChangeDisableAuditEntryField businessResourcePath was removed from object type RepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeDisableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type PrivateRepositoryForkingEnableAuditEntryField businessSlug was removed from object type PrivateRepositoryForkingEnableAuditEntryField businessResourcePath was removed from object type PrivateRepositoryForkingEnableAuditEntryPrivateRepositoryForkingEnableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type PrivateRepositoryForkingDisableAuditEntryField businessSlug was removed from object type PrivateRepositoryForkingDisableAuditEntryField businessResourcePath was removed from object type PrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingDisableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type OrgInviteToBusinessAuditEntryField businessSlug was removed from object type OrgInviteToBusinessAuditEntryField businessResourcePath was removed from object type OrgInviteToBusinessAuditEntryOrgInviteToBusinessAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type MembersCanDeleteReposEnableAuditEntryField businessSlug was removed from object type MembersCanDeleteReposEnableAuditEntryField businessResourcePath was removed from object type MembersCanDeleteReposEnableAuditEntryMembersCanDeleteReposEnableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type MembersCanDeleteReposDisableAuditEntryField businessSlug was removed from object type MembersCanDeleteReposDisableAuditEntryField businessResourcePath was removed from object type MembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposDisableAuditEntry object type no longer implements BusinessAuditEntryData interfaceField businessUrl was removed from object type MembersCanDeleteReposClearAuditEntryField businessSlug was removed from object type MembersCanDeleteReposClearAuditEntryField businessResourcePath was removed from object type MembersCanDeleteReposClearAuditEntryMembersCanDeleteReposClearAuditEntry object type no longer implements BusinessAuditEntryData interfaceRepositoryVisibilityChangeEnableAuditEntry object implements EnterpriseAuditEntryData interfaceRepositoryVisibilityChangeDisableAuditEntry object implements EnterpriseAuditEntryData interfacePrivateRepositoryForkingEnableAuditEntry object implements EnterpriseAuditEntryData interfacePrivateRepositoryForkingDisableAuditEntry object implements EnterpriseAuditEntryData interfaceOrgInviteToBusinessAuditEntry object implements EnterpriseAuditEntryData interfaceMembersCanDeleteReposEnableAuditEntry object implements EnterpriseAuditEntryData interfaceMembersCanDeleteReposDisableAuditEntry object implements EnterpriseAuditEntryData interfaceMembersCanDeleteReposClearAuditEntry object implements EnterpriseAuditEntryData interfaceField enterpriseUrl was added to object type RepositoryVisibilityChangeEnableAuditEntryField enterpriseSlug was added to object type RepositoryVisibilityChangeEnableAuditEntryField enterpriseResourcePath was added to object type RepositoryVisibilityChangeEnableAuditEntryField enterpriseUrl was added to object type RepositoryVisibilityChangeDisableAuditEntryField enterpriseSlug was added to object type RepositoryVisibilityChangeDisableAuditEntryField enterpriseResourcePath was added to object type RepositoryVisibilityChangeDisableAuditEntryField enterpriseUrl was added to object type PrivateRepositoryForkingEnableAuditEntryField enterpriseSlug was added to object type PrivateRepositoryForkingEnableAuditEntryField enterpriseResourcePath was added to object type PrivateRepositoryForkingEnableAuditEntryField enterpriseUrl was added to object type PrivateRepositoryForkingDisableAuditEntryField enterpriseSlug was added to object type PrivateRepositoryForkingDisableAuditEntryField enterpriseResourcePath was added to object type PrivateRepositoryForkingDisableAuditEntryField enterpriseUrl was added to object type OrgInviteToBusinessAuditEntryField enterpriseSlug was added to object type OrgInviteToBusinessAuditEntryField enterpriseResourcePath was added to object type OrgInviteToBusinessAuditEntryField enterpriseUrl was added to object type MembersCanDeleteReposEnableAuditEntryField enterpriseSlug was added to object type MembersCanDeleteReposEnableAuditEntryField enterpriseResourcePath was added to object type MembersCanDeleteReposEnableAuditEntryField enterpriseUrl was added to object type MembersCanDeleteReposDisableAuditEntryField enterpriseSlug was added to object type MembersCanDeleteReposDisableAuditEntryField enterpriseResourcePath was added to object type MembersCanDeleteReposDisableAuditEntryField enterpriseUrl was added to object type MembersCanDeleteReposClearAuditEntryField enterpriseSlug was added to object type MembersCanDeleteReposClearAuditEntryField enterpriseResourcePath was added to object type MembersCanDeleteReposClearAuditEntryType EnterpriseAuditEntryData was addedSchema changes for 2019-07-04The GraphQL schema includes these changes:Enum value READY_FOR_REVIEW_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member ReadyForReviewEvent was added to Union type PullRequestTimelineItemsType ReadyForReviewEvent was addedSchema changes for 2019-06-28The GraphQL schema includes these changes:Field updateRef was added to object type MutationField deleteRef was added to object type MutationField createRef was added to object type MutationType UpdateRefInput was addedType UpdateRefPayload was addedType DeleteRefInput was addedType DeleteRefPayload was addedType CreateRefInput was addedType CreateRefPayload was addedThe following changes will be made to the schema:On member Organization.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-10-01.On member RepositoryOwner.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-10-01.On member RepositoryVulnerabilityAlert.affectedRange: affectedRange will be removed. Use securityVulnerability.vulnerableVersionRange instead. Effective 2019-10-01.On member RepositoryVulnerabilityAlert.externalIdentifier: externalIdentifier will be removed. Use securityAdvisory.identifiers instead. Effective 2019-10-01.On member RepositoryVulnerabilityAlert.externalReference: externalReference will be removed. Use securityAdvisory.references instead. Effective 2019-10-01.On member RepositoryVulnerabilityAlert.fixedIn: fixedIn will be removed. Use securityVulnerability.firstPatchedVersion instead. Effective 2019-10-01.On member RepositoryVulnerabilityAlert.packageName: packageName will be removed. Use securityVulnerability.package instead. Effective 2019-10-01.On member User.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-10-01.Schema changes for 2019-06-26The GraphQL schema includes these changes:Field createRepository was added to object type MutationType CreateRepositoryInput was addedType CreateRepositoryPayload was addedSchema changes for 2019-06-25The GraphQL schema includes these changes:Field PublicKey.updatedAt changed type from DateTime! to DateTimeField PublicKey.isReadOnly changed type from Boolean! to BooleanField PublicKey.createdAt changed type from DateTime! to DateTimeField PublicKey.fingerprint changed type from String to String!Field issuePrioritiesDebug was added to object type MilestoneSchema changes for 2019-06-19The GraphQL schema includes these changes:Union member App was added to Union type SearchResultItemField cloneTemplateRepository was added to object type MutationField isTemplate was added to object type RepositoryInfoField templateRepository was added to object type RepositoryField isTemplate was added to object type RepositoryType RepositoryVisibility was addedType CloneTemplateRepositoryInput was addedType CloneTemplateRepositoryPayload was addedSchema changes for 2019-06-14The GraphQL schema includes these changes:Input field ContributionOrder.field changed type from ContributionOrderField! to ContributionOrderFieldThe following changes will be made to the schema:On member ContributionOrder.field: field will be removed. Only one order field is supported. Effective 2019-10-01.Schema changes for 2019-06-13The GraphQL schema includes these changes:Argument oid: GitObjectID added to field Gist.filesField forks was added to object type GistSchema changes for 2019-06-12The GraphQL schema includes these changes:Enum value USER was added to enum PinnableItemTypeEnum value TEAM was added to enum PinnableItemTypeEnum value PULL_REQUEST was added to enum PinnableItemTypeEnum value PROJECT was added to enum PinnableItemTypeEnum value ORGANIZATION was added to enum PinnableItemTypeField requiresCodeOwnerReviews was added to object type BranchProtectionRuleThe [Labels Preview preview](/graphql/overview/schema-previews#labels-preview) includes these changes:Input field description was added to input object type UpdateLabelInputInput field description was added to input object type CreateLabelInputSchema changes for 2019-06-04The following changes will be made to the schema:On member Issue.timeline: timeline will be removed. Use Issue.timelineItems instead. Effective 2019-10-01.On member PullRequest.timeline: timeline will be removed. Use PullRequest.timelineItems instead. Effective 2019-10-01.Schema changes for 2019-05-31The GraphQL schema includes these changes:Input field expiresAt was added to input object type ChangeUserStatusInputField avatarUrl was added to object type StatusContextField expiresAt was added to object type UserStatusSchema changes for 2019-05-29The GraphQL schema includes these changes:Enum value TRIAGE was added to enum RepositoryPermissionEnum value MAINTAIN was added to enum RepositoryPermissionField openGraphImageUrl was added to object type RepositoryField openGraphImageUrl was added to object type RepositoryInfoField usesCustomOpenGraphImage was added to object type RepositoryField usesCustomOpenGraphImage was added to object type RepositoryInfoSchema changes for 2019-05-23The GraphQL schema includes these changes:Type OrganizationAuditEntryEdge was addedType OrganizationAuditEntryConnection was addedThe Audit Log preview includes these changes:Field auditLog was added to object type OrganizationType AuditLogOrderField was addedType AuditLogOrder was addedType TeamRemoveRepositoryAuditEntry was addedType TeamRemoveMemberAuditEntry was addedType TeamChangeParentTeamAuditEntry was addedType TeamAddRepositoryAuditEntry was addedType TeamAddMemberAuditEntry was addedType RepositoryVisibilityChangeEnableAuditEntry was addedType RepositoryVisibilityChangeDisableAuditEntry was addedType RepoRemoveMemberAuditEntryVisibility was addedType RepoRemoveMemberAuditEntry was addedType RepoConfigUnlockAnonymousGitAccessAuditEntry was addedType RepoConfigLockAnonymousGitAccessAuditEntry was addedType RepoConfigEnableSockpuppetDisallowedAuditEntry was addedType RepoConfigEnableContributorsOnlyAuditEntry was addedType RepoConfigEnableCollaboratorsOnlyAuditEntry was addedType RepoConfigEnableAnonymousGitAccessAuditEntry was addedType RepoConfigDisableSockpuppetDisallowedAuditEntry was addedType RepoConfigDisableContributorsOnlyAuditEntry was addedType RepoConfigDisableCollaboratorsOnlyAuditEntry was addedType RepoConfigDisableAnonymousGitAccessAuditEntry was addedType RepoAddMemberAuditEntryVisibility was addedType RepoAddMemberAuditEntry was addedType RepoAccessAuditEntryVisibility was addedType RepoAccessAuditEntry was addedType PrivateRepositoryForkingEnableAuditEntry was addedType PrivateRepositoryForkingDisableAuditEntry was addedType OrgUpdateMemberRepositoryInvitationPermissionAuditEntry was addedType OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility was addedType OrgUpdateMemberRepositoryCreationPermissionAuditEntry was addedType OrgUpdateMemberAuditEntryPermission was addedType OrgUpdateMemberAuditEntry was addedType OrgUpdateDefaultRepositoryPermissionAuditEntryPermission was addedType OrgUpdateDefaultRepositoryPermissionAuditEntry was addedType OrgUnblockUserAuditEntry was addedType TeamAuditEntryData was addedType OrgRestoreMemberMembershipTeamAuditEntryData was addedType RepositoryAuditEntryData was addedType OrgRestoreMemberMembershipRepositoryAuditEntryData was addedType OrgRestoreMemberMembershipOrganizationAuditEntryData was addedType OrgRestoreMemberAuditEntryMembership was addedType OrgRestoreMemberAuditEntry was addedType OrgRemoveOutsideCollaboratorAuditEntryReason was addedType OrgRemoveOutsideCollaboratorAuditEntryMembershipType was addedType OrgRemoveOutsideCollaboratorAuditEntry was addedType OrgRemoveMemberAuditEntryReason was addedType OrgRemoveMemberAuditEntryMembershipType was addedType OrgRemoveMemberAuditEntry was addedType OrgRemoveBillingManagerAuditEntryReason was addedType OrgRemoveBillingManagerAuditEntry was addedType OrgOauthAppAccessRequestedAuditEntry was addedType OrgOauthAppAccessDeniedAuditEntry was addedType OrgOauthAppAccessApprovedAuditEntry was addedType OrgInviteToBusinessAuditEntry was addedType OrgInviteMemberAuditEntry was addedType OrgEnableTwoFactorRequirementAuditEntry was addedType OrgEnableSamlAuditEntry was addedType OrgEnableOauthAppRestrictionsAuditEntry was addedType OrgDisableTwoFactorRequirementAuditEntry was addedType OrgDisableSamlAuditEntry was addedType OrgDisableOauthAppRestrictionsAuditEntry was addedType OrgConfigEnableCollaboratorsOnlyAuditEntry was addedType OrgConfigDisableCollaboratorsOnlyAuditEntry was addedType OrgBlockUserAuditEntry was addedType OrgAddMemberAuditEntryPermission was addedType OrgAddMemberAuditEntry was addedType OrgAddBillingManagerAuditEntry was addedType OauthApplicationCreateAuditEntryState was addedType OauthApplicationAuditEntryData was addedType OauthApplicationCreateAuditEntry was addedType MembersCanDeleteReposEnableAuditEntry was addedType MembersCanDeleteReposDisableAuditEntry was addedType OrganizationAuditEntryData was addedType BusinessAuditEntryData was addedType PreciseDateTime was addedType ActorLocation was addedType AuditEntryActor was addedType AuditEntry was addedType MembersCanDeleteReposClearAuditEntry was addedType OrganizationAuditEntry was addedSchema changes for 2019-05-13The GraphQL schema includes these changes:Enum value ISSUE was added to enum PinnableItemTypeField origin was added to object type SecurityAdvisorySchema changes for 2019-05-09The GraphQL schema includes these changes:Union member Mannequin was added to Union type RequestedReviewerType Mannequin was addedSchema changes for 2019-04-23The GraphQL schema includes these changes:Field isArchived was added to object type MarketplaceListingThe following changes will be made to the schema:On member MarketplaceListing.hasApprovalBeenRequested: hasApprovalBeenRequested will be removed. Use isVerificationPendingFromDraft instead. Effective 2019-10-01.On member MarketplaceListing.isApproved: isApproved will be removed. Use isPublic instead. Effective 2019-10-01.On member MarketplaceListing.isDelisted: isDelisted will be removed. Use isArchived instead. Effective 2019-10-01.Schema changes for 2019-04-10The GraphQL schema includes these changes:Field permissionSources was added to object type RepositoryCollaboratorEdgeType PermissionGranter was addedType PermissionSource was addedSchema changes for 2019-04-04The GraphQL schema includes these changes:Enum value USER_BLOCKED_EVENT was added to enum IssueTimelineItemsItemTypeUnion member UserBlockedEvent was added to Union type IssueTimelineItemsUnion member UserBlockedEvent was added to Union type IssueTimelineItemEnum value USER_BLOCKED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member UserBlockedEvent was added to Union type PullRequestTimelineItemsUnion member UserBlockedEvent was added to Union type PullRequestTimelineItemField isDisabled was added to object type RepositoryType UserBlockDuration was addedType UserBlockedEvent was addedSchema changes for 2019-03-30The GraphQL schema includes these changes:User object implements ProfileOwner interfaceOrganization object implements ProfileOwner interfaceField viewerCanChangePinnedItems was added to object type UserField pinnedItemsRemaining was added to object type UserField pinnedItems was added to object type UserField pinnableItems was added to object type UserField itemShowcase was added to object type UserField anyPinnableItems was added to object type UserField viewerCanChangePinnedItems was added to object type OrganizationField pinnedItemsRemaining was added to object type OrganizationField pinnedItems was added to object type OrganizationField pinnableItems was added to object type OrganizationField itemShowcase was added to object type OrganizationField anyPinnableItems was added to object type OrganizationType PinnableItem was addedType PinnableItemEdge was addedType PinnableItemConnection was addedType ProfileItemShowcase was addedType PinnableItemType was addedType ProfileOwner was addedThe following changes will be made to the schema:On member Organization.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-07-01.On member RepositoryOwner.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-07-01.On member User.pinnedRepositories: pinnedRepositories will be removed. Use ProfileOwner.pinnedItems instead. Effective 2019-07-01.Schema changes for 2019-03-29The GraphQL schema includes these changes:Field cloneProject was added to object type MutationType CloneProjectInput was addedType CloneProjectPayload was addedSchema changes for 2019-03-23The following changes will be made to the schema:On member Repository.protectedBranches: protectedBranches will be removed. Use Repository.branchProtectionRules instead. Effective 2019-01-01.On member Migration.uploadUrlTemplate: uploadUrlTemplate will be removed. Use uploadUrl instead. Effective 2019-04-01.On member Organization.members: members will be removed. Use Organization.membersWithRole instead. Effective 2019-04-01.On member ContributionsCollection.firstIssueContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.firstPullRequestContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.firstRepositoryContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.joinedGitHubContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member RepositoryVulnerabilityAlert.affectedRange: affectedRange will be removed. Use securityVulnerability.vulnerableVersionRange instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.externalIdentifier: externalIdentifier will be removed. Use securityAdvisory.identifiers instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.externalReference: externalReference will be removed. Use securityAdvisory.references instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.fixedIn: fixedIn will be removed. Use securityVulnerability.firstPatchedVersion instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.packageName: packageName will be removed. Use securityVulnerability.package instead. Effective 2019-07-01.On member ReviewDismissedEvent.message: message will be removed. Use dismissalMessage instead. Effective 2019-07-01.On member ReviewDismissedEvent.messageHtml: messageHtml will be removed. Use dismissalMessageHTML instead. Effective 2019-07-01.Schema changes for 2019-03-21The GraphQL schema includes these changes:Field baseRepository was added to object type PullRequestSchema changes for 2019-03-19The following changes will be made to the schema:On member ContributionsCollection.firstIssueContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.firstPullRequestContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.firstRepositoryContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.On member ContributionsCollection.joinedGitHubContribution.ignoreTimeRange: ignoreTimeRange will be removed. Use a ContributionsCollection starting sufficiently far back Effective 2019-07-01.Schema changes for 2019-03-08The GraphQL schema includes these changes:Field associatedPullRequests was added to object type CommitType PullRequestOrder was addedSchema changes for 2019-03-06The GraphQL schema includes these changes:Field pullRequestReviewContributionsByRepository was added to object type ContributionsCollectionField pullRequestContributionsByRepository was added to object type ContributionsCollectionField issueContributionsByRepository was added to object type ContributionsCollectionType PullRequestReviewContributionsByRepository was addedType PullRequestContributionsByRepository was addedType IssueContributionsByRepository was addedThe Unified business identity preview includes these changes:Field pendingCollaborators was added to object type BusinessAdminInfoField outsideCollaborators was added to object type BusinessAdminInfoField members was added to object type BusinessType BusinessMemberEdge was addedType BusinessMemberConnection was addedType RepositoryInvitationOrder was addedType BusinessPendingCollaboratorEdge was addedType BusinessPendingCollaboratorConnection was addedType BusinessRepositoryInfoEdge was addedType BusinessRepositoryInfoConnection was addedType BusinessOutsideCollaboratorEdge was addedType BusinessOutsideCollaboratorConnection was addedSchema changes for 2019-03-04The GraphQL schema includes these changes:Field updateBusinessMembersCanUpdateProtectedBranchesSetting was removed from object type MutationType UpdateBusinessMembersCanUpdateProtectedBranchesSettingInput was removedType UpdateBusinessMembersCanUpdateProtectedBranchesSettingPayload was removedField pullRequestReviewContributions was added to object type ContributionsCollectionField contributionYears was added to object type ContributionsCollectionType CreatedPullRequestReviewContribution was addedType CreatedPullRequestReviewContributionEdge was addedType CreatedPullRequestReviewContributionConnection was addedThe Unified business identity preview includes these changes:Argument orderBy: BusinessMemberInvitationOrder added to field BusinessBillingInfo.pendingBillingManagerInvitationsArgument orderBy: OrganizationInvitationOrder added to field BusinessAdminInfo.pendingMemberInvitationsArgument orderBy: BusinessMemberInvitationOrder added to field BusinessAdminInfo.pendingAdminInvitationsType RepositoryInvitationOrderField was addedType OrganizationInvitationOrderField was addedType OrganizationInvitationOrder was addedType BusinessMemberInvitationOrderField was addedType BusinessMemberInvitationOrder was addedSchema changes for 2019-03-02The GraphQL schema includes these changes:Argument orderBy: ContributionOrder added to field ContributionsCollection.issueContributionsField repositoryContributions was added to object type ContributionsCollectionType CreatedRepositoryContributionEdge was addedType CreatedRepositoryContributionConnection was addedSchema changes for 2019-02-26The GraphQL schema includes these changes:Field OrganizationMemberEdge.hasTwoFactorEnabled changed type from Boolean! to BooleanSchema changes for 2019-02-23The GraphQL schema includes these changes:Field language was added to object type GistFileField isTruncated was added to object type GistFileField isImage was added to object type GistFileField extension was added to object type GistFileField encodedName was added to object type GistFileType IdentityProviderConfigurationState was addedThe Unified business identity preview includes these changes:Field samlIdentityProviderSettingOrganizations was added to object type BusinessAdminInfoField actionExecutionCapabilitySettingOrganizations was added to object type BusinessAdminInfoArgument query: String added to field Business.organizationsSchema changes for 2019-02-21The GraphQL schema includes these changes:Enum value DRAFT was added to enum MergeStateStatusField isVerified was added to object type MarketplaceListingField isVerificationPendingFromUnverified was added to object type MarketplaceListingField isVerificationPendingFromDraft was added to object type MarketplaceListingField isUnverifiedPending was added to object type MarketplaceListingField isUnverified was added to object type MarketplaceListingField isPublic was added to object type MarketplaceListingSchema changes for 2019-02-20The GraphQL schema includes these changes:Field contributions was added to object type CommitContributionsByRepositoryField pullRequestContributions was added to object type ContributionsCollectionField firstRepositoryContribution was added to object type ContributionsCollectionType ContributionOrderField was addedType ContributionOrder was addedType CreatedPullRequestContributionConnection was addedType CreatedRepositoryContribution was addedType CreatedRepositoryOrRestrictedContribution was addedType CommitContributionOrderField was addedType CommitContributionOrder was addedType CreatedCommitContribution was addedType CreatedCommitContributionEdge was addedType CreatedCommitContributionConnection was addedSchema changes for 2019-02-15The GraphQL schema includes these changes:Field isFork was added to object type GistField files was added to object type GistField commitContributionsByRepository was added to object type ContributionsCollectionType GistFile was addedType CommitContributionsByRepository was addedThe Draft Pull Requests Preview preview includes these changes:Input field draft was added to input object type CreatePullRequestInputField markPullRequestReadyForReview was added to object type MutationField isDraft was added to object type PullRequestType MarkPullRequestReadyForReviewInput was addedType MarkPullRequestReadyForReviewPayload was addedSchema changes for 2019-02-13The GraphQL schema includes these changes:Organization object implements MemberStatusable interfaceTeam object implements MemberStatusable interfaceUser object implements ProjectOwner interfaceField changeUserStatus was added to object type MutationField memberStatuses was added to object type OrganizationField memberStatuses was added to object type TeamField viewerCanCreateProjects was added to object type UserField status was added to object type UserField projectsUrl was added to object type UserField projectsResourcePath was added to object type UserField projects was added to object type UserField project was added to object type UserType ChangeUserStatusInput was addedType ChangeUserStatusPayload was addedType UserStatusOrderField was addedType UserStatusOrder was addedType UserStatus was addedType UserStatusEdge was addedType UserStatusConnection was addedType MemberStatusable was addedSchema changes for 2019-02-12The GraphQL schema includes these changes:Field updatedAt was added to object type PublicKeyField isReadOnly was added to object type PublicKeyField fingerprint was added to object type PublicKeyField createdAt was added to object type PublicKeyField accessedAt was added to object type PublicKeyField hasTwoFactorEnabled was added to object type OrganizationMemberEdgeType SetBusinessIdentityProviderInput was addedType SetBusinessIdentityProviderPayload was addedType RemoveBusinessIdentityProviderInput was addedType RemoveBusinessIdentityProviderPayload was addedType RegenerateBusinessIdentityProviderRecoveryCodesInput was addedType RegenerateBusinessIdentityProviderRecoveryCodesPayload was addedThe Unified business identity preview includes these changes:Field setBusinessIdentityProvider was added to object type MutationField removeBusinessIdentityProvider was added to object type MutationField regenerateBusinessIdentityProviderRecoveryCodes was added to object type MutationField twoFactorRequiredSettingOrganizations was added to object type BusinessAdminInfoField teamDiscussionsSettingOrganizations was added to object type BusinessAdminInfoField samlIdentityProvider was added to object type BusinessAdminInfoField repositoryProjectsSettingOrganizations was added to object type BusinessAdminInfoField organizationProjectsSettingOrganizations was added to object type BusinessAdminInfoField membersCanInviteCollaboratorsSettingOrganizations was added to object type BusinessAdminInfoField membersCanDeleteRepositoriesSettingOrganizations was added to object type BusinessAdminInfoField membersCanDeleteIssuesSettingOrganizations was added to object type BusinessAdminInfoField membersCanCreateRepositoriesSettingOrganizations was added to object type BusinessAdminInfoField membersCanChangeRepositoryVisibilitySettingOrganizations was added to object type BusinessAdminInfoField defaultRepositoryPermissionSettingOrganizations was added to object type BusinessAdminInfoField allowPrivateRepositoryForkingSettingOrganizations was added to object type BusinessAdminInfoType SamlSignatureAlgorithm was addedType SamlDigestAlgorithm was addedType BusinessIdentityProvider was addedType OrganizationMembersCanCreateRepositoriesSettingValue was addedSchema changes for 2019-02-09The GraphQL schema includes these changes:Default value for argument orderBy on field Commit.deployments changed from {"field"=>"CREATED_AT", "direction"=>"DESC"} to {"field"=>"CREATED_AT", "direction"=>"ASC"}Default value for argument orderBy on field Repository.deployments changed from {"field"=>"CREATED_AT", "direction"=>"DESC"} to {"field"=>"CREATED_AT", "direction"=>"ASC"}Schema changes for 2019-02-07The GraphQL schema includes these changes:Type DefaultRepositoryPermissionField was addedThe Repository Vulnerability Alerts preview includes these changes:Field RepositoryVulnerabilityAlert.externalReference changed type from String to String!Field vulnerableRequirements was added to object type RepositoryVulnerabilityAlertField vulnerableManifestPath was added to object type RepositoryVulnerabilityAlertField vulnerableManifestFilename was added to object type RepositoryVulnerabilityAlertField securityVulnerability was added to object type RepositoryVulnerabilityAlertField securityAdvisory was added to object type RepositoryVulnerabilityAlertThe following changes will be made to the schema:On member RepositoryVulnerabilityAlert.affectedRange: affectedRange will be removed. Use securityVulnerability.vulnerableVersionRange instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.externalIdentifier: externalIdentifier will be removed. Use securityAdvisory.identifiers instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.externalReference: externalReference will be removed. Use securityAdvisory.references instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.fixedIn: fixedIn will be removed. Use securityVulnerability.firstPatchedVersion instead. Effective 2019-07-01.On member RepositoryVulnerabilityAlert.packageName: packageName will be removed. Use securityVulnerability.package instead. Effective 2019-07-01.Schema changes for 2019-02-06The GraphQL schema includes these changes:Enum value QUEUED was added to enum DeploymentStatusStateEnum value IN_PROGRESS was added to enum DeploymentStatusStateField dismissalMessageHTML was added to object type ReviewDismissedEventField dismissalMessage was added to object type ReviewDismissedEventThe following changes will be made to the schema:On member ReviewDismissedEvent.message: message will be removed. Use dismissalMessage instead. Effective 2019-07-01.On member ReviewDismissedEvent.messageHtml: messageHtml will be removed. Use dismissalMessageHTML instead. Effective 2019-07-01.Schema changes for 2019-02-04The GraphQL schema includes these changes:Field deployments was added to object type CommitArgument orderBy: DeploymentOrder added to field Repository.deploymentsType UpdateBusinessTwoFactorAuthenticationRequiredSettingInput was addedType UpdateBusinessTwoFactorAuthenticationRequiredSettingPayload was addedType UpdateBusinessTeamDiscussionsSettingInput was addedType UpdateBusinessTeamDiscussionsSettingPayload was addedType UpdateBusinessRepositoryProjectsSettingInput was addedType UpdateBusinessRepositoryProjectsSettingPayload was addedType UpdateBusinessProfileInput was addedType UpdateBusinessProfilePayload was addedType UpdateBusinessOrganizationProjectsSettingInput was addedType UpdateBusinessOrganizationProjectsSettingPayload was addedType UpdateBusinessMembersCanUpdateProtectedBranchesSettingInput was addedType UpdateBusinessMembersCanUpdateProtectedBranchesSettingPayload was addedType UpdateBusinessMembersCanInviteCollaboratorsSettingInput was addedType UpdateBusinessMembersCanInviteCollaboratorsSettingPayload was addedType UpdateBusinessMembersCanDeleteRepositoriesSettingInput was addedType UpdateBusinessMembersCanDeleteRepositoriesSettingPayload was addedType UpdateBusinessMembersCanDeleteIssuesSettingInput was addedType UpdateBusinessMembersCanDeleteIssuesSettingPayload was addedType UpdateBusinessMembersCanCreateRepositoriesSettingInput was addedType UpdateBusinessMembersCanCreateRepositoriesSettingPayload was addedType UpdateBusinessMembersCanChangeRepositoryVisibilitySettingInput was addedType UpdateBusinessMembersCanChangeRepositoryVisibilitySettingPayload was addedType UpdateBusinessDefaultRepositoryPermissionSettingInput was addedType UpdateBusinessDefaultRepositoryPermissionSettingPayload was addedType UpdateBusinessAllowPrivateRepositoryForkingSettingInput was addedType UpdateBusinessAllowPrivateRepositoryForkingSettingPayload was addedType RemoveBusinessBillingManagerInput was addedType RemoveBusinessBillingManagerPayload was addedType RemoveBusinessAdminInput was addedType RemoveBusinessAdminPayload was addedType InviteBusinessBillingManagerInput was addedType InviteBusinessBillingManagerPayload was addedType InviteBusinessAdminInput was addedType InviteBusinessAdminPayload was addedType CancelBusinessBillingManagerInvitationInput was addedType CancelBusinessBillingManagerInvitationPayload was addedType CancelBusinessAdminInvitationInput was addedType CancelBusinessAdminInvitationPayload was addedType AcceptBusinessMemberInvitationInput was addedType AcceptBusinessMemberInvitationPayload was addedType BusinessMemberInvitationEdge was addedType BusinessMemberInvitationConnection was addedType DeploymentOrderField was addedType DeploymentOrder was addedThe Unified business identity preview includes these changes:Field updateBusinessTwoFactorAuthenticationRequiredSetting was added to object type MutationField updateBusinessTeamDiscussionsSetting was added to object type MutationField updateBusinessRepositoryProjectsSetting was added to object type MutationField updateBusinessProfile was added to object type MutationField updateBusinessOrganizationProjectsSetting was added to object type MutationField updateBusinessMembersCanUpdateProtectedBranchesSetting was added to object type MutationField updateBusinessMembersCanInviteCollaboratorsSetting was added to object type MutationField updateBusinessMembersCanDeleteRepositoriesSetting was added to object type MutationField updateBusinessMembersCanDeleteIssuesSetting was added to object type MutationField updateBusinessMembersCanCreateRepositoriesSetting was added to object type MutationField updateBusinessMembersCanChangeRepositoryVisibilitySetting was added to object type MutationField updateBusinessDefaultRepositoryPermissionSetting was added to object type MutationField updateBusinessAllowPrivateRepositoryForkingSetting was added to object type MutationField removeBusinessBillingManager was added to object type MutationField removeBusinessAdmin was added to object type MutationField inviteBusinessBillingManager was added to object type MutationField inviteBusinessAdmin was added to object type MutationField cancelBusinessBillingManagerInvitation was added to object type MutationField cancelBusinessAdminInvitation was added to object type MutationField acceptBusinessMemberInvitation was added to object type MutationField businessMemberInvitationByToken was added to object type QueryField businessMemberInvitation was added to object type QueryField business was added to object type QueryType BusinessRepositoryInfo was addedType OrganizationOrderField was addedType OrganizationOrder was addedType BusinessBillingInfo was addedType BusinessEnabledSettingValue was addedType BusinessPendingMemberInvitationConnection was addedType BusinessMemberInvitationRole was addedType BusinessMemberInvitation was addedType BusinessMembersCanCreateRepositoriesSettingValue was addedType BusinessDefaultRepositoryPermissionSettingValue was addedType BusinessEnabledDisabledSettingValue was addedType BusinessAdminInfo was addedType Business was addedSchema changes for 2019-01-31The GraphQL schema includes these changes:CodeOfConduct object implements Node interfaceField resourcePath was added to object type CodeOfConductField id was added to object type CodeOfConductType PullRequestReviewThreadEdge was addedType PullRequestReviewThreadConnection was addedThe Pull Requests Preview preview includes these changes:Field reviewThreads was added to object type PullRequestSchema changes for 2019-01-30The GraphQL schema includes these changes:CodeOfConduct object implements Node interfaceField resourcePath was added to object type CodeOfConductField id was added to object type CodeOfConductType PullRequestReviewThreadEdge was addedType PullRequestReviewThreadConnection was addedThe Pull Requests Preview preview includes these changes:Field reviewThreads was added to object type PullRequestSchema changes for 2019-01-19The GraphQL schema includes these changes:Field pendingMembers was added to object type OrganizationSchema changes for 2019-01-18The GraphQL schema includes these changes:Enum value ROCKET was added to enum ReactionContentEnum value EYES was added to enum ReactionContentSchema changes for 2019-01-16The GraphQL schema includes these changes:Field issueContributions was added to object type ContributionsCollectionType CreatedIssueContributionConnection was addedSchema changes for 2019-01-11The GraphQL schema includes these changes:PullRequestReview object implements Reactable interfaceField viewerCanReact was added to object type PullRequestReviewField reactions was added to object type PullRequestReviewField reactionGroups was added to object type PullRequestReviewThe Hovercards preview includes these changes:Argument includeNotificationContexts: Boolean added to field PullRequest.hovercardArgument includeNotificationContexts: Boolean added to field Issue.hovercardSchema changes for 2019-01-08The GraphQL schema includes these changes:Field protectedBranch was removed from object type ReviewDismissalAllowanceField protectedBranch was removed from object type PushAllowanceSchema changes for 2019-01-05The GraphQL schema includes these changes:Type DeleteIssueInput was addedType DeleteIssuePayload was addedThe Issues Preview preview includes these changes:Field deleteIssue was added to object type MutationSchema changes for 2019-01-03The GraphQL schema includes these changes:Field UpdateTopicsPayload.repository changed type from Repository! to RepositoryField UpdateSubscriptionPayload.subscribable changed type from Subscribable! to SubscribableField UpdatePullRequestReviewCommentPayload.pullRequestReviewComment changed type from PullRequestReviewComment! to PullRequestReviewCommentField UpdatePullRequestReviewPayload.pullRequestReview changed type from PullRequestReview! to PullRequestReviewField UpdateProjectColumnPayload.projectColumn changed type from ProjectColumn! to ProjectColumnField UpdateProjectCardPayload.projectCard changed type from ProjectCard! to ProjectCardField UpdateProjectPayload.project changed type from Project! to ProjectField SubmitPullRequestReviewPayload.pullRequestReview changed type from PullRequestReview! to PullRequestReviewField RequestReviewsPayload.requestedReviewersEdge changed type from UserEdge! to UserEdgeField RequestReviewsPayload.pullRequest changed type from PullRequest! to PullRequestField RemoveStarPayload.starrable changed type from Starrable! to StarrableField RemoveReactionPayload.subject changed type from Reactable! to ReactableField RemoveReactionPayload.reaction changed type from Reaction! to ReactionField RemoveOutsideCollaboratorPayload.removedUser changed type from User! to UserField MoveProjectColumnPayload.columnEdge changed type from ProjectColumnEdge! to ProjectColumnEdgeField MoveProjectCardPayload.cardEdge changed type from ProjectCardEdge! to ProjectCardEdgeField DismissPullRequestReviewPayload.pullRequestReview changed type from PullRequestReview! to PullRequestReviewField DeletePullRequestReviewPayload.pullRequestReview changed type from PullRequestReview! to PullRequestReviewField DeleteProjectColumnPayload.project changed type from Project! to ProjectField DeleteProjectColumnPayload.deletedColumnId changed type from ID! to IDField DeleteProjectCardPayload.deletedCardId changed type from ID! to IDField DeleteProjectCardPayload.column changed type from ProjectColumn! to ProjectColumnField DeleteProjectPayload.owner changed type from ProjectOwner! to ProjectOwnerField DeclineTopicSuggestionPayload.topic changed type from Topic! to TopicField CreateProjectPayload.project changed type from Project! to ProjectField AddStarPayload.starrable changed type from Starrable! to StarrableField AddReactionPayload.subject changed type from Reactable! to ReactableField AddReactionPayload.reaction changed type from Reaction! to ReactionField AddPullRequestReviewCommentPayload.commentEdge changed type from PullRequestReviewCommentEdge! to PullRequestReviewCommentEdgeField AddPullRequestReviewCommentPayload.comment changed type from PullRequestReviewComment! to PullRequestReviewCommentField AddPullRequestReviewPayload.reviewEdge changed type from PullRequestReviewEdge! to PullRequestReviewEdgeField AddPullRequestReviewPayload.pullRequestReview changed type from PullRequestReview! to PullRequestReviewField AddProjectColumnPayload.project changed type from Project! to ProjectField AddProjectColumnPayload.columnEdge changed type from ProjectColumnEdge! to ProjectColumnEdgeField AddProjectCardPayload.projectColumn changed type from Project! to ProjectColumnField AddProjectCardPayload.cardEdge changed type from ProjectCardEdge! to ProjectCardEdgeField AddCommentPayload.timelineEdge changed type from IssueTimelineItemEdge! to IssueTimelineItemEdgeField AddCommentPayload.subject changed type from Node! to NodeField AddCommentPayload.commentEdge changed type from IssueCommentEdge! to IssueCommentEdgeField AcceptTopicSuggestionPayload.topic changed type from Topic! to TopicSchema changes for 2018-12-21The GraphQL schema includes these changes:Field firstPullRequestContribution was added to object type ContributionsCollectionField firstIssueContribution was added to object type ContributionsCollectionType CreatedPullRequestOrRestrictedContribution was addedType RestrictedContribution was addedType CreatedIssueOrRestrictedContribution was addedSchema changes for 2018-12-20The GraphQL schema includes these changes:Argument first: Int added to field Topic.relatedTopicsSchema changes for 2018-12-18The Hovercards preview includes these changes:Field hovercard was added to object type PullRequestField hovercard was added to object type IssueType ViewerHovercardContext was addedType ReviewStatusHovercardContext was addedSchema changes for 2018-12-14The GraphQL schema includes these changes:Field popularPullRequestContribution was added to object type ContributionsCollectionField popularIssueContribution was added to object type ContributionsCollectionField mostRecentCollectionWithoutActivity was added to object type ContributionsCollectionField joinedGitHubContribution was added to object type ContributionsCollectionField hasActivityInThePast was added to object type ContributionsCollectionType CreatedPullRequestContributionEdge was addedType CreatedIssueContributionEdge was addedType CreatedPullRequestContribution was addedType CreatedIssueContribution was addedType Contribution was addedType JoinedGitHubContribution was addedSchema changes for 2018-12-13The GraphQL schema includes these changes:Enum value UNPINNED_EVENT was added to enum IssueTimelineItemsItemTypeEnum value PINNED_EVENT was added to enum IssueTimelineItemsItemTypeUnion member UnpinnedEvent was added to Union type IssueTimelineItemsUnion member PinnedEvent was added to Union type IssueTimelineItemsEnum value UNPINNED_EVENT was added to enum PullRequestTimelineItemsItemTypeEnum value PINNED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member UnpinnedEvent was added to Union type PullRequestTimelineItemsUnion member PinnedEvent was added to Union type PullRequestTimelineItemsType UnpinIssueInput was addedType UnpinIssuePayload was addedType PinIssueInput was addedType PinIssuePayload was addedType UnpinnedEvent was addedType PinnedEvent was addedThe [Pinned Issues Preview preview](/graphql/overview/schema-previews#pinned-issues-preview) includes these changes:Field unpinIssue was added to object type MutationField pinIssue was added to object type MutationField pinnedIssues was added to object type RepositoryType PinnedIssue was addedType PinnedIssueEdge was addedType PinnedIssueConnection was addedSchema changes for 2018-12-11The GraphQL schema includes these changes:Field tagName was added to object type ReleaseSchema changes for 2018-12-06The GraphQL schema includes these changes:Type CreateContentAttachmentInput was addedType ContentReference was addedType ContentAttachment was addedType CreateContentAttachmentPayload was addedThe [Create content attachments preview](/graphql/overview/schema-previews#create-content-attachments-preview) includes these changes:Field createContentAttachment was added to object type MutationSchema changes for 2018-12-03The GraphQL schema includes these changes:Field membersWithRole was added to object type OrganizationType OrganizationMemberRole was addedType OrganizationMemberEdge was addedType OrganizationMemberConnection was addedThe following changes will be made to the schema:On member Organization.members: members will be removed. Use Organization.membersWithRole instead. Effective 2019-04-01.Schema changes for 2018-12-01The GraphQL schema includes these changes:Field contributionsCollection was added to object type UserType ContributionCalendarDay was addedType ContributionCalendarWeek was addedType Date was addedType ContributionCalendarMonth was addedType ContributionCalendar was addedType ContributionsCollection was addedSchema changes for 2018-11-16The following changes will be made to the schema:On member Migration.uploadUrlTemplate: uploadUrlTemplate will be removed. Use uploadUrl instead. Effective 2019-04-01.Schema changes for 2018-11-12The GraphQL schema includes these changes:Field commitOid was added to object type DeploymentThe following changes will be made to the schema:On member AddProjectCardPayload.projectColumn: Type for projectColumn will change from Project! to ProjectColumn. Effective 2019-01-01.Schema changes for 2018-11-07The GraphQL schema includes these changes:Enum value TRANSFERRED_EVENT was added to enum IssueTimelineItemsItemTypeUnion member TransferredEvent was added to Union type IssueTimelineItemsUnion member TransferredEvent was added to Union type IssueTimelineItemGistComment object implements Minimizable interfaceEnum value TRANSFERRED_EVENT was added to enum PullRequestTimelineItemsItemTypeUnion member TransferredEvent was added to Union type PullRequestTimelineItemsPullRequestReviewComment object implements Minimizable interfaceCommitComment object implements Minimizable interfaceCommit object implements UniformResourceLocatable interfaceIssueComment object implements Minimizable interfaceEnum value DENIED was added to enum CommentCannotUpdateReasonField viewerCanMinimize was added to object type GistCommentField minimizedReason was added to object type GistCommentField isMinimized was added to object type GistCommentField viewerCanMinimize was added to object type PullRequestReviewCommentField minimizedReason was added to object type PullRequestReviewCommentField isMinimized was added to object type PullRequestReviewCommentField viewerCanMinimize was added to object type CommitCommentField minimizedReason was added to object type CommitCommentField isMinimized was added to object type CommitCommentField viewerCanMinimize was added to object type IssueCommentField minimizedReason was added to object type IssueCommentField isMinimized was added to object type IssueCommentType UnminimizeCommentInput was addedType UnminimizeCommentPayload was addedType ReportedContentClassifiers was addedType MinimizeCommentInput was addedType MinimizeCommentPayload was addedType TransferredEvent was addedThe _Minimize Comments_ preview includes these changes:Field unminimizeComment was added to object type MutationField minimizeComment was added to object type MutationType Minimizable was addedSchema changes for 2018-10-24The Pull Requests Preview preview includes these changes:Field updatePullRequest was added to object type MutationField reopenPullRequest was added to object type MutationField mergePullRequest was added to object type MutationField deletePullRequestReviewComment was added to object type MutationField createPullRequest was added to object type MutationField closePullRequest was added to object type MutationField files was added to object type PullRequestType UpdatePullRequestInput was addedType UpdatePullRequestPayload was addedType ReopenPullRequestInput was addedType ReopenPullRequestPayload was addedType MergePullRequestInput was addedType MergePullRequestPayload was addedType DeletePullRequestReviewCommentInput was addedType DeletePullRequestReviewCommentPayload was addedType CreatePullRequestInput was addedType CreatePullRequestPayload was addedType ClosePullRequestInput was addedType ClosePullRequestPayload was addedType PullRequestChangedFile was addedType PullRequestChangedFileEdge was addedType PullRequestChangedFileConnection was addedSchema changes for 2018-10-19The GraphQL schema includes these changes:Argument ownerAffiliations: [RepositoryAffiliation] added to field Repository.forksArgument ownerAffiliations: [RepositoryAffiliation] added to field RepositoryOwner.repositoriesArgument ownerAffiliations: [RepositoryAffiliation] added to field RepositoryOwner.pinnedRepositoriesArgument ownerAffiliations: [RepositoryAffiliation] added to field User.watchingArgument ownerAffiliations: [RepositoryAffiliation] added to field User.repositoriesArgument ownerAffiliations: [RepositoryAffiliation] added to field User.pinnedRepositoriesArgument ownerAffiliations: [RepositoryAffiliation] added to field Organization.repositoriesArgument ownerAffiliations: [RepositoryAffiliation] added to field Organization.pinnedRepositoriesSchema changes for 2018-10-16The Access to GitHub Security Advisories preview includes these changes:Field securityVulnerabilities was added to object type QueryField securityAdvisory was added to object type QueryField securityAdvisories was added to object type QueryType SecurityAdvisoryOrderField was addedType SecurityAdvisoryOrder was addedType SecurityAdvisoryIdentifierType was addedType SecurityAdvisoryIdentifierFilter was addedType SecurityVulnerabilityOrderField was addedType SecurityVulnerabilityOrder was addedType SecurityAdvisoryEcosystem was addedType SecurityAdvisoryPackage was addedType SecurityAdvisoryPackageVersion was addedType SecurityVulnerability was addedType SecurityVulnerabilityEdge was addedType SecurityVulnerabilityConnection was addedType SecurityAdvisorySeverity was addedType SecurityAdvisoryReference was addedType SecurityAdvisoryIdentifier was addedType SecurityAdvisory was addedType SecurityAdvisoryEdge was addedType SecurityAdvisoryConnection was addedSchema changes for 2018-10-12The GraphQL schema includes these changes:Field outdated was added to object type PullRequestReviewCommentField onBehalfOf was added to object type PullRequestReviewSchema changes for 2018-10-11The GraphQL schema includes these changes:Field state was added to object type PullRequestReviewCommentType PullRequestReviewCommentState was addedSchema changes for 2018-10-08The following changes will be made to the schema:On member PushAllowance.protectedBranch: protectedBranch will be removed. Use Repository.branchProtectionRule instead. Effective 2019-01-01.On member Repository.protectedBranches: protectedBranches will be removed. Use Repository.branchProtectionRules instead. Effective 2019-01-01.On member ReviewDismissalAllowance.protectedBranch: protectedBranch will be removed. Use ReviewDismissalAllowance.branchProtectionRule instead. Effective 2019-01-01.Schema changes for 2018-09-26The GraphQL schema includes these changes:Field viewerCanApplySuggestion was added to object type PullRequestSchema changes for 2018-09-25The GraphQL schema includes these changes:Field ref was added to object type DeploymentSchema changes for 2018-09-19The Issues Preview preview includes these changes:Field convertProjectCardNoteToIssue was added to object type MutationType ConvertProjectCardNoteToIssueInput was addedType ConvertProjectCardNoteToIssuePayload was addedSchema changes for 2018-09-14The GraphQL schema includes these changes:Enum value UNMARKED_AS_DUPLICATE_EVENT was removed from enum IssueTimelineItemsItemTypeEnum value MARKED_AS_DUPLICATE_EVENT was removed from enum IssueTimelineItemsItemTypeEnum value UNMARKED_AS_DUPLICATE_EVENT was removed from enum PullRequestTimelineItemsItemTypeEnum value MARKED_AS_DUPLICATE_EVENT was removed from enum PullRequestTimelineItemsItemTypeSchema changes for 2018-09-13The [Checks preview](/graphql/overview/schema-previews#checks-preview) includes these changes:Field app was added to object type CheckSuiteSchema changes for 2018-09-12The GraphQL schema includes these changes:Type UpdateIssueCommentInput was addedType UpdateIssueCommentPayload was addedType UpdateIssueInput was addedType UpdateIssuePayload was addedType UnmarkIssueAsDuplicateInput was addedType UnmarkIssueAsDuplicatePayload was addedType ReopenIssueInput was addedType ReopenIssuePayload was addedType RemoveLabelsFromLabelableInput was addedType RemoveLabelsFromLabelablePayload was addedType RemoveAssigneesFromAssignableInput was addedType RemoveAssigneesFromAssignablePayload was addedType DeleteIssueCommentInput was addedType DeleteIssueCommentPayload was addedType CreateIssueInput was addedType CreateIssuePayload was addedType CloseIssueInput was addedType CloseIssuePayload was addedType ClearLabelsFromLabelableInput was addedType ClearLabelsFromLabelablePayload was addedType AddLabelsToLabelableInput was addedType AddLabelsToLabelablePayload was addedType AddAssigneesToAssignableInput was addedType AddAssigneesToAssignablePayload was addedType IssueTimelineItemsItemType was addedType IssueTimelineItems was addedType IssueTimelineItemsEdge was addedType IssueTimelineItemsConnection was addedType PullRequestTimelineItemsItemType was addedType PullRequestTimelineItems was addedType PullRequestTimelineItemsEdge was addedType PullRequestTimelineItemsConnection was addedThe Issues Preview preview includes these changes:Field updateIssueComment was added to object type MutationField updateIssue was added to object type MutationField unmarkIssueAsDuplicate was added to object type MutationField reopenIssue was added to object type MutationField removeLabelsFromLabelable was added to object type MutationField removeAssigneesFromAssignable was added to object type MutationField deleteIssueComment was added to object type MutationField createIssue was added to object type MutationField closeIssue was added to object type MutationField clearLabelsFromLabelable was added to object type MutationField addLabelsToLabelable was added to object type MutationField addAssigneesToAssignable was added to object type MutationArgument filterBy: IssueFilters added to field Milestone.issuesArgument filterBy: IssueFilters added to field Label.issuesField timelineItems was added to object type PullRequestArgument filterBy: IssueFilters added to field Repository.issuesArgument filterBy: IssueFilters added to field User.issuesField timelineItems was added to object type IssueType PullRequestRevisionMarker was addedType PullRequestCommitCommentThread was addedType IssueFilters was addedThe Branch Protection Rules preview includes these changes:Field updateBranchProtectionRule was added to object type MutationField deleteBranchProtectionRule was added to object type MutationField createBranchProtectionRule was added to object type MutationField branchProtectionRule was added to object type ReviewDismissalAllowanceField branchProtectionRule was added to object type PushAllowanceField branchProtectionRules was added to object type RepositoryType UpdateBranchProtectionRuleInput was addedType UpdateBranchProtectionRulePayload was addedType DeleteBranchProtectionRuleInput was addedType DeleteBranchProtectionRulePayload was addedType CreateBranchProtectionRuleInput was addedType CreateBranchProtectionRulePayload was addedType BranchProtectionRuleConflict was addedType BranchProtectionRuleConflictEdge was addedType BranchProtectionRuleConflictConnection was addedType BranchProtectionRule was addedType BranchProtectionRuleEdge was addedType BranchProtectionRuleConnection was addedSchema changes for 2018-09-10The [Project Event Details preview](/graphql/overview/schema-previews#project-event-details-preview) includes these changes:Field projectColumnName was added to object type RemovedFromProjectEventField project was added to object type RemovedFromProjectEventField projectColumnName was added to object type MovedColumnsInProjectEventField projectCard was added to object type MovedColumnsInProjectEventField project was added to object type MovedColumnsInProjectEventField previousProjectColumnName was added to object type MovedColumnsInProjectEventField projectColumnName was added to object type ConvertedNoteToIssueEventField projectCard was added to object type ConvertedNoteToIssueEventField project was added to object type ConvertedNoteToIssueEventField projectColumnName was added to object type AddedToProjectEventField projectCard was added to object type AddedToProjectEventField project was added to object type AddedToProjectEventSchema changes for 2018-09-06The GraphQL schema includes these changes:Enum value BAD_CERT was added to enum GitSignatureStateSchema changes for 2018-09-04The GraphQL schema includes these changes:Input field isArchived was added to input object type UpdateProjectCardInputArgument archivedStates: [ProjectCardArchivedState] added to field PullRequest.projectCardsArgument archivedStates: [ProjectCardArchivedState] added to field Issue.projectCardsField isArchived was added to object type ProjectCardArgument archivedStates: [ProjectCardArchivedState] added to field ProjectColumn.cardsField purpose was added to object type ProjectColumnArgument archivedStates: [ProjectCardArchivedState] added to field Project.pendingCardsType PullRequestOrderField was addedType ProjectColumnPurpose was addedType ProjectCardArchivedState was addedSchema changes for 2018-08-31The GraphQL schema includes these changes:Field logoBackgroundColor was added to object type AppSchema changes for 2018-08-24The GraphQL schema includes these changes:Argument includeCategories: [String!] added to field Query.marketplaceCategoriesSchema changes for 2018-08-13The GraphQL schema includes these changes:Union member DeploymentEnvironmentChangedEvent was added to Union type PullRequestTimelineItemType DeploymentEnvironmentChangedEvent was addedSchema changes for 2018-08-09The Temporary Cloning Token for Private Repositories preview includes these changes:Field tempCloneToken was added to object type RepositorySchema changes for 2018-08-07The GraphQL schema includes these changes:Field isVerified was added to object type OrganizationField app was added to object type MarketplaceListingType App was addedThe [Checks preview](/graphql/overview/schema-previews#checks-preview) includes these changes:Field warningLevel was removed from object type CheckAnnotationField startLine was removed from object type CheckAnnotationField filename was removed from object type CheckAnnotationField endLine was removed from object type CheckAnnotationField creator was removed from object type CheckRunField updateCheckSuitePreferences was added to object type MutationField updateCheckRun was added to object type MutationField rerequestCheckSuite was added to object type MutationField createCheckSuite was added to object type MutationField createCheckRun was added to object type MutationField path was added to object type CheckAnnotationField location was added to object type CheckAnnotationField annotationLevel was added to object type CheckAnnotationType CheckSuiteAutoTriggerPreference was addedType UpdateCheckSuitePreferencesInput was addedType UpdateCheckSuitePreferencesPayload was addedType UpdateCheckRunInput was addedType UpdateCheckRunPayload was addedType RerequestCheckSuiteInput was addedType RerequestCheckSuitePayload was addedType CreateCheckSuiteInput was addedType CreateCheckSuitePayload was addedType RequestableCheckStatusState was addedType CheckRunOutputImage was addedType CheckAnnotationRange was addedType CheckAnnotationData was addedType CheckRunOutput was addedType CheckRunAction was addedType CreateCheckRunInput was addedType CreateCheckRunPayload was addedType CheckAnnotationPosition was addedType CheckAnnotationSpan was addedSchema changes for 2018-08-01The following changes will be made to the schema:On member AcceptTopicSuggestionPayload.topic: Type for topic will change from Topic! to Topic. Effective 2019-01-01.On member AddCommentPayload.commentEdge: Type for commentEdge will change from IssueCommentEdge! to IssueCommentEdge. Effective 2019-01-01.On member AddCommentPayload.subject: Type for subject will change from Node! to Node. Effective 2019-01-01.On member AddCommentPayload.timelineEdge: Type for timelineEdge will change from IssueTimelineItemEdge! to IssueTimelineItemEdge. Effective 2019-01-01.On member AddProjectCardPayload.cardEdge: Type for cardEdge will change from ProjectCardEdge! to ProjectCardEdge. Effective 2019-01-01.On member AddProjectCardPayload.projectColumn: Type for projectColumn will change from Project! to Project. Effective 2019-01-01.On member AddProjectColumnPayload.columnEdge: Type for columnEdge will change from ProjectColumnEdge! to ProjectColumnEdge. Effective 2019-01-01.On member AddProjectColumnPayload.project: Type for project will change from Project! to Project. Effective 2019-01-01.On member AddPullRequestReviewCommentPayload.comment: Type for comment will change from PullRequestReviewComment! to PullRequestReviewComment. Effective 2019-01-01.On member AddPullRequestReviewCommentPayload.commentEdge: Type for commentEdge will change from PullRequestReviewCommentEdge! to PullRequestReviewCommentEdge. Effective 2019-01-01.On member AddPullRequestReviewPayload.pullRequestReview: Type for pullRequestReview will change from PullRequestReview! to PullRequestReview. Effective 2019-01-01.On member AddPullRequestReviewPayload.reviewEdge: Type for reviewEdge will change from PullRequestReviewEdge! to PullRequestReviewEdge. Effective 2019-01-01.On member AddReactionPayload.reaction: Type for reaction will change from Reaction! to Reaction. Effective 2019-01-01.On member AddReactionPayload.subject: Type for subject will change from Reactable! to Reactable. Effective 2019-01-01.On member AddStarPayload.starrable: Type for starrable will change from Starrable! to Starrable. Effective 2019-01-01.On member CreateProjectPayload.project: Type for project will change from Project! to Project. Effective 2019-01-01.On member DeclineTopicSuggestionPayload.topic: Type for topic will change from Topic! to Topic. Effective 2019-01-01.On member DeleteProjectCardPayload.column: Type for column will change from ProjectColumn! to ProjectColumn. Effective 2019-01-01.On member DeleteProjectCardPayload.deletedCardId: Type for deletedCardId will change from ID! to ID. Effective 2019-01-01.On member DeleteProjectColumnPayload.deletedColumnId: Type for deletedColumnId will change from ID! to ID. Effective 2019-01-01.On member DeleteProjectColumnPayload.project: Type for project will change from Project! to Project. Effective 2019-01-01.On member DeleteProjectPayload.owner: Type for owner will change from ProjectOwner! to ProjectOwner. Effective 2019-01-01.On member DeletePullRequestReviewPayload.pullRequestReview: Type for pullRequestReview will change from PullRequestReview! to PullRequestReview. Effective 2019-01-01.On member DismissPullRequestReviewPayload.pullRequestReview: Type for pullRequestReview will change from PullRequestReview! to PullRequestReview. Effective 2019-01-01.On member MoveProjectCardPayload.cardEdge: Type for cardEdge will change from ProjectCardEdge! to ProjectCardEdge. Effective 2019-01-01.On member MoveProjectColumnPayload.columnEdge: Type for columnEdge will change from ProjectColumnEdge! to ProjectColumnEdge. Effective 2019-01-01.On member RemoveOutsideCollaboratorPayload.removedUser: Type for removedUser will change from User! to User. Effective 2019-01-01.On member RemoveReactionPayload.reaction: Type for reaction will change from Reaction! to Reaction. Effective 2019-01-01.On member RemoveReactionPayload.subject: Type for subject will change from Reactable! to Reactable. Effective 2019-01-01.On member RemoveStarPayload.starrable: Type for starrable will change from Starrable! to Starrable. Effective 2019-01-01.On member RequestReviewsPayload.pullRequest: Type for pullRequest will change from PullRequest! to PullRequest. Effective 2019-01-01.On member RequestReviewsPayload.requestedReviewersEdge: Type for requestedReviewersEdge will change from UserEdge! to UserEdge. Effective 2019-01-01.On member SubmitPullRequestReviewPayload.pullRequestReview: Type for pullRequestReview will change from PullRequestReview! to PullRequestReview. Effective 2019-01-01.On member UpdateProjectCardPayload.projectCard: Type for projectCard will change from ProjectCard! to ProjectCard. Effective 2019-01-01.On member UpdateProjectColumnPayload.projectColumn: Type for projectColumn will change from ProjectColumn! to ProjectColumn. Effective 2019-01-01.On member UpdateProjectPayload.project: Type for project will change from Project! to Project. Effective 2019-01-01.On member UpdatePullRequestReviewCommentPayload.pullRequestReviewComment: Type for pullRequestReviewComment will change from PullRequestReviewComment! to PullRequestReviewComment. Effective 2019-01-01.On member UpdatePullRequestReviewPayload.pullRequestReview: Type for pullRequestReview will change from PullRequestReview! to PullRequestReview. Effective 2019-01-01.On member UpdateSubscriptionPayload.subscribable: Type for subscribable will change from Subscribable! to Subscribable. Effective 2019-01-01.On member UpdateTopicsPayload.repository: Type for repository will change from Repository! to Repository. Effective 2019-01-01.Schema changes for 2018-07-26The [Deployments preview](/graphql/overview/schema-previews#deployments-preview) includes these changes:Enum value QUEUED was added to enum DeploymentStateEnum value IN_PROGRESS was added to enum DeploymentStateField createDeploymentStatus was added to object type MutationField createDeployment was added to object type MutationField environment was added to object type DeploymentStatusType CreateDeploymentStatusInput was addedType CreateDeploymentStatusPayload was addedType CreateDeploymentInput was addedType CreateDeploymentPayload was addedSchema changes for 2018-07-16The GraphQL schema includes these changes:Field task was added to object type DeploymentSchema changes for 2018-07-13The GraphQL schema includes these changes:Field GitHubMetadata.gitHubServicesSha changed type from String! to GitObjectID!Type RepositoryInvitationEdge was removedType RepositoryCollaboratorAffiliation was removedType PullRequestPubSubTopic was removedType IssuePubSubTopic was removedType DefaultRepositoryPermissionField was removedType Date was removedSchema changes for 2018-07-11The GraphQL schema includes these changes:Field checkSuites was added to object type CommitType CheckSuiteFilter was addedType Push was addedType CheckRunType was addedType CheckRunFilter was addedType CheckStatusState was addedType CheckConclusionState was addedType CheckAnnotationLevel was addedType CheckAnnotation was addedType CheckAnnotationEdge was addedType CheckAnnotationConnection was addedType CheckRun was addedType CheckRunEdge was addedType CheckRunConnection was addedType CheckSuite was addedType CheckSuiteEdge was addedType CheckSuiteConnection was addedSchema changes for 2018-07-06The GraphQL schema includes these changes:Field updatedAt was added to object type DeploymentField description was added to object type DeploymentSchema changes for 2018-07-04The GraphQL schema includes these changes:Field subject was removed from object type ReviewRequestedEventField subject was removed from object type ReviewRequestRemovedEventField isCrossReference was removed from object type ReferencedEventField commit was removed from object type ClosedEventField reviewer was removed from object type ReviewRequestField license was removed from object type RepositoryInfoField license was removed from object type RepositoryField contributedRepositories was removed from object type UserField projectColumn was removed from object type ProjectCardSchema changes for 2018-07-03The GraphQL schema includes these changes:Repository object implements RegistryPackageOwner interfaceUser object implements RegistryPackageSearch interfaceUser object implements RegistryPackageOwner interfaceOrganization object implements RegistryPackageSearch interfaceOrganization object implements RegistryPackageOwner interfaceType RegistryPackageSearch was addedType RegistryPackageOwner was addedSchema changes for 2018-06-26The GraphQL schema includes these changes:Field permalink was added to object type PullRequestSchema changes for 2018-06-22The GraphQL schema includes these changes:Input field UpdateProjectCardInput.note changed type from String! to StringSchema changes for 2018-06-21The GraphQL schema includes these changes:Argument useTopicAliases: Boolean added to field Query.marketplaceListingsArgument useTopicAliases: Boolean added to field Query.marketplaceCategorySchema changes for 2018-06-14The GraphQL schema includes these changes:Field unlockLockable was added to object type MutationType UnlockLockableInput was addedType UnlockLockablePayload was addedSchema changes for 2018-06-12The GraphQL schema includes these changes:Field subject was added to object type ReviewRequestedEventField subject was added to object type ReviewRequestRemovedEventField isCrossReference was added to object type ReferencedEventField commit was added to object type ClosedEventField reviewer was added to object type ReviewRequestField license was added to object type RepositoryInfoField license was added to object type RepositoryField contributedRepositories was added to object type UserField projectColumn was added to object type ProjectCardType TopicConnection was addedType RepositoryInvitationEdge was addedType RepositoryCollaboratorAffiliation was addedType PullRequestPubSubTopic was addedType IssuePubSubTopic was addedType DefaultRepositoryPermissionField was addedType Date was addedType MergeStateStatus was addedThe Team discussions preview includes these changes:Field updateTeamDiscussionComment was added to object type MutationField updateTeamDiscussion was added to object type MutationField deleteTeamDiscussionComment was added to object type MutationField deleteTeamDiscussion was added to object type MutationField createTeamDiscussionComment was added to object type MutationField createTeamDiscussion was added to object type MutationField discussionsUrl was added to object type TeamField discussionsResourcePath was added to object type TeamField discussions was added to object type TeamField discussion was added to object type TeamType UpdateTeamDiscussionCommentInput was addedType UpdateTeamDiscussionCommentPayload was addedType UpdateTeamDiscussionInput was addedType UpdateTeamDiscussionPayload was addedType DeleteTeamDiscussionCommentInput was addedType DeleteTeamDiscussionCommentPayload was addedType DeleteTeamDiscussionInput was addedType DeleteTeamDiscussionPayload was addedType CreateTeamDiscussionCommentInput was addedType CreateTeamDiscussionCommentPayload was addedType CreateTeamDiscussionInput was addedType CreateTeamDiscussionPayload was addedType TeamDiscussionOrderField was addedType TeamDiscussionOrder was addedType TeamDiscussionEdge was addedType TeamDiscussionConnection was addedType TeamDiscussionCommentOrderField was addedType TeamDiscussionCommentOrder was addedType TeamDiscussionComment was addedType TeamDiscussionCommentEdge was addedType TeamDiscussionCommentConnection was addedType TeamDiscussion was addedThe Protected Branch: Multiple Required Approving Reviews preview includes these changes:Field requiredApprovingReviewCount was added to object type ProtectedBranchThe Protected Branch: Required Signatures preview includes these changes:Field hasRequiredSignatures was added to object type ProtectedBranchThe [Merge info preview](/graphql/overview/schema-previews#merge-info-preview) includes these changes:Field mergeStateStatus was added to object type PullRequestField canBeRebased was added to object type PullRequestThe Repository Vulnerability Alerts preview includes these changes:Field vulnerabilityAlerts was added to object type RepositoryType RepositoryVulnerabilityAlert was addedType RepositoryVulnerabilityAlertEdge was addedType RepositoryVulnerabilityAlertConnection was addedThe [Access to a Repositories Dependency Graph preview](/graphql/overview/schema-previews#access-to-a-repositories-dependency-graph-preview) includes these changes:Field dependencyGraphManifests was added to object type RepositoryType DependencyGraphDependency was addedType DependencyGraphDependencyEdge was addedType DependencyGraphDependencyConnection was addedType DependencyGraphManifest was addedType DependencyGraphManifestEdge was addedType DependencyGraphManifestConnection was addedThe Hovercards preview includes these changes:Field hovercard was added to object type UserType OrganizationsHovercardContext was addedType OrganizationTeamsHovercardContext was addedType GenericHovercardContext was addedType HovercardContext was addedType Hovercard was addedSchema changes for 2018-06-11The GraphQL schema includes these changes:Default value for argument affiliations on field User.watching changed from ["OWNER", "COLLABORATOR"] to ["OWNER", "COLLABORATOR", "ORGANIZATION_MEMBER"]Schema changes for 2018-05-30The GraphQL schema includes these changes:Field editedAt was added to object type UserContentEditSchema changes for 2018-05-25The GraphQL schema includes these changes:Field TextMatch.highlights changed type from [TextMatchHighlight]! to [TextMatchHighlight!]!Type MergeStateStatus was addedThe [Merge info preview](/graphql/overview/schema-previews#merge-info-preview) includes these changes:Field mergeStateStatus was added to object type PullRequestField canBeRebased was added to object type PullRequestSchema changes for 2018-05-18The GraphQL schema includes these changes:License object implements Node interfaceSchema changes for 2018-05-17The GraphQL schema includes these changes:MarketplaceCategory object implements Node interfaceField id was added to object type MarketplaceCategorySchema changes for 2018-05-09The GraphQL schema includes these changes:Field includesCreatedEdit was added to object type GistCommentField includesCreatedEdit was added to object type PullRequestReviewCommentField includesCreatedEdit was added to object type PullRequestReviewField includesCreatedEdit was added to object type IssueCommentField includesCreatedEdit was added to object type PullRequestField includesCreatedEdit was added to object type CommentField includesCreatedEdit was added to object type CommitCommentField includesCreatedEdit was added to object type IssueArgument excludeSubcategories: Boolean added to field Query.marketplaceCategoriesThe Team discussions preview includes these changes:Field includesCreatedEdit was added to object type TeamDiscussionCommentField includesCreatedEdit was added to object type TeamDiscussionSchema changes for 2018-05-08The GraphQL schema includes these changes:ClosedEvent object implements UniformResourceLocatable interfaceField url was added to object type ClosedEventField resourcePath was added to object type ClosedEventSchema changes for 2018-05-03The [Access to a Repositories Dependency Graph preview](/graphql/overview/schema-previews#access-to-a-repositories-dependency-graph-preview) includes these changes:Field totalCount was added to object type DependencyGraphDependencyConnectionSchema changes for 2018-04-28The Repository Vulnerability Alerts preview includes these changes:Field externalReference was added to object type RepositoryVulnerabilityAlertField externalIdentifier was added to object type RepositoryVulnerabilityAlertField dismisser was added to object type RepositoryVulnerabilityAlertField dismissedAt was added to object type RepositoryVulnerabilityAlertField dismissReason was added to object type RepositoryVulnerabilityAlertSchema changes for 2018-04-27The GraphQL schema includes these changes:Enum value TIMELINE was added to enum PullRequestPubSubTopicEnum value TIMELINE was added to enum IssuePubSubTopicSchema changes for 2018-04-24The GraphQL schema includes these changes:Field lockReason was added to object type LockedEventThe Repository Vulnerability Alerts preview includes these changes:Field vulnerabilityAlerts was added to object type RepositoryType RepositoryVulnerabilityAlert was addedType RepositoryVulnerabilityAlertEdge was addedType RepositoryVulnerabilityAlertConnection was addedThe [Access to a Repositories Dependency Graph preview](/graphql/overview/schema-previews#access-to-a-repositories-dependency-graph-preview) includes these changes:Field dependencyGraphManifests was added to object type RepositoryType DependencyGraphDependency was addedType DependencyGraphDependencyEdge was addedType DependencyGraphDependencyConnection was addedType DependencyGraphManifest was addedType DependencyGraphManifestEdge was addedType DependencyGraphManifestConnection was addedSchema changes for 2018-04-23The GraphQL schema includes these changes:Field Team.viewerSubscription changed type from SubscriptionState! to SubscriptionStateField PullRequest.viewerSubscription changed type from SubscriptionState! to SubscriptionStateField Commit.viewerSubscription changed type from SubscriptionState! to SubscriptionStateEnum value UNAVAILABLE was removed from enum SubscriptionStateField Subscribable.viewerSubscription changed type from SubscriptionState! to SubscriptionStateField Repository.viewerSubscription changed type from SubscriptionState! to SubscriptionStateField Issue.viewerSubscription changed type from SubscriptionState! to SubscriptionStateThe Team discussions preview includes these changes:Field TeamDiscussion.viewerSubscription changed type from SubscriptionState! to SubscriptionStateSchema changes for 2018-04-19The GraphQL schema includes these changes:Type RepositoryInvitationEdge was addedSchema changes for 2018-04-13The GraphQL schema includes these changes:Field wasSignedByGitHub was added to object type UnknownSignatureField wasSignedByGitHub was added to object type SmimeSignatureField wasSignedByGitHub was added to object type GpgSignatureField wasSignedByGitHub was added to object type GitSignatureSchema changes for 2018-04-12The GraphQL schema includes these changes:Field url was added to object type LabelField updatedAt was added to object type LabelField resourcePath was added to object type LabelField createdAt was added to object type LabelField pseudoLicense was added to object type LicenseSchema changes for 2018-04-10The GraphQL schema includes these changes:Field mergedBy was added to object type PullRequestField maintainerCanModify was added to object type PullRequestField diff was added to object type UserContentEditField deletedBy was added to object type UserContentEditField deletedAt was added to object type UserContentEditSchema changes for 2018-04-03The GraphQL schema includes these changes:Field bodyText was added to object type GistCommentField bodyText was added to object type CommentField bodyText was added to object type CommitCommentThe Team discussions preview includes these changes:Field bodyText was added to object type TeamDiscussionCommentField bodyText was added to object type TeamDiscussionSchema changes for 2018-03-28The GraphQL schema includes these changes:Type StaffHovercardContext was removedSchema changes for 2018-03-22The GraphQL schema includes these changes:Argument orderBy: TeamMemberOrder added to field Team.membersType TeamMemberOrderField was addedType TeamMemberOrder was addedThe Hovercards preview includes these changes:Field hovercard was added to object type UserType StaffHovercardContext was addedType OrganizationsHovercardContext was addedType OrganizationTeamsHovercardContext was addedType GenericHovercardContext was addedType HovercardContext was addedType Hovercard was addedSchema changes for 2018-03-16The Protected Branch: Multiple Required Approving Reviews preview includes these changes:Field requiredApprovingReviewCount was added to object type ProtectedBranchSchema changes for 2018-03-14The GraphQL schema includes these changes:Enum value OCSP_REVOKED was added to enum GitSignatureStateEnum value OCSP_PENDING was added to enum GitSignatureStateEnum value OCSP_ERROR was added to enum GitSignatureStateThe following changes will be made to the schema:On member AddedToProjectEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member BaseRefChangedEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Bot.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Bot.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ClosedEvent.commit: commit will be removed. Use ClosedEvent.closer instead. Effective 2018-07-01.On member Comment.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member CommentDeletedEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member CommitComment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member CommitComment.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ConvertedNoteToIssueEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member DeployedEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Deployment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member DeploymentStatus.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member Gist.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member GistComment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member GistComment.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member Issue.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Issue.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member IssueComment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member IssueComment.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member MentionedEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Milestone.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member MovedColumnsInProjectEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Organization.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Project.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Project.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ProjectCard.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member ProjectCard.projectColumn: projectColumn will be removed. Use ProjectCard.column instead. Effective 2018-07-01.On member ProjectCard.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ProjectColumn.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member ProjectColumn.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member PullRequest.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member PullRequest.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member PullRequestReview.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member PullRequestReview.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member PullRequestReviewComment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Reactable.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Reaction.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member ReferencedEvent.isCrossReference: isCrossReference will be removed. Use ReferencedEvent.isCrossRepository instead. Effective 2018-07-01.On member Release.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ReleaseAsset.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member RemovedFromProjectEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Repository.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member Repository.license: license will be removed. Use Repository.licenseInfo instead. Effective 2018-07-01.On member Repository.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member RepositoryInfo.license: license will be removed. Use Repository.licenseInfo instead. Effective 2018-07-01.On member RepositoryInfo.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member ReviewDismissedEvent.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member ReviewRequest.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member ReviewRequest.reviewer: reviewer will be removed. Use ReviewRequest.requestedReviewer instead. Effective 2018-07-01.On member ReviewRequestRemovedEvent.subject: subject will be removed. Use ReviewRequestRemovedEvent.requestedReviewer instead. Effective 2018-07-01.On member ReviewRequestedEvent.subject: subject will be removed. Use ReviewRequestedEvent.requestedReviewer instead. Effective 2018-07-01.On member Team.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member TeamDiscussion.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member TeamDiscussion.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member TeamDiscussionComment.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member TeamDiscussionComment.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member User.contributedRepositories: contributedRepositories will be removed. Use User.repositoriesContributedTo instead. Effective 2018-07-01.On member User.databaseId: databaseId will be removed. Use Node.id instead. Effective 2018-07-01.On member User.updatedAt: updatedAt will be removed. Effective 2018-07-01.On member UserContentEdit.updatedAt: updatedAt will be removed. Effective 2018-07-01.Schema changes for 2018-03-13The GraphQL schema includes these changes:Field RepositoryInvitation.repository changed type from RepositoryInvitationRepository to RepositoryInfoType RepositoryInvitationRepository was removedField squashMergeAllowed was added to object type RepositoryField rebaseMergeAllowed was added to object type RepositoryField mergeCommitAllowed was added to object type RepositorySchema changes for 2018-03-10The GraphQL schema includes these changes:Enum value NONE was added to enum DefaultRepositoryPermissionFieldSchema changes for 2018-03-09The GraphQL schema includes these changes:Field databaseId was added to object type GistCommentSchema changes for 2018-03-07The GraphQL schema includes these changes:Field permission was added to object type RepositoryInvitationField isDefault was added to object type LabelField description was added to object type LabelArgument query: String added to field Repository.labelsField viewerPermission was added to object type RepositoryType CollectionItemContent was addedThe Team discussions preview includes these changes:Type TeamDiscussion was addedField updateTeamDiscussionComment was added to object type MutationField updateTeamDiscussion was added to object type MutationField deleteTeamDiscussionComment was added to object type MutationField deleteTeamDiscussion was added to object type MutationField createTeamDiscussionComment was added to object type MutationField createTeamDiscussion was added to object type MutationField discussionsUrl was added to object type TeamField discussionsResourcePath was added to object type TeamField discussions was added to object type TeamField discussion was added to object type TeamType UpdateTeamDiscussionCommentInput was addedType UpdateTeamDiscussionCommentPayload was addedType UpdateTeamDiscussionInput was addedType UpdateTeamDiscussionPayload was addedType DeleteTeamDiscussionCommentInput was addedType DeleteTeamDiscussionCommentPayload was addedType DeleteTeamDiscussionInput was addedType DeleteTeamDiscussionPayload was addedType CreateTeamDiscussionCommentInput was addedType CreateTeamDiscussionCommentPayload was addedType CreateTeamDiscussionInput was addedType CreateTeamDiscussionPayload was addedType TeamDiscussionOrderField was addedType TeamDiscussionOrder was addedType TeamDiscussionEdge was addedType TeamDiscussionConnection was addedType TeamDiscussionCommentOrderField was addedType TeamDiscussionCommentOrder was addedType TeamDiscussionComment was addedType TeamDiscussionCommentEdge was addedType TeamDiscussionCommentConnection was addedThe Protected Branch Required Signatures preview includes these changes:Field hasRequiredSignatures was added to object type ProtectedBranchSchema changes for 2018-02-14The following changes were made to the GraphQL schema:Argument orderBy: MilestoneOrder added to field Repository.milestonesArgument states: [MilestoneState!] added to field Repository.milestonesDefault value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field Organization.pinnedRepositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field Organization.repositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field Repository.forks.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field RepositoryOwner.pinnedRepositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field RepositoryOwner.repositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field User.contributedRepositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field User.pinnedRepositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field User.repositories.Default value ["OWNER", "COLLABORATOR"] was added to argument affiliations on field User.watching.Field avatarUrl was added to object type TeamField createdAt was added to object type OrganizationInvitationField organization was added to object type OrganizationInvitationType MilestoneOrderField was addedType MilestoneOrder was addedSchema changes for 2018-01-19The following changes were made to the GraphQL schema:Field baseRefOid was added to object type PullRequestField headRefOid was added to object type PullRequestSchema changes for 2018-01-10The following changes were made to the GraphQL schema:Field activeLockReason was added to object type IssueField activeLockReason was added to object type LockableField activeLockReason was added to object type PullRequestField lockLockable was added to object type MutationType LockLockableInput was addedType LockLockablePayload was addedType LockReason was addedSchema changes for 2017-12-15The following changes were made to the GraphQL schema:Field additions was added to object type CommitField changedFiles was added to object type CommitField closedAt was added to object type MilestoneField closed was added to object type MilestoneField createdAt was added to object type MilestoneField deletions was added to object type CommitField updatedAt was added to object type MilestoneMilestone object implements Closable interfaceSchema changes for 2017-12-12The following changes were made to the GraphQL schema:Enum value UNAVAILABLE was added to enum SubscriptionStateField authoredDate was added to object type CommitField pushedDate was added to object type CommitSchema changes for 2017-12-09The following changes were made to the GraphQL schema:Field deployKeys was added to object type RepositoryType DeployKeyConnection was addedType DeployKeyEdge was addedType DeployKey was addedSchema changes for 2017-12-05The following changes were made to the GraphQL schema:Field release was added to object type RepositorySchema changes for 2017-12-02The following changes were made to the GraphQL schema:Field forkCount was added to object type RepositoryInfoField forkCount was added to object type RepositoryInvitationRepositoryField forkCount was added to object type RepositoryField marketplaceListing was added to object type QueryField marketplaceListings was added to object type QueryType MarketplaceListingConnection was addedType MarketplaceListingEdge was addedType MarketplaceListing was addedUnion member MarketplaceListing was added to Union type SearchResultItemSchema changes for 2017-11-28The following changes were made to the GraphQL schema:Field repositoriesContributedTo was added to object type UserSchema changes for 2017-11-24The following changes were made to the GraphQL schema:Field changedFiles was added to object type PullRequestField reactable was added to object type ReactionSchema changes for 2017-11-18The following changes were made to the GraphQL schema:Input field UpdateProjectInput.name changed type from String! to StringInput field public was added to input object type UpdateProjectInputSchema changes for 2017-11-17The following changes were made to the GraphQL schema:Field issues was added to object type MilestoneType TopicConnection was addedSchema changes for 2017-11-16The following changes were made to the GraphQL schema:Field issues was added to object type MilestoneSchema changes for 2017-11-15The following changes were made to the GraphQL schema:Field parents was added to object type CommitType CommitConnection was addedSchema changes for 2017-11-14The following changes were made to the GraphQL schema:Argument orderBy: ReleaseOrder added to field Repository.releasesField marketplaceCategories was added to object type QueryField marketplaceCategory was added to object type QueryField parents was added to object type CommitField publicKeys was added to object type UserField totalCount was added to object type CommitHistoryConnectionType CommitConnection was addedType MarketplaceCategory was addedType PublicKeyConnection was addedType PublicKeyEdge was addedType PublicKey was addedType ReleaseOrderField was addedType ReleaseOrder was addedSchema changes for 2017-11-10The following changes were made to the GraphQL schema:Field createdAt was added to object type DeploymentStatusField updatedAt was added to object type DeploymentStatusField viewerCanSubscribe was added to object type TeamField viewerSubscription was added to object type TeamTeam object implements Subscribable interfaceSchema changes for 2017-11-08The following changes were made to the GraphQL schema:Field BaseRefForcePushedEvent.afterCommit changed type from Commit! to CommitField BaseRefForcePushedEvent.beforeCommit changed type from Commit! to CommitField HeadRefForcePushedEvent.afterCommit changed type from Commit! to CommitField HeadRefForcePushedEvent.beforeCommit changed type from Commit! to CommitField ReviewRequestRemovedEvent.subject changed type from User! to UserField ReviewRequestedEvent.subject changed type from User! to UserArgument orderBy: RefOrder added to field Repository.refsField requestedReviewer was added to object type ReviewRequestRemovedEventField requestedReviewer was added to object type ReviewRequestField requestedReviewer was added to object type ReviewRequestedEventType RefOrderField was addedType RefOrder was addedType RequestedReviewer was addedSchema changes for 2017-11-03The following changes were made to the GraphQL schema:Field tarballUrl was added to object type CommitField zipballUrl was added to object type CommitSchema changes for 2017-11-02The following changes were made to the GraphQL schema:Field tarballUrl was added to object type CommitField zipballUrl was added to object type CommitType TopicEdge was addedSchema changes for 2017-10-27The following changes were made to the GraphQL schema:Argument author: String added to field PullRequest.reviewsField additions was added to object type PullRequestField deletions was added to object type PullRequestSchema changes for 2017-10-25The following changes were made to the GraphQL schema:Type UserContentEditEdge was addedType UserContentEdit was addedSchema changes for 2017-10-24The following changes were made to the GraphQL schema:Field assignableUsers was added to object type RepositoryType UserContentEditEdge was addedType UserContentEdit was addedSchema changes for 2017-10-20The following changes were made to the GraphQL schema:Field projectCards was added to object type IssueField projectCards was added to object type PullRequestSchema changes for 2017-10-14The following changes were made to the GraphQL schema:Field isInvoiced was removed from object type OrganizationField isInvoiced was removed from object type UserSchema changes for 2017-10-04The following changes were made to the GraphQL schema:Field collaborators was added to object type RepositoryField isArchived was added to object type RepositoryInfoField isArchived was added to object type RepositoryInvitationRepositoryField isArchived was added to object type RepositoryType CollaboratorAffiliation was addedType RepositoryCollaboratorConnection was addedType RepositoryCollaboratorEdge was addedSchema changes for 2017-09-28The following changes were made to the GraphQL schema:Type Date was addedSchema changes for 2017-09-22The following changes were made to the GraphQL schema:Field gitIpAddresses was added to object type GitHubMetadataField hookIpAddresses was added to object type GitHubMetadataField importerIpAddresses was added to object type GitHubMetadataField pagesIpAddresses was added to object type GitHubMetadataSchema changes for 2017-09-18The following changes were made to the GraphQL schema:Field GistComment.gist changed type from Gist to Gist!Schema changes for 2017-09-15The following changes were made to the GraphQL schema:Field meta was added to object type QueryType GitHubMetadata was addedSchema changes for 2017-09-14The following changes were made to the GraphQL schema:Field User.gistComments changed type from IssueCommentConnection! to GistCommentConnection!Schema changes for 2017-09-13The following changes were made to the GraphQL schema:Field createdAt was added to object type BotField gist was added to object type GistCommentField updatedAt was added to object type BotSchema changes for 2017-09-11The following changes were made to the GraphQL schema:Field downloadUrl was added to object type ReleaseAssetSchema changes for 2017-09-08The following changes were made to the GraphQL schema:OrganizationInvitation object implements Node interfaceSchema changes for 2017-09-07The following changes were made to the GraphQL schema:Field meta was removed from object type QueryGitHubMetadata was removedField closed was added to object type ProjectField invitationType was added to object type OrganizationInvitationField pendingCards was added to object type ProjectField resourcePath was added to object type ProjectColumnField url was added to object type ProjectColumnType OrganizationInvitationType was addedProject object implements Closable interfaceSchema changes for 2017-09-06The following changes were made to the GraphQL schema:Field GitHubMetadata.gitIpAddresses changed type from String to [String!]Field GitHubMetadata.hookIpAddresses changed type from String to [String!]Field GitHubMetadata.importerIpAddresses changed type from String to [String!]Field GitHubMetadata.pagesIpAddresses changed type from String to [String!]Field installedVersion was removed from object type GitHubMetadataField repository was added to object type PullRequestReviewThreadSchema changes for 2017-09-05The following changes were made to the GraphQL schema:Field repository was removed from object type PullRequestReviewThreadField meta was added to object type QueryType GitHubMetadata was addedSchema changes for 2017-09-04The following changes were made to the GraphQL schema:Field closed was removed from object type ProjectField pendingCards was removed from object type ProjectField resourcePath was removed from object type ProjectColumnField url was removed from object type ProjectColumnProject object type no longer implements Closable interfaceField repository was added to object type PullRequestReviewThreadSchema changes for 2017-09-01The following changes were made to the GraphQL schema:Field channel was removed from object type ProjectField searchQueryForViewer was removed from object type ProjectSchema changes for 2017-08-31The following changes were made to the GraphQL schema:Field resourcePath was added to object type ProjectColumnField searchQueryForViewer was added to object type ProjectField url was added to object type ProjectColumnSchema changes for 2017-08-30The following changes were made to the GraphQL schema:Field channel was added to object type ProjectField closed was added to object type ProjectField pendingCards was added to object type ProjectProject object implements Closable interfaceSchema changes for 2017-08-21The following changes were made to the GraphQL schema:Field replyTo was added to object type PullRequestReviewCommentSchema changes for 2017-08-16The following changes were made to the GraphQL schema:Field description was added to object type OrganizationField email was added to object type OrganizationField location was added to object type OrganizationField websiteUrl was added to object type OrganizationSchema changes for 2017-08-15The following changes were made to the GraphQL schema:Field gistComments was added to object type UserField id was added to object type SubscribableField issueComments was added to object type UserField resourcePath was added to object type CommitCommentField url was added to object type CommitCommentSchema changes for 2017-08-14The following changes were made to the GraphQL schema:Field blog was removed from object type OrganizationField description was removed from object type OrganizationField email was removed from object type OrganizationField location was removed from object type OrganizationArgument dryRun: Boolean added to field Query.rateLimitField milestone was added to object type PullRequestField nodeCount was added to object type RateLimitUnion member CrossReferencedEvent was added to Union type PullRequestTimelineItemSchema changes for 2017-08-11The following changes were made to the GraphQL schema:Argument dryRun: Boolean was removed from field Query.rateLimitField closed was removed from object type ProjectField gistComments was removed from object type UserField id was removed from object type SubscribableField issueComments was removed from object type UserField milestone was removed from object type PullRequestField nodeCount was removed from object type RateLimitField pendingCards was removed from object type ProjectField replyTo was removed from object type PullRequestReviewCommentField repository was removed from object type PullRequestReviewThreadField resourcePath was removed from object type CommitCommentField resourcePath was removed from object type ProjectColumnField url was removed from object type CommitCommentField url was removed from object type ProjectColumnField websiteUrl was removed from object type OrganizationUnion member CrossReferencedEvent was removed from Union type PullRequestTimelineItemProject object type no longer implements Closable interfaceField blog was added to object type OrganizationSchema changes for 2017-08-10The following changes were made to the GraphQL schema:Argument dryRun: Boolean added to field Query.rateLimitField closed was added to object type ProjectField description was added to object type OrganizationField email was added to object type OrganizationField gistComments was added to object type UserField id was added to object type SubscribableField issueComments was added to object type UserField location was added to object type OrganizationField milestone was added to object type PullRequestField nodeCount was added to object type RateLimitField pendingCards was added to object type ProjectField replyTo was added to object type PullRequestReviewCommentField repository was added to object type PullRequestReviewThreadField resourcePath was added to object type CommitCommentField resourcePath was added to object type ProjectColumnField url was added to object type CommitCommentField url was added to object type ProjectColumnField websiteUrl was added to object type OrganizationType CrossReferencedEvent was addedUnion member CrossReferencedEvent was added to Union type IssueTimelineItemUnion member CrossReferencedEvent was added to Union type PullRequestTimelineItemProject object implements Closable interfaceSchema changes for 2017-08-09The following changes were made to the GraphQL schema:Field PullRequestReviewComment.originalCommit changed type from Commit! to CommitSchema changes for 2017-08-08The following changes were made to the GraphQL schema:Field Organization.name changed type from String! to StringField databaseId was added to object type DeploymentField licenseInfo was added to object type RepositoryInfoField licenseInfo was added to object type RepositoryInvitationRepositoryField licenseInfo was added to object type RepositoryField license was added to object type QueryField licenses was added to object type QueryField payload was added to object type DeploymentType LicenseRule was addedType License was addedSchema changes for 2017-08-07The following changes were made to the GraphQL schema:Field contentType was added to object type ReleaseAssetField createdAt was added to object type ReleaseAssetField createdAt was added to object type TeamField downloadCount was added to object type ReleaseAssetField size was added to object type ReleaseAssetField updatedAt was added to object type ReleaseAssetField updatedAt was added to object type TeamField uploadedBy was added to object type ReleaseAssetSchema changes for 2017-08-03The following changes were made to the GraphQL schema:Field repositoriesContributedTo was removed from object type UserField author was added to object type ReleaseField commitComments was added to object type UserField createdAt was added to object type ReleaseField isDraft was added to object type ReleaseField isPrerelease was added to object type ReleaseField updatedAt was added to object type ReleaseSchema changes for 2017-08-02The following changes were made to the GraphQL schema:Field commitComments was removed from object type UserField repositoriesContributedTo was added to object type UserField shortDescriptionHTML was added to object type RepositoryInfoField shortDescriptionHTML was added to object type RepositoryInvitationRepositoryField shortDescriptionHTML was added to object type RepositorySchema changes for 2017-08-01The following changes were made to the GraphQL schema:Field commitComments was added to object type UserSchema changes for 2017-07-28The following changes were made to the GraphQL schema:Enum value FIRST_TIMER was added to enum CommentAuthorAssociationField pullRequest was added to object type IssueCommentSchema changes for 2017-07-27The following changes were made to the GraphQL schema:Field CommitComment.commit changed type from Commit! to CommitField databaseId was removed from object type DeploymentField payload was removed from object type DeploymentArgument environments: [String!] added to field Repository.deploymentsSchema changes for 2017-07-26The following changes were made to the GraphQL schema:Field databaseId was added to object type DeploymentSchema changes for 2017-07-25The following changes were made to the GraphQL schema:Enum value FIRST_TIMER was removed from enum CommentAuthorAssociationArgument orderBy: GistOrder added to field User.gistsField payload was added to object type DeploymentField pushedAt was added to object type GistType GistOrderField was addedType GistOrder was addedSchema changes for 2017-07-24The following changes were made to the GraphQL schema:Enum value FIRST_TIMER was added to enum CommentAuthorAssociationSchema changes for 2017-07-21The following changes were made to the GraphQL schema:Argument rootTeamsOnly: Boolean added to field Organization.teamsField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField viewerCanAdminister was added to object type TeamType RepositoryPermission was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMemberRole was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedSchema changes for 2017-07-20The following changes were made to the GraphQL schema:Field Label.pullRequests changed type from PullRequestConnection to PullRequestConnection!Field releaseAsset was removed from object type ReleaseArgument baseRefName: String added to field Label.pullRequestsArgument baseRefName: String added to field Ref.associatedPullRequestsArgument headRefName: String added to field Label.pullRequestsArgument headRefName: String added to field Ref.associatedPullRequestsArgument labels: [String!] added to field Label.pullRequestsArgument labels: [String!] added to field Ref.associatedPullRequestsArgument name: String added to field Release.releaseAssetsArgument orderBy: IssueOrder added to field Label.pullRequestsArgument orderBy: IssueOrder added to field Ref.associatedPullRequestsArgument states: [PullRequestState!] added to field Label.pullRequestsField pinnedRepositories was added to object type OrganizationField pinnedRepositories was added to object type RepositoryOwnerSchema changes for 2017-07-19The following changes were made to the GraphQL schema:Argument rootTeamsOnly: Boolean was removed from field Organization.teamsChildTeamDescendants was removedField TreeEntry.object changed type from GitObject! to GitObjectField ancestors was removed from object type TeamField childTeams was removed from object type TeamField combinedSlug was removed from object type TeamField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField viewerCanAdminister was removed from object type TeamRepositoryPermission was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMemberRole was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedSchema changes for 2017-07-18The following changes were made to the GraphQL schema:Argument rootTeamsOnly: Boolean added to field Organization.teamsField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField viewerCanAdminister was added to object type TeamType ChildTeamDescendants was addedType CommitCommentThread was addedType RepositoryPermission was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMemberRole was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedUnion member CommitCommentThread was added to Union type PullRequestTimelineItemSchema changes for 2017-07-17The following changes were made to the GraphQL schema:Milestone object implements UniformResourceLocatable interfaceSchema changes for 2017-07-13The following changes were made to the GraphQL schema:CrossReferencedEvent was removedUnion member CrossReferencedEvent was removed from Union type IssueTimelineItemSchema changes for 2017-07-11The following changes were made to the GraphQL schema:Argument name: String was removed from field Release.releaseAssetsField releaseAsset was added to object type ReleaseType CrossReferencedEvent was addedUnion member CrossReferencedEvent was added to Union type IssueTimelineItemSchema changes for 2017-07-10The following changes were made to the GraphQL schema:CrossReferencedEvent was removedField releaseAsset was removed from object type ReleaseUnion member CrossReferencedEvent was removed from Union type IssueTimelineItemArgument labels: [String!] added to field Label.issuesArgument name: String added to field Release.releaseAssetsField issues was added to object type UserSchema changes for 2017-07-07The following changes were made to the GraphQL schema:Argument labels: [String!] was removed from field Label.issuesField issues was removed from object type UserType CrossReferencedEvent was addedUnion member CrossReferencedEvent was added to Union type IssueTimelineItemSchema changes for 2017-07-06The following changes were made to the GraphQL schema:AddTeamMemberInput was removedAddTeamMemberPayload was removedChildTeamDescendants was removedCreateTeamInput was removedCreateTeamPayload was removedDeleteTeamInput was removedDeleteTeamPayload was removedField addTeamMember was removed from object type MutationField ancestors was removed from object type TeamField childTeams was removed from object type TeamField combinedSlug was removed from object type TeamField createTeam was removed from object type MutationField deleteTeam was removed from object type MutationField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField removeTeamMember was removed from object type MutationField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField updateTeamMember was removed from object type MutationField updateTeam was removed from object type MutationField viewerCanAdminister was removed from object type TeamRemoveTeamMemberInput was removedRemoveTeamMemberPayload was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedUpdateTeamInput was removedUpdateTeamMemberInput was removedUpdateTeamMemberPayload was removedUpdateTeamPayload was removedArgument labels: [String!] added to field Label.issuesField issues was added to object type UserSchema changes for 2017-07-05The following changes were made to the GraphQL schema:Input field RequestReviewsInput.userIds changed type from [ID!]! to [ID!]Field addTeamMember was added to object type MutationField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viewerCanAdminister was added to object type TeamInput field teamIds was added to input object type RequestReviewsInputType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType AddedToProjectEvent was addedType BaseRefChangedEvent was addedType ChildTeamDescendants was addedType CommentDeletedEvent was addedType ConvertedNoteToIssueEvent was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType MentionedEvent was addedType MovedColumnsInProjectEvent was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType RemovedFromProjectEvent was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedSchema changes for 2017-07-04The following changes were made to the GraphQL schema:AddTeamMemberInput was removedAddTeamMemberPayload was removedChildTeamDescendants was removedCreateTeamInput was removedCreateTeamPayload was removedDeleteTeamInput was removedDeleteTeamPayload was removedField addTeamMember was removed from object type MutationField ancestors was removed from object type TeamField childTeams was removed from object type TeamField combinedSlug was removed from object type TeamField createTeam was removed from object type MutationField deleteTeam was removed from object type MutationField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField removeTeamMember was removed from object type MutationField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField updateTeamMember was removed from object type MutationField updateTeam was removed from object type MutationField viewerCanAdminister was removed from object type TeamMemberOrder was removedRemoveTeamMemberInput was removedRemoveTeamMemberPayload was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedUpdateTeamInput was removedUpdateTeamMemberInput was removedUpdateTeamMemberPayload was removedUpdateTeamPayload was removedUserOrderField was removedSchema changes for 2017-07-01The following changes were made to the GraphQL schema:Input field RequestReviewsInput.userIds changed type from [ID!] to [ID!]!Input field teamIds was removed from input object type RequestReviewsInputField addTeamMember was added to object type MutationField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField isCrossRepository was added to object type ReferencedEventField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viewerCanAdminister was added to object type TeamType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType ChildTeamDescendants was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedSchema changes for 2017-06-30The following changes were made to the GraphQL schema:Field isCrossRepository was removed from object type ReferencedEventInput field RequestReviewsInput.userIds changed type from [ID!]! to [ID!]Input field teamIds was added to input object type RequestReviewsInputSchema changes for 2017-06-29The following changes were made to the GraphQL schema:Field isCrossRepository was added to object type ReferencedEventField revertResourcePath was added to object type PullRequestField revertUrl was added to object type PullRequestSchema changes for 2017-06-28The following changes were made to the GraphQL schema:Field PullRequestReviewComment.pullRequestReview changed type from PullRequestReview! to PullRequestReviewSchema changes for 2017-06-27The following changes were made to the GraphQL schema:Field revertResourcePath was removed from object type MergedEventField revertUrl was removed from object type MergedEventSchema changes for 2017-06-26The following changes were made to the GraphQL schema:Field issues was removed from object type UserEnum value STARGAZERS was added to enum RepositoryOrderFieldField revertResourcePath was added to object type MergedEventField revertUrl was added to object type MergedEventSchema changes for 2017-06-25The following changes were made to the GraphQL schema:Field issues was added to object type UserSchema changes for 2017-06-23The following changes were made to the GraphQL schema:Field databaseId was removed from object type AssignedEventField databaseId was removed from object type BaseRefForcePushedEventField databaseId was removed from object type ClosedEventField databaseId was removed from object type DemilestonedEventField databaseId was removed from object type HeadRefDeletedEventField databaseId was removed from object type HeadRefForcePushedEventField databaseId was removed from object type HeadRefRestoredEventField databaseId was removed from object type LabeledEventField databaseId was removed from object type LockedEventField databaseId was removed from object type MergedEventField databaseId was removed from object type MilestonedEventField databaseId was removed from object type ReferencedEventField databaseId was removed from object type RenamedTitleEventField databaseId was removed from object type ReopenedEventField databaseId was removed from object type ReviewRequestRemovedEventField databaseId was removed from object type ReviewRequestedEventField databaseId was removed from object type SubscribedEventField databaseId was removed from object type UnassignedEventField databaseId was removed from object type UnlabeledEventField databaseId was removed from object type UnlockedEventField databaseId was removed from object type UnsubscribedEventTimelineEvent was removedAssignedEvent object type no longer implements TimelineEvent interfaceBaseRefForcePushedEvent object type no longer implements TimelineEvent interfaceClosedEvent object type no longer implements TimelineEvent interfaceDemilestonedEvent object type no longer implements TimelineEvent interfaceDeployedEvent object type no longer implements TimelineEvent interfaceHeadRefDeletedEvent object type no longer implements TimelineEvent interfaceHeadRefForcePushedEvent object type no longer implements TimelineEvent interfaceHeadRefRestoredEvent object type no longer implements TimelineEvent interfaceLabeledEvent object type no longer implements TimelineEvent interfaceLockedEvent object type no longer implements TimelineEvent interfaceMergedEvent object type no longer implements TimelineEvent interfaceMilestonedEvent object type no longer implements TimelineEvent interfaceReferencedEvent object type no longer implements TimelineEvent interfaceRenamedTitleEvent object type no longer implements TimelineEvent interfaceReopenedEvent object type no longer implements TimelineEvent interfaceReviewDismissedEvent object type no longer implements TimelineEvent interfaceReviewRequestRemovedEvent object type no longer implements TimelineEvent interfaceReviewRequestedEvent object type no longer implements TimelineEvent interfaceSubscribedEvent object type no longer implements TimelineEvent interfaceUnassignedEvent object type no longer implements TimelineEvent interfaceUnlabeledEvent object type no longer implements TimelineEvent interfaceUnlockedEvent object type no longer implements TimelineEvent interfaceUnsubscribedEvent object type no longer implements TimelineEvent interfaceField resourcePath was added to object type PullRequestReviewCommentSchema changes for 2017-06-22The following changes were made to the GraphQL schema:Field databaseId was added to object type AssignedEventField databaseId was added to object type BaseRefForcePushedEventField databaseId was added to object type ClosedEventField databaseId was added to object type DemilestonedEventField databaseId was added to object type HeadRefDeletedEventField databaseId was added to object type HeadRefForcePushedEventField databaseId was added to object type HeadRefRestoredEventField databaseId was added to object type LabeledEventField databaseId was added to object type LockedEventField databaseId was added to object type MergedEventField databaseId was added to object type MilestonedEventField databaseId was added to object type ReferencedEventField databaseId was added to object type RenamedTitleEventField databaseId was added to object type ReopenedEventField databaseId was added to object type ReviewRequestRemovedEventField databaseId was added to object type ReviewRequestedEventField databaseId was added to object type SubscribedEventField databaseId was added to object type UnassignedEventField databaseId was added to object type UnlabeledEventField databaseId was added to object type UnlockedEventField databaseId was added to object type UnsubscribedEventField deployments was added to object type RepositoryType DeploymentConnection was addedType DeploymentEdge was addedType TimelineEvent was addedAssignedEvent object implements TimelineEvent interfaceBaseRefForcePushedEvent object implements TimelineEvent interfaceClosedEvent object implements TimelineEvent interfaceDemilestonedEvent object implements TimelineEvent interfaceDeployedEvent object implements TimelineEvent interfaceHeadRefDeletedEvent object implements TimelineEvent interfaceHeadRefForcePushedEvent object implements TimelineEvent interfaceHeadRefRestoredEvent object implements TimelineEvent interfaceLabeledEvent object implements TimelineEvent interfaceLockedEvent object implements TimelineEvent interfaceMergedEvent object implements TimelineEvent interfaceMilestonedEvent object implements TimelineEvent interfaceReferencedEvent object implements TimelineEvent interfaceRenamedTitleEvent object implements TimelineEvent interfaceReopenedEvent object implements TimelineEvent interfaceReviewDismissedEvent object implements TimelineEvent interfaceReviewRequestRemovedEvent object implements TimelineEvent interfaceReviewRequestedEvent object implements TimelineEvent interfaceSubscribedEvent object implements TimelineEvent interfaceUnassignedEvent object implements TimelineEvent interfaceUnlabeledEvent object implements TimelineEvent interfaceUnlockedEvent object implements TimelineEvent interfaceUnsubscribedEvent object implements TimelineEvent interfaceSchema changes for 2017-06-21The following changes were made to the GraphQL schema:AddTeamMemberInput was removedAddTeamMemberPayload was removedChildTeamDescendants was removedCreateTeamInput was removedCreateTeamPayload was removedDeleteTeamInput was removedDeleteTeamPayload was removedField MergedEvent.commit changed type from Commit! to CommitField addTeamMember was removed from object type MutationField ancestors was removed from object type TeamField childTeams was removed from object type TeamField combinedSlug was removed from object type TeamField createTeam was removed from object type MutationField deleteTeam was removed from object type MutationField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField removeTeamMember was removed from object type MutationField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField updateTeamMember was removed from object type MutationField updateTeam was removed from object type MutationField viewerCanAdminister was removed from object type TeamRemoveTeamMemberInput was removedRemoveTeamMemberPayload was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedUpdateTeamInput was removedUpdateTeamMemberInput was removedUpdateTeamMemberPayload was removedUpdateTeamPayload was removedField authorAssociation was added to object type CommentField authorAssociation was added to object type CommitCommentField authorAssociation was added to object type GistCommentField authorAssociation was added to object type IssueCommentField authorAssociation was added to object type IssueField authorAssociation was added to object type PullRequestReviewCommentField authorAssociation was added to object type PullRequestReviewField authorAssociation was added to object type PullRequestField resourcePath was added to object type MergedEventField url was added to object type MergedEventType CommentAuthorAssociation was addedMergedEvent object implements UniformResourceLocatable interfaceSchema changes for 2017-06-20The following changes were made to the GraphQL schema:Field MergedEvent.commit changed type from Commit to Commit!Field resourcePath was removed from object type MergedEventField url was removed from object type MergedEventMergedEvent object type no longer implements UniformResourceLocatable interfaceField addTeamMember was added to object type MutationField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viewerCanAdminister was added to object type TeamType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType ChildTeamDescendants was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedSchema changes for 2017-06-16The following changes were made to the GraphQL schema:Field MergedEvent.commit changed type from Commit! to CommitField isDirectReference was added to object type ReferencedEventSchema changes for 2017-06-15The following changes were made to the GraphQL schema:Field resourcePath was added to object type MergedEventField url was added to object type MergedEventMergedEvent object implements UniformResourceLocatable interfaceSchema changes for 2017-06-14The following changes were made to the GraphQL schema:Field column was added to object type ProjectCardField project was added to object type ProjectCardField resourcePath was added to object type ProjectCardField url was added to object type ProjectCardSchema changes for 2017-06-12The following changes were made to the GraphQL schema:Field column was removed from object type ProjectCardField project was removed from object type ProjectCardField resourcePath was removed from object type ProjectCardField teamsSearchResourcePath was removed from object type OrganizationField teamsSearchUrl was removed from object type OrganizationField url was removed from object type ProjectCardSchema changes for 2017-06-09The following changes were made to the GraphQL schema:Field PullRequest.headRepositoryOwner changed type from RepositoryOwner! to RepositoryOwnerEnum value HEAD_REF was added to enum PullRequestPubSubTopicField column was added to object type ProjectCardField isCrossRepository was added to object type PullRequestField project was added to object type ProjectCardField resourcePath was added to object type ProjectCardField url was added to object type ProjectCardSchema changes for 2017-06-06The following changes were made to the GraphQL schema:App was removedAppConnection was removedAppEdge was removedField viaApp was removed from object type DeployedEventField viaApp was removed from object type IssueCommentField viaApp was removed from object type IssueField viaApp was removed from object type PullRequestPerformableViaApp was removedDeployedEvent object type no longer implements PerformableViaApp interfaceIssueComment object type no longer implements PerformableViaApp interfaceIssue object type no longer implements PerformableViaApp interfacePullRequest object type no longer implements PerformableViaApp interfaceField addTeamMember was added to object type MutationField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viaIntegration was added to object type DeployedEventField viaIntegration was added to object type IssueCommentField viaIntegration was added to object type IssueField viaIntegration was added to object type PullRequestField viewerCanAdminister was added to object type TeamType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType ChildTeamDescendants was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType IntegrationConnection was addedType IntegrationEdge was addedType Integration was addedType PerformableViaIntegration was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedDeployedEvent object implements PerformableViaIntegration interfaceIssueComment object implements PerformableViaIntegration interfaceIssue object implements PerformableViaIntegration interfaceOrganization object implements Actor interfacePullRequest object implements PerformableViaIntegration interfaceSchema changes for 2017-06-05The following changes were made to the GraphQL schema:Enum value HEAD_REF was removed from enum PullRequestPubSubTopicField hasLimitExceeded was removed from object type PullRequestCommitConnectionField isCrossRepository was removed from object type PullRequestField viaIntegration was removed from object type DeployedEventField viaIntegration was removed from object type IssueCommentField viaIntegration was removed from object type IssueField viaIntegration was removed from object type PullRequestIntegration was removedIntegrationConnection was removedIntegrationEdge was removedPerformableViaIntegration was removedDeployedEvent object type no longer implements PerformableViaIntegration interfaceIssueComment object type no longer implements PerformableViaIntegration interfaceIssue object type no longer implements PerformableViaIntegration interfacePullRequest object type no longer implements PerformableViaIntegration interfaceField viaApp was added to object type DeployedEventField viaApp was added to object type IssueCommentField viaApp was added to object type IssueField viaApp was added to object type PullRequestType AppConnection was addedType AppEdge was addedType App was addedType PerformableViaApp was addedDeployedEvent object implements PerformableViaApp interfaceIssueComment object implements PerformableViaApp interfaceIssue object implements PerformableViaApp interfacePullRequest object implements PerformableViaApp interfaceSchema changes for 2017-06-02The following changes were made to the GraphQL schema:Organization object type no longer implements Actor interfaceEnum value HEAD_REF was added to enum PullRequestPubSubTopicField hasLimitExceeded was added to object type PullRequestCommitConnectionField isCrossRepository was added to object type PullRequestSchema changes for 2017-06-01The following changes were made to the GraphQL schema:Enum value HEAD_REF was removed from enum PullRequestPubSubTopicField hasLimitExceeded was removed from object type PullRequestCommitConnectionField isCrossRepository was removed from object type PullRequestField comments was added to object type GistType GistCommentConnection was addedType GistCommentEdge was addedOrganization object implements Actor interfaceSchema changes for 2017-05-31The following changes were made to the GraphQL schema:AddTeamMemberInput was removedAddTeamMemberPayload was removedChildTeamDescendants was removedCreateTeamInput was removedCreateTeamPayload was removedDeleteTeamInput was removedDeleteTeamPayload was removedField addTeamMember was removed from object type MutationField ancestors was removed from object type TeamField childTeams was removed from object type TeamField combinedSlug was removed from object type TeamField createTeam was removed from object type MutationField deleteTeam was removed from object type MutationField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField removeTeamMember was removed from object type MutationField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField updateTeamMember was removed from object type MutationField updateTeam was removed from object type MutationField viewerCanAdminister was removed from object type TeamRemoveTeamMemberInput was removedRemoveTeamMemberPayload was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedUpdateTeamInput was removedUpdateTeamMemberInput was removedUpdateTeamMemberPayload was removedUpdateTeamPayload was removedEnum value HEAD_REF was added to enum PullRequestPubSubTopicField hasLimitExceeded was added to object type PullRequestCommitConnectionField isCrossRepository was added to object type PullRequestSchema changes for 2017-05-30The following changes were made to the GraphQL schema:Enum value HEAD_REF was removed from enum PullRequestPubSubTopicField hasLimitExceeded was removed from object type PullRequestCommitConnectionField isCrossRepository was removed from object type PullRequestField addTeamMember was added to object type MutationField ancestors was added to object type TeamField childTeams was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viewerCanAdminister was added to object type TeamField viewerCanSubscribe was added to object type CommitField viewerSubscription was added to object type CommitInput field commitOID was added to input object type AddPullRequestReviewInputType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType ChildTeamDescendants was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedCommit object implements Subscribable interfaceSchema changes for 2017-05-26The following changes were made to the GraphQL schema:AddTeamMemberInput was removedAddTeamMemberPayload was removedCreateTeamInput was removedCreateTeamPayload was removedDeleteTeamInput was removedDeleteTeamPayload was removedField addTeamMember was removed from object type MutationField ancestors was removed from object type TeamField combinedSlug was removed from object type TeamField createTeam was removed from object type MutationField deleteTeam was removed from object type MutationField membersResourcePath was removed from object type TeamField membersUrl was removed from object type TeamField members was removed from object type TeamField newTeamResourcePath was removed from object type TeamField newTeamUrl was removed from object type TeamField parentTeam was removed from object type TeamField removeTeamMember was removed from object type MutationField repositoriesResourcePath was removed from object type TeamField repositoriesUrl was removed from object type TeamField repositories was removed from object type TeamField teamsResourcePath was removed from object type TeamField teamsUrl was removed from object type TeamField updateTeamMember was removed from object type MutationField updateTeam was removed from object type MutationField viewerCanAdminister was removed from object type TeamRemoveTeamMemberInput was removedRemoveTeamMemberPayload was removedTeamMemberConnection was removedTeamMemberEdge was removedTeamMembershipType was removedTeamRepositoryConnection was removedTeamRepositoryEdge was removedTeamRepositoryOrder was removedTeamRepositoryOrderField was removedUpdateTeamInput was removedUpdateTeamMemberInput was removedUpdateTeamMemberPayload was removedUpdateTeamPayload was removedEnum value HEAD_REF was added to enum PullRequestPubSubTopicField hasLimitExceeded was added to object type PullRequestCommitConnectionField isCrossRepository was added to object type PullRequestSchema changes for 2017-05-25The following changes were made to the GraphQL schema:Field membershipRequests was removed from object type TeamTeamMembershipRequest was removedTeamMembershipRequestConnection was removedTeamMembershipRequestEdge was removedField repositoriesResourcePath was added to object type TeamField repositoriesUrl was added to object type TeamSchema changes for 2017-05-24The following changes were made to the GraphQL schema:Field comments was removed from object type GistField isAuthoredByPusher was removed from object type ReferencedEventField isDirectReference was removed from object type ReferencedEventField viewerCanSubscribe was removed from object type CommitField viewerSubscription was removed from object type CommitGistCommentConnection was removedGistCommentEdge was removedInput field commitOID was removed from input object type AddPullRequestReviewInputCommit object type no longer implements Subscribable interfaceOrganization object type no longer implements Actor interfaceField addTeamMember was added to object type MutationField ancestors was added to object type TeamField combinedSlug was added to object type TeamField createTeam was added to object type MutationField deleteTeam was added to object type MutationField membersResourcePath was added to object type TeamField membersUrl was added to object type TeamField members was added to object type TeamField membershipRequests was added to object type TeamField newTeamResourcePath was added to object type TeamField newTeamUrl was added to object type TeamField parentTeam was added to object type TeamField removeTeamMember was added to object type MutationField repositories was added to object type TeamField teamsResourcePath was added to object type TeamField teamsUrl was added to object type TeamField updateTeamMember was added to object type MutationField updateTeam was added to object type MutationField viewerCanAdminister was added to object type TeamType AddTeamMemberInput was addedType AddTeamMemberPayload was addedType CreateTeamInput was addedType CreateTeamPayload was addedType DeleteTeamInput was addedType DeleteTeamPayload was addedType RemoveTeamMemberInput was addedType RemoveTeamMemberPayload was addedType TeamMemberConnection was addedType TeamMemberEdge was addedType TeamMembershipRequestConnection was addedType TeamMembershipRequestEdge was addedType TeamMembershipRequest was addedType TeamMembershipType was addedType TeamRepositoryConnection was addedType TeamRepositoryEdge was addedType TeamRepositoryOrderField was addedType TeamRepositoryOrder was addedType UpdateTeamInput was addedType UpdateTeamMemberInput was addedType UpdateTeamMemberPayload was addedType UpdateTeamPayload was addedSchema changes for 2017-05-23The following changes were made to the GraphQL schema:Field comments was added to object type GistField isAuthoredByPusher was added to object type ReferencedEventField isDirectReference was added to object type ReferencedEventField organization was added to object type TeamField viewerCanSubscribe was added to object type CommitField viewerSubscription was added to object type CommitInput field commitOID was added to input object type AddPullRequestReviewInputType GistCommentConnection was addedType GistCommentEdge was addedCommit object implements Subscribable interfaceOrganization object implements Actor interfaceSchema changes for 2017-05-22The following changes were made to the GraphQL schema:Nothing! The schema was made public!\n\n\n\nGraphQL API/Overview/ExplorerExplorerFor more information about how to use the explorer, see Using the Explorer.\n\n\n\nGraphQL API/Overview/Rate and node limitsRate limits and node limits for the GraphQL APIThe GitHub GraphQL API has limitations in place to protect against excessive or abusive calls to GitHub's servers.In this articleNode limitPrimary rate limitSecondary rate limitsExceeding the rate limitStaying under the rate limitTimeoutsNode limit
To pass schema validation, all GraphQL API calls must meet these standards:

Clients must supply a first or last argument on any connection.
Values of first and last must be within 1-100.
Individual calls cannot request more than 500,000 total nodes.

Calculating nodes in a call
These two examples show how to calculate the total nodes in a call.


Simple query:
query {
  viewer {
    repositories(first: 50) {
      edges {
        repository:node {
          name

          issues(first: 10) {
            totalCount
            edges {
              node {
                title
                bodyHTML
              }
            }
          }
        }
      }
    }
  }
}
Calculation:
50         = 50 repositories
 +
50 x 10  = 500 repository issues

            = 550 total nodes


Complex query:
query {
  viewer {
    repositories(first: 50) {
      edges {
        repository:node {
          name

          pullRequests(first: 20) {
            edges {
              pullRequest:node {
                title

                comments(first: 10) {
                  edges {
                    comment:node {
                      bodyHTML
                    }
                  }
                }
              }
            }
          }

          issues(first: 20) {
            totalCount
            edges {
              issue:node {
                title
                bodyHTML

                comments(first: 10) {
                  edges {
                    comment:node {
                      bodyHTML
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    followers(first: 10) {
      edges {
        follower:node {
          login
        }
      }
    }
  }
}
Calculation:
50              = 50 repositories
 +
50 x 20       = 1,000 pullRequests
 +
50 x 20 x 10 = 10,000 pullRequest comments
 +
50 x 20       = 1,000 issues
 +
50 x 20 x 10 = 10,000 issue comments
 +
10              = 10 followers

                 = 22,060 total nodes


Primary rate limit
The GraphQL API assigns points to each query and limits the points that you can use within a specific amount of time. This limit helps prevent abuse and denial-of-service attacks, and ensures that the API remains available for all users.
The REST API also has a separate primary rate limit. For more information, see Rate limits for the REST API.
In general, you can calculate your primary rate limit for the GraphQL API based on your method of authentication:

For users: 5,000 points per hour per user. This includes requests made with a personal access token as well as requests made by a GitHub App or OAuth app on behalf of a user that authorized the app. Requests made on a user's behalf by a GitHub App that is owned by a GitHub Enterprise Cloud organization have a higher rate limit of 10,000 points per hour. Similarly, requests made on your behalf by an OAuth app that is owned or approved by a GitHub Enterprise Cloud organization have a higher rate limit of 10,000 points per hour if you are a member of the GitHub Enterprise Cloud organization.
For GitHub App installations not on a GitHub Enterprise Cloud organization: 5,000 points per hour per installation. Installations that have more than 20 repositories receive another 50 points per hour for each repository. Installations that are on an organization that have more than 20 users receive another 50 points per hour for each user. The rate limit cannot increase beyond 12,500 points per hour. The rate limit for user access tokens (as opposed to installation access tokens) are dictated by the primary rate limit for users.
For GitHub App installations on a GitHub Enterprise Cloud organization: 10,000 points per hour per installation. The rate limit for user access tokens (as opposed to installation access tokens) are dictated by the primary rate limit for users.
For OAuth apps: 5,000 points per hour, or 10,000 points per hour if the app is owned by a GitHub Enterprise Cloud organization. This only applies when the app uses their client ID and client secret to request public data. The rate limit for OAuth access tokens generated by a OAuth app are dictated by the primary rate limit for users.
For GITHUB_TOKEN in GitHub Actions workflows: 1,000 points per hour per repository. For requests to resources that belong to an enterprise account on GitHub.com, the limit is 15,000 points per hour per repository.

You can check the point value of a query or calculate the expected point value as described in the following sections. The formula for calculating points and the rate limit are subject to change.
Checking the status of your primary rate limit
You can use the headers that are sent with each response to determine the current status of your primary rate limit.





























Header nameDescriptionx-ratelimit-limitThe maximum number of points that you can use per hourx-ratelimit-remainingThe number of points remaining in the current rate limit windowx-ratelimit-usedThe number of points you have used in the current rate limit windowx-ratelimit-resetThe time at which the current rate limit window resets, in UTC epoch secondsx-ratelimit-resourceThe rate limit resource that the request counted against. For GraphQL requests, this will always be graphql.
You can also query the rateLimit object to check your rate limit. When possible, you should use the rate limit response headers instead of querying the API to check your rate limit.
query {
  viewer {
    login
  }
  rateLimit {
    limit
    remaining
    used
    resetAt
  }
}


























FieldDescriptionlimitThe maximum number of points that you can use per hourremainingThe number of points remaining in the current rate limit windowusedThe number of points you have used in the current rate limit windowresetAtThe time at which the current rate limit window resets, in UTC epoch seconds
Returning the point value of a query
You can return the point value of a query by querying the cost field on the rateLimit object:
query {
  viewer {
    login
  }
  rateLimit {
    cost
  }
}

Predicting the point value of a query
You can also roughly calculate the point value of a query before you make the query.

Add up the number of requests needed to fulfill each unique connection in the call. Assume every request will reach the first or last argument limits.
Divide the number by 100 and round the result to the nearest whole number to get the final aggregate point value. This step normalizes large numbers.

Note

The minimum point value of a call to the GraphQL API is 1.

Here's an example query and score calculation:
query {
  viewer {
    login
    repositories(first: 100) {
      edges {
        node {
          id

          issues(first: 50) {
            edges {
              node {
                id

                labels(first: 60) {
                  edges {
                    node {
                      id
                      name
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

This query requires 5,101 requests to fulfill:

Although we're returning 100 repositories, the API has to connect to the viewer's account once to get the list of repositories. So, requests for repositories = 1
Although we're returning 50 issues, the API has to connect to each of the 100 repositories to get the list of issues. So, requests for issues = 100
Although we're returning 60 labels, the API has to connect to each of the 5,000 potential total issues to get the list of labels. So, requests for labels = 5,000
Total = 5,101

Dividing by 100 and rounding gives us the final score of the query: 51
Secondary rate limits
In addition to primary rate limits, GitHub enforces secondary rate limits in order to prevent abuse and keep the API available for all users.
You may encounter a secondary rate limit if you:

Make too many concurrent requests. No more than 100 concurrent requests are allowed. This limit is shared across the REST API and GraphQL API.
Make too many requests to a single endpoint per minute. No more than 900 points per minute are allowed for REST API endpoints, and no more than 2,000 points per minute are allowed for the GraphQL API endpoint. For more information about points, see Calculating points for the secondary rate limit.
Make too many requests per minute. No more than 90 seconds of CPU time per 60 seconds of real time is allowed. No more than 60 seconds of this CPU time may be for the GraphQL API. You can roughly estimate the CPU time by measuring the total response time for your API requests.
Make too many requests that consume excessive compute resources in a short period of time.
Create too much content on GitHub in a short amount of time. In general, no more than 80 content-generating requests per minute and no more than 500 content-generating requests per hour are allowed. Some endpoints have lower content creation limits. Content creation limits include actions taken on the GitHub web interface as well as via the REST API and GraphQL API.

These secondary rate limits are subject to change without notice. You may also encounter a secondary rate limit for undisclosed reasons.
Calculating points for the secondary rate limit
Some secondary rate limits are determined by the point values of requests. For GraphQL requests, these point values are separate from the point value calculations for the primary rate limit.

























RequestPointsGraphQL requests without mutations1GraphQL requests with mutations5Most REST API GET, HEAD, and OPTIONS requests1Most REST API POST, PATCH, PUT, or DELETE requests5
Some REST API endpoints have a different point cost that is not shared publicly.
Exceeding the rate limit
If you exceed your primary rate limit, the response status will still be 200, but you will receive an error message, and the value of the x-ratelimit-remaining header will be 0. You should not retry your request until after the time specified by the x-ratelimit-reset header.
If you exceed a secondary rate limit, the response status will be 200 or 403, and you will receive an error message that indicates that you hit a secondary rate limit. If the retry-after response header is present, you should not retry your request until after that many seconds has elapsed. If the x-ratelimit-remaining header is 0, you should not retry your request until after the time, in UTC epoch seconds, specified by the x-ratelimit-reset header. Otherwise, wait for at least one minute before retrying. If your request continues to fail due to a secondary rate limit, wait for an exponentially increasing amount of time between retries, and throw an error after a specific number of retries.
Continuing to make requests while you are rate limited may result in the banning of your integration.
Staying under the rate limit
To avoid exceeding a rate limit, you should pause at least 1 second between mutative requests and avoid concurrent requests.
You should also subscribe to webhook events instead of polling the API for data. For more information, see Webhooks documentation.
You can also stream the audit log in order to view API requests. This can help you troubleshoot integrations that are exceeding the rate limit. For more information, see Streaming the audit log for your enterprise.
Timeouts
If GitHub takes more than 10 seconds to process an API request, GitHub will terminate the request and you will receive a timeout response and a message reporting that "We couldn't respond to your request in time".
GitHub reserves the right to change the timeout window to protect the speed and reliability of the API.
You can check the status of the GraphQL API at githubstatus.com to determine whether the timeout is due to a problem with the API. You can also try to simplify your request or try your request later. For example, if you are requesting a large number of objects in a single request, you can try requesting fewer objects split over multiple queries.\n\n\n\nGraphQL API/Reference/QueriesQueriesThe query type defines GraphQL operations that retrieve data from the server.In this articleAbout queriescodeOfConductcodesOfConductenterpriseenterpriseAdministratorInvitationenterpriseAdministratorInvitationByTokenenterpriseMemberInvitationenterpriseMemberInvitationByTokenidlicenselicensesmarketplaceCategoriesmarketplaceCategorymarketplaceListingmarketplaceListingsmetanodenodesorganizationrateLimitrelayrepositoryrepositoryOwnerresourcesearchsecurityAdvisoriessecurityAdvisorysecurityVulnerabilitiessponsorablestopicuserviewerAbout queries
Every GraphQL schema has a root type for both queries and mutations. The query type defines GraphQL operations that retrieve data from the server.
For more information, see Forming calls with GraphQL.
Note

For GitHub App requests made with user access tokens, you should use separate queries for issues and pull requests. For example, use the is:issue or is:pull-request filters and their equivalents. Using the search connection to return a combination of issues and pull requests in a single query will result in an empty set of nodes.
codeOfConductLook up a code of conduct by its key.Type: CodeOfConductArguments for codeOfConductNameDescriptionkey (String!)The code of conduct's key.codesOfConductLook up a code of conduct by its key.Type: [CodeOfConduct]enterpriseLook up an enterprise by URL slug.Type: EnterpriseArguments for enterpriseNameDescriptioninvitationToken (String)The enterprise invitation token.slug (String!)The enterprise URL slug.enterpriseAdministratorInvitationLook up a pending enterprise administrator invitation by invitee, enterprise and role.Type: EnterpriseAdministratorInvitationArguments for enterpriseAdministratorInvitationNameDescriptionenterpriseSlug (String!)The slug of the enterprise the user was invited to join.role (EnterpriseAdministratorRole!)The role for the enterprise member invitation.userLogin (String!)The login of the user invited to join the enterprise.enterpriseAdministratorInvitationByTokenLook up a pending enterprise administrator invitation by invitation token.Type: EnterpriseAdministratorInvitationArguments for enterpriseAdministratorInvitationByTokenNameDescriptioninvitationToken (String!)The invitation token sent with the invitation email.enterpriseMemberInvitationLook up a pending enterprise unaffiliated member invitation by invitee and enterprise.Type: EnterpriseMemberInvitationArguments for enterpriseMemberInvitationNameDescriptionenterpriseSlug (String!)The slug of the enterprise the user was invited to join.userLogin (String!)The login of the user invited to join the enterprise.enterpriseMemberInvitationByTokenLook up a pending enterprise unaffiliated member invitation by invitation token.Type: EnterpriseMemberInvitationArguments for enterpriseMemberInvitationByTokenNameDescriptioninvitationToken (String!)The invitation token sent with the invitation email.idID of the object.Type: ID!licenseLook up an open source license by its key.Type: LicenseArguments for licenseNameDescriptionkey (String!)The license's downcased SPDX ID.licensesReturn a list of known open source licenses.Type: [License]!marketplaceCategoriesGet alphabetically sorted list of Marketplace categories.Type: [MarketplaceCategory!]!Arguments for marketplaceCategoriesNameDescriptionexcludeEmpty (Boolean)Exclude categories with no listings.excludeSubcategories (Boolean)Returns top level categories only, excluding any subcategories.includeCategories ([String!])Return only the specified categories.marketplaceCategoryLook up a Marketplace category by its slug.Type: MarketplaceCategoryArguments for marketplaceCategoryNameDescriptionslug (String!)The URL slug of the category.useTopicAliases (Boolean)Also check topic aliases for the category slug.marketplaceListingLook up a single Marketplace listing.Type: MarketplaceListingArguments for marketplaceListingNameDescriptionslug (String!)Select the listing that matches this slug. It's the short name of the listing used in its URL.marketplaceListingsLook up Marketplace listings.Type: MarketplaceListingConnection!Arguments for marketplaceListingsNameDescriptionadminId (ID)Select listings that can be administered by the specified user.after (String)Returns the elements in the list that come after the specified cursor.allStates (Boolean)Select listings visible to the viewer even if they are not approved. If omitted or
false, only approved listings will be returned.before (String)Returns the elements in the list that come before the specified cursor.categorySlug (String)Select only listings with the given category.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.organizationId (ID)Select listings for products owned by the specified organization.primaryCategoryOnly (Boolean)Select only listings where the primary category matches the given category slug.The default value is false.slugs ([String])Select the listings with these slugs, if they are visible to the viewer.useTopicAliases (Boolean)Also check topic aliases for the category slug.viewerCanAdmin (Boolean)Select listings to which user has admin access. If omitted, listings visible to the
viewer are returned.withFreeTrialsOnly (Boolean)Select only listings that offer a free trial.The default value is false.metaReturn information about the GitHub instance.Type: GitHubMetadata!nodeFetches an object given its ID.Type: NodeArguments for nodeNameDescriptionid (ID!)ID of the object.nodesLookup nodes by a list of IDs.Type: [Node]!Arguments for nodesNameDescriptionids ([ID!]!)The list of node IDs.organizationLookup a organization by login.Type: OrganizationArguments for organizationNameDescriptionlogin (String!)The organization's login.rateLimitThe client's rate limit information.Type: RateLimitArguments for rateLimitNameDescriptiondryRun (Boolean)If true, calculate the cost for the query without evaluating it.The default value is false.relayWorkaround for re-exposing the root query object. (Refer to
https://github.com/facebook/relay/issues/112 for more information.).Type: Query!repositoryLookup a given repository by the owner and repository name.Type: RepositoryArguments for repositoryNameDescriptionfollowRenames (Boolean)Follow repository renames. If disabled, a repository referenced by its old name will return an error.The default value is true.name (String!)The name of the repository.owner (String!)The login field of a user or organization.repositoryOwnerLookup a repository owner (ie. either a User or an Organization) by login.Type: RepositoryOwnerArguments for repositoryOwnerNameDescriptionlogin (String!)The username to lookup the owner by.resourceLookup resource by a URL.Type: UniformResourceLocatableArguments for resourceNameDescriptionurl (URI!)The URL.searchPerform a search across resources, returning a maximum of 1,000 results.Type: SearchResultItemConnection!Arguments for searchNameDescriptionafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String!)The search string to look for. GitHub search syntax is supported. For more
information, see "Searching on
GitHub,"
"Understanding the search syntax,"
and "Sorting search results.".type (SearchType!)The types of search items to search within.securityAdvisoriesGitHub Security Advisories.Type: SecurityAdvisoryConnection!Arguments for securityAdvisoriesNameDescriptionafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.classifications ([SecurityAdvisoryClassification!])A list of classifications to filter advisories by.epssPercentage (Float)The EPSS percentage to filter advisories by.epssPercentile (Float)The EPSS percentile to filter advisories by.first (Int)Returns the first n elements from the list.identifier (SecurityAdvisoryIdentifierFilter)Filter advisories by identifier, e.g. GHSA or CVE.last (Int)Returns the last n elements from the list.orderBy (SecurityAdvisoryOrder)Ordering options for the returned topics.publishedSince (DateTime)Filter advisories to those published since a time in the past.updatedSince (DateTime)Filter advisories to those updated since a time in the past.securityAdvisoryFetch a Security Advisory by its GHSA ID.Type: SecurityAdvisoryArguments for securityAdvisoryNameDescriptionghsaId (String!)GitHub Security Advisory ID.securityVulnerabilitiesSoftware Vulnerabilities documented by GitHub Security Advisories.Type: SecurityVulnerabilityConnection!Arguments for securityVulnerabilitiesNameDescriptionafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.classifications ([SecurityAdvisoryClassification!])A list of advisory classifications to filter vulnerabilities by.ecosystem (SecurityAdvisoryEcosystem)An ecosystem to filter vulnerabilities by.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SecurityVulnerabilityOrder)Ordering options for the returned topics.package (String)A package name to filter vulnerabilities by.severities ([SecurityAdvisorySeverity!])A list of severities to filter vulnerabilities by.sponsorablesUsers and organizations who can be sponsored via GitHub Sponsors.Type: SponsorableItemConnection!Arguments for sponsorablesNameDescriptionafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.dependencyEcosystem (SecurityAdvisoryEcosystem)Optional filter for which dependencies should be checked for sponsorable
owners. Only sponsorable owners of dependencies in this ecosystem will be
included. Used when onlyDependencies = true.
Upcoming Change on 2022-07-01 UTC
Description: dependencyEcosystem will be removed. Use the ecosystem argument instead.
Reason: The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem.ecosystem (DependencyGraphEcosystem)Optional filter for which dependencies should be checked for sponsorable
owners. Only sponsorable owners of dependencies in this ecosystem will be
included. Used when onlyDependencies = true.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.onlyDependencies (Boolean)Whether only sponsorables who own the viewer's dependencies will be
returned. Must be authenticated to use. Can check an organization instead
for their dependencies owned by sponsorables by passing
orgLoginForDependencies.The default value is false.orderBy (SponsorableOrder)Ordering options for users and organizations returned from the connection.orgLoginForDependencies (String)Optional organization username for whose dependencies should be checked.
Used when onlyDependencies = true. Omit to check your own dependencies. If
you are not an administrator of the organization, only dependencies from its
public repositories will be considered.topicLook up a topic by name.Type: TopicArguments for topicNameDescriptionname (String!)The topic's name.userLookup a user by login.Type: UserArguments for userNameDescriptionlogin (String!)The user's login.viewerThe currently authenticated user.Type: User!\n\n\n\nGraphQL API/Reference/MutationsMutationsThe mutation type defines GraphQL operations that change data on the server.In this articleAbout mutationsabortQueuedMigrationsabortRepositoryMigrationacceptEnterpriseAdministratorInvitationacceptEnterpriseMemberInvitationacceptTopicSuggestionaccessUserNamespaceRepositoryaddAssigneesToAssignableaddCommentaddDiscussionCommentaddDiscussionPollVoteaddEnterpriseOrganizationMemberaddEnterpriseSupportEntitlementaddLabelsToLabelableaddProjectCardaddProjectColumnaddProjectV2DraftIssueaddProjectV2ItemByIdaddPullRequestReviewaddPullRequestReviewCommentaddPullRequestReviewThreadaddPullRequestReviewThreadReplyaddReactionaddStaraddSubIssueaddUpvoteaddVerifiableDomainapproveDeploymentsapproveVerifiableDomainarchiveProjectV2ItemarchiveRepositorycancelEnterpriseAdminInvitationcancelEnterpriseMemberInvitationcancelSponsorshipchangeUserStatusclearLabelsFromLabelableclearProjectV2ItemFieldValuecloneProjectcloneTemplateRepositorycloseDiscussioncloseIssueclosePullRequestconvertProjectCardNoteToIssueconvertProjectV2DraftIssueItemToIssueconvertPullRequestToDraftcopyProjectV2createAttributionInvitationcreateBranchProtectionRulecreateCheckRuncreateCheckSuitecreateCommitOnBranchcreateDeploymentcreateDeploymentStatuscreateDiscussioncreateEnterpriseOrganizationcreateEnvironmentcreateIpAllowListEntrycreateIssuecreateIssueTypecreateLabelcreateLinkedBranchcreateMigrationSourcecreateProjectcreateProjectV2createProjectV2FieldcreateProjectV2StatusUpdatecreatePullRequestcreateRefcreateRepositorycreateRepositoryRulesetcreateSponsorsListingcreateSponsorsTiercreateSponsorshipcreateSponsorshipscreateTeamDiscussioncreateTeamDiscussionCommentcreateUserListdeclineTopicSuggestiondeleteBranchProtectionRuledeleteDeploymentdeleteDiscussiondeleteDiscussionCommentdeleteEnvironmentdeleteIpAllowListEntrydeleteIssuedeleteIssueCommentdeleteIssueTypedeleteLabeldeleteLinkedBranchdeletePackageVersiondeleteProjectdeleteProjectCarddeleteProjectColumndeleteProjectV2deleteProjectV2FielddeleteProjectV2ItemdeleteProjectV2StatusUpdatedeleteProjectV2WorkflowdeletePullRequestReviewdeletePullRequestReviewCommentdeleteRefdeleteRepositoryRulesetdeleteTeamDiscussiondeleteTeamDiscussionCommentdeleteUserListdeleteVerifiableDomaindequeuePullRequestdisablePullRequestAutoMergedismissPullRequestReviewdismissRepositoryVulnerabilityAlertenablePullRequestAutoMergeenqueuePullRequestfollowOrganizationfollowUsergrantEnterpriseOrganizationsMigratorRolegrantMigratorRoleimportProjectinviteEnterpriseAdmininviteEnterpriseMemberlinkProjectV2ToRepositorylinkProjectV2ToTeamlinkRepositoryToProjectlockLockablemarkDiscussionCommentAsAnswermarkFileAsViewedmarkProjectV2AsTemplatemarkPullRequestReadyForReviewmergeBranchmergePullRequestminimizeCommentmoveProjectCardmoveProjectColumnpinEnvironmentpinIssuepublishSponsorsTierregenerateEnterpriseIdentityProviderRecoveryCodesregenerateVerifiableDomainTokenrejectDeploymentsremoveAssigneesFromAssignableremoveEnterpriseAdminremoveEnterpriseIdentityProviderremoveEnterpriseMemberremoveEnterpriseOrganizationremoveEnterpriseSupportEntitlementremoveLabelsFromLabelableremoveOutsideCollaboratorremoveReactionremoveStarremoveSubIssueremoveUpvotereopenDiscussionreopenIssuereopenPullRequestreorderEnvironmentreplaceActorsForAssignablereprioritizeSubIssuerequestReviewsrerequestCheckSuiteresolveReviewThreadretireSponsorsTierrevertPullRequestrevokeEnterpriseOrganizationsMigratorRolerevokeMigratorRolesetEnterpriseIdentityProvidersetOrganizationInteractionLimitsetRepositoryInteractionLimitsetUserInteractionLimitstartOrganizationMigrationstartRepositoryMigrationsubmitPullRequestReviewtransferEnterpriseOrganizationtransferIssueunarchiveProjectV2ItemunarchiveRepositoryunfollowOrganizationunfollowUserunlinkProjectV2FromRepositoryunlinkProjectV2FromTeamunlinkRepositoryFromProjectunlockLockableunmarkDiscussionCommentAsAnswerunmarkFileAsViewedunmarkIssueAsDuplicateunmarkProjectV2AsTemplateunminimizeCommentunpinIssueunresolveReviewThreadupdateBranchProtectionRuleupdateCheckRunupdateCheckSuitePreferencesupdateDiscussionupdateDiscussionCommentupdateEnterpriseAdministratorRoleupdateEnterpriseAllowPrivateRepositoryForkingSettingupdateEnterpriseDefaultRepositoryPermissionSettingupdateEnterpriseDeployKeySettingupdateEnterpriseMembersCanChangeRepositoryVisibilitySettingupdateEnterpriseMembersCanCreateRepositoriesSettingupdateEnterpriseMembersCanDeleteIssuesSettingupdateEnterpriseMembersCanDeleteRepositoriesSettingupdateEnterpriseMembersCanInviteCollaboratorsSettingupdateEnterpriseMembersCanMakePurchasesSettingupdateEnterpriseMembersCanUpdateProtectedBranchesSettingupdateEnterpriseMembersCanViewDependencyInsightsSettingupdateEnterpriseOrganizationProjectsSettingupdateEnterpriseOwnerOrganizationRoleupdateEnterpriseProfileupdateEnterpriseRepositoryProjectsSettingupdateEnterpriseTeamDiscussionsSettingupdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingupdateEnterpriseTwoFactorAuthenticationRequiredSettingupdateEnvironmentupdateIpAllowListEnabledSettingupdateIpAllowListEntryupdateIpAllowListForInstalledAppsEnabledSettingupdateIssueupdateIssueCommentupdateIssueIssueTypeupdateIssueTypeupdateLabelupdateNotificationRestrictionSettingupdateOrganizationAllowPrivateRepositoryForkingSettingupdateOrganizationWebCommitSignoffSettingupdatePatreonSponsorabilityupdateProjectupdateProjectCardupdateProjectColumnupdateProjectV2updateProjectV2CollaboratorsupdateProjectV2DraftIssueupdateProjectV2FieldupdateProjectV2ItemFieldValueupdateProjectV2ItemPositionupdateProjectV2StatusUpdateupdatePullRequestupdatePullRequestBranchupdatePullRequestReviewupdatePullRequestReviewCommentupdateRefupdateRefsupdateRepositoryupdateRepositoryRulesetupdateRepositoryWebCommitSignoffSettingupdateSponsorshipPreferencesupdateSubscriptionupdateTeamDiscussionupdateTeamDiscussionCommentupdateTeamReviewAssignmentupdateTeamsRepositoryupdateTopicsupdateUserListupdateUserListsForItemverifyVerifiableDomainAbout mutations
Every GraphQL schema has a root type for both queries and mutations. The mutation type defines GraphQL operations that change data on the server. It is analogous to performing HTTP verbs such as POST, PATCH, and DELETE.
For more information, see Forming calls with GraphQL.abortQueuedMigrationsClear all of a customer's queued migrations.Input fields for abortQueuedMigrationsinput (AbortQueuedMigrationsInput!)Return fields for abortQueuedMigrationsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.success (Boolean)Did the operation succeed?.abortRepositoryMigrationAbort a repository migration queued or in progress.Input fields for abortRepositoryMigrationinput (AbortRepositoryMigrationInput!)Return fields for abortRepositoryMigrationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.success (Boolean)Did the operation succeed?.acceptEnterpriseAdministratorInvitationAccepts a pending invitation for a user to become an administrator of an enterprise.Input fields for acceptEnterpriseAdministratorInvitationinput (AcceptEnterpriseAdministratorInvitationInput!)Return fields for acceptEnterpriseAdministratorInvitationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseAdministratorInvitation)The invitation that was accepted.message (String)A message confirming the result of accepting an administrator invitation.acceptEnterpriseMemberInvitationAccepts a pending invitation for a user to become an unaffiliated member of an enterprise.Input fields for acceptEnterpriseMemberInvitationinput (AcceptEnterpriseMemberInvitationInput!)Return fields for acceptEnterpriseMemberInvitationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseMemberInvitation)The invitation that was accepted.message (String)A message confirming the result of accepting an unaffiliated member invitation.acceptTopicSuggestionApplies a suggested topic to the repository.Input fields for acceptTopicSuggestioninput (AcceptTopicSuggestionInput!)Return fields for acceptTopicSuggestionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.topic (Topic)The accepted topic.Warningtopic is deprecated.Suggested topics are no longer supported Removal on 2024-04-01 UTC.accessUserNamespaceRepositoryAccess user namespace repository for a temporary duration.Input fields for accessUserNamespaceRepositoryinput (AccessUserNamespaceRepositoryInput!)Return fields for accessUserNamespaceRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expiresAt (DateTime)The time that repository access expires at.repository (Repository)The repository that is temporarily accessible.addAssigneesToAssignableAdds assignees to an assignable object.Input fields for addAssigneesToAssignableinput (AddAssigneesToAssignableInput!)Return fields for addAssigneesToAssignableNameDescriptionassignable (Assignable)The item that was assigned.clientMutationId (String)A unique identifier for the client performing the mutation.addCommentAdds a comment to an Issue or Pull Request.Input fields for addCommentinput (AddCommentInput!)Return fields for addCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.commentEdge (IssueCommentEdge)The edge from the subject's comment connection.subject (Node)The subject.timelineEdge (IssueTimelineItemEdge)The edge from the subject's timeline connection.addDiscussionCommentAdds a comment to a Discussion, possibly as a reply to another comment.Input fields for addDiscussionCommentinput (AddDiscussionCommentInput!)Return fields for addDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (DiscussionComment)The newly created discussion comment.addDiscussionPollVoteVote for an option in a discussion poll.Input fields for addDiscussionPollVoteinput (AddDiscussionPollVoteInput!)Return fields for addDiscussionPollVoteNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pollOption (DiscussionPollOption)The poll option that a vote was added to.addEnterpriseOrganizationMemberAdds enterprise members to an organization within the enterprise.Input fields for addEnterpriseOrganizationMemberinput (AddEnterpriseOrganizationMemberInput!)Return fields for addEnterpriseOrganizationMemberNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.users ([User!])The users who were added to the organization.addEnterpriseSupportEntitlementAdds a support entitlement to an enterprise member.Input fields for addEnterpriseSupportEntitlementinput (AddEnterpriseSupportEntitlementInput!)Return fields for addEnterpriseSupportEntitlementNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of adding the support entitlement.addLabelsToLabelableAdds labels to a labelable object.Input fields for addLabelsToLabelableinput (AddLabelsToLabelableInput!)Return fields for addLabelsToLabelableNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelable (Labelable)The item that was labeled.addProjectCardAdds a card to a ProjectColumn. Either contentId or note must be provided but not both.WarningaddProjectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for addProjectCardinput (AddProjectCardInput!)Return fields for addProjectCardNameDescriptioncardEdge (ProjectCardEdge)The edge from the ProjectColumn's card connection.clientMutationId (String)A unique identifier for the client performing the mutation.projectColumn (ProjectColumn)The ProjectColumn.addProjectColumnAdds a column to a Project.WarningaddProjectColumn is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for addProjectColumninput (AddProjectColumnInput!)Return fields for addProjectColumnNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.columnEdge (ProjectColumnEdge)The edge from the project's column connection.project (Project)The project.addProjectV2DraftIssueCreates a new draft issue and add it to a Project.Input fields for addProjectV2DraftIssueinput (AddProjectV2DraftIssueInput!)Return fields for addProjectV2DraftIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectItem (ProjectV2Item)The draft issue added to the project.addProjectV2ItemByIdLinks an existing content instance to a Project.Input fields for addProjectV2ItemByIdinput (AddProjectV2ItemByIdInput!)Return fields for addProjectV2ItemByIdNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.item (ProjectV2Item)The item added to the project.addPullRequestReviewAdds a review to a Pull Request.Input fields for addPullRequestReviewinput (AddPullRequestReviewInput!)Return fields for addPullRequestReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The newly created pull request review.reviewEdge (PullRequestReviewEdge)The edge from the pull request's review connection.addPullRequestReviewCommentAdds a comment to a review.Input fields for addPullRequestReviewCommentinput (AddPullRequestReviewCommentInput!)Return fields for addPullRequestReviewCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (PullRequestReviewComment)The newly created comment.commentEdge (PullRequestReviewCommentEdge)The edge from the review's comment connection.addPullRequestReviewThreadAdds a new thread to a pending Pull Request Review.Input fields for addPullRequestReviewThreadinput (AddPullRequestReviewThreadInput!)Return fields for addPullRequestReviewThreadNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.thread (PullRequestReviewThread)The newly created thread.addPullRequestReviewThreadReplyAdds a reply to an existing Pull Request Review Thread.Input fields for addPullRequestReviewThreadReplyinput (AddPullRequestReviewThreadReplyInput!)Return fields for addPullRequestReviewThreadReplyNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (PullRequestReviewComment)The newly created reply.addReactionAdds a reaction to a subject.Input fields for addReactioninput (AddReactionInput!)Return fields for addReactionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.reaction (Reaction)The reaction object.reactionGroups ([ReactionGroup!])The reaction groups for the subject.subject (Reactable)The reactable subject.addStarAdds a star to a Starrable.Input fields for addStarinput (AddStarInput!)Return fields for addStarNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.starrable (Starrable)The starrable.addSubIssueAdds a sub-issue to a given issue.Input fields for addSubIssueinput (AddSubIssueInput!)Return fields for addSubIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The parent issue that the sub-issue was added to.subIssue (Issue)The sub-issue of the parent.addUpvoteAdd an upvote to a discussion or discussion comment.Input fields for addUpvoteinput (AddUpvoteInput!)Return fields for addUpvoteNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subject (Votable)The votable subject.addVerifiableDomainAdds a verifiable domain to an owning account.Input fields for addVerifiableDomaininput (AddVerifiableDomainInput!)Return fields for addVerifiableDomainNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.domain (VerifiableDomain)The verifiable domain that was added.approveDeploymentsApprove all pending deployments under one or more environments.Input fields for approveDeploymentsinput (ApproveDeploymentsInput!)Return fields for approveDeploymentsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deployments ([Deployment!])The affected deployments.approveVerifiableDomainApprove a verifiable domain for notification delivery.Input fields for approveVerifiableDomaininput (ApproveVerifiableDomainInput!)Return fields for approveVerifiableDomainNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.domain (VerifiableDomain)The verifiable domain that was approved.archiveProjectV2ItemArchives a ProjectV2Item.Input fields for archiveProjectV2Iteminput (ArchiveProjectV2ItemInput!)Return fields for archiveProjectV2ItemNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.item (ProjectV2Item)The item archived from the project.archiveRepositoryMarks a repository as archived.Input fields for archiveRepositoryinput (ArchiveRepositoryInput!)Return fields for archiveRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository that was marked as archived.cancelEnterpriseAdminInvitationCancels a pending invitation for an administrator to join an enterprise.Input fields for cancelEnterpriseAdminInvitationinput (CancelEnterpriseAdminInvitationInput!)Return fields for cancelEnterpriseAdminInvitationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseAdministratorInvitation)The invitation that was canceled.message (String)A message confirming the result of canceling an administrator invitation.cancelEnterpriseMemberInvitationCancels a pending invitation for an unaffiliated member to join an enterprise.Input fields for cancelEnterpriseMemberInvitationinput (CancelEnterpriseMemberInvitationInput!)Return fields for cancelEnterpriseMemberInvitationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseMemberInvitation)The invitation that was canceled.message (String)A message confirming the result of canceling an member invitation.cancelSponsorshipCancel an active sponsorship.Input fields for cancelSponsorshipinput (CancelSponsorshipInput!)Return fields for cancelSponsorshipNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsTier (SponsorsTier)The tier that was being used at the time of cancellation.changeUserStatusUpdate your status on GitHub.Input fields for changeUserStatusinput (ChangeUserStatusInput!)Return fields for changeUserStatusNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.status (UserStatus)Your updated status.clearLabelsFromLabelableClears all labels from a labelable object.Input fields for clearLabelsFromLabelableinput (ClearLabelsFromLabelableInput!)Return fields for clearLabelsFromLabelableNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelable (Labelable)The item that was unlabeled.clearProjectV2ItemFieldValueThis mutation clears the value of a field for an item in a Project. Currently
only text, number, date, assignees, labels, single-select, iteration and
milestone fields are supported.Input fields for clearProjectV2ItemFieldValueinput (ClearProjectV2ItemFieldValueInput!)Return fields for clearProjectV2ItemFieldValueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2Item (ProjectV2Item)The updated item.cloneProjectCreates a new project by cloning configuration from an existing project.WarningcloneProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for cloneProjectinput (CloneProjectInput!)Return fields for cloneProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.jobStatusId (String)The id of the JobStatus for populating cloned fields.project (Project)The new cloned project.cloneTemplateRepositoryCreate a new repository with the same files and directory structure as a template repository.Input fields for cloneTemplateRepositoryinput (CloneTemplateRepositoryInput!)Return fields for cloneTemplateRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The new repository.closeDiscussionClose a discussion.Input fields for closeDiscussioninput (CloseDiscussionInput!)Return fields for closeDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that was closed.closeIssueClose an issue.Input fields for closeIssueinput (CloseIssueInput!)Return fields for closeIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue that was closed.closePullRequestClose a pull request.Input fields for closePullRequestinput (ClosePullRequestInput!)Return fields for closePullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that was closed.convertProjectCardNoteToIssueConvert a project note card to one associated with a newly created issue.WarningconvertProjectCardNoteToIssue is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for convertProjectCardNoteToIssueinput (ConvertProjectCardNoteToIssueInput!)Return fields for convertProjectCardNoteToIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectCard (ProjectCard)The updated ProjectCard.convertProjectV2DraftIssueItemToIssueConverts a projectV2 draft issue item to an issue.Input fields for convertProjectV2DraftIssueItemToIssueinput (ConvertProjectV2DraftIssueItemToIssueInput!)Return fields for convertProjectV2DraftIssueItemToIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.item (ProjectV2Item)The updated project item.convertPullRequestToDraftConverts a pull request to draft.Input fields for convertPullRequestToDraftinput (ConvertPullRequestToDraftInput!)Return fields for convertPullRequestToDraftNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that is now a draft.copyProjectV2Copy a project.Input fields for copyProjectV2input (CopyProjectV2Input!)Return fields for copyProjectV2NameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The copied project.createAttributionInvitationInvites a user to claim reattributable data.Input fields for createAttributionInvitationinput (CreateAttributionInvitationInput!)Return fields for createAttributionInvitationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (Organization)The owner scoping the reattributable data.source (Claimable)The account owning the data to reattribute.target (Claimable)The account which may claim the data.createBranchProtectionRuleCreate a new branch protection rule.Input fields for createBranchProtectionRuleinput (CreateBranchProtectionRuleInput!)Return fields for createBranchProtectionRuleNameDescriptionbranchProtectionRule (BranchProtectionRule)The newly created BranchProtectionRule.clientMutationId (String)A unique identifier for the client performing the mutation.createCheckRunCreate a check run.Input fields for createCheckRuninput (CreateCheckRunInput!)Return fields for createCheckRunNameDescriptioncheckRun (CheckRun)The newly created check run.clientMutationId (String)A unique identifier for the client performing the mutation.createCheckSuiteCreate a check suite.Input fields for createCheckSuiteinput (CreateCheckSuiteInput!)Return fields for createCheckSuiteNameDescriptioncheckSuite (CheckSuite)The newly created check suite.clientMutationId (String)A unique identifier for the client performing the mutation.createCommitOnBranchAppends a commit to the given branch as the authenticated user.
This mutation creates a commit whose parent is the HEAD of the provided
branch and also updates that branch to point to the new commit.
It can be thought of as similar to git commit.
Locating a Branch
Commits are appended to a branch of type Ref.
This must refer to a git branch (i.e.  the fully qualified path must
begin with refs/heads/, although including this prefix is optional.
Callers may specify the branch to commit to either by its global node
ID or by passing both of repositoryNameWithOwner and refName.  For
more details see the documentation for CommittableBranch.
Describing Changes
fileChanges are specified as a FilesChanges object describing
FileAdditions and FileDeletions.
Please see the documentation for FileChanges for more information on
how to use this argument to describe any set of file changes.
Authorship
Similar to the web commit interface, this mutation does not support
specifying the author or committer of the commit and will not add
support for this in the future.
A commit created by a successful execution of this mutation will be
authored by the owner of the credential which authenticates the API
request.  The committer will be identical to that of commits authored
using the web interface.
If you need full control over author and committer information, please
use the Git Database REST API instead.
Commit Signing
Commits made using this mutation are automatically signed by GitHub if
supported and will be marked as verified in the user interface.Input fields for createCommitOnBranchinput (CreateCommitOnBranchInput!)Return fields for createCommitOnBranchNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.commit (Commit)The new commit.ref (Ref)The ref which has been updated to point to the new commit.createDeploymentCreates a new deployment event.Input fields for createDeploymentinput (CreateDeploymentInput!)Return fields for createDeploymentNameDescriptionautoMerged (Boolean)True if the default branch has been auto-merged into the deployment ref.clientMutationId (String)A unique identifier for the client performing the mutation.deployment (Deployment)The new deployment.createDeploymentStatusCreate a deployment status.Input fields for createDeploymentStatusinput (CreateDeploymentStatusInput!)Return fields for createDeploymentStatusNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deploymentStatus (DeploymentStatus)The new deployment status.createDiscussionCreate a discussion.Input fields for createDiscussioninput (CreateDiscussionInput!)Return fields for createDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that was just created.createEnterpriseOrganizationCreates an organization as part of an enterprise account. A personal access
token used to create an organization is implicitly permitted to update the
organization it created, if the organization is part of an enterprise that has
SAML enabled or uses Enterprise Managed Users. If the organization is not part
of such an enterprise, and instead has SAML enabled for it individually, the
token will then require SAML authorization to continue working against that organization.Input fields for createEnterpriseOrganizationinput (CreateEnterpriseOrganizationInput!)Return fields for createEnterpriseOrganizationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise that owns the created organization.organization (Organization)The organization that was created.createEnvironmentCreates an environment or simply returns it if already exists.Input fields for createEnvironmentinput (CreateEnvironmentInput!)Return fields for createEnvironmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environment (Environment)The new or existing environment.createIpAllowListEntryCreates a new IP allow list entry.Input fields for createIpAllowListEntryinput (CreateIpAllowListEntryInput!)Return fields for createIpAllowListEntryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ipAllowListEntry (IpAllowListEntry)The IP allow list entry that was created.createIssueCreates a new issue.Input fields for createIssueinput (CreateIssueInput!)Return fields for createIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The new issue.createIssueTypeCreates a new issue type.Input fields for createIssueTypeinput (CreateIssueTypeInput!)Return fields for createIssueTypeNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueType (IssueType)The newly created issue type.createLabelCreates a new label.Input fields for createLabelinput (CreateLabelInput!)Return fields for createLabelNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.label (Label)The new label.createLinkedBranchCreate a branch linked to an issue.Input fields for createLinkedBranchinput (CreateLinkedBranchInput!)Return fields for createLinkedBranchNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue that was linked to.linkedBranch (LinkedBranch)The new branch issue reference.createMigrationSourceCreates a GitHub Enterprise Importer (GEI) migration source.Input fields for createMigrationSourceinput (CreateMigrationSourceInput!)Return fields for createMigrationSourceNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.migrationSource (MigrationSource)The created migration source.createProjectCreates a new project.WarningcreateProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for createProjectinput (CreateProjectInput!)Return fields for createProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.project (Project)The new project.createProjectV2Creates a new project.Input fields for createProjectV2input (CreateProjectV2Input!)Return fields for createProjectV2NameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The new project.createProjectV2FieldCreate a new project field.Input fields for createProjectV2Fieldinput (CreateProjectV2FieldInput!)Return fields for createProjectV2FieldNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2Field (ProjectV2FieldConfiguration)The new field.createProjectV2StatusUpdateCreates a status update within a Project.Input fields for createProjectV2StatusUpdateinput (CreateProjectV2StatusUpdateInput!)Return fields for createProjectV2StatusUpdateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.statusUpdate (ProjectV2StatusUpdate)The status update updated in the project.createPullRequestCreate a new pull request.Input fields for createPullRequestinput (CreatePullRequestInput!)Return fields for createPullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The new pull request.createRefCreate a new Git Ref.Input fields for createRefinput (CreateRefInput!)Return fields for createRefNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ref (Ref)The newly created ref.createRepositoryCreate a new repository.Input fields for createRepositoryinput (CreateRepositoryInput!)Return fields for createRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The new repository.createRepositoryRulesetCreate a repository ruleset.Input fields for createRepositoryRulesetinput (CreateRepositoryRulesetInput!)Return fields for createRepositoryRulesetNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ruleset (RepositoryRuleset)The newly created Ruleset.createSponsorsListingCreate a GitHub Sponsors profile to allow others to sponsor you or your organization.Input fields for createSponsorsListinginput (CreateSponsorsListingInput!)Return fields for createSponsorsListingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsListing (SponsorsListing)The new GitHub Sponsors profile.createSponsorsTierCreate a new payment tier for your GitHub Sponsors profile.Input fields for createSponsorsTierinput (CreateSponsorsTierInput!)Return fields for createSponsorsTierNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsTier (SponsorsTier)The new tier.createSponsorshipStart a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship.Input fields for createSponsorshipinput (CreateSponsorshipInput!)Return fields for createSponsorshipNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorship (Sponsorship)The sponsorship that was started.createSponsorshipsMake many sponsorships for different sponsorable users or organizations at
once. Can only sponsor those who have a public GitHub Sponsors profile.Input fields for createSponsorshipsinput (CreateSponsorshipsInput!)Return fields for createSponsorshipsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorables ([Sponsorable!])The users and organizations who received a sponsorship.createTeamDiscussionCreates a new team discussion.Input fields for createTeamDiscussioninput (CreateTeamDiscussionInput!)Return fields for createTeamDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.teamDiscussion (TeamDiscussion)The new discussion.WarningteamDiscussion is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.createTeamDiscussionCommentCreates a new team discussion comment.Input fields for createTeamDiscussionCommentinput (CreateTeamDiscussionCommentInput!)Return fields for createTeamDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.teamDiscussionComment (TeamDiscussionComment)The new comment.WarningteamDiscussionComment is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.createUserListCreates a new user list.Input fields for createUserListinput (CreateUserListInput!)Return fields for createUserListNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.list (UserList)The list that was just created.viewer (User)The user who created the list.declineTopicSuggestionRejects a suggested topic for the repository.Input fields for declineTopicSuggestioninput (DeclineTopicSuggestionInput!)Return fields for declineTopicSuggestionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.topic (Topic)The declined topic.Warningtopic is deprecated.Suggested topics are no longer supported Removal on 2024-04-01 UTC.deleteBranchProtectionRuleDelete a branch protection rule.Input fields for deleteBranchProtectionRuleinput (DeleteBranchProtectionRuleInput!)Return fields for deleteBranchProtectionRuleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteDeploymentDeletes a deployment.Input fields for deleteDeploymentinput (DeleteDeploymentInput!)Return fields for deleteDeploymentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteDiscussionDelete a discussion and all of its replies.Input fields for deleteDiscussioninput (DeleteDiscussionInput!)Return fields for deleteDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that was just deleted.deleteDiscussionCommentDelete a discussion comment. If it has replies, wipe it instead.Input fields for deleteDiscussionCommentinput (DeleteDiscussionCommentInput!)Return fields for deleteDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (DiscussionComment)The discussion comment that was just deleted.deleteEnvironmentDeletes an environment.Input fields for deleteEnvironmentinput (DeleteEnvironmentInput!)Return fields for deleteEnvironmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteIpAllowListEntryDeletes an IP allow list entry.Input fields for deleteIpAllowListEntryinput (DeleteIpAllowListEntryInput!)Return fields for deleteIpAllowListEntryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ipAllowListEntry (IpAllowListEntry)The IP allow list entry that was deleted.deleteIssueDeletes an Issue object.Input fields for deleteIssueinput (DeleteIssueInput!)Return fields for deleteIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository the issue belonged to.deleteIssueCommentDeletes an IssueComment object.Input fields for deleteIssueCommentinput (DeleteIssueCommentInput!)Return fields for deleteIssueCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteIssueTypeDelete an issue type.Input fields for deleteIssueTypeinput (DeleteIssueTypeInput!)Return fields for deleteIssueTypeNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deletedIssueTypeId (ID)The ID of the deleted issue type.deleteLabelDeletes a label.Input fields for deleteLabelinput (DeleteLabelInput!)Return fields for deleteLabelNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteLinkedBranchUnlink a branch from an issue.Input fields for deleteLinkedBranchinput (DeleteLinkedBranchInput!)Return fields for deleteLinkedBranchNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue the linked branch was unlinked from.deletePackageVersionDelete a package version.Input fields for deletePackageVersioninput (DeletePackageVersionInput!)Return fields for deletePackageVersionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.success (Boolean)Whether or not the operation succeeded.deleteProjectDeletes a project.WarningdeleteProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for deleteProjectinput (DeleteProjectInput!)Return fields for deleteProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (ProjectOwner)The repository or organization the project was removed from.deleteProjectCardDeletes a project card.WarningdeleteProjectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for deleteProjectCardinput (DeleteProjectCardInput!)Return fields for deleteProjectCardNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.column (ProjectColumn)The column the deleted card was in.deletedCardId (ID)The deleted card ID.deleteProjectColumnDeletes a project column.WarningdeleteProjectColumn is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for deleteProjectColumninput (DeleteProjectColumnInput!)Return fields for deleteProjectColumnNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deletedColumnId (ID)The deleted column ID.project (Project)The project the deleted column was in.deleteProjectV2Delete a project.Input fields for deleteProjectV2input (DeleteProjectV2Input!)Return fields for deleteProjectV2NameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The deleted Project.deleteProjectV2FieldDelete a project field.Input fields for deleteProjectV2Fieldinput (DeleteProjectV2FieldInput!)Return fields for deleteProjectV2FieldNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2Field (ProjectV2FieldConfiguration)The deleted field.deleteProjectV2ItemDeletes an item from a Project.Input fields for deleteProjectV2Iteminput (DeleteProjectV2ItemInput!)Return fields for deleteProjectV2ItemNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deletedItemId (ID)The ID of the deleted item.deleteProjectV2StatusUpdateDeletes a project status update.Input fields for deleteProjectV2StatusUpdateinput (DeleteProjectV2StatusUpdateInput!)Return fields for deleteProjectV2StatusUpdateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deletedStatusUpdateId (ID)The ID of the deleted status update.projectV2 (ProjectV2)The project the deleted status update was in.deleteProjectV2WorkflowDeletes a project workflow.Input fields for deleteProjectV2Workflowinput (DeleteProjectV2WorkflowInput!)Return fields for deleteProjectV2WorkflowNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deletedWorkflowId (ID)The ID of the deleted workflow.projectV2 (ProjectV2)The project the deleted workflow was in.deletePullRequestReviewDeletes a pull request review.Input fields for deletePullRequestReviewinput (DeletePullRequestReviewInput!)Return fields for deletePullRequestReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The deleted pull request review.deletePullRequestReviewCommentDeletes a pull request review comment.Input fields for deletePullRequestReviewCommentinput (DeletePullRequestReviewCommentInput!)Return fields for deletePullRequestReviewCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The pull request review the deleted comment belonged to.pullRequestReviewComment (PullRequestReviewComment)The deleted pull request review comment.deleteRefDelete a Git Ref.Input fields for deleteRefinput (DeleteRefInput!)Return fields for deleteRefNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteRepositoryRulesetDelete a repository ruleset.Input fields for deleteRepositoryRulesetinput (DeleteRepositoryRulesetInput!)Return fields for deleteRepositoryRulesetNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteTeamDiscussionDeletes a team discussion.Input fields for deleteTeamDiscussioninput (DeleteTeamDiscussionInput!)Return fields for deleteTeamDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteTeamDiscussionCommentDeletes a team discussion comment.Input fields for deleteTeamDiscussionCommentinput (DeleteTeamDiscussionCommentInput!)Return fields for deleteTeamDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deleteUserListDeletes a user list.Input fields for deleteUserListinput (DeleteUserListInput!)Return fields for deleteUserListNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.user (User)The owner of the list that will be deleted.deleteVerifiableDomainDeletes a verifiable domain.Input fields for deleteVerifiableDomaininput (DeleteVerifiableDomainInput!)Return fields for deleteVerifiableDomainNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (VerifiableDomainOwner)The owning account from which the domain was deleted.dequeuePullRequestRemove a pull request from the merge queue.Input fields for dequeuePullRequestinput (DequeuePullRequestInput!)Return fields for dequeuePullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.mergeQueueEntry (MergeQueueEntry)The merge queue entry of the dequeued pull request.disablePullRequestAutoMergeDisable auto merge on the given pull request.Input fields for disablePullRequestAutoMergeinput (DisablePullRequestAutoMergeInput!)Return fields for disablePullRequestAutoMergeNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request auto merge was disabled on.dismissPullRequestReviewDismisses an approved or rejected pull request review.Input fields for dismissPullRequestReviewinput (DismissPullRequestReviewInput!)Return fields for dismissPullRequestReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The dismissed pull request review.dismissRepositoryVulnerabilityAlertDismisses the Dependabot alert.Input fields for dismissRepositoryVulnerabilityAlertinput (DismissRepositoryVulnerabilityAlertInput!)Return fields for dismissRepositoryVulnerabilityAlertNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryVulnerabilityAlert (RepositoryVulnerabilityAlert)The Dependabot alert that was dismissed.enablePullRequestAutoMergeEnable the default auto-merge on a pull request.Input fields for enablePullRequestAutoMergeinput (EnablePullRequestAutoMergeInput!)Return fields for enablePullRequestAutoMergeNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request auto-merge was enabled on.enqueuePullRequestAdd a pull request to the merge queue.Input fields for enqueuePullRequestinput (EnqueuePullRequestInput!)Return fields for enqueuePullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.mergeQueueEntry (MergeQueueEntry)The merge queue entry for the enqueued pull request.followOrganizationFollow an organization.Input fields for followOrganizationinput (FollowOrganizationInput!)Return fields for followOrganizationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organization (Organization)The organization that was followed.followUserFollow a user.Input fields for followUserinput (FollowUserInput!)Return fields for followUserNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.user (User)The user that was followed.grantEnterpriseOrganizationsMigratorRoleGrant the migrator role to a user for all organizations under an enterprise account.Input fields for grantEnterpriseOrganizationsMigratorRoleinput (GrantEnterpriseOrganizationsMigratorRoleInput!)Return fields for grantEnterpriseOrganizationsMigratorRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizations (OrganizationConnection)The organizations that had the migrator role applied to for the given user.grantMigratorRoleGrant the migrator role to a user or a team.Input fields for grantMigratorRoleinput (GrantMigratorRoleInput!)Return fields for grantMigratorRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.success (Boolean)Did the operation succeed?.importProjectCreates a new project by importing columns and a list of issues/PRs.WarningimportProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for importProjectinput (ImportProjectInput!)Return fields for importProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.project (Project)The new Project!.inviteEnterpriseAdminInvite someone to become an administrator of the enterprise.Input fields for inviteEnterpriseAdmininput (InviteEnterpriseAdminInput!)Return fields for inviteEnterpriseAdminNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseAdministratorInvitation)The created enterprise administrator invitation.inviteEnterpriseMemberInvite someone to become an unaffiliated member of the enterprise.Input fields for inviteEnterpriseMemberinput (InviteEnterpriseMemberInput!)Return fields for inviteEnterpriseMemberNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitation (EnterpriseMemberInvitation)The created enterprise member invitation.linkProjectV2ToRepositoryLinks a project to a repository.Input fields for linkProjectV2ToRepositoryinput (LinkProjectV2ToRepositoryInput!)Return fields for linkProjectV2ToRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository the project is linked to.linkProjectV2ToTeamLinks a project to a team.Input fields for linkProjectV2ToTeaminput (LinkProjectV2ToTeamInput!)Return fields for linkProjectV2ToTeamNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.team (Team)The team the project is linked to.linkRepositoryToProjectCreates a repository link for a project.WarninglinkRepositoryToProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for linkRepositoryToProjectinput (LinkRepositoryToProjectInput!)Return fields for linkRepositoryToProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.project (Project)The linked Project.repository (Repository)The linked Repository.lockLockableLock a lockable object.Input fields for lockLockableinput (LockLockableInput!)Return fields for lockLockableNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.lockedRecord (Lockable)The item that was locked.markDiscussionCommentAsAnswerMark a discussion comment as the chosen answer for discussions in an answerable category.Input fields for markDiscussionCommentAsAnswerinput (MarkDiscussionCommentAsAnswerInput!)Return fields for markDiscussionCommentAsAnswerNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that includes the chosen comment.markFileAsViewedMark a pull request file as viewed.Input fields for markFileAsViewedinput (MarkFileAsViewedInput!)Return fields for markFileAsViewedNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The updated pull request.markProjectV2AsTemplateMark a project as a template. Note that only projects which are owned by an Organization can be marked as a template.Input fields for markProjectV2AsTemplateinput (MarkProjectV2AsTemplateInput!)Return fields for markProjectV2AsTemplateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The project.markPullRequestReadyForReviewMarks a pull request ready for review.Input fields for markPullRequestReadyForReviewinput (MarkPullRequestReadyForReviewInput!)Return fields for markPullRequestReadyForReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that is ready for review.mergeBranchMerge a head into a branch.Input fields for mergeBranchinput (MergeBranchInput!)Return fields for mergeBranchNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.mergeCommit (Commit)The resulting merge Commit.mergePullRequestMerge a pull request.Input fields for mergePullRequestinput (MergePullRequestInput!)Return fields for mergePullRequestNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that was merged.minimizeCommentMinimizes a comment on an Issue, Commit, Pull Request, or Gist.Input fields for minimizeCommentinput (MinimizeCommentInput!)Return fields for minimizeCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.minimizedComment (Minimizable)The comment that was minimized.moveProjectCardMoves a project card to another place.WarningmoveProjectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for moveProjectCardinput (MoveProjectCardInput!)Return fields for moveProjectCardNameDescriptioncardEdge (ProjectCardEdge)The new edge of the moved card.clientMutationId (String)A unique identifier for the client performing the mutation.moveProjectColumnMoves a project column to another place.WarningmoveProjectColumn is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for moveProjectColumninput (MoveProjectColumnInput!)Return fields for moveProjectColumnNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.columnEdge (ProjectColumnEdge)The new edge of the moved column.pinEnvironmentPin an environment to a repository.Input fields for pinEnvironmentinput (PinEnvironmentInput!)Return fields for pinEnvironmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environment (Environment)The environment that was pinned.pinnedEnvironment (PinnedEnvironment)The pinned environment if we pinned.pinIssuePin an issue to a repository.Input fields for pinIssueinput (PinIssueInput!)Return fields for pinIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue that was pinned.publishSponsorsTierPublish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile.Input fields for publishSponsorsTierinput (PublishSponsorsTierInput!)Return fields for publishSponsorsTierNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsTier (SponsorsTier)The tier that was published.regenerateEnterpriseIdentityProviderRecoveryCodesRegenerates the identity provider recovery codes for an enterprise.Input fields for regenerateEnterpriseIdentityProviderRecoveryCodesinput (RegenerateEnterpriseIdentityProviderRecoveryCodesInput!)Return fields for regenerateEnterpriseIdentityProviderRecoveryCodesNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.identityProvider (EnterpriseIdentityProvider)The identity provider for the enterprise.regenerateVerifiableDomainTokenRegenerates a verifiable domain's verification token.Input fields for regenerateVerifiableDomainTokeninput (RegenerateVerifiableDomainTokenInput!)Return fields for regenerateVerifiableDomainTokenNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.verificationToken (String)The verification token that was generated.rejectDeploymentsReject all pending deployments under one or more environments.Input fields for rejectDeploymentsinput (RejectDeploymentsInput!)Return fields for rejectDeploymentsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.deployments ([Deployment!])The affected deployments.removeAssigneesFromAssignableRemoves assignees from an assignable object.Input fields for removeAssigneesFromAssignableinput (RemoveAssigneesFromAssignableInput!)Return fields for removeAssigneesFromAssignableNameDescriptionassignable (Assignable)The item that was unassigned.clientMutationId (String)A unique identifier for the client performing the mutation.removeEnterpriseAdminRemoves an administrator from the enterprise.Input fields for removeEnterpriseAdmininput (RemoveEnterpriseAdminInput!)Return fields for removeEnterpriseAdminNameDescriptionadmin (User)The user who was removed as an administrator.clientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The updated enterprise.message (String)A message confirming the result of removing an administrator.viewer (User)The viewer performing the mutation.removeEnterpriseIdentityProviderRemoves the identity provider from an enterprise. Owners of enterprises both
with and without Enterprise Managed Users may use this mutation.Input fields for removeEnterpriseIdentityProviderinput (RemoveEnterpriseIdentityProviderInput!)Return fields for removeEnterpriseIdentityProviderNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.identityProvider (EnterpriseIdentityProvider)The identity provider that was removed from the enterprise.removeEnterpriseMemberRemoves a user from all organizations within the enterprise.Input fields for removeEnterpriseMemberinput (RemoveEnterpriseMemberInput!)Return fields for removeEnterpriseMemberNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The updated enterprise.user (User)The user that was removed from the enterprise.viewer (User)The viewer performing the mutation.removeEnterpriseOrganizationRemoves an organization from the enterprise.Input fields for removeEnterpriseOrganizationinput (RemoveEnterpriseOrganizationInput!)Return fields for removeEnterpriseOrganizationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The updated enterprise.organization (Organization)The organization that was removed from the enterprise.viewer (User)The viewer performing the mutation.removeEnterpriseSupportEntitlementRemoves a support entitlement from an enterprise member.Input fields for removeEnterpriseSupportEntitlementinput (RemoveEnterpriseSupportEntitlementInput!)Return fields for removeEnterpriseSupportEntitlementNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of removing the support entitlement.removeLabelsFromLabelableRemoves labels from a Labelable object.Input fields for removeLabelsFromLabelableinput (RemoveLabelsFromLabelableInput!)Return fields for removeLabelsFromLabelableNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelable (Labelable)The Labelable the labels were removed from.removeOutsideCollaboratorRemoves outside collaborator from all repositories in an organization.Input fields for removeOutsideCollaboratorinput (RemoveOutsideCollaboratorInput!)Return fields for removeOutsideCollaboratorNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.removedUser (User)The user that was removed as an outside collaborator.removeReactionRemoves a reaction from a subject.Input fields for removeReactioninput (RemoveReactionInput!)Return fields for removeReactionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.reaction (Reaction)The reaction object.reactionGroups ([ReactionGroup!])The reaction groups for the subject.subject (Reactable)The reactable subject.removeStarRemoves a star from a Starrable.Input fields for removeStarinput (RemoveStarInput!)Return fields for removeStarNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.starrable (Starrable)The starrable.removeSubIssueRemoves a sub-issue from a given issue.Input fields for removeSubIssueinput (RemoveSubIssueInput!)Return fields for removeSubIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The parent of the sub-issue.subIssue (Issue)The sub-issue of the parent.removeUpvoteRemove an upvote to a discussion or discussion comment.Input fields for removeUpvoteinput (RemoveUpvoteInput!)Return fields for removeUpvoteNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subject (Votable)The votable subject.reopenDiscussionReopen a discussion.Input fields for reopenDiscussioninput (ReopenDiscussionInput!)Return fields for reopenDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that was reopened.reopenIssueReopen a issue.Input fields for reopenIssueinput (ReopenIssueInput!)Return fields for reopenIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue that was opened.reopenPullRequestReopen a pull request.Input fields for reopenPullRequestinput (ReopenPullRequestInput!)Return fields for reopenPullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that was reopened.reorderEnvironmentReorder a pinned repository environment.Input fields for reorderEnvironmentinput (ReorderEnvironmentInput!)Return fields for reorderEnvironmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environment (Environment)The environment that was reordered.replaceActorsForAssignableReplaces all actors for assignable object.Input fields for replaceActorsForAssignableinput (ReplaceActorsForAssignableInput!)Return fields for replaceActorsForAssignableNameDescriptionassignable (Assignable)The item that was assigned.clientMutationId (String)A unique identifier for the client performing the mutation.reprioritizeSubIssueReprioritizes a sub-issue to a different position in the parent list.Input fields for reprioritizeSubIssueinput (ReprioritizeSubIssueInput!)Return fields for reprioritizeSubIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The parent issue that the sub-issue was reprioritized in.requestReviewsSet review requests on a pull request.Input fields for requestReviewsinput (RequestReviewsInput!)Return fields for requestReviewsNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that is getting requests.requestedReviewersEdge (UserEdge)The edge from the pull request to the requested reviewers.rerequestCheckSuiteRerequests an existing check suite.Input fields for rerequestCheckSuiteinput (RerequestCheckSuiteInput!)Return fields for rerequestCheckSuiteNameDescriptioncheckSuite (CheckSuite)The requested check suite.clientMutationId (String)A unique identifier for the client performing the mutation.resolveReviewThreadMarks a review thread as resolved.Input fields for resolveReviewThreadinput (ResolveReviewThreadInput!)Return fields for resolveReviewThreadNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.thread (PullRequestReviewThread)The thread to resolve.retireSponsorsTierRetire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships.Input fields for retireSponsorsTierinput (RetireSponsorsTierInput!)Return fields for retireSponsorsTierNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsTier (SponsorsTier)The tier that was retired.revertPullRequestCreate a pull request that reverts the changes from a merged pull request.Input fields for revertPullRequestinput (RevertPullRequestInput!)Return fields for revertPullRequestNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The pull request that was reverted.revertPullRequest (PullRequest)The new pull request that reverts the input pull request.revokeEnterpriseOrganizationsMigratorRoleRevoke the migrator role to a user for all organizations under an enterprise account.Input fields for revokeEnterpriseOrganizationsMigratorRoleinput (RevokeEnterpriseOrganizationsMigratorRoleInput!)Return fields for revokeEnterpriseOrganizationsMigratorRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizations (OrganizationConnection)The organizations that had the migrator role revoked for the given user.revokeMigratorRoleRevoke the migrator role from a user or a team.Input fields for revokeMigratorRoleinput (RevokeMigratorRoleInput!)Return fields for revokeMigratorRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.success (Boolean)Did the operation succeed?.setEnterpriseIdentityProviderCreates or updates the identity provider for an enterprise.Input fields for setEnterpriseIdentityProviderinput (SetEnterpriseIdentityProviderInput!)Return fields for setEnterpriseIdentityProviderNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.identityProvider (EnterpriseIdentityProvider)The identity provider for the enterprise.setOrganizationInteractionLimitSet an organization level interaction limit for an organization's public repositories.Input fields for setOrganizationInteractionLimitinput (SetOrganizationInteractionLimitInput!)Return fields for setOrganizationInteractionLimitNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organization (Organization)The organization that the interaction limit was set for.setRepositoryInteractionLimitSets an interaction limit setting for a repository.Input fields for setRepositoryInteractionLimitinput (SetRepositoryInteractionLimitInput!)Return fields for setRepositoryInteractionLimitNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository that the interaction limit was set for.setUserInteractionLimitSet a user level interaction limit for an user's public repositories.Input fields for setUserInteractionLimitinput (SetUserInteractionLimitInput!)Return fields for setUserInteractionLimitNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.user (User)The user that the interaction limit was set for.startOrganizationMigrationStarts a GitHub Enterprise Importer organization migration.Input fields for startOrganizationMigrationinput (StartOrganizationMigrationInput!)Return fields for startOrganizationMigrationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.orgMigration (OrganizationMigration)The new organization migration.startRepositoryMigrationStarts a GitHub Enterprise Importer (GEI) repository migration.Input fields for startRepositoryMigrationinput (StartRepositoryMigrationInput!)Return fields for startRepositoryMigrationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryMigration (RepositoryMigration)The new repository migration.submitPullRequestReviewSubmits a pending pull request review.Input fields for submitPullRequestReviewinput (SubmitPullRequestReviewInput!)Return fields for submitPullRequestReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The submitted pull request review.transferEnterpriseOrganizationTransfer an organization from one enterprise to another enterprise.Input fields for transferEnterpriseOrganizationinput (TransferEnterpriseOrganizationInput!)Return fields for transferEnterpriseOrganizationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organization (Organization)The organization for which a transfer was initiated.transferIssueTransfer an issue to a different repository.Input fields for transferIssueinput (TransferIssueInput!)Return fields for transferIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue that was transferred.unarchiveProjectV2ItemUnarchives a ProjectV2Item.Input fields for unarchiveProjectV2Iteminput (UnarchiveProjectV2ItemInput!)Return fields for unarchiveProjectV2ItemNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.item (ProjectV2Item)The item unarchived from the project.unarchiveRepositoryUnarchives a repository.Input fields for unarchiveRepositoryinput (UnarchiveRepositoryInput!)Return fields for unarchiveRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository that was unarchived.unfollowOrganizationUnfollow an organization.Input fields for unfollowOrganizationinput (UnfollowOrganizationInput!)Return fields for unfollowOrganizationNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organization (Organization)The organization that was unfollowed.unfollowUserUnfollow a user.Input fields for unfollowUserinput (UnfollowUserInput!)Return fields for unfollowUserNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.user (User)The user that was unfollowed.unlinkProjectV2FromRepositoryUnlinks a project from a repository.Input fields for unlinkProjectV2FromRepositoryinput (UnlinkProjectV2FromRepositoryInput!)Return fields for unlinkProjectV2FromRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository the project is no longer linked to.unlinkProjectV2FromTeamUnlinks a project to a team.Input fields for unlinkProjectV2FromTeaminput (UnlinkProjectV2FromTeamInput!)Return fields for unlinkProjectV2FromTeamNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.team (Team)The team the project is unlinked from.unlinkRepositoryFromProjectDeletes a repository link from a project.WarningunlinkRepositoryFromProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for unlinkRepositoryFromProjectinput (UnlinkRepositoryFromProjectInput!)Return fields for unlinkRepositoryFromProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.project (Project)The linked Project.repository (Repository)The linked Repository.unlockLockableUnlock a lockable object.Input fields for unlockLockableinput (UnlockLockableInput!)Return fields for unlockLockableNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.unlockedRecord (Lockable)The item that was unlocked.unmarkDiscussionCommentAsAnswerUnmark a discussion comment as the chosen answer for discussions in an answerable category.Input fields for unmarkDiscussionCommentAsAnswerinput (UnmarkDiscussionCommentAsAnswerInput!)Return fields for unmarkDiscussionCommentAsAnswerNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The discussion that includes the comment.unmarkFileAsViewedUnmark a pull request file as viewed.Input fields for unmarkFileAsViewedinput (UnmarkFileAsViewedInput!)Return fields for unmarkFileAsViewedNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The updated pull request.unmarkIssueAsDuplicateUnmark an issue as a duplicate of another issue.Input fields for unmarkIssueAsDuplicateinput (UnmarkIssueAsDuplicateInput!)Return fields for unmarkIssueAsDuplicateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.duplicate (IssueOrPullRequest)The issue or pull request that was marked as a duplicate.unmarkProjectV2AsTemplateUnmark a project as a template.Input fields for unmarkProjectV2AsTemplateinput (UnmarkProjectV2AsTemplateInput!)Return fields for unmarkProjectV2AsTemplateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The project.unminimizeCommentUnminimizes a comment on an Issue, Commit, Pull Request, or Gist.Input fields for unminimizeCommentinput (UnminimizeCommentInput!)Return fields for unminimizeCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.unminimizedComment (Minimizable)The comment that was unminimized.unpinIssueUnpin a pinned issue from a repository.Input fields for unpinIssueinput (UnpinIssueInput!)Return fields for unpinIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID)The id of the pinned issue that was unpinned.issue (Issue)The issue that was unpinned.unresolveReviewThreadMarks a review thread as unresolved.Input fields for unresolveReviewThreadinput (UnresolveReviewThreadInput!)Return fields for unresolveReviewThreadNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.thread (PullRequestReviewThread)The thread to resolve.updateBranchProtectionRuleUpdate a branch protection rule.Input fields for updateBranchProtectionRuleinput (UpdateBranchProtectionRuleInput!)Return fields for updateBranchProtectionRuleNameDescriptionbranchProtectionRule (BranchProtectionRule)The newly created BranchProtectionRule.clientMutationId (String)A unique identifier for the client performing the mutation.updateCheckRunUpdate a check run.Input fields for updateCheckRuninput (UpdateCheckRunInput!)Return fields for updateCheckRunNameDescriptioncheckRun (CheckRun)The updated check run.clientMutationId (String)A unique identifier for the client performing the mutation.updateCheckSuitePreferencesModifies the settings of an existing check suite.Input fields for updateCheckSuitePreferencesinput (UpdateCheckSuitePreferencesInput!)Return fields for updateCheckSuitePreferencesNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The updated repository.updateDiscussionUpdate a discussion.Input fields for updateDiscussioninput (UpdateDiscussionInput!)Return fields for updateDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussion (Discussion)The modified discussion.updateDiscussionCommentUpdate the contents of a comment on a Discussion.Input fields for updateDiscussionCommentinput (UpdateDiscussionCommentInput!)Return fields for updateDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (DiscussionComment)The modified discussion comment.updateEnterpriseAdministratorRoleUpdates the role of an enterprise administrator.Input fields for updateEnterpriseAdministratorRoleinput (UpdateEnterpriseAdministratorRoleInput!)Return fields for updateEnterpriseAdministratorRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of changing the administrator's role.updateEnterpriseAllowPrivateRepositoryForkingSettingSets whether private repository forks are enabled for an enterprise.Input fields for updateEnterpriseAllowPrivateRepositoryForkingSettinginput (UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput!)Return fields for updateEnterpriseAllowPrivateRepositoryForkingSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated allow private repository forking setting.message (String)A message confirming the result of updating the allow private repository forking setting.updateEnterpriseDefaultRepositoryPermissionSettingSets the base repository permission for organizations in an enterprise.Input fields for updateEnterpriseDefaultRepositoryPermissionSettinginput (UpdateEnterpriseDefaultRepositoryPermissionSettingInput!)Return fields for updateEnterpriseDefaultRepositoryPermissionSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated base repository permission setting.message (String)A message confirming the result of updating the base repository permission setting.updateEnterpriseDeployKeySettingSets whether deploy keys are allowed to be created and used for an enterprise.Input fields for updateEnterpriseDeployKeySettinginput (UpdateEnterpriseDeployKeySettingInput!)Return fields for updateEnterpriseDeployKeySettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated deploy key setting.message (String)A message confirming the result of updating the deploy key setting.updateEnterpriseMembersCanChangeRepositoryVisibilitySettingSets whether organization members with admin permissions on a repository can change repository visibility.Input fields for updateEnterpriseMembersCanChangeRepositoryVisibilitySettinginput (UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput!)Return fields for updateEnterpriseMembersCanChangeRepositoryVisibilitySettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can change repository visibility setting.message (String)A message confirming the result of updating the members can change repository visibility setting.updateEnterpriseMembersCanCreateRepositoriesSettingSets the members can create repositories setting for an enterprise.Input fields for updateEnterpriseMembersCanCreateRepositoriesSettinginput (UpdateEnterpriseMembersCanCreateRepositoriesSettingInput!)Return fields for updateEnterpriseMembersCanCreateRepositoriesSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can create repositories setting.message (String)A message confirming the result of updating the members can create repositories setting.updateEnterpriseMembersCanDeleteIssuesSettingSets the members can delete issues setting for an enterprise.Input fields for updateEnterpriseMembersCanDeleteIssuesSettinginput (UpdateEnterpriseMembersCanDeleteIssuesSettingInput!)Return fields for updateEnterpriseMembersCanDeleteIssuesSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can delete issues setting.message (String)A message confirming the result of updating the members can delete issues setting.updateEnterpriseMembersCanDeleteRepositoriesSettingSets the members can delete repositories setting for an enterprise.Input fields for updateEnterpriseMembersCanDeleteRepositoriesSettinginput (UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput!)Return fields for updateEnterpriseMembersCanDeleteRepositoriesSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can delete repositories setting.message (String)A message confirming the result of updating the members can delete repositories setting.updateEnterpriseMembersCanInviteCollaboratorsSettingSets whether members can invite collaborators are enabled for an enterprise.Input fields for updateEnterpriseMembersCanInviteCollaboratorsSettinginput (UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput!)Return fields for updateEnterpriseMembersCanInviteCollaboratorsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can invite collaborators setting.message (String)A message confirming the result of updating the members can invite collaborators setting.updateEnterpriseMembersCanMakePurchasesSettingSets whether or not an organization owner can make purchases.Input fields for updateEnterpriseMembersCanMakePurchasesSettinginput (UpdateEnterpriseMembersCanMakePurchasesSettingInput!)Return fields for updateEnterpriseMembersCanMakePurchasesSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can make purchases setting.message (String)A message confirming the result of updating the members can make purchases setting.updateEnterpriseMembersCanUpdateProtectedBranchesSettingSets the members can update protected branches setting for an enterprise.Input fields for updateEnterpriseMembersCanUpdateProtectedBranchesSettinginput (UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput!)Return fields for updateEnterpriseMembersCanUpdateProtectedBranchesSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can update protected branches setting.message (String)A message confirming the result of updating the members can update protected branches setting.updateEnterpriseMembersCanViewDependencyInsightsSettingSets the members can view dependency insights for an enterprise.Input fields for updateEnterpriseMembersCanViewDependencyInsightsSettinginput (UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput!)Return fields for updateEnterpriseMembersCanViewDependencyInsightsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated members can view dependency insights setting.message (String)A message confirming the result of updating the members can view dependency insights setting.updateEnterpriseOrganizationProjectsSettingSets whether organization projects are enabled for an enterprise.Input fields for updateEnterpriseOrganizationProjectsSettinginput (UpdateEnterpriseOrganizationProjectsSettingInput!)Return fields for updateEnterpriseOrganizationProjectsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated organization projects setting.message (String)A message confirming the result of updating the organization projects setting.updateEnterpriseOwnerOrganizationRoleUpdates the role of an enterprise owner with an organization.Input fields for updateEnterpriseOwnerOrganizationRoleinput (UpdateEnterpriseOwnerOrganizationRoleInput!)Return fields for updateEnterpriseOwnerOrganizationRoleNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of changing the owner's organization role.updateEnterpriseProfileUpdates an enterprise's profile.Input fields for updateEnterpriseProfileinput (UpdateEnterpriseProfileInput!)Return fields for updateEnterpriseProfileNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The updated enterprise.updateEnterpriseRepositoryProjectsSettingSets whether repository projects are enabled for a enterprise.Input fields for updateEnterpriseRepositoryProjectsSettinginput (UpdateEnterpriseRepositoryProjectsSettingInput!)Return fields for updateEnterpriseRepositoryProjectsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated repository projects setting.message (String)A message confirming the result of updating the repository projects setting.updateEnterpriseTeamDiscussionsSettingSets whether team discussions are enabled for an enterprise.Input fields for updateEnterpriseTeamDiscussionsSettinginput (UpdateEnterpriseTeamDiscussionsSettingInput!)Return fields for updateEnterpriseTeamDiscussionsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated team discussions setting.message (String)A message confirming the result of updating the team discussions setting.updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingSets the two-factor authentication methods that users of an enterprise may not use.Input fields for updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettinginput (UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput!)Return fields for updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated two-factor authentication disallowed methods setting.message (String)A message confirming the result of updating the two-factor authentication disallowed methods setting.updateEnterpriseTwoFactorAuthenticationRequiredSettingSets whether two factor authentication is required for all users in an enterprise.Input fields for updateEnterpriseTwoFactorAuthenticationRequiredSettinginput (UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput!)Return fields for updateEnterpriseTwoFactorAuthenticationRequiredSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterprise (Enterprise)The enterprise with the updated two factor authentication required setting.message (String)A message confirming the result of updating the two factor authentication required setting.updateEnvironmentUpdates an environment.Input fields for updateEnvironmentinput (UpdateEnvironmentInput!)Return fields for updateEnvironmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environment (Environment)The updated environment.updateIpAllowListEnabledSettingSets whether an IP allow list is enabled on an owner.Input fields for updateIpAllowListEnabledSettinginput (UpdateIpAllowListEnabledSettingInput!)Return fields for updateIpAllowListEnabledSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (IpAllowListOwner)The IP allow list owner on which the setting was updated.updateIpAllowListEntryUpdates an IP allow list entry.Input fields for updateIpAllowListEntryinput (UpdateIpAllowListEntryInput!)Return fields for updateIpAllowListEntryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ipAllowListEntry (IpAllowListEntry)The IP allow list entry that was updated.updateIpAllowListForInstalledAppsEnabledSettingSets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.Input fields for updateIpAllowListForInstalledAppsEnabledSettinginput (UpdateIpAllowListForInstalledAppsEnabledSettingInput!)Return fields for updateIpAllowListForInstalledAppsEnabledSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (IpAllowListOwner)The IP allow list owner on which the setting was updated.updateIssueUpdates an Issue.Input fields for updateIssueinput (UpdateIssueInput!)Return fields for updateIssueNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The issue.updateIssueCommentUpdates an IssueComment object.Input fields for updateIssueCommentinput (UpdateIssueCommentInput!)Return fields for updateIssueCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueComment (IssueComment)The updated comment.updateIssueIssueTypeUpdates the issue type on an issue.Input fields for updateIssueIssueTypeinput (UpdateIssueIssueTypeInput!)Return fields for updateIssueIssueTypeNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issue (Issue)The updated issue.updateIssueTypeUpdate an issue type.Input fields for updateIssueTypeinput (UpdateIssueTypeInput!)Return fields for updateIssueTypeNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueType (IssueType)The updated issue type.updateLabelUpdates an existing label.Input fields for updateLabelinput (UpdateLabelInput!)Return fields for updateLabelNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.label (Label)The updated label.updateNotificationRestrictionSettingUpdate the setting to restrict notifications to only verified or approved domains available to an owner.Input fields for updateNotificationRestrictionSettinginput (UpdateNotificationRestrictionSettingInput!)Return fields for updateNotificationRestrictionSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.owner (VerifiableDomainOwner)The owner on which the setting was updated.updateOrganizationAllowPrivateRepositoryForkingSettingSets whether private repository forks are enabled for an organization.Input fields for updateOrganizationAllowPrivateRepositoryForkingSettinginput (UpdateOrganizationAllowPrivateRepositoryForkingSettingInput!)Return fields for updateOrganizationAllowPrivateRepositoryForkingSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of updating the allow private repository forking setting.organization (Organization)The organization with the updated allow private repository forking setting.updateOrganizationWebCommitSignoffSettingSets whether contributors are required to sign off on web-based commits for repositories in an organization.Input fields for updateOrganizationWebCommitSignoffSettinginput (UpdateOrganizationWebCommitSignoffSettingInput!)Return fields for updateOrganizationWebCommitSignoffSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of updating the web commit signoff setting.organization (Organization)The organization with the updated web commit signoff setting.updatePatreonSponsorabilityToggle the setting for your GitHub Sponsors profile that allows other GitHub
accounts to sponsor you on GitHub while paying for the sponsorship on Patreon.
Only applicable when you have a GitHub Sponsors profile and have connected
your GitHub account with Patreon.Input fields for updatePatreonSponsorabilityinput (UpdatePatreonSponsorabilityInput!)Return fields for updatePatreonSponsorabilityNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorsListing (SponsorsListing)The GitHub Sponsors profile.updateProjectUpdates an existing project.WarningupdateProject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for updateProjectinput (UpdateProjectInput!)Return fields for updateProjectNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.project (Project)The updated project.updateProjectCardUpdates an existing project card.WarningupdateProjectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for updateProjectCardinput (UpdateProjectCardInput!)Return fields for updateProjectCardNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectCard (ProjectCard)The updated ProjectCard.updateProjectColumnUpdates an existing project column.WarningupdateProjectColumn is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Input fields for updateProjectColumninput (UpdateProjectColumnInput!)Return fields for updateProjectColumnNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectColumn (ProjectColumn)The updated project column.updateProjectV2Updates an existing project.Input fields for updateProjectV2input (UpdateProjectV2Input!)Return fields for updateProjectV2NameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2 (ProjectV2)The updated Project.updateProjectV2CollaboratorsUpdate the collaborators on a team or a project.Input fields for updateProjectV2Collaboratorsinput (UpdateProjectV2CollaboratorsInput!)Return fields for updateProjectV2CollaboratorsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.collaborators (ProjectV2ActorConnection)The collaborators granted a role.updateProjectV2DraftIssueUpdates a draft issue within a Project.Input fields for updateProjectV2DraftIssueinput (UpdateProjectV2DraftIssueInput!)Return fields for updateProjectV2DraftIssueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.draftIssue (DraftIssue)The draft issue updated in the project.updateProjectV2FieldUpdate a project field.Input fields for updateProjectV2Fieldinput (UpdateProjectV2FieldInput!)Return fields for updateProjectV2FieldNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2Field (ProjectV2FieldConfiguration)The updated field.updateProjectV2ItemFieldValueThis mutation updates the value of a field for an item in a Project. Currently
only single-select, text, number, date, and iteration fields are supported.Input fields for updateProjectV2ItemFieldValueinput (UpdateProjectV2ItemFieldValueInput!)Return fields for updateProjectV2ItemFieldValueNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectV2Item (ProjectV2Item)The updated item.updateProjectV2ItemPositionThis mutation updates the position of the item in the project, where the position represents the priority of an item.Input fields for updateProjectV2ItemPositioninput (UpdateProjectV2ItemPositionInput!)Return fields for updateProjectV2ItemPositionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.items (ProjectV2ItemConnection)The items in the new order.updateProjectV2StatusUpdateUpdates a status update within a Project.Input fields for updateProjectV2StatusUpdateinput (UpdateProjectV2StatusUpdateInput!)Return fields for updateProjectV2StatusUpdateNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.statusUpdate (ProjectV2StatusUpdate)The status update updated in the project.updatePullRequestUpdate a pull request.Input fields for updatePullRequestinput (UpdatePullRequestInput!)Return fields for updatePullRequestNameDescriptionactor (Actor)Identifies the actor who performed the event.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The updated pull request.updatePullRequestBranchMerge or Rebase HEAD from upstream branch into pull request branch.Input fields for updatePullRequestBranchinput (UpdatePullRequestBranchInput!)Return fields for updatePullRequestBranchNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequest (PullRequest)The updated pull request.updatePullRequestReviewUpdates the body of a pull request review.Input fields for updatePullRequestReviewinput (UpdatePullRequestReviewInput!)Return fields for updatePullRequestReviewNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReview (PullRequestReview)The updated pull request review.updatePullRequestReviewCommentUpdates a pull request review comment.Input fields for updatePullRequestReviewCommentinput (UpdatePullRequestReviewCommentInput!)Return fields for updatePullRequestReviewCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReviewComment (PullRequestReviewComment)The updated comment.updateRefUpdate a Git Ref.Input fields for updateRefinput (UpdateRefInput!)Return fields for updateRefNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ref (Ref)The updated Ref.updateRefsCreates, updates and/or deletes multiple refs in a repository.
This mutation takes a list of RefUpdates and performs these updates
on the repository. All updates are performed atomically, meaning that
if one of them is rejected, no other ref will be modified.
RefUpdate.beforeOid specifies that the given reference needs to point
to the given value before performing any updates. A value of
0000000000000000000000000000000000000000 can be used to verify that
the references should not exist.
RefUpdate.afterOid specifies the value that the given reference
will point to after performing all updates. A value of
0000000000000000000000000000000000000000 can be used to delete a
reference.
If RefUpdate.force is set to true, a non-fast-forward updates
for the given reference will be allowed.Input fields for updateRefsinput (UpdateRefsInput!)Return fields for updateRefsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.updateRepositoryUpdate information about a repository.Input fields for updateRepositoryinput (UpdateRepositoryInput!)Return fields for updateRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The updated repository.updateRepositoryRulesetUpdate a repository ruleset.Input fields for updateRepositoryRulesetinput (UpdateRepositoryRulesetInput!)Return fields for updateRepositoryRulesetNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ruleset (RepositoryRuleset)The newly created Ruleset.updateRepositoryWebCommitSignoffSettingSets whether contributors are required to sign off on web-based commits for a repository.Input fields for updateRepositoryWebCommitSignoffSettinginput (UpdateRepositoryWebCommitSignoffSettingInput!)Return fields for updateRepositoryWebCommitSignoffSettingNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String)A message confirming the result of updating the web commit signoff setting.repository (Repository)The updated repository.updateSponsorshipPreferencesChange visibility of your sponsorship and opt in or out of email updates from the maintainer.Input fields for updateSponsorshipPreferencesinput (UpdateSponsorshipPreferencesInput!)Return fields for updateSponsorshipPreferencesNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorship (Sponsorship)The sponsorship that was updated.updateSubscriptionUpdates the state for subscribable subjects.Input fields for updateSubscriptioninput (UpdateSubscriptionInput!)Return fields for updateSubscriptionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subscribable (Subscribable)The input subscribable entity.updateTeamDiscussionUpdates a team discussion.Input fields for updateTeamDiscussioninput (UpdateTeamDiscussionInput!)Return fields for updateTeamDiscussionNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.teamDiscussion (TeamDiscussion)The updated discussion.updateTeamDiscussionCommentUpdates a discussion comment.Input fields for updateTeamDiscussionCommentinput (UpdateTeamDiscussionCommentInput!)Return fields for updateTeamDiscussionCommentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.teamDiscussionComment (TeamDiscussionComment)The updated comment.updateTeamReviewAssignmentUpdates team review assignment.Input fields for updateTeamReviewAssignmentinput (UpdateTeamReviewAssignmentInput!)Return fields for updateTeamReviewAssignmentNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.team (Team)The team that was modified.updateTeamsRepositoryUpdate team repository.Input fields for updateTeamsRepositoryinput (UpdateTeamsRepositoryInput!)Return fields for updateTeamsRepositoryNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repository (Repository)The repository that was updated.teams ([Team!])The teams granted permission on the repository.updateTopicsReplaces the repository's topics with the given topics.Input fields for updateTopicsinput (UpdateTopicsInput!)Return fields for updateTopicsNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invalidTopicNames ([String!])Names of the provided topics that are not valid.repository (Repository)The updated repository.updateUserListUpdates an existing user list.Input fields for updateUserListinput (UpdateUserListInput!)Return fields for updateUserListNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.list (UserList)The list that was just updated.updateUserListsForItemUpdates which of the viewer's lists an item belongs to.Input fields for updateUserListsForIteminput (UpdateUserListsForItemInput!)Return fields for updateUserListsForItemNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.item (UserListItems)The item that was added.lists ([UserList!])The lists to which this item belongs.user (User)The user who owns the lists.verifyVerifiableDomainVerify that a verifiable domain has the expected DNS record.Input fields for verifyVerifiableDomaininput (VerifyVerifiableDomainInput!)Return fields for verifyVerifiableDomainNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.domain (VerifiableDomain)The verifiable domain that was verified.\n\n\n\nGraphQL API/Reference/ObjectsObjectsObjects in GraphQL represent the resources you can access.In this articleAbout  objects
Objects in GraphQL represent the resources you can access. An object can contain a list of fields, which are specifically typed.
For example, the Repository object has a field called name, which is a String.
For more information, see Introduction to GraphQL.ActorConnectionThe connection type for Actor.Fields for ActorConnectionNameDescriptionedges ([ActorEdge])A list of edges.nodes ([Actor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ActorEdgeAn edge in a connection.Fields for ActorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Actor)The item at the end of the edge.ActorLocationLocation information for an actor.Fields for ActorLocationNameDescriptioncity (String)City.country (String)Country name.countryCode (String)Country code.region (String)Region name.regionCode (String)Region or state code.AddedToMergeQueueEventRepresents anadded_to_merge_queueevent on a given pull request.AddedToMergeQueueEvent ImplementsNodeFields for AddedToMergeQueueEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.enqueuer (User)The user who added this Pull Request to the merge queue.id (ID!)The Node ID of the AddedToMergeQueueEvent object.mergeQueue (MergeQueue)The merge queue where this pull request was added to.pullRequest (PullRequest)PullRequest referenced by event.AddedToProjectEventRepresents aadded_to_projectevent on a given issue or pull request.AddedToProjectEvent ImplementsNodeFields for AddedToProjectEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the AddedToProjectEvent object.project (Project)Project referenced by event.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectCard (ProjectCard)Project card referenced by this project event.WarningprojectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectColumnName (String!)Column name referenced by this project event.WarningprojectColumnName is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.AnnouncementBannerAn announcement banner for an enterprise or organization.Fields for AnnouncementBannerNameDescriptioncreatedAt (DateTime!)The date the announcement was created.expiresAt (DateTime)The expiration date of the announcement, if any.isUserDismissible (Boolean!)Whether the announcement can be dismissed by the user.message (String)The text of the announcement.AppA GitHub App.App ImplementsNodeFields for AppNameDescriptionclientId (String)The client ID of the app.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.description (String)The description of the app.id (ID!)The Node ID of the App object.ipAllowListEntries (IpAllowListEntryConnection!)The IP addresses of the app.Arguments for ipAllowListEntriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IpAllowListEntryOrder)Ordering options for IP allow list entries returned.logoBackgroundColor (String!)The hex color code, without the leading '#', for the logo background.logoUrl (URI!)A URL pointing to the app's logo.Arguments for logoUrlsize (Int)The size of the resulting image.name (String!)The name of the app.slug (String!)A slug based on the name of the app for use in URLs.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The URL to the app's homepage.AssignedEventRepresents anassignedevent on any assignable object.AssignedEvent ImplementsNodeFields for AssignedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.assignable (Assignable!)Identifies the assignable associated with the event.assignee (Assignee)Identifies the user or mannequin that was assigned.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the AssignedEvent object.user (User)Identifies the user who was assigned.Warninguser is deprecated.Assignees can now be mannequins. Use the assignee field instead. Removal on 2020-01-01 UTC.AssigneeConnectionThe connection type for Assignee.Fields for AssigneeConnectionNameDescriptionedges ([AssigneeEdge])A list of edges.nodes ([Assignee])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.AssigneeEdgeAn edge in a connection.Fields for AssigneeEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Assignee)The item at the end of the edge.AutoMergeDisabledEventRepresents aauto_merge_disabledevent on a given pull request.AutoMergeDisabledEvent ImplementsNodeFields for AutoMergeDisabledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.disabler (User)The user who disabled auto-merge for this Pull Request.id (ID!)The Node ID of the AutoMergeDisabledEvent object.pullRequest (PullRequest)PullRequest referenced by event.reason (String)The reason auto-merge was disabled.reasonCode (String)The reason_code relating to why auto-merge was disabled.AutoMergeEnabledEventRepresents aauto_merge_enabledevent on a given pull request.AutoMergeEnabledEvent ImplementsNodeFields for AutoMergeEnabledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.enabler (User)The user who enabled auto-merge for this Pull Request.id (ID!)The Node ID of the AutoMergeEnabledEvent object.pullRequest (PullRequest)PullRequest referenced by event.AutoMergeRequestRepresents an auto-merge request for a pull request.Fields for AutoMergeRequestNameDescriptionauthorEmail (String)The email address of the author of this auto-merge request.commitBody (String)The commit message of the auto-merge request. If a merge queue is required by
the base branch, this value will be set by the merge queue when merging.commitHeadline (String)The commit title of the auto-merge request. If a merge queue is required by
the base branch, this value will be set by the merge queue when merging.enabledAt (DateTime)When was this auto-merge request was enabled.enabledBy (Actor)The actor who created the auto-merge request.mergeMethod (PullRequestMergeMethod!)The merge method of the auto-merge request. If a merge queue is required by
the base branch, this value will be set by the merge queue when merging.pullRequest (PullRequest!)The pull request that this auto-merge request is set against.AutoRebaseEnabledEventRepresents aauto_rebase_enabledevent on a given pull request.AutoRebaseEnabledEvent ImplementsNodeFields for AutoRebaseEnabledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.enabler (User)The user who enabled auto-merge (rebase) for this Pull Request.id (ID!)The Node ID of the AutoRebaseEnabledEvent object.pullRequest (PullRequest)PullRequest referenced by event.AutoSquashEnabledEventRepresents aauto_squash_enabledevent on a given pull request.AutoSquashEnabledEvent ImplementsNodeFields for AutoSquashEnabledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.enabler (User)The user who enabled auto-merge (squash) for this Pull Request.id (ID!)The Node ID of the AutoSquashEnabledEvent object.pullRequest (PullRequest)PullRequest referenced by event.AutomaticBaseChangeFailedEventRepresents aautomatic_base_change_failedevent on a given pull request.AutomaticBaseChangeFailedEvent ImplementsNodeFields for AutomaticBaseChangeFailedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the AutomaticBaseChangeFailedEvent object.newBase (String!)The new base for this PR.oldBase (String!)The old base for this PR.pullRequest (PullRequest!)PullRequest referenced by event.AutomaticBaseChangeSucceededEventRepresents aautomatic_base_change_succeededevent on a given pull request.AutomaticBaseChangeSucceededEvent ImplementsNodeFields for AutomaticBaseChangeSucceededEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the AutomaticBaseChangeSucceededEvent object.newBase (String!)The new base for this PR.oldBase (String!)The old base for this PR.pullRequest (PullRequest!)PullRequest referenced by event.BaseRefChangedEventRepresents abase_ref_changedevent on a given issue or pull request.BaseRefChangedEvent ImplementsNodeFields for BaseRefChangedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.currentRefName (String!)Identifies the name of the base ref for the pull request after it was changed.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the BaseRefChangedEvent object.previousRefName (String!)Identifies the name of the base ref for the pull request before it was changed.pullRequest (PullRequest!)PullRequest referenced by event.BaseRefDeletedEventRepresents abase_ref_deletedevent on a given pull request.BaseRefDeletedEvent ImplementsNodeFields for BaseRefDeletedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.baseRefName (String)Identifies the name of the Ref associated with the base_ref_deleted event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the BaseRefDeletedEvent object.pullRequest (PullRequest)PullRequest referenced by event.BaseRefForcePushedEventRepresents abase_ref_force_pushedevent on a given pull request.BaseRefForcePushedEvent ImplementsNodeFields for BaseRefForcePushedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.afterCommit (Commit)Identifies the after commit SHA for thebase_ref_force_pushedevent.beforeCommit (Commit)Identifies the before commit SHA for thebase_ref_force_pushedevent.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the BaseRefForcePushedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.ref (Ref)Identifies the fully qualified ref name for thebase_ref_force_pushedevent.BlameRepresents a Git blame.Fields for BlameNameDescriptionranges ([BlameRange!]!)The list of ranges from a Git blame.BlameRangeRepresents a range of information from a Git blame.Fields for BlameRangeNameDescriptionage (Int!)Identifies the recency of the change, from 1 (new) to 10 (old). This is
calculated as a 2-quantile and determines the length of distance between the
median age of all the changes in the file and the recency of the current
range's change.commit (Commit!)Identifies the line author.endingLine (Int!)The ending line for the range.startingLine (Int!)The starting line for the range.BlobRepresents a Git blob.Blob ImplementsGitObjectNodeFields for BlobNameDescriptionabbreviatedOid (String!)An abbreviated version of the Git object ID.byteSize (Int!)Byte size of Blob object.commitResourcePath (URI!)The HTTP path for this Git object.commitUrl (URI!)The HTTP URL for this Git object.id (ID!)The Node ID of the Blob object.isBinary (Boolean)Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding.isTruncated (Boolean!)Indicates whether the contents is truncated.oid (GitObjectID!)The Git object ID.repository (Repository!)The Repository the Git object belongs to.text (String)UTF8 text data or null if the Blob is binary.BotA special type of user which takes actions on behalf of GitHub Apps.Bot ImplementsActorNodeUniformResourceLocatableFields for BotNameDescriptionavatarUrl (URI!)A URL pointing to the GitHub App's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the Bot object.login (String!)The username of the actor.resourcePath (URI!)The HTTP path for this bot.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this bot.BranchNamePatternParametersParameters to be used for the branch_name_pattern rule.Fields for BranchNamePatternParametersNameDescriptionname (String)How this rule will appear to users.negate (Boolean!)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.BranchProtectionRuleA branch protection rule.BranchProtectionRule ImplementsNodeFields for BranchProtectionRuleNameDescriptionallowsDeletions (Boolean!)Can this branch be deleted.allowsForcePushes (Boolean!)Are force pushes allowed on this branch.blocksCreations (Boolean!)Is branch creation a protected operation.branchProtectionRuleConflicts (BranchProtectionRuleConflictConnection!)A list of conflicts matching branches protection rule and other branch protection rules.Arguments for branchProtectionRuleConflictsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.bypassForcePushAllowances (BypassForcePushAllowanceConnection!)A list of actors able to force push for this branch protection rule.Arguments for bypassForcePushAllowancesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.bypassPullRequestAllowances (BypassPullRequestAllowanceConnection!)A list of actors able to bypass PRs for this branch protection rule.Arguments for bypassPullRequestAllowancesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.creator (Actor)The actor who created this branch protection rule.databaseId (Int)Identifies the primary key from the database.dismissesStaleReviews (Boolean!)Will new commits pushed to matching branches dismiss pull request review approvals.id (ID!)The Node ID of the BranchProtectionRule object.isAdminEnforced (Boolean!)Can admins override branch protection.lockAllowsFetchAndMerge (Boolean!)Whether users can pull changes from upstream when the branch is locked. Set to
true to allow fork syncing. Set to false to prevent fork syncing.lockBranch (Boolean!)Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.matchingRefs (RefConnection!)Repository refs that are protected by this rule.Arguments for matchingRefsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)Filters refs with query on name.pattern (String!)Identifies the protection rule pattern.pushAllowances (PushAllowanceConnection!)A list push allowances for this branch protection rule.Arguments for pushAllowancesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.repository (Repository)The repository associated with this branch protection rule.requireLastPushApproval (Boolean!)Whether the most recent push must be approved by someone other than the person who pushed it.requiredApprovingReviewCount (Int)Number of approving reviews required to update matching branches.requiredDeploymentEnvironments ([String])List of required deployment environments that must be deployed successfully to update matching branches.requiredStatusCheckContexts ([String])List of required status check contexts that must pass for commits to be accepted to matching branches.requiredStatusChecks ([RequiredStatusCheckDescription!])List of required status checks that must pass for commits to be accepted to matching branches.requiresApprovingReviews (Boolean!)Are approving reviews required to update matching branches.requiresCodeOwnerReviews (Boolean!)Are reviews from code owners required to update matching branches.requiresCommitSignatures (Boolean!)Are commits required to be signed.requiresConversationResolution (Boolean!)Are conversations required to be resolved before merging.requiresDeployments (Boolean!)Does this branch require deployment to specific environments before merging.requiresLinearHistory (Boolean!)Are merge commits prohibited from being pushed to this branch.requiresStatusChecks (Boolean!)Are status checks required to update matching branches.requiresStrictStatusChecks (Boolean!)Are branches required to be up to date before merging.restrictsPushes (Boolean!)Is pushing to matching branches restricted.restrictsReviewDismissals (Boolean!)Is dismissal of pull request reviews restricted.reviewDismissalAllowances (ReviewDismissalAllowanceConnection!)A list review dismissal allowances for this branch protection rule.Arguments for reviewDismissalAllowancesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.BranchProtectionRuleConflictA conflict between two branch protection rules.Fields for BranchProtectionRuleConflictNameDescriptionbranchProtectionRule (BranchProtectionRule)Identifies the branch protection rule.conflictingBranchProtectionRule (BranchProtectionRule)Identifies the conflicting branch protection rule.ref (Ref)Identifies the branch ref that has conflicting rules.BranchProtectionRuleConflictConnectionThe connection type for BranchProtectionRuleConflict.Fields for BranchProtectionRuleConflictConnectionNameDescriptionedges ([BranchProtectionRuleConflictEdge])A list of edges.nodes ([BranchProtectionRuleConflict])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.BranchProtectionRuleConflictEdgeAn edge in a connection.Fields for BranchProtectionRuleConflictEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (BranchProtectionRuleConflict)The item at the end of the edge.BranchProtectionRuleConnectionThe connection type for BranchProtectionRule.Fields for BranchProtectionRuleConnectionNameDescriptionedges ([BranchProtectionRuleEdge])A list of edges.nodes ([BranchProtectionRule])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.BranchProtectionRuleEdgeAn edge in a connection.Fields for BranchProtectionRuleEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (BranchProtectionRule)The item at the end of the edge.BypassForcePushAllowanceA user, team, or app who has the ability to bypass a force push requirement on a protected branch.BypassForcePushAllowance ImplementsNodeFields for BypassForcePushAllowanceNameDescriptionactor (BranchActorAllowanceActor)The actor that can force push.branchProtectionRule (BranchProtectionRule)Identifies the branch protection rule associated with the allowed user, team, or app.id (ID!)The Node ID of the BypassForcePushAllowance object.BypassForcePushAllowanceConnectionThe connection type for BypassForcePushAllowance.Fields for BypassForcePushAllowanceConnectionNameDescriptionedges ([BypassForcePushAllowanceEdge])A list of edges.nodes ([BypassForcePushAllowance])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.BypassForcePushAllowanceEdgeAn edge in a connection.Fields for BypassForcePushAllowanceEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (BypassForcePushAllowance)The item at the end of the edge.BypassPullRequestAllowanceA user, team, or app who has the ability to bypass a pull request requirement on a protected branch.BypassPullRequestAllowance ImplementsNodeFields for BypassPullRequestAllowanceNameDescriptionactor (BranchActorAllowanceActor)The actor that can bypass.branchProtectionRule (BranchProtectionRule)Identifies the branch protection rule associated with the allowed user, team, or app.id (ID!)The Node ID of the BypassPullRequestAllowance object.BypassPullRequestAllowanceConnectionThe connection type for BypassPullRequestAllowance.Fields for BypassPullRequestAllowanceConnectionNameDescriptionedges ([BypassPullRequestAllowanceEdge])A list of edges.nodes ([BypassPullRequestAllowance])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.BypassPullRequestAllowanceEdgeAn edge in a connection.Fields for BypassPullRequestAllowanceEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (BypassPullRequestAllowance)The item at the end of the edge.CVSSThe Common Vulnerability Scoring System.Fields for CVSSNameDescriptionscore (Float!)The CVSS score associated with this advisory.vectorString (String)The CVSS vector string associated with this advisory.CWEA common weakness enumeration.CWE ImplementsNodeFields for CWENameDescriptioncweId (String!)The id of the CWE.description (String!)A detailed description of this CWE.id (ID!)The Node ID of the CWE object.name (String!)The name of this CWE.CWEConnectionThe connection type for CWE.Fields for CWEConnectionNameDescriptionedges ([CWEEdge])A list of edges.nodes ([CWE])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CWEEdgeAn edge in a connection.Fields for CWEEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CWE)The item at the end of the edge.CheckAnnotationA single check annotation.Fields for CheckAnnotationNameDescriptionannotationLevel (CheckAnnotationLevel)The annotation's severity level.blobUrl (URI!)The path to the file that this annotation was made on.databaseId (Int)Identifies the primary key from the database.location (CheckAnnotationSpan!)The position of this annotation.message (String!)The annotation's message.path (String!)The path that this annotation was made on.rawDetails (String)Additional information about the annotation.title (String)The annotation's title.CheckAnnotationConnectionThe connection type for CheckAnnotation.Fields for CheckAnnotationConnectionNameDescriptionedges ([CheckAnnotationEdge])A list of edges.nodes ([CheckAnnotation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CheckAnnotationEdgeAn edge in a connection.Fields for CheckAnnotationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CheckAnnotation)The item at the end of the edge.CheckAnnotationPositionA character position in a check annotation.Fields for CheckAnnotationPositionNameDescriptioncolumn (Int)Column number (1 indexed).line (Int!)Line number (1 indexed).CheckAnnotationSpanAn inclusive pair of positions for a check annotation.Fields for CheckAnnotationSpanNameDescriptionend (CheckAnnotationPosition!)End position (inclusive).start (CheckAnnotationPosition!)Start position (inclusive).CheckRunA check run.CheckRun ImplementsNodeRequirableByPullRequestUniformResourceLocatableFields for CheckRunNameDescriptionannotations (CheckAnnotationConnection)The check run's annotations.Arguments for annotationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.checkSuite (CheckSuite!)The check suite that this run is a part of.completedAt (DateTime)Identifies the date and time when the check run was completed.conclusion (CheckConclusionState)The conclusion of the check run.databaseId (Int)Identifies the primary key from the database.deployment (Deployment)The corresponding deployment for this job, if any.detailsUrl (URI)The URL from which to find full details of the check run on the integrator's site.externalId (String)A reference for the check run on the integrator's system.id (ID!)The Node ID of the CheckRun object.isRequired (Boolean!)Whether this is required to pass before merging for a specific pull request.Arguments for isRequiredpullRequestId (ID)The id of the pull request this is required for.pullRequestNumber (Int)The number of the pull request this is required for.name (String!)The name of the check for this check run.pendingDeploymentRequest (DeploymentRequest)Information about a pending deployment, if any, in this check run.permalink (URI!)The permalink to the check run summary.repository (Repository!)The repository associated with this check run.resourcePath (URI!)The HTTP path for this check run.startedAt (DateTime)Identifies the date and time when the check run was started.status (CheckStatusState!)The current status of the check run.steps (CheckStepConnection)The check run's steps.Arguments for stepsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.number (Int)Step number.summary (String)A string representing the check run's summary.text (String)A string representing the check run's text.title (String)A string representing the check run.url (URI!)The HTTP URL for this check run.CheckRunConnectionThe connection type for CheckRun.Fields for CheckRunConnectionNameDescriptionedges ([CheckRunEdge])A list of edges.nodes ([CheckRun])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CheckRunEdgeAn edge in a connection.Fields for CheckRunEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CheckRun)The item at the end of the edge.CheckRunStateCountRepresents a count of the state of a check run.Fields for CheckRunStateCountNameDescriptioncount (Int!)The number of check runs with this state.state (CheckRunState!)The state of a check run.CheckStepA single check step.Fields for CheckStepNameDescriptioncompletedAt (DateTime)Identifies the date and time when the check step was completed.conclusion (CheckConclusionState)The conclusion of the check step.externalId (String)A reference for the check step on the integrator's system.name (String!)The step's name.number (Int!)The index of the step in the list of steps of the parent check run.secondsToCompletion (Int)Number of seconds to completion.startedAt (DateTime)Identifies the date and time when the check step was started.status (CheckStatusState!)The current status of the check step.CheckStepConnectionThe connection type for CheckStep.Fields for CheckStepConnectionNameDescriptionedges ([CheckStepEdge])A list of edges.nodes ([CheckStep])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CheckStepEdgeAn edge in a connection.Fields for CheckStepEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CheckStep)The item at the end of the edge.CheckSuiteA check suite.CheckSuite ImplementsNodeFields for CheckSuiteNameDescriptionapp (App)The GitHub App which created this check suite.branch (Ref)The name of the branch for this check suite.checkRuns (CheckRunConnection)The check runs associated with a check suite.Arguments for checkRunsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (CheckRunFilter)Filters the check runs by this type.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commit (Commit!)The commit for this check suite.conclusion (CheckConclusionState)The conclusion of this check suite.createdAt (DateTime!)Identifies the date and time when the object was created.creator (User)The user who triggered the check suite.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the CheckSuite object.matchingPullRequests (PullRequestConnection)A list of open pull requests matching the check suite.Arguments for matchingPullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.push (Push)The push that triggered this check suite.repository (Repository!)The repository associated with this check suite.resourcePath (URI!)The HTTP path for this check suite.status (CheckStatusState!)The status of this check suite.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this check suite.workflowRun (WorkflowRun)The workflow run associated with this check suite.CheckSuiteConnectionThe connection type for CheckSuite.Fields for CheckSuiteConnectionNameDescriptionedges ([CheckSuiteEdge])A list of edges.nodes ([CheckSuite])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CheckSuiteEdgeAn edge in a connection.Fields for CheckSuiteEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CheckSuite)The item at the end of the edge.ClosedEventRepresents aclosedevent on any Closable.ClosedEvent ImplementsNodeUniformResourceLocatableFields for ClosedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.closable (Closable!)Object that was closed.closer (Closer)Object which triggered the creation of this event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ClosedEvent object.resourcePath (URI!)The HTTP path for this closed event.stateReason (IssueStateReason)The reason the issue state was changed to closed.url (URI!)The HTTP URL for this closed event.CodeOfConductThe Code of Conduct for a repository.CodeOfConduct ImplementsNodeFields for CodeOfConductNameDescriptionbody (String)The body of the Code of Conduct.id (ID!)The Node ID of the CodeOfConduct object.key (String!)The key for the Code of Conduct.name (String!)The formal name of the Code of Conduct.resourcePath (URI)The HTTP path for this Code of Conduct.url (URI)The HTTP URL for this Code of Conduct.CodeScanningParametersChoose which tools must provide code scanning results before the reference is
updated. When configured, code scanning must be enabled and have results for
both the commit and the reference being updated.Fields for CodeScanningParametersNameDescriptioncodeScanningTools ([CodeScanningTool!]!)Tools that must provide code scanning results for this rule to pass.CodeScanningToolA tool that must provide code scanning results for this rule to pass.Fields for CodeScanningToolNameDescriptionalertsThreshold (String!)The severity level at which code scanning results that raise alerts block a
reference update. For more information on alert severity levels, see "About code scanning alerts.".securityAlertsThreshold (String!)The severity level at which code scanning results that raise security alerts
block a reference update. For more information on security severity levels,
see "About code scanning alerts.".tool (String!)The name of a code scanning tool.CommentDeletedEventRepresents acomment_deletedevent on a given issue or pull request.CommentDeletedEvent ImplementsNodeFields for CommentDeletedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.deletedCommentAuthor (Actor)The user who authored the deleted comment.id (ID!)The Node ID of the CommentDeletedEvent object.CommitRepresents a Git commit.Commit ImplementsGitObjectNodeSubscribableUniformResourceLocatableFields for CommitNameDescriptionabbreviatedOid (String!)An abbreviated version of the Git object ID.additions (Int!)The number of additions in this commit.associatedPullRequests (PullRequestConnection)The merged Pull Request that introduced the commit to the repository. If the
commit is not present in the default branch, additionally returns open Pull
Requests associated with the commit.Arguments for associatedPullRequestsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (PullRequestOrder)Ordering options for pull requests.author (GitActor)Authorship details of the commit.authoredByCommitter (Boolean!)Check if the committer and the author match.authoredDate (DateTime!)The datetime when this commit was authored.authors (GitActorConnection!)The list of authors for this commit based on the git author and the Co-authored-by
message trailer. The git author will always be first.Arguments for authorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.blame (Blame!)Fetches git blame information.Arguments for blamepath (String!)The file whose Git blame information you want.changedFiles (Int!)We recommend using the changedFilesIfAvailable field instead of
changedFiles, as changedFiles will cause your request to return an error
if GitHub is unable to calculate the number of changed files.WarningchangedFiles is deprecated.changedFiles will be removed. Use changedFilesIfAvailable instead. Removal on 2023-01-01 UTC.changedFilesIfAvailable (Int)The number of changed files in this commit. If GitHub is unable to calculate
the number of changed files (for example due to a timeout), this will return
null. We recommend using this field instead of changedFiles.checkSuites (CheckSuiteConnection)The check suites associated with a commit.Arguments for checkSuitesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (CheckSuiteFilter)Filters the check suites by this type.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.comments (CommitCommentConnection!)Comments made on the commit.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commitResourcePath (URI!)The HTTP path for this Git object.commitUrl (URI!)The HTTP URL for this Git object.committedDate (DateTime!)The datetime when this commit was committed.committedViaWeb (Boolean!)Check if committed via GitHub web UI.committer (GitActor)Committer details of the commit.deletions (Int!)The number of deletions in this commit.deployments (DeploymentConnection)The deployments associated with a commit.Arguments for deploymentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.environments ([String!])Environments to list deployments for.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DeploymentOrder)Ordering options for deployments returned from the connection.file (TreeEntry)The tree entry representing the file located at the given path.Arguments for filepath (String!)The path for the file.history (CommitHistoryConnection!)The linear commit history starting from (and including) this commit, in the same order as git log.Arguments for historyafter (String)Returns the elements in the list that come after the specified cursor.author (CommitAuthor)If non-null, filters history to only show commits with matching authorship.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.path (String)If non-null, filters history to only show commits touching files under this path.since (GitTimestamp)Allows specifying a beginning time or date for fetching commits. Unexpected
results may be returned for dates not between 1970-01-01 and 2099-12-13 (inclusive).until (GitTimestamp)Allows specifying an ending time or date for fetching commits. Unexpected
results may be returned for dates not between 1970-01-01 and 2099-12-13 (inclusive).id (ID!)The Node ID of the Commit object.message (String!)The Git commit message.messageBody (String!)The Git commit message body.messageBodyHTML (HTML!)The commit message body rendered to HTML.messageHeadline (String!)The Git commit message headline.messageHeadlineHTML (HTML!)The commit message headline rendered to HTML.oid (GitObjectID!)The Git object ID.onBehalfOf (Organization)The organization this commit was made on behalf of.parents (CommitConnection!)The parents of a commit.Arguments for parentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.pushedDate (DateTime)The datetime when this commit was pushed.WarningpushedDate is deprecated.pushedDate is no longer supported. Removal on 2023-07-01 UTC.repository (Repository!)The Repository this commit belongs to.resourcePath (URI!)The HTTP path for this commit.signature (GitSignature)Commit signing information, if present.status (Status)Status information for this commit.statusCheckRollup (StatusCheckRollup)Check and Status rollup information for this commit.submodules (SubmoduleConnection!)Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.Arguments for submodulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.tarballUrl (URI!)Returns a URL to download a tarball archive for a repository.
Note: For private repositories, these links are temporary and expire after five minutes.tree (Tree!)Commit's root Tree.treeResourcePath (URI!)The HTTP path for the tree of this commit.treeUrl (URI!)The HTTP URL for the tree of this commit.url (URI!)The HTTP URL for this commit.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.zipballUrl (URI!)Returns a URL to download a zipball archive for a repository.
Note: For private repositories, these links are temporary and expire after five minutes.CommitAuthorEmailPatternParametersParameters to be used for the commit_author_email_pattern rule.Fields for CommitAuthorEmailPatternParametersNameDescriptionname (String)How this rule will appear to users.negate (Boolean!)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.CommitCommentRepresents a comment on a given Commit.CommitComment ImplementsCommentDeletableMinimizableNodeReactableRepositoryNodeUpdatableUpdatableCommentFields for CommitCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)Identifies the comment body.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.commit (Commit)Identifies the commit associated with the comment, if the commit exists.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the CommitComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isMinimized (Boolean!)Returns whether or not a comment has been minimized.lastEditedAt (DateTime)The moment the editor made the last edit.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.path (String)Identifies the file path associated with the comment.position (Int)Identifies the line position associated with the comment.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path permalink for this commit comment.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL permalink for this commit comment.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.CommitCommentConnectionThe connection type for CommitComment.Fields for CommitCommentConnectionNameDescriptionedges ([CommitCommentEdge])A list of edges.nodes ([CommitComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CommitCommentEdgeAn edge in a connection.Fields for CommitCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CommitComment)The item at the end of the edge.CommitCommentThreadA thread of comments on a commit.CommitCommentThread ImplementsNodeRepositoryNodeFields for CommitCommentThreadNameDescriptioncomments (CommitCommentConnection!)The comments that exist in this thread.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commit (Commit)The commit the comments were made on.id (ID!)The Node ID of the CommitCommentThread object.path (String)The file the comments were made on.position (Int)The position in the diff for the commit that the comment was made on.repository (Repository!)The repository associated with this node.CommitConnectionThe connection type for Commit.Fields for CommitConnectionNameDescriptionedges ([CommitEdge])A list of edges.nodes ([Commit])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CommitContributionsByRepositoryThis aggregates commits made by a user within one repository.Fields for CommitContributionsByRepositoryNameDescriptioncontributions (CreatedCommitContributionConnection!)The commit contributions, each representing a day.Arguments for contributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (CommitContributionOrder)Ordering options for commit contributions returned from the connection.repository (Repository!)The repository in which the commits were made.resourcePath (URI!)The HTTP path for the user's commits to the repository in this time range.url (URI!)The HTTP URL for the user's commits to the repository in this time range.CommitEdgeAn edge in a connection.Fields for CommitEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Commit)The item at the end of the edge.CommitHistoryConnectionThe connection type for Commit.Fields for CommitHistoryConnectionNameDescriptionedges ([CommitEdge])A list of edges.nodes ([Commit])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CommitMessagePatternParametersParameters to be used for the commit_message_pattern rule.Fields for CommitMessagePatternParametersNameDescriptionname (String)How this rule will appear to users.negate (Boolean!)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.CommitterEmailPatternParametersParameters to be used for the committer_email_pattern rule.Fields for CommitterEmailPatternParametersNameDescriptionname (String)How this rule will appear to users.negate (Boolean!)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.ComparisonRepresents a comparison between two commit revisions.Comparison ImplementsNodeFields for ComparisonNameDescriptionaheadBy (Int!)The number of commits ahead of the base branch.baseTarget (GitObject!)The base revision of this comparison.behindBy (Int!)The number of commits behind the base branch.commits (ComparisonCommitConnection!)The commits which compose this comparison.Arguments for commitsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.headTarget (GitObject!)The head revision of this comparison.id (ID!)The Node ID of the Comparison object.status (ComparisonStatus!)The status of this comparison.ComparisonCommitConnectionThe connection type for Commit.Fields for ComparisonCommitConnectionNameDescriptionauthorCount (Int!)The total count of authors and co-authors across all commits.edges ([CommitEdge])A list of edges.nodes ([Commit])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ConnectedEventRepresents aconnectedevent on a given issue or pull request.ConnectedEvent ImplementsNodeFields for ConnectedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ConnectedEvent object.isCrossRepository (Boolean!)Reference originated in a different repository.source (ReferencedSubject!)Issue or pull request that made the reference.subject (ReferencedSubject!)Issue or pull request which was connected.ContributingGuidelinesThe Contributing Guidelines for a repository.Fields for ContributingGuidelinesNameDescriptionbody (String)The body of the Contributing Guidelines.resourcePath (URI)The HTTP path for the Contributing Guidelines.url (URI)The HTTP URL for the Contributing Guidelines.ContributionCalendarA calendar of contributions made on GitHub by a user.Fields for ContributionCalendarNameDescriptioncolors ([String!]!)A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.isHalloween (Boolean!)Determine if the color set was chosen because it's currently Halloween.months ([ContributionCalendarMonth!]!)A list of the months of contributions in this calendar.totalContributions (Int!)The count of total contributions in the calendar.weeks ([ContributionCalendarWeek!]!)A list of the weeks of contributions in this calendar.ContributionCalendarDayRepresents a single day of contributions on GitHub by a user.Fields for ContributionCalendarDayNameDescriptioncolor (String!)The hex color code that represents how many contributions were made on this day compared to others in the calendar.contributionCount (Int!)How many contributions were made by the user on this day.contributionLevel (ContributionLevel!)Indication of contributions, relative to other days. Can be used to indicate
which color to represent this day on a calendar.date (Date!)The day this square represents.weekday (Int!)A number representing which day of the week this square represents, e.g., 1 is Monday.ContributionCalendarMonthA month of contributions in a user's contribution graph.Fields for ContributionCalendarMonthNameDescriptionfirstDay (Date!)The date of the first day of this month.name (String!)The name of the month.totalWeeks (Int!)How many weeks started in this month.year (Int!)The year the month occurred in.ContributionCalendarWeekA week of contributions in a user's contribution graph.Fields for ContributionCalendarWeekNameDescriptioncontributionDays ([ContributionCalendarDay!]!)The days of contributions in this week.firstDay (Date!)The date of the earliest square in this week.ContributionsCollectionA contributions collection aggregates contributions such as opened issues and commits created by a user.Fields for ContributionsCollectionNameDescriptioncommitContributionsByRepository ([CommitContributionsByRepository!]!)Commit contributions made by the user, grouped by repository.Arguments for commitContributionsByRepositorymaxRepositories (Int)How many repositories should be included.The default value is 25.contributionCalendar (ContributionCalendar!)A calendar of this user's contributions on GitHub.contributionYears ([Int!]!)The years the user has been making contributions with the most recent year first.doesEndInCurrentMonth (Boolean!)Determine if this collection's time span ends in the current month.earliestRestrictedContributionDate (Date)The date of the first restricted contribution the user made in this time
period. Can only be non-null when the user has enabled private contribution counts.endedAt (DateTime!)The ending date and time of this collection.firstIssueContribution (CreatedIssueOrRestrictedContribution)The first issue the user opened on GitHub. This will be null if that issue was
opened outside the collection's time range and ignoreTimeRange is false. If
the issue is not visible but the user has opted to show private contributions,
a RestrictedContribution will be returned.firstPullRequestContribution (CreatedPullRequestOrRestrictedContribution)The first pull request the user opened on GitHub. This will be null if that
pull request was opened outside the collection's time range and
ignoreTimeRange is not true. If the pull request is not visible but the user
has opted to show private contributions, a RestrictedContribution will be returned.firstRepositoryContribution (CreatedRepositoryOrRestrictedContribution)The first repository the user created on GitHub. This will be null if that
first repository was created outside the collection's time range and
ignoreTimeRange is false. If the repository is not visible, then a
RestrictedContribution is returned.hasActivityInThePast (Boolean!)Does the user have any more activity in the timeline that occurred prior to the collection's time range?.hasAnyContributions (Boolean!)Determine if there are any contributions in this collection.hasAnyRestrictedContributions (Boolean!)Determine if the user made any contributions in this time frame whose details
are not visible because they were made in a private repository. Can only be
true if the user enabled private contribution counts.isSingleDay (Boolean!)Whether or not the collector's time span is all within the same day.issueContributions (CreatedIssueContributionConnection!)A list of issues the user opened.Arguments for issueContributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.excludeFirst (Boolean)Should the user's first issue ever be excluded from the result.The default value is false.excludePopular (Boolean)Should the user's most commented issue be excluded from the result.The default value is false.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.issueContributionsByRepository ([IssueContributionsByRepository!]!)Issue contributions made by the user, grouped by repository.Arguments for issueContributionsByRepositoryexcludeFirst (Boolean)Should the user's first issue ever be excluded from the result.The default value is false.excludePopular (Boolean)Should the user's most commented issue be excluded from the result.The default value is false.maxRepositories (Int)How many repositories should be included.The default value is 25.joinedGitHubContribution (JoinedGitHubContribution)When the user signed up for GitHub. This will be null if that sign up date
falls outside the collection's time range and ignoreTimeRange is false.latestRestrictedContributionDate (Date)The date of the most recent restricted contribution the user made in this time
period. Can only be non-null when the user has enabled private contribution counts.mostRecentCollectionWithActivity (ContributionsCollection)When this collection's time range does not include any activity from the user, use this
to get a different collection from an earlier time range that does have activity.mostRecentCollectionWithoutActivity (ContributionsCollection)Returns a different contributions collection from an earlier time range than this one
that does not have any contributions.popularIssueContribution (CreatedIssueContribution)The issue the user opened on GitHub that received the most comments in the specified
time frame.popularPullRequestContribution (CreatedPullRequestContribution)The pull request the user opened on GitHub that received the most comments in the
specified time frame.pullRequestContributions (CreatedPullRequestContributionConnection!)Pull request contributions made by the user.Arguments for pullRequestContributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.excludeFirst (Boolean)Should the user's first pull request ever be excluded from the result.The default value is false.excludePopular (Boolean)Should the user's most commented pull request be excluded from the result.The default value is false.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.pullRequestContributionsByRepository ([PullRequestContributionsByRepository!]!)Pull request contributions made by the user, grouped by repository.Arguments for pullRequestContributionsByRepositoryexcludeFirst (Boolean)Should the user's first pull request ever be excluded from the result.The default value is false.excludePopular (Boolean)Should the user's most commented pull request be excluded from the result.The default value is false.maxRepositories (Int)How many repositories should be included.The default value is 25.pullRequestReviewContributions (CreatedPullRequestReviewContributionConnection!)Pull request review contributions made by the user. Returns the most recently
submitted review for each PR reviewed by the user.Arguments for pullRequestReviewContributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.pullRequestReviewContributionsByRepository ([PullRequestReviewContributionsByRepository!]!)Pull request review contributions made by the user, grouped by repository.Arguments for pullRequestReviewContributionsByRepositorymaxRepositories (Int)How many repositories should be included.The default value is 25.repositoryContributions (CreatedRepositoryContributionConnection!)A list of repositories owned by the user that the user created in this time range.Arguments for repositoryContributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.excludeFirst (Boolean)Should the user's first repository ever be excluded from the result.The default value is false.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.restrictedContributionsCount (Int!)A count of contributions made by the user that the viewer cannot access. Only
non-zero when the user has chosen to share their private contribution counts.startedAt (DateTime!)The beginning date and time of this collection.totalCommitContributions (Int!)How many commits were made by the user in this time span.totalIssueContributions (Int!)How many issues the user opened.Arguments for totalIssueContributionsexcludeFirst (Boolean)Should the user's first issue ever be excluded from this count.The default value is false.excludePopular (Boolean)Should the user's most commented issue be excluded from this count.The default value is false.totalPullRequestContributions (Int!)How many pull requests the user opened.Arguments for totalPullRequestContributionsexcludeFirst (Boolean)Should the user's first pull request ever be excluded from this count.The default value is false.excludePopular (Boolean)Should the user's most commented pull request be excluded from this count.The default value is false.totalPullRequestReviewContributions (Int!)How many pull request reviews the user left.totalRepositoriesWithContributedCommits (Int!)How many different repositories the user committed to.totalRepositoriesWithContributedIssues (Int!)How many different repositories the user opened issues in.Arguments for totalRepositoriesWithContributedIssuesexcludeFirst (Boolean)Should the user's first issue ever be excluded from this count.The default value is false.excludePopular (Boolean)Should the user's most commented issue be excluded from this count.The default value is false.totalRepositoriesWithContributedPullRequestReviews (Int!)How many different repositories the user left pull request reviews in.totalRepositoriesWithContributedPullRequests (Int!)How many different repositories the user opened pull requests in.Arguments for totalRepositoriesWithContributedPullRequestsexcludeFirst (Boolean)Should the user's first pull request ever be excluded from this count.The default value is false.excludePopular (Boolean)Should the user's most commented pull request be excluded from this count.The default value is false.totalRepositoryContributions (Int!)How many repositories the user created.Arguments for totalRepositoryContributionsexcludeFirst (Boolean)Should the user's first repository ever be excluded from this count.The default value is false.user (User!)The user who made the contributions in this collection.ConvertToDraftEventRepresents aconvert_to_draftevent on a given pull request.ConvertToDraftEvent ImplementsNodeUniformResourceLocatableFields for ConvertToDraftEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ConvertToDraftEvent object.pullRequest (PullRequest!)PullRequest referenced by event.resourcePath (URI!)The HTTP path for this convert to draft event.url (URI!)The HTTP URL for this convert to draft event.ConvertedNoteToIssueEventRepresents aconverted_note_to_issueevent on a given issue or pull request.ConvertedNoteToIssueEvent ImplementsNodeFields for ConvertedNoteToIssueEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ConvertedNoteToIssueEvent object.project (Project)Project referenced by event.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectCard (ProjectCard)Project card referenced by this project event.WarningprojectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectColumnName (String!)Column name referenced by this project event.ConvertedToDiscussionEventRepresents aconverted_to_discussionevent on a given issue.ConvertedToDiscussionEvent ImplementsNodeFields for ConvertedToDiscussionEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.discussion (Discussion)The discussion that the issue was converted into.id (ID!)The Node ID of the ConvertedToDiscussionEvent object.CopilotEndpointsCopilot endpoint information.Fields for CopilotEndpointsNameDescriptionapi (String!)Copilot API endpoint.originTracker (String!)Copilot origin tracker endpoint.proxy (String!)Copilot proxy endpoint.telemetry (String!)Copilot telemetry endpoint.CreatedCommitContributionRepresents the contribution a user made by committing to a repository.CreatedCommitContribution ImplementsContributionFields for CreatedCommitContributionNameDescriptioncommitCount (Int!)How many commits were made on this day to this repository by the user.isRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.repository (Repository!)The repository the user made a commit in.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.CreatedCommitContributionConnectionThe connection type for CreatedCommitContribution.Fields for CreatedCommitContributionConnectionNameDescriptionedges ([CreatedCommitContributionEdge])A list of edges.nodes ([CreatedCommitContribution])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of commits across days and repositories in the connection.CreatedCommitContributionEdgeAn edge in a connection.Fields for CreatedCommitContributionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CreatedCommitContribution)The item at the end of the edge.CreatedIssueContributionRepresents the contribution a user made on GitHub by opening an issue.CreatedIssueContribution ImplementsContributionFields for CreatedIssueContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.issue (Issue!)The issue that was opened.occurredAt (DateTime!)When this contribution was made.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.CreatedIssueContributionConnectionThe connection type for CreatedIssueContribution.Fields for CreatedIssueContributionConnectionNameDescriptionedges ([CreatedIssueContributionEdge])A list of edges.nodes ([CreatedIssueContribution])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CreatedIssueContributionEdgeAn edge in a connection.Fields for CreatedIssueContributionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CreatedIssueContribution)The item at the end of the edge.CreatedPullRequestContributionRepresents the contribution a user made on GitHub by opening a pull request.CreatedPullRequestContribution ImplementsContributionFields for CreatedPullRequestContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.pullRequest (PullRequest!)The pull request that was opened.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.CreatedPullRequestContributionConnectionThe connection type for CreatedPullRequestContribution.Fields for CreatedPullRequestContributionConnectionNameDescriptionedges ([CreatedPullRequestContributionEdge])A list of edges.nodes ([CreatedPullRequestContribution])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CreatedPullRequestContributionEdgeAn edge in a connection.Fields for CreatedPullRequestContributionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CreatedPullRequestContribution)The item at the end of the edge.CreatedPullRequestReviewContributionRepresents the contribution a user made by leaving a review on a pull request.CreatedPullRequestReviewContribution ImplementsContributionFields for CreatedPullRequestReviewContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.pullRequest (PullRequest!)The pull request the user reviewed.pullRequestReview (PullRequestReview!)The review the user left on the pull request.repository (Repository!)The repository containing the pull request that the user reviewed.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.CreatedPullRequestReviewContributionConnectionThe connection type for CreatedPullRequestReviewContribution.Fields for CreatedPullRequestReviewContributionConnectionNameDescriptionedges ([CreatedPullRequestReviewContributionEdge])A list of edges.nodes ([CreatedPullRequestReviewContribution])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CreatedPullRequestReviewContributionEdgeAn edge in a connection.Fields for CreatedPullRequestReviewContributionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CreatedPullRequestReviewContribution)The item at the end of the edge.CreatedRepositoryContributionRepresents the contribution a user made on GitHub by creating a repository.CreatedRepositoryContribution ImplementsContributionFields for CreatedRepositoryContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.repository (Repository!)The repository that was created.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.CreatedRepositoryContributionConnectionThe connection type for CreatedRepositoryContribution.Fields for CreatedRepositoryContributionConnectionNameDescriptionedges ([CreatedRepositoryContributionEdge])A list of edges.nodes ([CreatedRepositoryContribution])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.CreatedRepositoryContributionEdgeAn edge in a connection.Fields for CreatedRepositoryContributionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (CreatedRepositoryContribution)The item at the end of the edge.CrossReferencedEventRepresents a mention made by one issue or pull request to another.CrossReferencedEvent ImplementsNodeUniformResourceLocatableFields for CrossReferencedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the CrossReferencedEvent object.isCrossRepository (Boolean!)Reference originated in a different repository.referencedAt (DateTime!)Identifies when the reference was made.resourcePath (URI!)The HTTP path for this pull request.source (ReferencedSubject!)Issue or pull request that made the reference.target (ReferencedSubject!)Issue or pull request to which the reference was made.url (URI!)The HTTP URL for this pull request.willCloseTarget (Boolean!)Checks if the target will be closed when the source is merged.CvssSeveritiesThe Common Vulnerability Scoring System.Fields for CvssSeveritiesNameDescriptioncvssV3 (CVSS)The CVSS v3 severity associated with this advisory.cvssV4 (CVSS)The CVSS v4 severity associated with this advisory.DemilestonedEventRepresents ademilestonedevent on a given issue or pull request.DemilestonedEvent ImplementsNodeFields for DemilestonedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the DemilestonedEvent object.milestoneTitle (String!)Identifies the milestone title associated with thedemilestonedevent.subject (MilestoneItem!)Object referenced by event.DependabotUpdateA Dependabot Update for a dependency in a repository.DependabotUpdate ImplementsRepositoryNodeFields for DependabotUpdateNameDescriptionerror (DependabotUpdateError)The error from a dependency update.pullRequest (PullRequest)The associated pull request.repository (Repository!)The repository associated with this node.DependabotUpdateErrorAn error produced from a Dependabot Update.Fields for DependabotUpdateErrorNameDescriptionbody (String!)The body of the error.errorType (String!)The error code.title (String!)The title of the error.DependencyGraphDependencyA dependency manifest entry.Fields for DependencyGraphDependencyNameDescriptionhasDependencies (Boolean!)Does the dependency itself have dependencies?.packageLabel (String!)The original name of the package, as it appears in the manifest.WarningpackageLabel is deprecated.packageLabel will be removed. Use normalized packageName field instead. Removal on 2022-10-01 UTC.packageManager (String)The dependency package manager.packageName (String!)The name of the package in the canonical form used by the package manager.packageUrl (URI)Public preview: The dependency package URL.relationship (String!)Public preview: The relationship of the dependency. Can be direct, transitive, or unknown.repository (Repository)The repository containing the package.requirements (String!)The dependency version requirements.DependencyGraphDependencyConnectionThe connection type for DependencyGraphDependency.Fields for DependencyGraphDependencyConnectionNameDescriptionedges ([DependencyGraphDependencyEdge])A list of edges.nodes ([DependencyGraphDependency])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DependencyGraphDependencyEdgeAn edge in a connection.Fields for DependencyGraphDependencyEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DependencyGraphDependency)The item at the end of the edge.DependencyGraphManifestDependency manifest for a repository.DependencyGraphManifest ImplementsNodeFields for DependencyGraphManifestNameDescriptionblobPath (String!)Path to view the manifest file blob.dependencies (DependencyGraphDependencyConnection)A list of manifest dependencies.Arguments for dependenciesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.dependenciesCount (Int)The number of dependencies listed in the manifest.exceedsMaxSize (Boolean!)Is the manifest too big to parse?.filename (String!)Fully qualified manifest filename.id (ID!)The Node ID of the DependencyGraphManifest object.parseable (Boolean!)Were we able to parse the manifest?.repository (Repository!)The repository containing the manifest.DependencyGraphManifestConnectionThe connection type for DependencyGraphManifest.Fields for DependencyGraphManifestConnectionNameDescriptionedges ([DependencyGraphManifestEdge])A list of edges.nodes ([DependencyGraphManifest])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DependencyGraphManifestEdgeAn edge in a connection.Fields for DependencyGraphManifestEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DependencyGraphManifest)The item at the end of the edge.DeployKeyA repository deploy key.DeployKey ImplementsNodeFields for DeployKeyNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.enabled (Boolean!)Whether or not the deploy key is enabled by policy at the Enterprise or Organization level.id (ID!)The Node ID of the DeployKey object.key (String!)The deploy key.readOnly (Boolean!)Whether or not the deploy key is read only.title (String!)The deploy key title.verified (Boolean!)Whether or not the deploy key has been verified.DeployKeyConnectionThe connection type for DeployKey.Fields for DeployKeyConnectionNameDescriptionedges ([DeployKeyEdge])A list of edges.nodes ([DeployKey])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeployKeyEdgeAn edge in a connection.Fields for DeployKeyEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeployKey)The item at the end of the edge.DeployedEventRepresents adeployedevent on a given pull request.DeployedEvent ImplementsNodeFields for DeployedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.deployment (Deployment!)The deployment associated with thedeployedevent.id (ID!)The Node ID of the DeployedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.ref (Ref)The ref associated with thedeployedevent.DeploymentRepresents triggered deployment instance.Deployment ImplementsNodeFields for DeploymentNameDescriptioncommit (Commit)Identifies the commit sha of the deployment.commitOid (String!)Identifies the oid of the deployment commit, even if the commit has been deleted.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor!)Identifies the actor who triggered the deployment.databaseId (Int)Identifies the primary key from the database.description (String)The deployment description.environment (String)The latest environment to which this deployment was made.id (ID!)The Node ID of the Deployment object.latestEnvironment (String)The latest environment to which this deployment was made.latestStatus (DeploymentStatus)The latest status of this deployment.originalEnvironment (String)The original environment to which this deployment was made.payload (String)Extra information that a deployment system might need.ref (Ref)Identifies the Ref of the deployment, if the deployment was created by ref.repository (Repository!)Identifies the repository associated with the deployment.state (DeploymentState)The current state of the deployment.statuses (DeploymentStatusConnection)A list of statuses associated with the deployment.Arguments for statusesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.task (String)The deployment task.updatedAt (DateTime!)Identifies the date and time when the object was last updated.DeploymentConnectionThe connection type for Deployment.Fields for DeploymentConnectionNameDescriptionedges ([DeploymentEdge])A list of edges.nodes ([Deployment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentEdgeAn edge in a connection.Fields for DeploymentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Deployment)The item at the end of the edge.DeploymentEnvironmentChangedEventRepresents adeployment_environment_changedevent on a given pull request.DeploymentEnvironmentChangedEvent ImplementsNodeFields for DeploymentEnvironmentChangedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.deploymentStatus (DeploymentStatus!)The deployment status that updated the deployment environment.id (ID!)The Node ID of the DeploymentEnvironmentChangedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.DeploymentProtectionRuleA protection rule.Fields for DeploymentProtectionRuleNameDescriptiondatabaseId (Int)Identifies the primary key from the database.preventSelfReview (Boolean)Whether deployments to this environment can be approved by the user who created the deployment.reviewers (DeploymentReviewerConnection!)The teams or users that can review the deployment.Arguments for reviewersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.timeout (Int!)The timeout in minutes for this protection rule.type (DeploymentProtectionRuleType!)The type of protection rule.DeploymentProtectionRuleConnectionThe connection type for DeploymentProtectionRule.Fields for DeploymentProtectionRuleConnectionNameDescriptionedges ([DeploymentProtectionRuleEdge])A list of edges.nodes ([DeploymentProtectionRule])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentProtectionRuleEdgeAn edge in a connection.Fields for DeploymentProtectionRuleEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeploymentProtectionRule)The item at the end of the edge.DeploymentRequestA request to deploy a workflow run to an environment.Fields for DeploymentRequestNameDescriptioncurrentUserCanApprove (Boolean!)Whether or not the current user can approve the deployment.environment (Environment!)The target environment of the deployment.reviewers (DeploymentReviewerConnection!)The teams or users that can review the deployment.Arguments for reviewersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.waitTimer (Int!)The wait timer in minutes configured in the environment.waitTimerStartedAt (DateTime)The wait timer in minutes configured in the environment.DeploymentRequestConnectionThe connection type for DeploymentRequest.Fields for DeploymentRequestConnectionNameDescriptionedges ([DeploymentRequestEdge])A list of edges.nodes ([DeploymentRequest])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentRequestEdgeAn edge in a connection.Fields for DeploymentRequestEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeploymentRequest)The item at the end of the edge.DeploymentReviewA deployment review.DeploymentReview ImplementsNodeFields for DeploymentReviewNameDescriptioncomment (String!)The comment the user left.databaseId (Int)Identifies the primary key from the database.environments (EnvironmentConnection!)The environments approved or rejected.Arguments for environmentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.id (ID!)The Node ID of the DeploymentReview object.state (DeploymentReviewState!)The decision of the user.user (User!)The user that reviewed the deployment.DeploymentReviewConnectionThe connection type for DeploymentReview.Fields for DeploymentReviewConnectionNameDescriptionedges ([DeploymentReviewEdge])A list of edges.nodes ([DeploymentReview])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentReviewEdgeAn edge in a connection.Fields for DeploymentReviewEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeploymentReview)The item at the end of the edge.DeploymentReviewerConnectionThe connection type for DeploymentReviewer.Fields for DeploymentReviewerConnectionNameDescriptionedges ([DeploymentReviewerEdge])A list of edges.nodes ([DeploymentReviewer])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentReviewerEdgeAn edge in a connection.Fields for DeploymentReviewerEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeploymentReviewer)The item at the end of the edge.DeploymentStatusDescribes the status of a given deployment attempt.DeploymentStatus ImplementsNodeFields for DeploymentStatusNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor!)Identifies the actor who triggered the deployment.deployment (Deployment!)Identifies the deployment associated with status.description (String)Identifies the description of the deployment.environment (String)Identifies the environment of the deployment at the time of this deployment status.environmentUrl (URI)Identifies the environment URL of the deployment.id (ID!)The Node ID of the DeploymentStatus object.logUrl (URI)Identifies the log URL of the deployment.state (DeploymentStatusState!)Identifies the current state of the deployment.updatedAt (DateTime!)Identifies the date and time when the object was last updated.DeploymentStatusConnectionThe connection type for DeploymentStatus.Fields for DeploymentStatusConnectionNameDescriptionedges ([DeploymentStatusEdge])A list of edges.nodes ([DeploymentStatus])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DeploymentStatusEdgeAn edge in a connection.Fields for DeploymentStatusEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DeploymentStatus)The item at the end of the edge.DisconnectedEventRepresents adisconnectedevent on a given issue or pull request.DisconnectedEvent ImplementsNodeFields for DisconnectedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the DisconnectedEvent object.isCrossRepository (Boolean!)Reference originated in a different repository.source (ReferencedSubject!)Issue or pull request from which the issue was disconnected.subject (ReferencedSubject!)Issue or pull request which was disconnected.DiscussionA discussion in a repository.Discussion ImplementsClosableCommentDeletableLabelableLockableNodeReactableRepositoryNodeSubscribableUpdatableVotableFields for DiscussionNameDescriptionactiveLockReason (LockReason)Reason that the conversation was locked.answer (DiscussionComment)The comment chosen as this discussion's answer, if any.answerChosenAt (DateTime)The time when a user chose this discussion's answer, if answered.answerChosenBy (Actor)The user who chose this discussion's answer, if answered.author (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)The main text of the discussion post.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.category (DiscussionCategory!)The category for this discussion.closed (Boolean!)Indicates if the object is closed (definition of closed may depend on type).closedAt (DateTime)Identifies the date and time when the object was closed.comments (DiscussionCommentConnection!)The replies to the discussion.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the Discussion object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isAnswered (Boolean)Only return answered/unanswered discussions.labels (LabelConnection)A list of labels associated with the object.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.lastEditedAt (DateTime)The moment the editor made the last edit.locked (Boolean!)true if the object is locked.number (Int!)The number identifying this discussion within the repository.poll (DiscussionPoll)The poll associated with this discussion, if one exists.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The path for this discussion.stateReason (DiscussionStateReason)Identifies the reason for the discussion's state.title (String!)The title of this discussion.updatedAt (DateTime!)Identifies the date and time when the object was last updated.upvoteCount (Int!)Number of upvotes that this subject has received.url (URI!)The URL for this discussion.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanLabel (Boolean!)Indicates if the viewer can edit labels for this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCanUpvote (Boolean!)Whether or not the current user can add or remove an upvote on this subject.viewerDidAuthor (Boolean!)Did the viewer author this comment.viewerHasUpvoted (Boolean!)Whether or not the current user has already upvoted this subject.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.DiscussionCategoryA category for discussions in a repository.DiscussionCategory ImplementsNodeRepositoryNodeFields for DiscussionCategoryNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.description (String)A description of this category.emoji (String!)An emoji representing this category.emojiHTML (HTML!)This category's emoji rendered as HTML.id (ID!)The Node ID of the DiscussionCategory object.isAnswerable (Boolean!)Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.name (String!)The name of this category.repository (Repository!)The repository associated with this node.slug (String!)The slug of this category.updatedAt (DateTime!)Identifies the date and time when the object was last updated.DiscussionCategoryConnectionThe connection type for DiscussionCategory.Fields for DiscussionCategoryConnectionNameDescriptionedges ([DiscussionCategoryEdge])A list of edges.nodes ([DiscussionCategory])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DiscussionCategoryEdgeAn edge in a connection.Fields for DiscussionCategoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DiscussionCategory)The item at the end of the edge.DiscussionCommentA comment on a discussion.DiscussionComment ImplementsCommentDeletableMinimizableNodeReactableUpdatableUpdatableCommentVotableFields for DiscussionCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.deletedAt (DateTime)The time when this replied-to comment was deleted.discussion (Discussion)The discussion this comment was created in.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the DiscussionComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isAnswer (Boolean!)Has this comment been chosen as the answer of its discussion?.isMinimized (Boolean!)Returns whether or not a comment has been minimized.lastEditedAt (DateTime)The moment the editor made the last edit.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.replies (DiscussionCommentConnection!)The threaded replies to this comment.Arguments for repliesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.replyTo (DiscussionComment)The discussion comment this comment is a reply to.resourcePath (URI!)The path for this discussion comment.updatedAt (DateTime!)Identifies the date and time when the object was last updated.upvoteCount (Int!)Number of upvotes that this subject has received.url (URI!)The URL for this discussion comment.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMarkAsAnswer (Boolean!)Can the current user mark this comment as an answer?.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUnmarkAsAnswer (Boolean!)Can the current user unmark this comment as an answer?.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCanUpvote (Boolean!)Whether or not the current user can add or remove an upvote on this subject.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.viewerHasUpvoted (Boolean!)Whether or not the current user has already upvoted this subject.DiscussionCommentConnectionThe connection type for DiscussionComment.Fields for DiscussionCommentConnectionNameDescriptionedges ([DiscussionCommentEdge])A list of edges.nodes ([DiscussionComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DiscussionCommentEdgeAn edge in a connection.Fields for DiscussionCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DiscussionComment)The item at the end of the edge.DiscussionConnectionThe connection type for Discussion.Fields for DiscussionConnectionNameDescriptionedges ([DiscussionEdge])A list of edges.nodes ([Discussion])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DiscussionEdgeAn edge in a connection.Fields for DiscussionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Discussion)The item at the end of the edge.DiscussionPollA poll for a discussion.DiscussionPoll ImplementsNodeFields for DiscussionPollNameDescriptiondiscussion (Discussion)The discussion that this poll belongs to.id (ID!)The Node ID of the DiscussionPoll object.options (DiscussionPollOptionConnection)The options for this poll.Arguments for optionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DiscussionPollOptionOrder)How to order the options for the discussion poll.question (String!)The question that is being asked by this poll.totalVoteCount (Int!)The total number of votes that have been cast for this poll.viewerCanVote (Boolean!)Indicates if the viewer has permission to vote in this poll.viewerHasVoted (Boolean!)Indicates if the viewer has voted for any option in this poll.DiscussionPollOptionAn option for a discussion poll.DiscussionPollOption ImplementsNodeFields for DiscussionPollOptionNameDescriptionid (ID!)The Node ID of the DiscussionPollOption object.option (String!)The text for this option.poll (DiscussionPoll)The discussion poll that this option belongs to.totalVoteCount (Int!)The total number of votes that have been cast for this option.viewerHasVoted (Boolean!)Indicates if the viewer has voted for this option in the poll.DiscussionPollOptionConnectionThe connection type for DiscussionPollOption.Fields for DiscussionPollOptionConnectionNameDescriptionedges ([DiscussionPollOptionEdge])A list of edges.nodes ([DiscussionPollOption])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.DiscussionPollOptionEdgeAn edge in a connection.Fields for DiscussionPollOptionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (DiscussionPollOption)The item at the end of the edge.DraftIssueA draft issue within a project.DraftIssue ImplementsNodeFields for DraftIssueNameDescriptionassignees (UserConnection!)A list of users to assigned to this draft issue.Arguments for assigneesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.body (String!)The body of the draft issue.bodyHTML (HTML!)The body of the draft issue rendered to HTML.bodyText (String!)The body of the draft issue rendered to text.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created this draft issue.id (ID!)The Node ID of the DraftIssue object.projectV2Items (ProjectV2ItemConnection!)List of items linked with the draft issue (currently draft issue can be linked to only one item).Arguments for projectV2Itemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.projectsV2 (ProjectV2Connection!)Projects that link to this draft issue (currently draft issue can be linked to only one project).Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.title (String!)The title of the draft issue.updatedAt (DateTime!)Identifies the date and time when the object was last updated.EPSSThe Exploit Prediction Scoring System.Fields for EPSSNameDescriptionpercentage (Float)The EPSS percentage represents the likelihood of a CVE being exploited.percentile (Float)The EPSS percentile represents the relative rank of the CVE's likelihood of being exploited compared to other CVEs.EnterpriseAn account to manage multiple organizations with consolidated policy and billing.Enterprise ImplementsNodeFields for EnterpriseNameDescriptionannouncementBanner (AnnouncementBanner)The announcement banner set on this enterprise, if any. Only visible to members of the enterprise.avatarUrl (URI!)A URL pointing to the enterprise's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.billingEmail (String)The enterprise's billing email.billingInfo (EnterpriseBillingInfo)Enterprise billing information visible to enterprise billing managers.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.description (String)The description of the enterprise.descriptionHTML (HTML!)The description of the enterprise as HTML.id (ID!)The Node ID of the Enterprise object.location (String)The location of the enterprise.members (EnterpriseMemberConnection!)A list of users who are members of this enterprise.Arguments for membersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.deployment (EnterpriseUserDeployment)Only return members within the selected GitHub Enterprise deployment.first (Int)Returns the first n elements from the list.hasTwoFactorEnabled (Boolean)Only return members with this two-factor authentication status. Does not
include members who only have an account on a GitHub Enterprise Server instance.
Upcoming Change on 2025-04-01 UTC
Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.
Reason: has_two_factor_enabled will be removed.last (Int)Returns the last n elements from the list.orderBy (EnterpriseMemberOrder)Ordering options for members returned from the connection.organizationLogins ([String!])Only return members within the organizations with these logins.query (String)The search string to look for.role (EnterpriseUserAccountMembershipRole)The role of the user in the enterprise organization or server.twoFactorMethodSecurity (TwoFactorCredentialSecurityType)Only return members with this type of two-factor authentication method. Does
not include members who only have an account on a GitHub Enterprise Server instance.name (String!)The name of the enterprise.organizations (OrganizationConnection!)A list of organizations that belong to this enterprise.Arguments for organizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations returned from the connection.query (String)The search string to look for.viewerOrganizationRole (RoleInOrganization)The viewer's role in an organization.ownerInfo (EnterpriseOwnerInfo)Enterprise information visible to enterprise owners or enterprise owners'
personal access tokens (classic) with read:enterprise or admin:enterprise scope.readme (String)The raw content of the enterprise README.readmeHTML (HTML!)The content of the enterprise README as HTML.resourcePath (URI!)The HTTP path for this enterprise.ruleset (RepositoryRuleset)Returns a single ruleset from the current enterprise by ID.Arguments for rulesetdatabaseId (Int!)The ID of the ruleset to be returned.rulesets (RepositoryRulesetConnection)A list of rulesets for this enterprise.Arguments for rulesetsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.slug (String!)The URL-friendly identifier for the enterprise.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this enterprise.userNamespaceRepositories (UserNamespaceRepositoryConnection!)A list of repositories that belong to users. Only available for enterprises with Enterprise Managed Users.Arguments for userNamespaceRepositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.query (String)The search string to look for.viewerIsAdmin (Boolean!)Is the current viewer an admin of this enterprise?.websiteUrl (URI)The URL of the enterprise website.EnterpriseAdministratorConnectionThe connection type for User.Fields for EnterpriseAdministratorConnectionNameDescriptionedges ([EnterpriseAdministratorEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseAdministratorEdgeA User who is an administrator of an enterprise.Fields for EnterpriseAdministratorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User)The item at the end of the edge.role (EnterpriseAdministratorRole!)The role of the administrator.EnterpriseAdministratorInvitationAn invitation for a user to become an owner or billing manager of an enterprise.EnterpriseAdministratorInvitation ImplementsNodeFields for EnterpriseAdministratorInvitationNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.email (String)The email of the person who was invited to the enterprise.enterprise (Enterprise!)The enterprise the invitation is for.id (ID!)The Node ID of the EnterpriseAdministratorInvitation object.invitee (User)The user who was invited to the enterprise.inviter (User)The user who created the invitation.role (EnterpriseAdministratorRole!)The invitee's pending role in the enterprise (owner or billing_manager).EnterpriseAdministratorInvitationConnectionThe connection type for EnterpriseAdministratorInvitation.Fields for EnterpriseAdministratorInvitationConnectionNameDescriptionedges ([EnterpriseAdministratorInvitationEdge])A list of edges.nodes ([EnterpriseAdministratorInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseAdministratorInvitationEdgeAn edge in a connection.Fields for EnterpriseAdministratorInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseAdministratorInvitation)The item at the end of the edge.EnterpriseBillingInfoEnterprise billing information visible to enterprise billing managers and owners.Fields for EnterpriseBillingInfoNameDescriptionallLicensableUsersCount (Int!)The number of licenseable users/emails across the enterprise.assetPacks (Int!)The number of data packs used by all organizations owned by the enterprise.bandwidthQuota (Float!)The bandwidth quota in GB for all organizations owned by the enterprise.bandwidthUsage (Float!)The bandwidth usage in GB for all organizations owned by the enterprise.bandwidthUsagePercentage (Int!)The bandwidth usage as a percentage of the bandwidth quota.storageQuota (Float!)The storage quota in GB for all organizations owned by the enterprise.storageUsage (Float!)The storage usage in GB for all organizations owned by the enterprise.storageUsagePercentage (Int!)The storage usage as a percentage of the storage quota.totalAvailableLicenses (Int!)The number of available licenses across all owned organizations based on the unique number of billable users.totalLicenses (Int!)The total number of licenses allocated.EnterpriseConnectionThe connection type for Enterprise.Fields for EnterpriseConnectionNameDescriptionedges ([EnterpriseEdge])A list of edges.nodes ([Enterprise])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseEdgeAn edge in a connection.Fields for EnterpriseEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Enterprise)The item at the end of the edge.EnterpriseFailedInvitationConnectionThe connection type for OrganizationInvitation.Fields for EnterpriseFailedInvitationConnectionNameDescriptionedges ([EnterpriseFailedInvitationEdge])A list of edges.nodes ([OrganizationInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.totalUniqueUserCount (Int!)Identifies the total count of unique users in the connection.EnterpriseFailedInvitationEdgeA failed invitation to be a member in an enterprise organization.Fields for EnterpriseFailedInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (OrganizationInvitation)The item at the end of the edge.EnterpriseIdentityProviderAn identity provider configured to provision identities for an enterprise.
Visible to enterprise owners or enterprise owners' personal access tokens
(classic) with read:enterprise or admin:enterprise scope.EnterpriseIdentityProvider ImplementsNodeFields for EnterpriseIdentityProviderNameDescriptiondigestMethod (SamlDigestAlgorithm)The digest algorithm used to sign SAML requests for the identity provider.enterprise (Enterprise)The enterprise this identity provider belongs to.externalIdentities (ExternalIdentityConnection!)ExternalIdentities provisioned by this identity provider.Arguments for externalIdentitiesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.login (String)Filter to external identities with the users login.membersOnly (Boolean)Filter to external identities with valid org membership only.userName (String)Filter to external identities with the users userName/NameID attribute.id (ID!)The Node ID of the EnterpriseIdentityProvider object.idpCertificate (X509Certificate)The x509 certificate used by the identity provider to sign assertions and responses.issuer (String)The Issuer Entity ID for the SAML identity provider.recoveryCodes ([String!])Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable.signatureMethod (SamlSignatureAlgorithm)The signature algorithm used to sign SAML requests for the identity provider.ssoUrl (URI)The URL endpoint for the identity provider's SAML SSO.EnterpriseMemberConnectionThe connection type for EnterpriseMember.Fields for EnterpriseMemberConnectionNameDescriptionedges ([EnterpriseMemberEdge])A list of edges.nodes ([EnterpriseMember])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseMemberEdgeA User who is a member of an enterprise through one or more organizations.Fields for EnterpriseMemberEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseMember)The item at the end of the edge.EnterpriseMemberInvitationAn invitation for a user to become an unaffiliated member of an enterprise.EnterpriseMemberInvitation ImplementsNodeFields for EnterpriseMemberInvitationNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.email (String)The email of the person who was invited to the enterprise.enterprise (Enterprise!)The enterprise the invitation is for.id (ID!)The Node ID of the EnterpriseMemberInvitation object.invitee (User)The user who was invited to the enterprise.inviter (User)The user who created the invitation.EnterpriseMemberInvitationConnectionThe connection type for EnterpriseMemberInvitation.Fields for EnterpriseMemberInvitationConnectionNameDescriptionedges ([EnterpriseMemberInvitationEdge])A list of edges.nodes ([EnterpriseMemberInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseMemberInvitationEdgeAn edge in a connection.Fields for EnterpriseMemberInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseMemberInvitation)The item at the end of the edge.EnterpriseOrganizationMembershipConnectionThe connection type for Organization.Fields for EnterpriseOrganizationMembershipConnectionNameDescriptionedges ([EnterpriseOrganizationMembershipEdge])A list of edges.nodes ([Organization])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseOrganizationMembershipEdgeAn enterprise organization that a user is a member of.Fields for EnterpriseOrganizationMembershipEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Organization)The item at the end of the edge.role (EnterpriseUserAccountMembershipRole!)The role of the user in the enterprise membership.EnterpriseOutsideCollaboratorConnectionThe connection type for User.Fields for EnterpriseOutsideCollaboratorConnectionNameDescriptionedges ([EnterpriseOutsideCollaboratorEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseOutsideCollaboratorEdgeA User who is an outside collaborator of an enterprise through one or more organizations.Fields for EnterpriseOutsideCollaboratorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User)The item at the end of the edge.repositories (EnterpriseRepositoryInfoConnection!)The enterprise organization repositories this user is a member of.Arguments for repositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories.EnterpriseOwnerInfoEnterprise information visible to enterprise owners or enterprise owners'
personal access tokens (classic) with read:enterprise or admin:enterprise scope.Fields for EnterpriseOwnerInfoNameDescriptionadmins (EnterpriseAdministratorConnection!)A list of all of the administrators for this enterprise.Arguments for adminsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasTwoFactorEnabled (Boolean)Only return administrators with this two-factor authentication status.
Upcoming Change on 2025-04-01 UTC
Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.
Reason: has_two_factor_enabled will be removed.last (Int)Returns the last n elements from the list.orderBy (EnterpriseMemberOrder)Ordering options for administrators returned from the connection.organizationLogins ([String!])Only return members within the organizations with these logins.query (String)The search string to look for.role (EnterpriseAdministratorRole)The role to filter by.twoFactorMethodSecurity (TwoFactorCredentialSecurityType)Only return outside collaborators with this type of two-factor authentication method.affiliatedUsersWithTwoFactorDisabled (UserConnection!)A list of users in the enterprise who currently have two-factor authentication disabled.Arguments for affiliatedUsersWithTwoFactorDisabledafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.affiliatedUsersWithTwoFactorDisabledExist (Boolean!)Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.allowPrivateRepositoryForkingSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.allowPrivateRepositoryForkingSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided private repository forking setting value.Arguments for allowPrivateRepositoryForkingSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.allowPrivateRepositoryForkingSettingPolicyValue (EnterpriseAllowPrivateRepositoryForkingPolicyValue)The value for the allow private repository forking policy on the enterprise.defaultRepositoryPermissionSetting (EnterpriseDefaultRepositoryPermissionSettingValue!)The setting value for base repository permissions for organizations in this enterprise.defaultRepositoryPermissionSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided base repository permission.Arguments for defaultRepositoryPermissionSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (DefaultRepositoryPermissionField!)The permission to find organizations for.domains (VerifiableDomainConnection!)A list of domains owned by the enterprise. Visible to enterprise owners or
enterprise owners' personal access tokens (classic) with admin:enterprise scope.Arguments for domainsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.isApproved (Boolean)Filter whether or not the domain is approved.isVerified (Boolean)Filter whether or not the domain is verified.last (Int)Returns the last n elements from the list.orderBy (VerifiableDomainOrder)Ordering options for verifiable domains returned.enterpriseServerInstallations (EnterpriseServerInstallationConnection!)Enterprise Server installations owned by the enterprise.Arguments for enterpriseServerInstallationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.connectedOnly (Boolean)Whether or not to only return installations discovered via GitHub Connect.The default value is false.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseServerInstallationOrder)Ordering options for Enterprise Server installations returned.failedInvitations (EnterpriseFailedInvitationConnection!)A list of failed invitations in the enterprise.Arguments for failedInvitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)The search string to look for.ipAllowListEnabledSetting (IpAllowListEnabledSettingValue!)The setting value for whether the enterprise has an IP allow list enabled.ipAllowListEntries (IpAllowListEntryConnection!)The IP addresses that are allowed to access resources owned by the enterprise.
Visible to enterprise owners or enterprise owners' personal access tokens
(classic) with admin:enterprise scope.Arguments for ipAllowListEntriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IpAllowListEntryOrder)Ordering options for IP allow list entries returned.ipAllowListForInstalledAppsEnabledSetting (IpAllowListForInstalledAppsEnabledSettingValue!)The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.isUpdatingDefaultRepositoryPermission (Boolean!)Whether or not the base repository permission is currently being updated.isUpdatingTwoFactorRequirement (Boolean!)Whether the two-factor authentication requirement is currently being enforced.membersCanChangeRepositoryVisibilitySetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether organization members with admin permissions on a
repository can change repository visibility.membersCanChangeRepositoryVisibilitySettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided can change repository visibility setting value.Arguments for membersCanChangeRepositoryVisibilitySettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.membersCanCreateInternalRepositoriesSetting (Boolean)The setting value for whether members of organizations in the enterprise can create internal repositories.membersCanCreatePrivateRepositoriesSetting (Boolean)The setting value for whether members of organizations in the enterprise can create private repositories.membersCanCreatePublicRepositoriesSetting (Boolean)The setting value for whether members of organizations in the enterprise can create public repositories.membersCanCreateRepositoriesSetting (EnterpriseMembersCanCreateRepositoriesSettingValue)The setting value for whether members of organizations in the enterprise can create repositories.membersCanCreateRepositoriesSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided repository creation setting value.Arguments for membersCanCreateRepositoriesSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (OrganizationMembersCanCreateRepositoriesSettingValue!)The setting to find organizations for.membersCanDeleteIssuesSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether members with admin permissions for repositories can delete issues.membersCanDeleteIssuesSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided members can delete issues setting value.Arguments for membersCanDeleteIssuesSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.membersCanDeleteRepositoriesSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether members with admin permissions for repositories can delete or transfer repositories.membersCanDeleteRepositoriesSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided members can delete repositories setting value.Arguments for membersCanDeleteRepositoriesSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.membersCanInviteCollaboratorsSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether members of organizations in the enterprise can invite outside collaborators.membersCanInviteCollaboratorsSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided members can invite collaborators setting value.Arguments for membersCanInviteCollaboratorsSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.membersCanMakePurchasesSetting (EnterpriseMembersCanMakePurchasesSettingValue!)Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.membersCanUpdateProtectedBranchesSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether members with admin permissions for repositories can update protected branches.membersCanUpdateProtectedBranchesSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided members can update protected branches setting value.Arguments for membersCanUpdateProtectedBranchesSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.membersCanViewDependencyInsightsSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether members can view dependency insights.membersCanViewDependencyInsightsSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided members can view dependency insights setting value.Arguments for membersCanViewDependencyInsightsSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.notificationDeliveryRestrictionEnabledSetting (NotificationRestrictionSettingValue!)Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.oidcProvider (OIDCProvider)The OIDC Identity Provider for the enterprise.organizationProjectsSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether organization projects are enabled for organizations in this enterprise.organizationProjectsSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided organization projects setting value.Arguments for organizationProjectsSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.outsideCollaborators (EnterpriseOutsideCollaboratorConnection!)A list of outside collaborators across the repositories in the enterprise.Arguments for outsideCollaboratorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasTwoFactorEnabled (Boolean)Only return outside collaborators with this two-factor authentication status.
Upcoming Change on 2025-04-01 UTC
Description: hasTwoFactorEnabled will be removed. Use two_factor_method_security instead.
Reason: has_two_factor_enabled will be removed.last (Int)Returns the last n elements from the list.login (String)The login of one specific outside collaborator.orderBy (EnterpriseMemberOrder)Ordering options for outside collaborators returned from the connection.organizationLogins ([String!])Only return outside collaborators within the organizations with these logins.query (String)The search string to look for.twoFactorMethodSecurity (TwoFactorCredentialSecurityType)Only return outside collaborators with this type of two-factor authentication method.visibility (RepositoryVisibility)Only return outside collaborators on repositories with this visibility.pendingAdminInvitations (EnterpriseAdministratorInvitationConnection!)A list of pending administrator invitations for the enterprise.Arguments for pendingAdminInvitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseAdministratorInvitationOrder)Ordering options for pending enterprise administrator invitations returned from the connection.query (String)The search string to look for.role (EnterpriseAdministratorRole)The role to filter by.pendingCollaboratorInvitations (RepositoryInvitationConnection!)A list of pending collaborator invitations across the repositories in the enterprise.Arguments for pendingCollaboratorInvitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryInvitationOrder)Ordering options for pending repository collaborator invitations returned from the connection.query (String)The search string to look for.pendingMemberInvitations (EnterprisePendingMemberInvitationConnection!)A list of pending member invitations for organizations in the enterprise.Arguments for pendingMemberInvitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.invitationSource (OrganizationInvitationSource)Only return invitations matching this invitation source.last (Int)Returns the last n elements from the list.organizationLogins ([String!])Only return invitations within the organizations with these logins.query (String)The search string to look for.pendingUnaffiliatedMemberInvitations (EnterpriseMemberInvitationConnection!)A list of pending unaffiliated member invitations for the enterprise.Arguments for pendingUnaffiliatedMemberInvitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseMemberInvitationOrder)Ordering options for pending enterprise member invitations returned from the connection.query (String)The search string to look for.repositoryDeployKeySetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether deploy keys are enabled for repositories in organizations in this enterprise.repositoryDeployKeySettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided deploy keys setting value.Arguments for repositoryDeployKeySettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.repositoryProjectsSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether repository projects are enabled in this enterprise.repositoryProjectsSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided repository projects setting value.Arguments for repositoryProjectsSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.samlIdentityProvider (EnterpriseIdentityProvider)The SAML Identity Provider for the enterprise.samlIdentityProviderSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the SAML single sign-on setting value.Arguments for samlIdentityProviderSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (IdentityProviderConfigurationState!)The setting value to find organizations for.supportEntitlements (EnterpriseMemberConnection!)A list of members with a support entitlement.Arguments for supportEntitlementsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseMemberOrder)Ordering options for support entitlement users returned from the connection.teamDiscussionsSetting (EnterpriseEnabledDisabledSettingValue!)The setting value for whether team discussions are enabled for organizations in this enterprise.teamDiscussionsSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the provided team discussions setting value.Arguments for teamDiscussionsSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.twoFactorDisallowedMethodsSetting (EnterpriseDisallowedMethodsSettingValue!)The setting value for what methods of two-factor authentication the enterprise prevents its users from having.twoFactorRequiredSetting (EnterpriseEnabledSettingValue!)The setting value for whether the enterprise requires two-factor authentication for its organizations and users.twoFactorRequiredSettingOrganizations (OrganizationConnection!)A list of enterprise organizations configured with the two-factor authentication setting value.Arguments for twoFactorRequiredSettingOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations with this setting.value (Boolean!)The setting value to find organizations for.EnterprisePendingMemberInvitationConnectionThe connection type for OrganizationInvitation.Fields for EnterprisePendingMemberInvitationConnectionNameDescriptionedges ([EnterprisePendingMemberInvitationEdge])A list of edges.nodes ([OrganizationInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.totalUniqueUserCount (Int!)Identifies the total count of unique users in the connection.EnterprisePendingMemberInvitationEdgeAn invitation to be a member in an enterprise organization.Fields for EnterprisePendingMemberInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (OrganizationInvitation)The item at the end of the edge.EnterpriseRepositoryInfoA subset of repository information queryable from an enterprise.EnterpriseRepositoryInfo ImplementsNodeFields for EnterpriseRepositoryInfoNameDescriptionid (ID!)The Node ID of the EnterpriseRepositoryInfo object.isPrivate (Boolean!)Identifies if the repository is private or internal.name (String!)The repository's name.nameWithOwner (String!)The repository's name with owner.EnterpriseRepositoryInfoConnectionThe connection type for EnterpriseRepositoryInfo.Fields for EnterpriseRepositoryInfoConnectionNameDescriptionedges ([EnterpriseRepositoryInfoEdge])A list of edges.nodes ([EnterpriseRepositoryInfo])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseRepositoryInfoEdgeAn edge in a connection.Fields for EnterpriseRepositoryInfoEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseRepositoryInfo)The item at the end of the edge.EnterpriseServerInstallationAn Enterprise Server installation.EnterpriseServerInstallation ImplementsNodeFields for EnterpriseServerInstallationNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.customerName (String!)The customer name to which the Enterprise Server installation belongs.hostName (String!)The host name of the Enterprise Server installation.id (ID!)The Node ID of the EnterpriseServerInstallation object.isConnected (Boolean!)Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect.updatedAt (DateTime!)Identifies the date and time when the object was last updated.userAccounts (EnterpriseServerUserAccountConnection!)User accounts on this Enterprise Server installation.Arguments for userAccountsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseServerUserAccountOrder)Ordering options for Enterprise Server user accounts returned from the connection.userAccountsUploads (EnterpriseServerUserAccountsUploadConnection!)User accounts uploads for the Enterprise Server installation.Arguments for userAccountsUploadsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseServerUserAccountsUploadOrder)Ordering options for Enterprise Server user accounts uploads returned from the connection.EnterpriseServerInstallationConnectionThe connection type for EnterpriseServerInstallation.Fields for EnterpriseServerInstallationConnectionNameDescriptionedges ([EnterpriseServerInstallationEdge])A list of edges.nodes ([EnterpriseServerInstallation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseServerInstallationEdgeAn edge in a connection.Fields for EnterpriseServerInstallationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseServerInstallation)The item at the end of the edge.EnterpriseServerInstallationMembershipConnectionThe connection type for EnterpriseServerInstallation.Fields for EnterpriseServerInstallationMembershipConnectionNameDescriptionedges ([EnterpriseServerInstallationMembershipEdge])A list of edges.nodes ([EnterpriseServerInstallation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseServerInstallationMembershipEdgeAn Enterprise Server installation that a user is a member of.Fields for EnterpriseServerInstallationMembershipEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseServerInstallation)The item at the end of the edge.role (EnterpriseUserAccountMembershipRole!)The role of the user in the enterprise membership.EnterpriseServerUserAccountA user account on an Enterprise Server installation.EnterpriseServerUserAccount ImplementsNodeFields for EnterpriseServerUserAccountNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.emails (EnterpriseServerUserAccountEmailConnection!)User emails belonging to this user account.Arguments for emailsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseServerUserAccountEmailOrder)Ordering options for Enterprise Server user account emails returned from the connection.enterpriseServerInstallation (EnterpriseServerInstallation!)The Enterprise Server installation on which this user account exists.id (ID!)The Node ID of the EnterpriseServerUserAccount object.isSiteAdmin (Boolean!)Whether the user account is a site administrator on the Enterprise Server installation.login (String!)The login of the user account on the Enterprise Server installation.profileName (String)The profile name of the user account on the Enterprise Server installation.remoteCreatedAt (DateTime!)The date and time when the user account was created on the Enterprise Server installation.remoteUserId (Int!)The ID of the user account on the Enterprise Server installation.updatedAt (DateTime!)Identifies the date and time when the object was last updated.EnterpriseServerUserAccountConnectionThe connection type for EnterpriseServerUserAccount.Fields for EnterpriseServerUserAccountConnectionNameDescriptionedges ([EnterpriseServerUserAccountEdge])A list of edges.nodes ([EnterpriseServerUserAccount])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseServerUserAccountEdgeAn edge in a connection.Fields for EnterpriseServerUserAccountEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseServerUserAccount)The item at the end of the edge.EnterpriseServerUserAccountEmailAn email belonging to a user account on an Enterprise Server installation.EnterpriseServerUserAccountEmail ImplementsNodeFields for EnterpriseServerUserAccountEmailNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.email (String!)The email address.id (ID!)The Node ID of the EnterpriseServerUserAccountEmail object.isPrimary (Boolean!)Indicates whether this is the primary email of the associated user account.updatedAt (DateTime!)Identifies the date and time when the object was last updated.userAccount (EnterpriseServerUserAccount!)The user account to which the email belongs.EnterpriseServerUserAccountEmailConnectionThe connection type for EnterpriseServerUserAccountEmail.Fields for EnterpriseServerUserAccountEmailConnectionNameDescriptionedges ([EnterpriseServerUserAccountEmailEdge])A list of edges.nodes ([EnterpriseServerUserAccountEmail])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseServerUserAccountEmailEdgeAn edge in a connection.Fields for EnterpriseServerUserAccountEmailEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseServerUserAccountEmail)The item at the end of the edge.EnterpriseServerUserAccountsUploadA user accounts upload from an Enterprise Server installation.EnterpriseServerUserAccountsUpload ImplementsNodeFields for EnterpriseServerUserAccountsUploadNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.enterprise (Enterprise!)The enterprise to which this upload belongs.enterpriseServerInstallation (EnterpriseServerInstallation!)The Enterprise Server installation for which this upload was generated.id (ID!)The Node ID of the EnterpriseServerUserAccountsUpload object.name (String!)The name of the file uploaded.syncState (EnterpriseServerUserAccountsUploadSyncState!)The synchronization state of the upload.updatedAt (DateTime!)Identifies the date and time when the object was last updated.EnterpriseServerUserAccountsUploadConnectionThe connection type for EnterpriseServerUserAccountsUpload.Fields for EnterpriseServerUserAccountsUploadConnectionNameDescriptionedges ([EnterpriseServerUserAccountsUploadEdge])A list of edges.nodes ([EnterpriseServerUserAccountsUpload])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnterpriseServerUserAccountsUploadEdgeAn edge in a connection.Fields for EnterpriseServerUserAccountsUploadEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (EnterpriseServerUserAccountsUpload)The item at the end of the edge.EnterpriseUserAccountAn account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.EnterpriseUserAccount ImplementsActorNodeFields for EnterpriseUserAccountNameDescriptionavatarUrl (URI!)A URL pointing to the enterprise user account's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.createdAt (DateTime!)Identifies the date and time when the object was created.enterprise (Enterprise!)The enterprise in which this user account exists.enterpriseInstallations (EnterpriseServerInstallationMembershipConnection!)A list of Enterprise Server installations this user is a member of.Arguments for enterpriseInstallationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (EnterpriseServerInstallationOrder)Ordering options for installations returned from the connection.query (String)The search string to look for.role (EnterpriseUserAccountMembershipRole)The role of the user in the installation.id (ID!)The Node ID of the EnterpriseUserAccount object.login (String!)An identifier for the enterprise user account, a login or email address.name (String)The name of the enterprise user account.organizations (EnterpriseOrganizationMembershipConnection!)A list of enterprise organizations this user is a member of.Arguments for organizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for organizations returned from the connection.query (String)The search string to look for.role (EnterpriseUserAccountMembershipRole)The role of the user in the enterprise organization.resourcePath (URI!)The HTTP path for this user.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this user.user (User)The user within the enterprise.EnvironmentAn environment.Environment ImplementsNodeFields for EnvironmentNameDescriptiondatabaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the Environment object.isPinned (Boolean)Indicates whether or not this environment is currently pinned to the repository.latestCompletedDeployment (Deployment)The latest completed deployment with status success, failure, or error if it exists.name (String!)The name of the environment.pinnedPosition (Int)The position of the environment if it is pinned, null if it is not pinned.protectionRules (DeploymentProtectionRuleConnection!)The protection rules defined for this environment.Arguments for protectionRulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.EnvironmentConnectionThe connection type for Environment.Fields for EnvironmentConnectionNameDescriptionedges ([EnvironmentEdge])A list of edges.nodes ([Environment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.EnvironmentEdgeAn edge in a connection.Fields for EnvironmentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Environment)The item at the end of the edge.ExternalIdentityAn external identity provisioned by SAML SSO or SCIM. If SAML is configured on
the organization, the external identity is visible to (1) organization owners,
(2) organization owners' personal access tokens (classic) with read:org or
admin:org scope, (3) GitHub App with an installation token with read or write
access to members. If SAML is configured on the enterprise, the external
identity is visible to (1) enterprise owners, (2) enterprise owners' personal
access tokens (classic) with read:enterprise or admin:enterprise scope.ExternalIdentity ImplementsNodeFields for ExternalIdentityNameDescriptionguid (String!)The GUID for this identity.id (ID!)The Node ID of the ExternalIdentity object.organizationInvitation (OrganizationInvitation)Organization invitation for this SCIM-provisioned external identity.samlIdentity (ExternalIdentitySamlAttributes)SAML Identity attributes.scimIdentity (ExternalIdentityScimAttributes)SCIM Identity attributes.user (User)User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.ExternalIdentityAttributeAn attribute for the External Identity attributes collection.Fields for ExternalIdentityAttributeNameDescriptionmetadata (String)The attribute metadata as JSON.name (String!)The attribute name.value (String!)The attribute value.ExternalIdentityConnectionThe connection type for ExternalIdentity.Fields for ExternalIdentityConnectionNameDescriptionedges ([ExternalIdentityEdge])A list of edges.nodes ([ExternalIdentity])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ExternalIdentityEdgeAn edge in a connection.Fields for ExternalIdentityEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ExternalIdentity)The item at the end of the edge.ExternalIdentitySamlAttributesSAML attributes for the External Identity.Fields for ExternalIdentitySamlAttributesNameDescriptionattributes ([ExternalIdentityAttribute!]!)SAML Identity attributes.emails ([UserEmailMetadata!])The emails associated with the SAML identity.familyName (String)Family name of the SAML identity.givenName (String)Given name of the SAML identity.groups ([String!])The groups linked to this identity in IDP.nameId (String)The NameID of the SAML identity.username (String)The userName of the SAML identity.ExternalIdentityScimAttributesSCIM attributes for the External Identity.Fields for ExternalIdentityScimAttributesNameDescriptionemails ([UserEmailMetadata!])The emails associated with the SCIM identity.familyName (String)Family name of the SCIM identity.givenName (String)Given name of the SCIM identity.groups ([String!])The groups linked to this identity in IDP.username (String)The userName of the SCIM identity.FileExtensionRestrictionParametersPrevent commits that include files with specified file extensions from being pushed to the commit graph.Fields for FileExtensionRestrictionParametersNameDescriptionrestrictedFileExtensions ([String!]!)The file extensions that are restricted from being pushed to the commit graph.FilePathRestrictionParametersPrevent commits that include changes in specified file and folder paths from
being pushed to the commit graph. This includes absolute paths that contain file names.Fields for FilePathRestrictionParametersNameDescriptionrestrictedFilePaths ([String!]!)The file paths that are restricted from being pushed to the commit graph.FollowerConnectionThe connection type for User.Fields for FollowerConnectionNameDescriptionedges ([UserEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.FollowingConnectionThe connection type for User.Fields for FollowingConnectionNameDescriptionedges ([UserEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.FundingLinkA funding platform link for a repository.Fields for FundingLinkNameDescriptionplatform (FundingPlatform!)The funding platform this link is for.url (URI!)The configured URL for this funding link.GenericHovercardContextA generic hovercard context with a message and icon.GenericHovercardContext ImplementsHovercardContextFields for GenericHovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.GistA Gist.Gist ImplementsNodeStarrableUniformResourceLocatableFields for GistNameDescriptioncomments (GistCommentConnection!)A list of comments associated with the gist.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.createdAt (DateTime!)Identifies the date and time when the object was created.description (String)The gist description.files ([GistFile])The files in this gist.Arguments for fileslimit (Int)The maximum number of files to return.The default value is 10.oid (GitObjectID)The oid of the files to return.forks (GistConnection!)A list of forks associated with the gist.Arguments for forksafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (GistOrder)Ordering options for gists returned from the connection.id (ID!)The Node ID of the Gist object.isFork (Boolean!)Identifies if the gist is a fork.isPublic (Boolean!)Whether the gist is public or not.name (String!)The gist name.owner (RepositoryOwner)The gist owner.pushedAt (DateTime)Identifies when the gist was last pushed to.resourcePath (URI!)The HTML path to this resource.stargazerCount (Int!)Returns a count of how many stargazers there are on this object.stargazers (StargazerConnection!)A list of users who have starred this starrable.Arguments for stargazersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (StarOrder)Order for connection.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this Gist.viewerHasStarred (Boolean!)Returns a boolean indicating whether the viewing user has starred this starrable.GistCommentRepresents a comment on an Gist.GistComment ImplementsCommentDeletableMinimizableNodeUpdatableUpdatableCommentFields for GistCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the gist.body (String!)Identifies the comment body.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.gist (Gist!)The associated gist.id (ID!)The Node ID of the GistComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isMinimized (Boolean!)Returns whether or not a comment has been minimized.lastEditedAt (DateTime)The moment the editor made the last edit.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.publishedAt (DateTime)Identifies when the comment was published at.updatedAt (DateTime!)Identifies the date and time when the object was last updated.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.GistCommentConnectionThe connection type for GistComment.Fields for GistCommentConnectionNameDescriptionedges ([GistCommentEdge])A list of edges.nodes ([GistComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.GistCommentEdgeAn edge in a connection.Fields for GistCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (GistComment)The item at the end of the edge.GistConnectionThe connection type for Gist.Fields for GistConnectionNameDescriptionedges ([GistEdge])A list of edges.nodes ([Gist])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.GistEdgeAn edge in a connection.Fields for GistEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Gist)The item at the end of the edge.GistFileA file in a gist.Fields for GistFileNameDescriptionencodedName (String)The file name encoded to remove characters that are invalid in URL paths.encoding (String)The gist file encoding.extension (String)The file extension from the file name.isImage (Boolean!)Indicates if this file is an image.isTruncated (Boolean!)Whether the file's contents were truncated.language (Language)The programming language this file is written in.name (String)The gist file name.size (Int)The gist file size in bytes.text (String)UTF8 text data or null if the file is binary.Arguments for texttruncate (Int)Optionally truncate the returned file to this length.GitActorRepresents an actor in a Git commit (ie. an author or committer).Fields for GitActorNameDescriptionavatarUrl (URI!)A URL pointing to the author's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.date (GitTimestamp)The timestamp of the Git action (authoring or committing).email (String)The email in the Git commit.name (String)The name in the Git commit.user (User)The GitHub user corresponding to the email field. Null if no such user exists.GitActorConnectionThe connection type for GitActor.Fields for GitActorConnectionNameDescriptionedges ([GitActorEdge])A list of edges.nodes ([GitActor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.GitActorEdgeAn edge in a connection.Fields for GitActorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (GitActor)The item at the end of the edge.GitHubMetadataRepresents information about the GitHub instance.Fields for GitHubMetadataNameDescriptiongitHubServicesSha (GitObjectID!)Returns a String that's a SHA of github-services.gitIpAddresses ([String!])IP addresses that users connect to for git operations.githubEnterpriseImporterIpAddresses ([String!])IP addresses that GitHub Enterprise Importer uses for outbound connections.hookIpAddresses ([String!])IP addresses that service hooks are sent from.importerIpAddresses ([String!])IP addresses that the importer connects from.isPasswordAuthenticationVerifiable (Boolean!)Whether or not users are verified.pagesIpAddresses ([String!])IP addresses for GitHub Pages' A records.GpgSignatureRepresents a GPG signature on a Commit or Tag.GpgSignature ImplementsGitSignatureFields for GpgSignatureNameDescriptionemail (String!)Email used to sign this object.isValid (Boolean!)True if the signature is valid and verified by GitHub.keyId (String)Hex-encoded ID of the key that signed this object.payload (String!)Payload for GPG signing object. Raw ODB object without the signature header.signature (String!)ASCII-armored signature header from object.signer (User)GitHub user corresponding to the email signing this commit.state (GitSignatureState!)The state of this signature. VALID if signature is valid and verified by
GitHub, otherwise represents reason why signature is considered invalid.verifiedAt (DateTime)The date the signature was verified, if valid.wasSignedByGitHub (Boolean!)True if the signature was made with GitHub's signing key.HeadRefDeletedEventRepresents ahead_ref_deletedevent on a given pull request.HeadRefDeletedEvent ImplementsNodeFields for HeadRefDeletedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.headRef (Ref)Identifies the Ref associated with the head_ref_deleted event.headRefName (String!)Identifies the name of the Ref associated with the head_ref_deleted event.id (ID!)The Node ID of the HeadRefDeletedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.HeadRefForcePushedEventRepresents ahead_ref_force_pushedevent on a given pull request.HeadRefForcePushedEvent ImplementsNodeFields for HeadRefForcePushedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.afterCommit (Commit)Identifies the after commit SHA for thehead_ref_force_pushedevent.beforeCommit (Commit)Identifies the before commit SHA for thehead_ref_force_pushedevent.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the HeadRefForcePushedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.ref (Ref)Identifies the fully qualified ref name for thehead_ref_force_pushedevent.HeadRefRestoredEventRepresents ahead_ref_restoredevent on a given pull request.HeadRefRestoredEvent ImplementsNodeFields for HeadRefRestoredEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the HeadRefRestoredEvent object.pullRequest (PullRequest!)PullRequest referenced by event.HovercardDetail needed to display a hovercard for a user.Fields for HovercardNameDescriptioncontexts ([HovercardContext!]!)Each of the contexts for this hovercard.IpAllowListEntryAn IP address or range of addresses that is allowed to access an owner's resources.IpAllowListEntry ImplementsNodeFields for IpAllowListEntryNameDescriptionallowListValue (String!)A single IP address or range of IP addresses in CIDR notation.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the IpAllowListEntry object.isActive (Boolean!)Whether the entry is currently active.name (String)The name of the IP allow list entry.owner (IpAllowListOwner!)The owner of the IP allow list entry.updatedAt (DateTime!)Identifies the date and time when the object was last updated.IpAllowListEntryConnectionThe connection type for IpAllowListEntry.Fields for IpAllowListEntryConnectionNameDescriptionedges ([IpAllowListEntryEdge])A list of edges.nodes ([IpAllowListEntry])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.IpAllowListEntryEdgeAn edge in a connection.Fields for IpAllowListEntryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (IpAllowListEntry)The item at the end of the edge.IssueAn Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.Issue ImplementsAssignableClosableCommentDeletableLabelableLockableNodeProjectV2OwnerReactableRepositoryNodeSubscribableSubscribableThreadUniformResourceLocatableUpdatableUpdatableCommentFields for IssueNameDescriptionactiveLockReason (LockReason)Reason that the conversation was locked.assignedActors (AssigneeConnection!)A list of actors assigned to this object.Arguments for assignedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.assignees (UserConnection!)A list of Users assigned to this object.Arguments for assigneesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.author (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)Identifies the body of the issue.bodyHTML (HTML!)The body rendered to HTML.bodyResourcePath (URI!)The http path for this issue body.bodyText (String!)Identifies the body of the issue rendered to text.bodyUrl (URI!)The http URL for this issue body.closed (Boolean!)Indicates if the object is closed (definition of closed may depend on type).closedAt (DateTime)Identifies the date and time when the object was closed.closedByPullRequestsReferences (PullRequestConnection)List of open pull requests referenced from this issue.Arguments for closedByPullRequestsReferencesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeClosedPrs (Boolean)Include closed PRs in results.The default value is false.last (Int)Returns the last n elements from the list.orderByState (Boolean)Return results ordered by state.The default value is false.userLinkedOnly (Boolean)Return only manually linked PRs.The default value is false.comments (IssueCommentConnection!)A list of comments associated with the Issue.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueCommentOrder)Ordering options for issue comments returned from the connection.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.hovercard (Hovercard!)The hovercard information for this issue.Arguments for hovercardincludeNotificationContexts (Boolean)Whether or not to include notification contexts.The default value is true.id (ID!)The Node ID of the Issue object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isPinned (Boolean)Indicates whether or not this issue is currently pinned to the repository issues list.isReadByViewer (Boolean)Is this issue read by the viewer.issueType (IssueType)The issue type for this Issue.labels (LabelConnection)A list of labels associated with the object.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.lastEditedAt (DateTime)The moment the editor made the last edit.linkedBranches (LinkedBranchConnection!)Branches linked to this issue.Arguments for linkedBranchesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.locked (Boolean!)true if the object is locked.milestone (Milestone)Identifies the milestone associated with the issue.number (Int!)Identifies the issue number.parent (Issue)The parent entity of the issue.participants (UserConnection!)A list of Users that are participating in the Issue conversation.Arguments for participantsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.projectCards (ProjectCardConnection!)List of project cards associated with this issue.WarningprojectCards is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectCardsafter (String)Returns the elements in the list that come after the specified cursor.archivedStates ([ProjectCardArchivedState])A list of archived states to filter the cards by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.projectItems (ProjectV2ItemConnection!)List of project items associated with this issue.Arguments for projectItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeArchived (Boolean)Include archived items.The default value is true.last (Int)Returns the last n elements from the list.projectV2 (ProjectV2)Find a project by number.Arguments for projectV2number (Int!)The project number.projectsV2 (ProjectV2Connection!)A list of projects under the owner.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for under the owner.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path for this issue.state (IssueState!)Identifies the state of the issue.stateReason (IssueStateReason)Identifies the reason for the issue state.Arguments for stateReasonenableDuplicate (Boolean)Whether or not to return state reason for duplicates.The default value is false.subIssues (IssueConnection!)A list of sub-issues associated with the Issue.Arguments for subIssuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.subIssuesSummary (SubIssuesSummary!)Summary of the state of an issue's sub-issues.suggestedActors (AssigneeConnection!)A list of suggested actors to assign to this object.Arguments for suggestedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)If provided, searches users by login or profile name.timeline (IssueTimelineConnection!)A list of events, comments, commits, etc. associated with the issue.Warningtimeline is deprecated.timeline will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.Arguments for timelineafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.since (DateTime)Allows filtering timeline events by a since timestamp.timelineItems (IssueTimelineItemsConnection!)A list of events, comments, commits, etc. associated with the issue.Arguments for timelineItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.itemTypes ([IssueTimelineItemsItemType!])Filter timeline items by type.last (Int)Returns the last n elements from the list.since (DateTime)Filter timeline items by a since timestamp.skip (Int)Skips the first n elements in the list.title (String!)Identifies the issue title.titleHTML (String!)Identifies the issue title rendered to HTML.trackedInIssues (IssueConnection!)A list of issues that track this issue.Arguments for trackedInIssuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.trackedIssues (IssueConnection!)A list of issues tracked inside the current issue.Arguments for trackedIssuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.trackedIssuesCount (Int!)The number of tracked issues for this issue.Arguments for trackedIssuesCountstates ([TrackedIssueStates])Limit the count to tracked issues with the specified states.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this issue.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanLabel (Boolean!)Indicates if the viewer can edit labels for this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.viewerThreadSubscriptionFormAction (ThreadSubscriptionFormAction)Identifies the viewer's thread subscription form action.viewerThreadSubscriptionStatus (ThreadSubscriptionState)Identifies the viewer's thread subscription status.IssueCommentRepresents a comment on an Issue.IssueComment ImplementsCommentDeletableMinimizableNodeReactableRepositoryNodeUpdatableUpdatableCommentFields for IssueCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the IssueComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isMinimized (Boolean!)Returns whether or not a comment has been minimized.issue (Issue!)Identifies the issue associated with the comment.lastEditedAt (DateTime)The moment the editor made the last edit.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.publishedAt (DateTime)Identifies when the comment was published at.pullRequest (PullRequest)Returns the pull request associated with the comment, if this comment was made on a
pull request.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path for this issue comment.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this issue comment.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.IssueCommentConnectionThe connection type for IssueComment.Fields for IssueCommentConnectionNameDescriptionedges ([IssueCommentEdge])A list of edges.nodes ([IssueComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.IssueCommentEdgeAn edge in a connection.Fields for IssueCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (IssueComment)The item at the end of the edge.IssueConnectionThe connection type for Issue.Fields for IssueConnectionNameDescriptionedges ([IssueEdge])A list of edges.nodes ([Issue])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.IssueContributionsByRepositoryThis aggregates issues opened by a user within one repository.Fields for IssueContributionsByRepositoryNameDescriptioncontributions (CreatedIssueContributionConnection!)The issue contributions.Arguments for contributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.repository (Repository!)The repository in which the issues were opened.IssueEdgeAn edge in a connection.Fields for IssueEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Issue)The item at the end of the edge.IssueTemplateA repository issue template.Fields for IssueTemplateNameDescriptionabout (String)The template purpose.assignees (UserConnection!)The suggested assignees.Arguments for assigneesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.body (String)The suggested issue body.filename (String!)The template filename.labels (LabelConnection)The suggested issue labels.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.name (String!)The template name.title (String)The suggested issue title.type (IssueType)The suggested issue type.IssueTimelineConnectionThe connection type for IssueTimelineItem.Fields for IssueTimelineConnectionNameDescriptionedges ([IssueTimelineItemEdge])A list of edges.nodes ([IssueTimelineItem])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.IssueTimelineItemEdgeAn edge in a connection.Fields for IssueTimelineItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (IssueTimelineItem)The item at the end of the edge.IssueTimelineItemsConnectionThe connection type for IssueTimelineItems.Fields for IssueTimelineItemsConnectionNameDescriptionedges ([IssueTimelineItemsEdge])A list of edges.filteredCount (Int!)Identifies the count of items after applying before and after filters.nodes ([IssueTimelineItems])A list of nodes.pageCount (Int!)Identifies the count of items after applying before/after filters and first/last/skip slicing.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.updatedAt (DateTime!)Identifies the date and time when the timeline was last updated.IssueTimelineItemsEdgeAn edge in a connection.Fields for IssueTimelineItemsEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (IssueTimelineItems)The item at the end of the edge.IssueTypeRepresents the type of Issue.IssueType ImplementsNodeFields for IssueTypeNameDescriptioncolor (IssueTypeColor!)The issue type's color.description (String)The issue type's description.id (ID!)The Node ID of the IssueType object.isEnabled (Boolean!)The issue type's enabled state.isPrivate (Boolean!)Whether the issue type is publicly visible.WarningisPrivate is deprecated.Private issue types are being deprecated and can no longer be created. Removal on 2025-04-01 UTC.issues (IssueConnection!)The issues with this issue type in the given repository.Arguments for issuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (IssueFilters)Filtering options for issues returned from the connection.first (Int)Returns the first n elements from the list.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.repositoryId (ID!)Target repository to load the issues from.states ([IssueState!])A list of states to filter the issues by.name (String!)The issue type's name.IssueTypeAddedEventRepresents aissue_type_addedevent on a given issue.IssueTypeAddedEvent ImplementsNodeFields for IssueTypeAddedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the IssueTypeAddedEvent object.issueType (IssueType)The issue type added.IssueTypeChangedEventRepresents aissue_type_changedevent on a given issue.IssueTypeChangedEvent ImplementsNodeFields for IssueTypeChangedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the IssueTypeChangedEvent object.issueType (IssueType)The issue type added.prevIssueType (IssueType)The issue type removed.IssueTypeConnectionThe connection type for IssueType.Fields for IssueTypeConnectionNameDescriptionedges ([IssueTypeEdge])A list of edges.nodes ([IssueType])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.IssueTypeEdgeAn edge in a connection.Fields for IssueTypeEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (IssueType)The item at the end of the edge.IssueTypeRemovedEventRepresents aissue_type_removedevent on a given issue.IssueTypeRemovedEvent ImplementsNodeFields for IssueTypeRemovedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the IssueTypeRemovedEvent object.issueType (IssueType)The issue type removed.JoinedGitHubContributionRepresents a user signing up for a GitHub account.JoinedGitHubContribution ImplementsContributionFields for JoinedGitHubContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.LabelA label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.Label ImplementsNodeFields for LabelNameDescriptioncolor (String!)Identifies the label color.createdAt (DateTime)Identifies the date and time when the label was created.description (String)A brief description of this label.id (ID!)The Node ID of the Label object.isDefault (Boolean!)Indicates whether or not this is a default label.issues (IssueConnection!)A list of issues associated with this label.Arguments for issuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (IssueFilters)Filtering options for issues returned from the connection.first (Int)Returns the first n elements from the list.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.states ([IssueState!])A list of states to filter the issues by.name (String!)Identifies the label name.pullRequests (PullRequestConnection!)A list of pull requests associated with this label.Arguments for pullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.repository (Repository!)The repository associated with this label.resourcePath (URI!)The HTTP path for this label.updatedAt (DateTime)Identifies the date and time when the label was last updated.url (URI!)The HTTP URL for this label.LabelConnectionThe connection type for Label.Fields for LabelConnectionNameDescriptionedges ([LabelEdge])A list of edges.nodes ([Label])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.LabelEdgeAn edge in a connection.Fields for LabelEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Label)The item at the end of the edge.LabeledEventRepresents alabeledevent on a given issue or pull request.LabeledEvent ImplementsNodeFields for LabeledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the LabeledEvent object.label (Label!)Identifies the label associated with thelabeledevent.labelable (Labelable!)Identifies the Labelable associated with the event.LanguageRepresents a given language found in repositories.Language ImplementsNodeFields for LanguageNameDescriptioncolor (String)The color defined for the current language.id (ID!)The Node ID of the Language object.name (String!)The name of the current language.LanguageConnectionA list of languages associated with the parent.Fields for LanguageConnectionNameDescriptionedges ([LanguageEdge])A list of edges.nodes ([Language])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.totalSize (Int!)The total size in bytes of files written in that language.LanguageEdgeRepresents the language of a repository.Fields for LanguageEdgeNameDescriptioncursor (String!)N/Anode (Language!)N/Asize (Int!)The number of bytes of code written in the language.LicenseA repository's open source license.License ImplementsNodeFields for LicenseNameDescriptionbody (String!)The full text of the license.conditions ([LicenseRule]!)The conditions set by the license.description (String)A human-readable description of the license.featured (Boolean!)Whether the license should be featured.hidden (Boolean!)Whether the license should be displayed in license pickers.id (ID!)The Node ID of the License object.implementation (String)Instructions on how to implement the license.key (String!)The lowercased SPDX ID of the license.limitations ([LicenseRule]!)The limitations set by the license.name (String!)The license full name specified by https://spdx.org/licenses.nickname (String)Customary short name if applicable (e.g, GPLv3).permissions ([LicenseRule]!)The permissions set by the license.pseudoLicense (Boolean!)Whether the license is a pseudo-license placeholder (e.g., other, no-license).spdxId (String)Short identifier specified by https://spdx.org/licenses.url (URI)URL to the license on https://choosealicense.com.LicenseRuleDescribes a License's conditions, permissions, and limitations.Fields for LicenseRuleNameDescriptiondescription (String!)A description of the rule.key (String!)The machine-readable rule key.label (String!)The human-readable rule label.LinkedBranchA branch linked to an issue.LinkedBranch ImplementsNodeFields for LinkedBranchNameDescriptionid (ID!)The Node ID of the LinkedBranch object.ref (Ref)The branch's ref.LinkedBranchConnectionA list of branches linked to an issue.Fields for LinkedBranchConnectionNameDescriptionedges ([LinkedBranchEdge])A list of edges.nodes ([LinkedBranch])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.LinkedBranchEdgeAn edge in a connection.Fields for LinkedBranchEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (LinkedBranch)The item at the end of the edge.LockedEventRepresents alockedevent on a given issue or pull request.LockedEvent ImplementsNodeFields for LockedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the LockedEvent object.lockReason (LockReason)Reason that the conversation was locked (optional).lockable (Lockable!)Object that was locked.MannequinA placeholder user for attribution of imported data on GitHub.Mannequin ImplementsActorNodeUniformResourceLocatableFields for MannequinNameDescriptionavatarUrl (URI!)A URL pointing to the GitHub App's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.claimant (User)The user that has claimed the data attributed to this mannequin.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.email (String)The mannequin's email on the source instance.id (ID!)The Node ID of the Mannequin object.login (String!)The username of the actor.resourcePath (URI!)The HTML path to this resource.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The URL to this resource.MannequinConnectionA list of mannequins.Fields for MannequinConnectionNameDescriptionedges ([MannequinEdge])A list of edges.nodes ([Mannequin])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.MannequinEdgeRepresents a mannequin.Fields for MannequinEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Mannequin)The item at the end of the edge.MarkedAsDuplicateEventRepresents amarked_as_duplicateevent on a given issue or pull request.MarkedAsDuplicateEvent ImplementsNodeFields for MarkedAsDuplicateEventNameDescriptionactor (Actor)Identifies the actor who performed the event.canonical (IssueOrPullRequest)The authoritative issue or pull request which has been duplicated by another.createdAt (DateTime!)Identifies the date and time when the object was created.duplicate (IssueOrPullRequest)The issue or pull request which has been marked as a duplicate of another.id (ID!)The Node ID of the MarkedAsDuplicateEvent object.isCrossRepository (Boolean!)Canonical and duplicate belong to different repositories.MarketplaceCategoryA public description of a Marketplace category.MarketplaceCategory ImplementsNodeFields for MarketplaceCategoryNameDescriptiondescription (String)The category's description.howItWorks (String)The technical description of how apps listed in this category work with GitHub.id (ID!)The Node ID of the MarketplaceCategory object.name (String!)The category's name.primaryListingCount (Int!)How many Marketplace listings have this as their primary category.resourcePath (URI!)The HTTP path for this Marketplace category.secondaryListingCount (Int!)How many Marketplace listings have this as their secondary category.slug (String!)The short name of the category used in its URL.url (URI!)The HTTP URL for this Marketplace category.MarketplaceListingA listing in the GitHub integration marketplace.MarketplaceListing ImplementsNodeFields for MarketplaceListingNameDescriptionapp (App)The GitHub App this listing represents.companyUrl (URI)URL to the listing owner's company site.configurationResourcePath (URI!)The HTTP path for configuring access to the listing's integration or OAuth app.configurationUrl (URI!)The HTTP URL for configuring access to the listing's integration or OAuth app.documentationUrl (URI)URL to the listing's documentation.extendedDescription (String)The listing's detailed description.extendedDescriptionHTML (HTML!)The listing's detailed description rendered to HTML.fullDescription (String!)The listing's introductory description.fullDescriptionHTML (HTML!)The listing's introductory description rendered to HTML.hasPublishedFreeTrialPlans (Boolean!)Does this listing have any plans with a free trial?.hasTermsOfService (Boolean!)Does this listing have a terms of service link?.hasVerifiedOwner (Boolean!)Whether the creator of the app is a verified org.howItWorks (String)A technical description of how this app works with GitHub.howItWorksHTML (HTML!)The listing's technical description rendered to HTML.id (ID!)The Node ID of the MarketplaceListing object.installationUrl (URI)URL to install the product to the viewer's account or organization.installedForViewer (Boolean!)Whether this listing's app has been installed for the current viewer.isArchived (Boolean!)Whether this listing has been removed from the Marketplace.isDraft (Boolean!)Whether this listing is still an editable draft that has not been submitted
for review and is not publicly visible in the Marketplace.isPaid (Boolean!)Whether the product this listing represents is available as part of a paid plan.isPublic (Boolean!)Whether this listing has been approved for display in the Marketplace.isRejected (Boolean!)Whether this listing has been rejected by GitHub for display in the Marketplace.isUnverified (Boolean!)Whether this listing has been approved for unverified display in the Marketplace.isUnverifiedPending (Boolean!)Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.isVerificationPendingFromDraft (Boolean!)Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.isVerificationPendingFromUnverified (Boolean!)Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.isVerified (Boolean!)Whether this listing has been approved for verified display in the Marketplace.logoBackgroundColor (String!)The hex color code, without the leading '#', for the logo background.logoUrl (URI)URL for the listing's logo image.Arguments for logoUrlsize (Int)The size in pixels of the resulting square image.The default value is 400.name (String!)The listing's full name.normalizedShortDescription (String!)The listing's very short description without a trailing period or ampersands.pricingUrl (URI)URL to the listing's detailed pricing.primaryCategory (MarketplaceCategory!)The category that best describes the listing.privacyPolicyUrl (URI!)URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL.resourcePath (URI!)The HTTP path for the Marketplace listing.screenshotUrls ([String]!)The URLs for the listing's screenshots.secondaryCategory (MarketplaceCategory)An alternate category that describes the listing.shortDescription (String!)The listing's very short description.slug (String!)The short name of the listing used in its URL.statusUrl (URI)URL to the listing's status page.supportEmail (String)An email address for support for this listing's app.supportUrl (URI!)Either a URL or an email address for support for this listing's app, may
return an empty string for listings that do not require a support URL.termsOfServiceUrl (URI)URL to the listing's terms of service.url (URI!)The HTTP URL for the Marketplace listing.viewerCanAddPlans (Boolean!)Can the current viewer add plans for this Marketplace listing.viewerCanApprove (Boolean!)Can the current viewer approve this Marketplace listing.viewerCanDelist (Boolean!)Can the current viewer delist this Marketplace listing.viewerCanEdit (Boolean!)Can the current viewer edit this Marketplace listing.viewerCanEditCategories (Boolean!)Can the current viewer edit the primary and secondary category of this
Marketplace listing.viewerCanEditPlans (Boolean!)Can the current viewer edit the plans for this Marketplace listing.viewerCanRedraft (Boolean!)Can the current viewer return this Marketplace listing to draft state
so it becomes editable again.viewerCanReject (Boolean!)Can the current viewer reject this Marketplace listing by returning it to
an editable draft state or rejecting it entirely.viewerCanRequestApproval (Boolean!)Can the current viewer request this listing be reviewed for display in
the Marketplace as verified.viewerHasPurchased (Boolean!)Indicates whether the current user has an active subscription to this Marketplace listing.viewerHasPurchasedForAllOrganizations (Boolean!)Indicates if the current user has purchased a subscription to this Marketplace listing
for all of the organizations the user owns.viewerIsListingAdmin (Boolean!)Does the current viewer role allow them to administer this Marketplace listing.MarketplaceListingConnectionLook up Marketplace Listings.Fields for MarketplaceListingConnectionNameDescriptionedges ([MarketplaceListingEdge])A list of edges.nodes ([MarketplaceListing])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.MarketplaceListingEdgeAn edge in a connection.Fields for MarketplaceListingEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (MarketplaceListing)The item at the end of the edge.MaxFilePathLengthParametersPrevent commits that include file paths that exceed the specified character limit from being pushed to the commit graph.Fields for MaxFilePathLengthParametersNameDescriptionmaxFilePathLength (Int!)The maximum amount of characters allowed in file paths.MaxFileSizeParametersPrevent commits with individual files that exceed the specified limit from being pushed to the commit graph.Fields for MaxFileSizeParametersNameDescriptionmaxFileSize (Int!)The maximum file size allowed in megabytes. This limit does not apply to Git Large File Storage (Git LFS).MemberFeatureRequestNotificationRepresents a member feature request notification.MemberFeatureRequestNotification ImplementsNodeFields for MemberFeatureRequestNotificationNameDescriptionbody (String!)Represents member feature request body containing entity name and the number of feature requests.id (ID!)The Node ID of the MemberFeatureRequestNotification object.title (String!)Represents member feature request notification title.updatedAt (DateTime!)Identifies the date and time when the object was last updated.MembersCanDeleteReposClearAuditEntryAudit log entry for a members_can_delete_repos.clear event.MembersCanDeleteReposClearAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for MembersCanDeleteReposClearAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the MembersCanDeleteReposClearAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.MembersCanDeleteReposDisableAuditEntryAudit log entry for a members_can_delete_repos.disable event.MembersCanDeleteReposDisableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for MembersCanDeleteReposDisableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the MembersCanDeleteReposDisableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.MembersCanDeleteReposEnableAuditEntryAudit log entry for a members_can_delete_repos.enable event.MembersCanDeleteReposEnableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for MembersCanDeleteReposEnableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the MembersCanDeleteReposEnableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.MentionedEventRepresents amentionedevent on a given issue or pull request.MentionedEvent ImplementsNodeFields for MentionedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the MentionedEvent object.MergeQueueThe queue of pull request entries to be merged into a protected branch in a repository.MergeQueue ImplementsNodeFields for MergeQueueNameDescriptionconfiguration (MergeQueueConfiguration)The configuration for this merge queue.entries (MergeQueueEntryConnection)The entries in the queue.Arguments for entriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.id (ID!)The Node ID of the MergeQueue object.nextEntryEstimatedTimeToMerge (Int)The estimated time in seconds until a newly added entry would be merged.repository (Repository)The repository this merge queue belongs to.resourcePath (URI!)The HTTP path for this merge queue.url (URI!)The HTTP URL for this merge queue.MergeQueueConfigurationConfiguration for a MergeQueue.Fields for MergeQueueConfigurationNameDescriptioncheckResponseTimeout (Int)The amount of time in minutes to wait for a check response before considering it a failure.maximumEntriesToBuild (Int)The maximum number of entries to build at once.maximumEntriesToMerge (Int)The maximum number of entries to merge at once.mergeMethod (PullRequestMergeMethod)The merge method to use for this queue.mergingStrategy (MergeQueueMergingStrategy)The strategy to use when merging entries.minimumEntriesToMerge (Int)The minimum number of entries required to merge at once.minimumEntriesToMergeWaitTime (Int)The amount of time in minutes to wait before ignoring the minumum number of
entries in the queue requirement and merging a collection of entries.MergeQueueEntryEntries in a MergeQueue.MergeQueueEntry ImplementsNodeFields for MergeQueueEntryNameDescriptionbaseCommit (Commit)The base commit for this entry.enqueuedAt (DateTime!)The date and time this entry was added to the merge queue.enqueuer (Actor!)The actor that enqueued this entry.estimatedTimeToMerge (Int)The estimated time in seconds until this entry will be merged.headCommit (Commit)The head commit for this entry.id (ID!)The Node ID of the MergeQueueEntry object.jump (Boolean!)Whether this pull request should jump the queue.mergeQueue (MergeQueue)The merge queue that this entry belongs to.position (Int!)The position of this entry in the queue.pullRequest (PullRequest)The pull request that will be added to a merge group.solo (Boolean!)Does this pull request need to be deployed on its own.state (MergeQueueEntryState!)The state of this entry in the queue.MergeQueueEntryConnectionThe connection type for MergeQueueEntry.Fields for MergeQueueEntryConnectionNameDescriptionedges ([MergeQueueEntryEdge])A list of edges.nodes ([MergeQueueEntry])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.MergeQueueEntryEdgeAn edge in a connection.Fields for MergeQueueEntryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (MergeQueueEntry)The item at the end of the edge.MergeQueueParametersMerges must be performed via a merge queue.Fields for MergeQueueParametersNameDescriptioncheckResponseTimeoutMinutes (Int!)Maximum time for a required status check to report a conclusion. After this
much time has elapsed, checks that have not reported a conclusion will be
assumed to have failed.groupingStrategy (MergeQueueGroupingStrategy!)When set to ALLGREEN, the merge commit created by merge queue for each PR in
the group must pass all required checks to merge. When set to HEADGREEN, only
the commit at the head of the merge group, i.e. the commit containing changes
from all of the PRs in the group, must pass its required checks to merge.maxEntriesToBuild (Int!)Limit the number of queued pull requests requesting checks and workflow runs at the same time.maxEntriesToMerge (Int!)The maximum number of PRs that will be merged together in a group.mergeMethod (MergeQueueMergeMethod!)Method to use when merging changes from queued pull requests.minEntriesToMerge (Int!)The minimum number of PRs that will be merged together in a group.minEntriesToMergeWaitMinutes (Int!)The time merge queue should wait after the first PR is added to the queue for
the minimum group size to be met. After this time has elapsed, the minimum
group size will be ignored and a smaller group will be merged.MergedEventRepresents amergedevent on a given pull request.MergedEvent ImplementsNodeUniformResourceLocatableFields for MergedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.commit (Commit)Identifies the commit associated with the merge event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the MergedEvent object.mergeRef (Ref)Identifies the Ref associated with the merge event.mergeRefName (String!)Identifies the name of the Ref associated with the merge event.pullRequest (PullRequest!)PullRequest referenced by event.resourcePath (URI!)The HTTP path for this merged event.url (URI!)The HTTP URL for this merged event.MigrationSourceA GitHub Enterprise Importer (GEI) migration source.MigrationSource ImplementsNodeFields for MigrationSourceNameDescriptionid (ID!)The Node ID of the MigrationSource object.name (String!)The migration source name.type (MigrationSourceType!)The migration source type.url (URI!)The migration source URL, for example https://github.com or https://monalisa.ghe.com.MilestoneRepresents a Milestone object on a given repository.Milestone ImplementsClosableNodeUniformResourceLocatableFields for MilestoneNameDescriptionclosed (Boolean!)Indicates if the object is closed (definition of closed may depend on type).closedAt (DateTime)Identifies the date and time when the object was closed.closedIssueCount (Int!)Identifies the number of closed issues associated with the milestone.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)Identifies the actor who created the milestone.description (String)Identifies the description of the milestone.descriptionHTML (String)The HTML rendered description of the milestone using GitHub Flavored Markdown.dueOn (DateTime)Identifies the due date of the milestone.id (ID!)The Node ID of the Milestone object.issues (IssueConnection!)A list of issues associated with the milestone.Arguments for issuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (IssueFilters)Filtering options for issues returned from the connection.first (Int)Returns the first n elements from the list.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.states ([IssueState!])A list of states to filter the issues by.number (Int!)Identifies the number of the milestone.openIssueCount (Int!)Identifies the number of open issues associated with the milestone.progressPercentage (Float!)Identifies the percentage complete for the milestone.pullRequests (PullRequestConnection!)A list of pull requests associated with the milestone.Arguments for pullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.repository (Repository!)The repository associated with this milestone.resourcePath (URI!)The HTTP path for this milestone.state (MilestoneState!)Identifies the state of the milestone.title (String!)Identifies the title of the milestone.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this milestone.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.MilestoneConnectionThe connection type for Milestone.Fields for MilestoneConnectionNameDescriptionedges ([MilestoneEdge])A list of edges.nodes ([Milestone])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.MilestoneEdgeAn edge in a connection.Fields for MilestoneEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Milestone)The item at the end of the edge.MilestonedEventRepresents amilestonedevent on a given issue or pull request.MilestonedEvent ImplementsNodeFields for MilestonedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the MilestonedEvent object.milestoneTitle (String!)Identifies the milestone title associated with themilestonedevent.subject (MilestoneItem!)Object referenced by event.MovedColumnsInProjectEventRepresents amoved_columns_in_projectevent on a given issue or pull request.MovedColumnsInProjectEvent ImplementsNodeFields for MovedColumnsInProjectEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the MovedColumnsInProjectEvent object.previousProjectColumnName (String!)Column name the issue or pull request was moved from.WarningpreviousProjectColumnName is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.project (Project)Project referenced by event.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectCard (ProjectCard)Project card referenced by this project event.WarningprojectCard is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectColumnName (String!)Column name the issue or pull request was moved to.WarningprojectColumnName is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.OIDCProviderAn OIDC identity provider configured to provision identities for an enterprise.
Visible to enterprise owners or enterprise owners' personal access tokens
(classic) with read:enterprise or admin:enterprise scope.OIDCProvider ImplementsNodeFields for OIDCProviderNameDescriptionenterprise (Enterprise)The enterprise this identity provider belongs to.externalIdentities (ExternalIdentityConnection!)ExternalIdentities provisioned by this identity provider.Arguments for externalIdentitiesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.login (String)Filter to external identities with the users login.membersOnly (Boolean)Filter to external identities with valid org membership only.userName (String)Filter to external identities with the users userName/NameID attribute.id (ID!)The Node ID of the OIDCProvider object.providerType (OIDCProviderType!)The OIDC identity provider type.tenantId (String!)The id of the tenant this provider is attached to.OauthApplicationCreateAuditEntryAudit log entry for a oauth_application.create event.OauthApplicationCreateAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OauthApplicationCreateAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.applicationUrl (URI)The application URL of the OAuth application.WarningapplicationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.callbackUrl (URI)The callback URL of the OAuth application.WarningcallbackUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OauthApplicationCreateAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.rateLimit (Int)The rate limit of the OAuth application.WarningrateLimit is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.state (OauthApplicationCreateAuditEntryState)The state of the OAuth application.Warningstate is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgAddBillingManagerAuditEntryAudit log entry for a org.add_billing_manager.OrgAddBillingManagerAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgAddBillingManagerAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgAddBillingManagerAuditEntry object.invitationEmail (String)The email address used to invite a billing manager for the organization.WarninginvitationEmail is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgAddMemberAuditEntryAudit log entry for a org.add_member.OrgAddMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgAddMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgAddMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.permission (OrgAddMemberAuditEntryPermission)The permission level of the member added to the organization.Warningpermission is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgBlockUserAuditEntryAudit log entry for a org.block_user.OrgBlockUserAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgBlockUserAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUser (User)The blocked user.WarningblockedUser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserName (String)The username of the blocked user.WarningblockedUserName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserResourcePath (URI)The HTTP path for the blocked user.WarningblockedUserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserUrl (URI)The HTTP URL for the blocked user.WarningblockedUserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgBlockUserAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgConfigDisableCollaboratorsOnlyAuditEntryAudit log entry for a org.config.disable_collaborators_only event.OrgConfigDisableCollaboratorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgConfigDisableCollaboratorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgConfigDisableCollaboratorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgConfigEnableCollaboratorsOnlyAuditEntryAudit log entry for a org.config.enable_collaborators_only event.OrgConfigEnableCollaboratorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgConfigEnableCollaboratorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgConfigEnableCollaboratorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgCreateAuditEntryAudit log entry for a org.create event.OrgCreateAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgCreateAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.billingPlan (OrgCreateAuditEntryBillingPlan)The billing plan for the Organization.WarningbillingPlan is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgCreateAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgDisableOauthAppRestrictionsAuditEntryAudit log entry for a org.disable_oauth_app_restrictions event.OrgDisableOauthAppRestrictionsAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgDisableOauthAppRestrictionsAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgDisableOauthAppRestrictionsAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgDisableSamlAuditEntryAudit log entry for a org.disable_saml event.OrgDisableSamlAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgDisableSamlAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.digestMethodUrl (URI)The SAML provider's digest algorithm URL.WarningdigestMethodUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgDisableSamlAuditEntry object.issuerUrl (URI)The SAML provider's issuer URL.WarningissuerUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.signatureMethodUrl (URI)The SAML provider's signature algorithm URL.WarningsignatureMethodUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.singleSignOnUrl (URI)The SAML provider's single sign-on URL.WarningsingleSignOnUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgDisableTwoFactorRequirementAuditEntryAudit log entry for a org.disable_two_factor_requirement event.OrgDisableTwoFactorRequirementAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgDisableTwoFactorRequirementAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgDisableTwoFactorRequirementAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgEnableOauthAppRestrictionsAuditEntryAudit log entry for a org.enable_oauth_app_restrictions event.OrgEnableOauthAppRestrictionsAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgEnableOauthAppRestrictionsAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgEnableOauthAppRestrictionsAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgEnableSamlAuditEntryAudit log entry for a org.enable_saml event.OrgEnableSamlAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgEnableSamlAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.digestMethodUrl (URI)The SAML provider's digest algorithm URL.WarningdigestMethodUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgEnableSamlAuditEntry object.issuerUrl (URI)The SAML provider's issuer URL.WarningissuerUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.signatureMethodUrl (URI)The SAML provider's signature algorithm URL.WarningsignatureMethodUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.singleSignOnUrl (URI)The SAML provider's single sign-on URL.WarningsingleSignOnUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgEnableTwoFactorRequirementAuditEntryAudit log entry for a org.enable_two_factor_requirement event.OrgEnableTwoFactorRequirementAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgEnableTwoFactorRequirementAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgEnableTwoFactorRequirementAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgInviteMemberAuditEntryAudit log entry for a org.invite_member event.OrgInviteMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgInviteMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.email (String)The email address of the organization invitation.Warningemail is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgInviteMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationInvitation (OrganizationInvitation)The organization invitation.WarningorganizationInvitation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgInviteToBusinessAuditEntryAudit log entry for a org.invite_to_business event.OrgInviteToBusinessAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for OrgInviteToBusinessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the OrgInviteToBusinessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgOauthAppAccessApprovedAuditEntryAudit log entry for a org.oauth_app_access_approved event.OrgOauthAppAccessApprovedAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OrgOauthAppAccessApprovedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgOauthAppAccessApprovedAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgOauthAppAccessBlockedAuditEntryAudit log entry for a org.oauth_app_access_blocked event.OrgOauthAppAccessBlockedAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OrgOauthAppAccessBlockedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgOauthAppAccessBlockedAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgOauthAppAccessDeniedAuditEntryAudit log entry for a org.oauth_app_access_denied event.OrgOauthAppAccessDeniedAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OrgOauthAppAccessDeniedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgOauthAppAccessDeniedAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgOauthAppAccessRequestedAuditEntryAudit log entry for a org.oauth_app_access_requested event.OrgOauthAppAccessRequestedAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OrgOauthAppAccessRequestedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgOauthAppAccessRequestedAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgOauthAppAccessUnblockedAuditEntryAudit log entry for a org.oauth_app_access_unblocked event.OrgOauthAppAccessUnblockedAuditEntry ImplementsAuditEntryNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataFields for OrgOauthAppAccessUnblockedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgOauthAppAccessUnblockedAuditEntry object.oauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRemoveBillingManagerAuditEntryAudit log entry for a org.remove_billing_manager event.OrgRemoveBillingManagerAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgRemoveBillingManagerAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgRemoveBillingManagerAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.reason (OrgRemoveBillingManagerAuditEntryReason)The reason for the billing manager being removed.Warningreason is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRemoveMemberAuditEntryAudit log entry for a org.remove_member event.OrgRemoveMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgRemoveMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgRemoveMemberAuditEntry object.membershipTypes ([OrgRemoveMemberAuditEntryMembershipType!])The types of membership the member has with the organization.WarningmembershipTypes is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.reason (OrgRemoveMemberAuditEntryReason)The reason for the member being removed.Warningreason is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRemoveOutsideCollaboratorAuditEntryAudit log entry for a org.remove_outside_collaborator event.OrgRemoveOutsideCollaboratorAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgRemoveOutsideCollaboratorAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgRemoveOutsideCollaboratorAuditEntry object.membershipTypes ([OrgRemoveOutsideCollaboratorAuditEntryMembershipType!])The types of membership the outside collaborator has with the organization.WarningmembershipTypes is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.reason (OrgRemoveOutsideCollaboratorAuditEntryReason)The reason for the outside collaborator being removed from the Organization.Warningreason is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRestoreMemberAuditEntryAudit log entry for a org.restore_member event.OrgRestoreMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgRestoreMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgRestoreMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredCustomEmailRoutingsCount (Int)The number of custom email routings for the restored member.WarningrestoredCustomEmailRoutingsCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredIssueAssignmentsCount (Int)The number of issue assignments for the restored member.WarningrestoredIssueAssignmentsCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredMemberships ([OrgRestoreMemberAuditEntryMembership!])Restored organization membership objects.WarningrestoredMemberships is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredMembershipsCount (Int)The number of restored memberships.WarningrestoredMembershipsCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredRepositoriesCount (Int)The number of repositories of the restored member.WarningrestoredRepositoriesCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredRepositoryStarsCount (Int)The number of starred repositories for the restored member.WarningrestoredRepositoryStarsCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.restoredRepositoryWatchesCount (Int)The number of watched repositories for the restored member.WarningrestoredRepositoryWatchesCount is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRestoreMemberMembershipOrganizationAuditEntryDataMetadata for an organization membership for org.restore_member actions.OrgRestoreMemberMembershipOrganizationAuditEntryData ImplementsOrganizationAuditEntryDataFields for OrgRestoreMemberMembershipOrganizationAuditEntryDataNameDescriptionorganization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgRestoreMemberMembershipRepositoryAuditEntryDataMetadata for a repository membership for org.restore_member actions.OrgRestoreMemberMembershipRepositoryAuditEntryData ImplementsRepositoryAuditEntryDataFields for OrgRestoreMemberMembershipRepositoryAuditEntryDataNameDescriptionrepository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.OrgRestoreMemberMembershipTeamAuditEntryDataMetadata for a team membership for org.restore_member actions.OrgRestoreMemberMembershipTeamAuditEntryData ImplementsTeamAuditEntryDataFields for OrgRestoreMemberMembershipTeamAuditEntryDataNameDescriptionteam (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.OrgUnblockUserAuditEntryAudit log entry for a org.unblock_user.OrgUnblockUserAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgUnblockUserAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUser (User)The user being unblocked by the organization.WarningblockedUser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserName (String)The username of the blocked user.WarningblockedUserName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserResourcePath (URI)The HTTP path for the blocked user.WarningblockedUserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.blockedUserUrl (URI)The HTTP URL for the blocked user.WarningblockedUserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgUnblockUserAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgUpdateDefaultRepositoryPermissionAuditEntryAudit log entry for a org.update_default_repository_permission.OrgUpdateDefaultRepositoryPermissionAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgUpdateDefaultRepositoryPermissionAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgUpdateDefaultRepositoryPermissionAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.permission (OrgUpdateDefaultRepositoryPermissionAuditEntryPermission)The new base repository permission level for the organization.Warningpermission is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.permissionWas (OrgUpdateDefaultRepositoryPermissionAuditEntryPermission)The former base repository permission level for the organization.WarningpermissionWas is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgUpdateMemberAuditEntryAudit log entry for a org.update_member event.OrgUpdateMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgUpdateMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgUpdateMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.permission (OrgUpdateMemberAuditEntryPermission)The new member permission level for the organization.Warningpermission is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.permissionWas (OrgUpdateMemberAuditEntryPermission)The former member permission level for the organization.WarningpermissionWas is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgUpdateMemberRepositoryCreationPermissionAuditEntryAudit log entry for a org.update_member_repository_creation_permission event.OrgUpdateMemberRepositoryCreationPermissionAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgUpdateMemberRepositoryCreationPermissionAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.canCreateRepositories (Boolean)Can members create repositories in the organization.WarningcanCreateRepositories is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgUpdateMemberRepositoryCreationPermissionAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility)The permission for visibility level of repositories for this organization.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrgUpdateMemberRepositoryInvitationPermissionAuditEntryAudit log entry for a org.update_member_repository_invitation_permission event.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataFields for OrgUpdateMemberRepositoryInvitationPermissionAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.canInviteOutsideCollaboratorsToRepositories (Boolean)Can outside collaborators be invited to repositories in the organization.WarningcanInviteOutsideCollaboratorsToRepositories is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the OrgUpdateMemberRepositoryInvitationPermissionAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.OrganizationAn account on GitHub, with one or more owners, that has repositories, members and teams.Organization ImplementsActorMemberStatusableNodePackageOwnerProfileOwnerProjectOwnerProjectV2OwnerProjectV2RecentRepositoryDiscussionAuthorRepositoryDiscussionCommentAuthorRepositoryOwnerSponsorableUniformResourceLocatableFields for OrganizationNameDescriptionannouncementBanner (AnnouncementBanner)The announcement banner set on this organization, if any. Only visible to members of the organization's enterprise.anyPinnableItems (Boolean!)Determine if this repository owner has any items that can be pinned to their profile.Arguments for anyPinnableItemstype (PinnableItemType)Filter to only a particular kind of pinnable item.archivedAt (DateTime)Identifies the date and time when the organization was archived.auditLog (OrganizationAuditEntryConnection!)Audit log entries of the organization.WarningauditLog is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.Arguments for auditLogafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (AuditLogOrder)Ordering options for the returned audit log entries.query (String)The query string to filter audit entries.avatarUrl (URI!)A URL pointing to the organization's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.description (String)The organization's public profile description.descriptionHTML (String)The organization's public profile description rendered to HTML.domains (VerifiableDomainConnection)A list of domains owned by the organization.Arguments for domainsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.isApproved (Boolean)Filter by if the domain is approved.isVerified (Boolean)Filter by if the domain is verified.last (Int)Returns the last n elements from the list.orderBy (VerifiableDomainOrder)Ordering options for verifiable domains returned.email (String)The organization's public email.enterpriseOwners (OrganizationEnterpriseOwnerConnection!)A list of owners of the organization's enterprise account.Arguments for enterpriseOwnersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrgEnterpriseOwnerOrder)Ordering options for enterprise owners returned from the connection.organizationRole (RoleInOrganization)The organization role to filter by.query (String)The search string to look for.estimatedNextSponsorsPayoutInCents (Int!)The estimated next GitHub Sponsors payout for this user/organization in cents (USD).hasSponsorsListing (Boolean!)True if this user/organization has a GitHub Sponsors listing.id (ID!)The Node ID of the Organization object.interactionAbility (RepositoryInteractionAbility)The interaction ability settings for this organization.ipAllowListEnabledSetting (IpAllowListEnabledSettingValue!)The setting value for whether the organization has an IP allow list enabled.ipAllowListEntries (IpAllowListEntryConnection!)The IP addresses that are allowed to access resources owned by the organization.Arguments for ipAllowListEntriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IpAllowListEntryOrder)Ordering options for IP allow list entries returned.ipAllowListForInstalledAppsEnabledSetting (IpAllowListForInstalledAppsEnabledSettingValue!)The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled.isSponsoredBy (Boolean!)Whether the given account is sponsoring this user/organization.Arguments for isSponsoredByaccountLogin (String!)The target account's login.isSponsoringViewer (Boolean!)True if the viewer is sponsored by this user/organization.isVerified (Boolean!)Whether the organization has verified its profile email and website.issueTypes (IssueTypeConnection)A list of the organization's issue types.Arguments for issueTypesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueTypeOrder)Ordering options for issue types returned from the connection.itemShowcase (ProfileItemShowcase!)Showcases a selection of repositories and gists that the profile owner has
either curated or that have been selected automatically based on popularity.lifetimeReceivedSponsorshipValues (SponsorAndLifetimeValueConnection!)Calculate how much each sponsor has ever paid total to this maintainer via
GitHub Sponsors. Does not include sponsorships paid via Patreon.Arguments for lifetimeReceivedSponsorshipValuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorAndLifetimeValueOrder)Ordering options for results returned from the connection.location (String)The organization's public profile location.login (String!)The organization's login name.mannequins (MannequinConnection!)A list of all mannequins for this organization.Arguments for mannequinsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.login (String)Filter mannequins by login.orderBy (MannequinOrder)Ordering options for mannequins returned from the connection.memberStatuses (UserStatusConnection!)Get the status messages members of this entity have set that are either public or visible only to the organization.Arguments for memberStatusesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (UserStatusOrder)Ordering options for user statuses returned from the connection.membersCanForkPrivateRepositories (Boolean!)Members can fork private repositories in this organization.membersWithRole (OrganizationMemberConnection!)A list of users who are members of this organization.Arguments for membersWithRoleafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.monthlyEstimatedSponsorsIncomeInCents (Int!)The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).name (String)The organization's public profile name.newTeamResourcePath (URI!)The HTTP path creating a new team.newTeamUrl (URI!)The HTTP URL creating a new team.notificationDeliveryRestrictionEnabledSetting (NotificationRestrictionSettingValue!)Indicates if email notification delivery for this organization is restricted to verified or approved domains.organizationBillingEmail (String)The billing email for the organization.packages (PackageConnection!)A list of packages under the owner.Arguments for packagesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.names ([String])Find packages by their names.orderBy (PackageOrder)Ordering of the returned packages.packageType (PackageType)Filter registry package by type.repositoryId (ID)Find packages in a repository by ID.pendingMembers (UserConnection!)A list of users who have been invited to join this organization.Arguments for pendingMembersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.pinnableItems (PinnableItemConnection!)A list of repositories and gists this profile owner can pin to their profile.Arguments for pinnableItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinnable items that are returned.pinnedItems (PinnableItemConnection!)A list of repositories and gists this profile owner has pinned to their profile.Arguments for pinnedItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinned items that are returned.pinnedItemsRemaining (Int!)Returns how many more items this profile owner can pin to their profile.project (Project)Find project by number.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectnumber (Int!)The project number to find.projectV2 (ProjectV2)Find a project by number.Arguments for projectV2number (Int!)The project number.projects (ProjectConnection!)A list of projects under the owner.Warningprojects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectOrder)Ordering options for projects returned from the connection.search (String)Query to search projects by, currently only searching by name.states ([ProjectState!])A list of states to filter the projects by.projectsResourcePath (URI!)The HTTP path listing organization's projects.projectsUrl (URI!)The HTTP URL listing organization's projects.projectsV2 (ProjectV2Connection!)A list of projects under the owner.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for under the owner.recentProjects (ProjectV2Connection!)Recent projects that this user has modified in the context of the owner.Arguments for recentProjectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.repositories (RepositoryConnection!)A list of repositories that the user owns.Arguments for repositoriesaffiliations ([RepositoryAffiliation])Array of viewer's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
current viewer owns.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isArchived (Boolean)If non-null, filters repositories according to whether they are archived and not maintained.isFork (Boolean)If non-null, filters repositories according to whether they are forks of another repository.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.repository (Repository)Find Repository.Arguments for repositoryfollowRenames (Boolean)Follow repository renames. If disabled, a repository referenced by its old name will return an error.The default value is true.name (String!)Name of Repository to find.repositoryDiscussionComments (DiscussionCommentConnection!)Discussion comments this user has authored.Arguments for repositoryDiscussionCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.onlyAnswers (Boolean)Filter discussion comments to only those that were marked as the answer.The default value is false.repositoryId (ID)Filter discussion comments to only those in a specific repository.repositoryDiscussions (DiscussionConnection!)Discussions this user has started.Arguments for repositoryDiscussionsafter (String)Returns the elements in the list that come after the specified cursor.answered (Boolean)Filter discussions to only those that have been answered or not. Defaults to
including both answered and unanswered discussions.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DiscussionOrder)Ordering options for discussions returned from the connection.repositoryId (ID)Filter discussions to only those in a specific repository.states ([DiscussionState!])A list of states to filter the discussions by.repositoryMigrations (RepositoryMigrationConnection!)A list of all repository migrations for this organization.Arguments for repositoryMigrationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryMigrationOrder)Ordering options for repository migrations returned.repositoryName (String)Filter repository migrations by repository name.state (MigrationState)Filter repository migrations by state.requiresTwoFactorAuthentication (Boolean)When true the organization requires all members, billing managers, and outside
collaborators to enable two-factor authentication.resourcePath (URI!)The HTTP path for this organization.ruleset (RepositoryRuleset)Returns a single ruleset from the current organization by ID.Arguments for rulesetdatabaseId (Int!)The ID of the ruleset to be returned.includeParents (Boolean)Include rulesets configured at higher levels that apply to this organization.The default value is true.rulesets (RepositoryRulesetConnection)A list of rulesets for this organization.Arguments for rulesetsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeParents (Boolean)Return rulesets configured at higher levels that apply to this organization.The default value is true.last (Int)Returns the last n elements from the list.targets ([RepositoryRulesetTarget!])Return rulesets that apply to the specified target.samlIdentityProvider (OrganizationIdentityProvider)The Organization's SAML identity provider. Visible to (1) organization owners,
(2) organization owners' personal access tokens (classic) with read:org or
admin:org scope, (3) GitHub App with an installation token with read or write
access to members.sponsoring (SponsorConnection!)List of users and organizations this entity is sponsoring.Arguments for sponsoringafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for the users and organizations returned from the connection.sponsors (SponsorConnection!)List of sponsors for this user or organization.Arguments for sponsorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for sponsors returned from the connection.tierId (ID)If given, will filter for sponsors at the given tier. Will only return
sponsors whose tier the viewer is permitted to see.sponsorsActivities (SponsorsActivityConnection!)Events involving this sponsorable, such as new sponsorships.Arguments for sponsorsActivitiesactions ([SponsorsActivityAction!])Filter activities to only the specified actions.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeAsSponsor (Boolean)Whether to include those events where this sponsorable acted as the sponsor.
Defaults to only including events where this sponsorable was the recipient
of a sponsorship.The default value is false.includePrivate (Boolean)Whether or not to include private activities in the result set. Defaults to including public and private activities.The default value is true.last (Int)Returns the last n elements from the list.orderBy (SponsorsActivityOrder)Ordering options for activity returned from the connection.period (SponsorsActivityPeriod)Filter activities returned to only those that occurred in the most recent
specified time period. Set to ALL to avoid filtering by when the activity
occurred. Will be ignored if since or until is given.The default value is MONTH.since (DateTime)Filter activities to those that occurred on or after this time.until (DateTime)Filter activities to those that occurred before this time.sponsorsListing (SponsorsListing)The GitHub Sponsors listing for this user or organization.sponsorshipForViewerAsSponsor (Sponsorship)The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.Arguments for sponsorshipForViewerAsSponsoractiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the viewer's sponsorship back even if it has been cancelled.The default value is true.sponsorshipForViewerAsSponsorable (Sponsorship)The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.Arguments for sponsorshipForViewerAsSponsorableactiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the sponsorship back even if it has been cancelled.The default value is true.sponsorshipNewsletters (SponsorshipNewsletterConnection!)List of sponsorship updates sent from this sponsorable to sponsors.Arguments for sponsorshipNewslettersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorshipNewsletterOrder)Ordering options for sponsorship updates returned from the connection.sponsorshipsAsMaintainer (SponsorshipConnection!)The sponsorships where this user or organization is the maintainer receiving the funds.Arguments for sponsorshipsAsMaintaineractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all
sponsorships this maintainer has ever received.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includePrivate (Boolean)Whether or not to include private sponsorships in the result set.The default value is false.last (Int)Returns the last n elements from the list.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.sponsorshipsAsSponsor (SponsorshipConnection!)The sponsorships where this user or organization is the funder.Arguments for sponsorshipsAsSponsoractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.maintainerLogins ([String!])Filter sponsorships returned to those for the specified maintainers. That
is, the recipient of the sponsorship is a user or organization with one of
the given logins.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.team (Team)Find an organization's team by its slug.Arguments for teamslug (String!)The name or slug of the team to find.teams (TeamConnection!)A list of teams in this organization.Arguments for teamsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ldapMapped (Boolean)If true, filters teams that are mapped to an LDAP Group (Enterprise only).notificationSetting (TeamNotificationSetting)If non-null, filters teams according to notification setting.orderBy (TeamOrder)Ordering options for teams returned from the connection.privacy (TeamPrivacy)If non-null, filters teams according to privacy.query (String)If non-null, filters teams with query on team name and team slug.role (TeamRole)If non-null, filters teams according to whether the viewer is an admin or member on team.rootTeamsOnly (Boolean)If true, restrict to only root teams.The default value is false.userLogins ([String!])User logins to filter by.teamsResourcePath (URI!)The HTTP path listing organization's teams.teamsUrl (URI!)The HTTP URL listing organization's teams.totalSponsorshipAmountAsSponsorInCents (Int)The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has
spent on GitHub to fund sponsorships. Only returns a value when viewed by the
user themselves or by a user who can manage sponsorships for the requested organization.Arguments for totalSponsorshipAmountAsSponsorInCentssince (DateTime)Filter payments to those that occurred on or after this time.sponsorableLogins ([String!])Filter payments to those made to the users or organizations with the specified usernames.until (DateTime)Filter payments to those that occurred before this time.twitterUsername (String)The organization's Twitter username.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this organization.viewerCanAdminister (Boolean!)Organization is adminable by the viewer.viewerCanChangePinnedItems (Boolean!)Can the viewer pin repositories and gists to the profile?.viewerCanCreateProjects (Boolean!)Can the current viewer create new projects on this owner.WarningviewerCanCreateProjects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.viewerCanCreateRepositories (Boolean!)Viewer can create repositories on this organization.viewerCanCreateTeams (Boolean!)Viewer can create teams on this organization.viewerCanSponsor (Boolean!)Whether or not the viewer is able to sponsor this user/organization.viewerIsAMember (Boolean!)Viewer is an active member of this organization.viewerIsFollowing (Boolean!)Whether or not this Organization is followed by the viewer.viewerIsSponsoring (Boolean!)True if the viewer is sponsoring this user/organization.webCommitSignoffRequired (Boolean!)Whether contributors are required to sign off on web-based commits for repositories in this organization.websiteUrl (URI)The organization's public profile URL.OrganizationAuditEntryConnectionThe connection type for OrganizationAuditEntry.Fields for OrganizationAuditEntryConnectionNameDescriptionedges ([OrganizationAuditEntryEdge])A list of edges.nodes ([OrganizationAuditEntry])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.OrganizationAuditEntryEdgeAn edge in a connection.Fields for OrganizationAuditEntryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (OrganizationAuditEntry)The item at the end of the edge.OrganizationConnectionA list of organizations managed by an enterprise.Fields for OrganizationConnectionNameDescriptionedges ([OrganizationEdge])A list of edges.nodes ([Organization])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.OrganizationEdgeAn edge in a connection.Fields for OrganizationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Organization)The item at the end of the edge.OrganizationEnterpriseOwnerConnectionThe connection type for User.Fields for OrganizationEnterpriseOwnerConnectionNameDescriptionedges ([OrganizationEnterpriseOwnerEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.OrganizationEnterpriseOwnerEdgeAn enterprise owner in the context of an organization that is part of the enterprise.Fields for OrganizationEnterpriseOwnerEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User)The item at the end of the edge.organizationRole (RoleInOrganization!)The role of the owner with respect to the organization.OrganizationIdentityProviderAn Identity Provider configured to provision SAML and SCIM identities for
Organizations. Visible to (1) organization owners, (2) organization owners'
personal access tokens (classic) with read:org or admin:org scope, (3) GitHub
App with an installation token with read or write access to members.OrganizationIdentityProvider ImplementsNodeFields for OrganizationIdentityProviderNameDescriptiondigestMethod (URI)The digest algorithm used to sign SAML requests for the Identity Provider.externalIdentities (ExternalIdentityConnection!)External Identities provisioned by this Identity Provider.Arguments for externalIdentitiesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.login (String)Filter to external identities with the users login.membersOnly (Boolean)Filter to external identities with valid org membership only.userName (String)Filter to external identities with the users userName/NameID attribute.id (ID!)The Node ID of the OrganizationIdentityProvider object.idpCertificate (X509Certificate)The x509 certificate used by the Identity Provider to sign assertions and responses.issuer (String)The Issuer Entity ID for the SAML Identity Provider.organization (Organization)Organization this Identity Provider belongs to.signatureMethod (URI)The signature algorithm used to sign SAML requests for the Identity Provider.ssoUrl (URI)The URL endpoint for the Identity Provider's SAML SSO.OrganizationInvitationAn Invitation for a user to an organization.OrganizationInvitation ImplementsNodeFields for OrganizationInvitationNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.email (String)The email address of the user invited to the organization.id (ID!)The Node ID of the OrganizationInvitation object.invitationSource (OrganizationInvitationSource!)The source of the invitation.invitationType (OrganizationInvitationType!)The type of invitation that was sent (e.g. email, user).invitee (User)The user who was invited to the organization.inviter (User!)The user who created the invitation.Warninginviter is deprecated.inviter will be removed. inviter will be replaced by inviterActor. Removal on 2024-07-01 UTC.inviterActor (User)The user who created the invitation.organization (Organization!)The organization the invite is for.role (OrganizationInvitationRole!)The user's pending role in the organization (e.g. member, owner).OrganizationInvitationConnectionThe connection type for OrganizationInvitation.Fields for OrganizationInvitationConnectionNameDescriptionedges ([OrganizationInvitationEdge])A list of edges.nodes ([OrganizationInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.OrganizationInvitationEdgeAn edge in a connection.Fields for OrganizationInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (OrganizationInvitation)The item at the end of the edge.OrganizationMemberConnectionA list of users who belong to the organization.Fields for OrganizationMemberConnectionNameDescriptionedges ([OrganizationMemberEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.OrganizationMemberEdgeRepresents a user within an organization.Fields for OrganizationMemberEdgeNameDescriptioncursor (String!)A cursor for use in pagination.hasTwoFactorEnabled (Boolean)Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.node (User)The item at the end of the edge.role (OrganizationMemberRole)The role this user has in the organization.OrganizationMigrationA GitHub Enterprise Importer (GEI) organization migration.OrganizationMigration ImplementsNodeFields for OrganizationMigrationNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (String)Identifies the primary key from the database.failureReason (String)The reason the organization migration failed.id (ID!)The Node ID of the OrganizationMigration object.remainingRepositoriesCount (Int)The remaining amount of repos to be migrated.sourceOrgName (String!)The name of the source organization to be migrated.sourceOrgUrl (URI!)The URL of the source organization to migrate.state (OrganizationMigrationState!)The migration state.targetOrgName (String!)The name of the target organization.totalRepositoriesCount (Int)The total amount of repositories to be migrated.OrganizationTeamsHovercardContextAn organization teams hovercard context.OrganizationTeamsHovercardContext ImplementsHovercardContextFields for OrganizationTeamsHovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.relevantTeams (TeamConnection!)Teams in this organization the user is a member of that are relevant.Arguments for relevantTeamsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.teamsResourcePath (URI!)The path for the full team list for this user.teamsUrl (URI!)The URL for the full team list for this user.totalTeamCount (Int!)The total number of teams the user is on in the organization.OrganizationsHovercardContextAn organization list hovercard context.OrganizationsHovercardContext ImplementsHovercardContextFields for OrganizationsHovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.relevantOrganizations (OrganizationConnection!)Organizations this user is a member of that are relevant.Arguments for relevantOrganizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for the User's organizations.totalOrganizationCount (Int!)The total number of organizations this user is in.PackageInformation for an uploaded package.Package ImplementsNodeFields for PackageNameDescriptionid (ID!)The Node ID of the Package object.latestVersion (PackageVersion)Find the latest version for the package.name (String!)Identifies the name of the package.packageType (PackageType!)Identifies the type of the package.repository (Repository)The repository this package belongs to.statistics (PackageStatistics)Statistics about package activity.version (PackageVersion)Find package version by version string.Arguments for versionversion (String!)The package version.versions (PackageVersionConnection!)list of versions for this package.Arguments for versionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (PackageVersionOrder)Ordering of the returned packages.PackageConnectionThe connection type for Package.Fields for PackageConnectionNameDescriptionedges ([PackageEdge])A list of edges.nodes ([Package])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PackageEdgeAn edge in a connection.Fields for PackageEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Package)The item at the end of the edge.PackageFileA file in a package version.PackageFile ImplementsNodeFields for PackageFileNameDescriptionid (ID!)The Node ID of the PackageFile object.md5 (String)MD5 hash of the file.name (String!)Name of the file.packageVersion (PackageVersion)The package version this file belongs to.sha1 (String)SHA1 hash of the file.sha256 (String)SHA256 hash of the file.size (Int)Size of the file in bytes.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI)URL to download the asset.PackageFileConnectionThe connection type for PackageFile.Fields for PackageFileConnectionNameDescriptionedges ([PackageFileEdge])A list of edges.nodes ([PackageFile])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PackageFileEdgeAn edge in a connection.Fields for PackageFileEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PackageFile)The item at the end of the edge.PackageStatisticsRepresents a object that contains package activity statistics such as downloads.Fields for PackageStatisticsNameDescriptiondownloadsTotalCount (Int!)Number of times the package was downloaded since it was created.PackageTagA version tag contains the mapping between a tag name and a version.PackageTag ImplementsNodeFields for PackageTagNameDescriptionid (ID!)The Node ID of the PackageTag object.name (String!)Identifies the tag name of the version.version (PackageVersion)Version that the tag is associated with.PackageVersionInformation about a specific package version.PackageVersion ImplementsNodeFields for PackageVersionNameDescriptionfiles (PackageFileConnection!)List of files associated with this package version.Arguments for filesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (PackageFileOrder)Ordering of the returned package files.id (ID!)The Node ID of the PackageVersion object.package (Package)The package associated with this version.platform (String)The platform this version was built for.preRelease (Boolean!)Whether or not this version is a pre-release.readme (String)The README of this package version.release (Release)The release associated with this package version.statistics (PackageVersionStatistics)Statistics about package activity.summary (String)The package version summary.version (String!)The version string.PackageVersionConnectionThe connection type for PackageVersion.Fields for PackageVersionConnectionNameDescriptionedges ([PackageVersionEdge])A list of edges.nodes ([PackageVersion])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PackageVersionEdgeAn edge in a connection.Fields for PackageVersionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PackageVersion)The item at the end of the edge.PackageVersionStatisticsRepresents a object that contains package version activity statistics such as downloads.Fields for PackageVersionStatisticsNameDescriptiondownloadsTotalCount (Int!)Number of times the package was downloaded since it was created.PageInfoInformation about pagination in a connection.Fields for PageInfoNameDescriptionendCursor (String)When paginating forwards, the cursor to continue.hasNextPage (Boolean!)When paginating forwards, are there more items?.hasPreviousPage (Boolean!)When paginating backwards, are there more items?.startCursor (String)When paginating backwards, the cursor to continue.ParentIssueAddedEventRepresents aparent_issue_addedevent on a given issue.ParentIssueAddedEvent ImplementsNodeFields for ParentIssueAddedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ParentIssueAddedEvent object.parent (Issue)The parent issue added.ParentIssueRemovedEventRepresents aparent_issue_removedevent on a given issue.ParentIssueRemovedEvent ImplementsNodeFields for ParentIssueRemovedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ParentIssueRemovedEvent object.parent (Issue)The parent issue removed.PermissionSourceA level of permission and source for a user's access to a repository.Fields for PermissionSourceNameDescriptionorganization (Organization!)The organization the repository belongs to.permission (DefaultRepositoryPermissionField!)The level of access this source has granted to the user.roleName (String)The name of the role this source has granted to the user.source (PermissionGranter!)The source of this permission.PinnableItemConnectionThe connection type for PinnableItem.Fields for PinnableItemConnectionNameDescriptionedges ([PinnableItemEdge])A list of edges.nodes ([PinnableItem])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PinnableItemEdgeAn edge in a connection.Fields for PinnableItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PinnableItem)The item at the end of the edge.PinnedDiscussionA Pinned Discussion is a discussion pinned to a repository's index page.PinnedDiscussion ImplementsNodeRepositoryNodeFields for PinnedDiscussionNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.discussion (Discussion!)The discussion that was pinned.gradientStopColors ([String!]!)Color stops of the chosen gradient.id (ID!)The Node ID of the PinnedDiscussion object.pattern (PinnedDiscussionPattern!)Background texture pattern.pinnedBy (Actor!)The actor that pinned this discussion.preconfiguredGradient (PinnedDiscussionGradient)Preconfigured background gradient option.repository (Repository!)The repository associated with this node.updatedAt (DateTime!)Identifies the date and time when the object was last updated.PinnedDiscussionConnectionThe connection type for PinnedDiscussion.Fields for PinnedDiscussionConnectionNameDescriptionedges ([PinnedDiscussionEdge])A list of edges.nodes ([PinnedDiscussion])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PinnedDiscussionEdgeAn edge in a connection.Fields for PinnedDiscussionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PinnedDiscussion)The item at the end of the edge.PinnedEnvironmentRepresents a pinned environment on a given repository.PinnedEnvironment ImplementsNodeFields for PinnedEnvironmentNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the pinned environment was created.databaseId (Int)Identifies the primary key from the database.environment (Environment!)Identifies the environment associated.id (ID!)The Node ID of the PinnedEnvironment object.position (Int!)Identifies the position of the pinned environment.repository (Repository!)The repository that this environment was pinned to.PinnedEnvironmentConnectionThe connection type for PinnedEnvironment.Fields for PinnedEnvironmentConnectionNameDescriptionedges ([PinnedEnvironmentEdge])A list of edges.nodes ([PinnedEnvironment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PinnedEnvironmentEdgeAn edge in a connection.Fields for PinnedEnvironmentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PinnedEnvironment)The item at the end of the edge.PinnedEventRepresents apinnedevent on a given issue or pull request.PinnedEvent ImplementsNodeFields for PinnedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the PinnedEvent object.issue (Issue!)Identifies the issue associated with the event.PinnedIssueA Pinned Issue is a issue pinned to a repository's index page.PinnedIssue ImplementsNodeFields for PinnedIssueNameDescriptiondatabaseId (Int)Identifies the primary key from the database.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the PinnedIssue object.issue (Issue!)The issue that was pinned.pinnedBy (Actor!)The actor that pinned this issue.repository (Repository!)The repository that this issue was pinned to.PinnedIssueConnectionThe connection type for PinnedIssue.Fields for PinnedIssueConnectionNameDescriptionedges ([PinnedIssueEdge])A list of edges.nodes ([PinnedIssue])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PinnedIssueEdgeAn edge in a connection.Fields for PinnedIssueEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PinnedIssue)The item at the end of the edge.PrivateRepositoryForkingDisableAuditEntryAudit log entry for a private_repository_forking.disable event.PrivateRepositoryForkingDisableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for PrivateRepositoryForkingDisableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the PrivateRepositoryForkingDisableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.PrivateRepositoryForkingEnableAuditEntryAudit log entry for a private_repository_forking.enable event.PrivateRepositoryForkingEnableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for PrivateRepositoryForkingEnableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the PrivateRepositoryForkingEnableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.ProfileItemShowcaseA curatable list of repositories relating to a repository owner, which defaults
to showing the most popular repositories they own.Fields for ProfileItemShowcaseNameDescriptionhasPinnedItems (Boolean!)Whether or not the owner has pinned any repositories or gists.items (PinnableItemConnection!)The repositories and gists in the showcase. If the profile owner has any
pinned items, those will be returned. Otherwise, the profile owner's popular
repositories will be returned.Arguments for itemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ProjectProjects manage issues, pull requests and notes within a project owner.Project ImplementsClosableNodeUpdatableFields for ProjectNameDescriptionbody (String)The project's description body.Warningbody is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.bodyHTML (HTML!)The projects description body rendered to HTML.WarningbodyHTML is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.closed (Boolean!)Indicates if the object is closed (definition of closed may depend on type).closedAt (DateTime)Identifies the date and time when the object was closed.columns (ProjectColumnConnection!)List of columns in the project.Warningcolumns is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for columnsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.createdAt (DateTime!)Identifies the date and time when the object was created.WarningcreatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.creator (Actor)The actor who originally created the project.Warningcreator is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the Project object.Warningid is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.name (String!)The project's name.Warningname is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.number (Int!)The project's number.Warningnumber is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.owner (ProjectOwner!)The project's owner. Currently limited to repositories, organizations, and users.Warningowner is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.pendingCards (ProjectCardConnection!)List of pending cards in this project.WarningpendingCards is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for pendingCardsafter (String)Returns the elements in the list that come after the specified cursor.archivedStates ([ProjectCardArchivedState])A list of archived states to filter the cards by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.progress (ProjectProgress!)Project progress details.Warningprogress is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.resourcePath (URI!)The HTTP path for this project.WarningresourcePath is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.state (ProjectState!)Whether the project is open or closed.Warningstate is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.updatedAt (DateTime!)Identifies the date and time when the object was last updated.WarningupdatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.url (URI!)The HTTP URL for this project.Warningurl is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.ProjectCardA card in a project.ProjectCard ImplementsNodeFields for ProjectCardNameDescriptioncolumn (ProjectColumn)The project column this card is associated under. A card may only belong to one
project column at a time. The column field will be null if the card is created
in a pending state and has yet to be associated with a column. Once cards are
associated with a column, they will not become pending in the future.Warningcolumn is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.content (ProjectCardItem)The card content item.Warningcontent is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.createdAt (DateTime!)Identifies the date and time when the object was created.WarningcreatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.creator (Actor)The actor who created this card.Warningcreator is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the ProjectCard object.Warningid is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.isArchived (Boolean!)Whether the card is archived.WarningisArchived is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.note (String)The card note.Warningnote is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.project (Project!)The project that contains this card.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.resourcePath (URI!)The HTTP path for this card.WarningresourcePath is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.state (ProjectCardState)The state of ProjectCard.Warningstate is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.updatedAt (DateTime!)Identifies the date and time when the object was last updated.WarningupdatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.url (URI!)The HTTP URL for this card.Warningurl is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.ProjectCardConnectionThe connection type for ProjectCard.Fields for ProjectCardConnectionNameDescriptionedges ([ProjectCardEdge])A list of edges.nodes ([ProjectCard])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectCardEdgeAn edge in a connection.Fields for ProjectCardEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectCard)The item at the end of the edge.ProjectColumnA column inside a project.ProjectColumn ImplementsNodeFields for ProjectColumnNameDescriptioncards (ProjectCardConnection!)List of cards in the column.Warningcards is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for cardsafter (String)Returns the elements in the list that come after the specified cursor.archivedStates ([ProjectCardArchivedState])A list of archived states to filter the cards by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.createdAt (DateTime!)Identifies the date and time when the object was created.WarningcreatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the ProjectColumn object.Warningid is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.name (String!)The project column's name.Warningname is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.project (Project!)The project that contains this column.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.purpose (ProjectColumnPurpose)The semantic purpose of the column.Warningpurpose is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.resourcePath (URI!)The HTTP path for this project column.WarningresourcePath is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.updatedAt (DateTime!)Identifies the date and time when the object was last updated.WarningupdatedAt is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.url (URI!)The HTTP URL for this project column.Warningurl is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.ProjectColumnConnectionThe connection type for ProjectColumn.Fields for ProjectColumnConnectionNameDescriptionedges ([ProjectColumnEdge])A list of edges.nodes ([ProjectColumn])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectColumnEdgeAn edge in a connection.Fields for ProjectColumnEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectColumn)The item at the end of the edge.ProjectConnectionA list of projects associated with the owner.Fields for ProjectConnectionNameDescriptionedges ([ProjectEdge])A list of edges.nodes ([Project])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectEdgeAn edge in a connection.Fields for ProjectEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Project)The item at the end of the edge.ProjectProgressProject progress stats.Fields for ProjectProgressNameDescriptiondoneCount (Int!)The number of done cards.WarningdoneCount is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.donePercentage (Float!)The percentage of done cards.WarningdonePercentage is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.enabled (Boolean!)Whether progress tracking is enabled and cards with purpose exist for this project.Warningenabled is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.inProgressCount (Int!)The number of in-progress cards.WarninginProgressCount is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.inProgressPercentage (Float!)The percentage of in-progress cards.WarninginProgressPercentage is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.todoCount (Int!)The number of to do cards.WarningtodoCount is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.todoPercentage (Float!)The percentage of to do cards.WarningtodoPercentage is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.ProjectV2New projects that manage issues, pull requests and drafts using tables and boards.ProjectV2 ImplementsClosableNodeUpdatableFields for ProjectV2NameDescriptionclosed (Boolean!)Returns true if the project is closed.closedAt (DateTime)Identifies the date and time when the object was closed.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who originally created the project.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2025-04-01 UTC.field (ProjectV2FieldConfiguration)A field of the project.Arguments for fieldname (String!)The name of the field.fields (ProjectV2FieldConfigurationConnection!)List of fields and their constraints in the project.Arguments for fieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for project v2 fields returned from the connection.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the ProjectV2 object.items (ProjectV2ItemConnection!)List of items in the project.Arguments for itemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2ItemOrder)Ordering options for project v2 items returned from the connection.number (Int!)The project's number.owner (ProjectV2Owner!)The project's owner. Currently limited to organizations and users.public (Boolean!)Returns true if the project is public.readme (String)The project's readme.repositories (RepositoryConnection!)The repositories the project is linked to.Arguments for repositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.resourcePath (URI!)The HTTP path for this project.shortDescription (String)The project's short description.statusUpdates (ProjectV2StatusUpdateConnection!)List of the status updates in the project.Arguments for statusUpdatesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2StatusOrder)Order for connection.teams (TeamConnection!)The teams the project is linked to.Arguments for teamsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (TeamOrder)Ordering options for teams returned from this connection.template (Boolean!)Returns true if this project is a template.title (String!)The project's name.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this project.view (ProjectV2View)A view of the project.Arguments for viewnumber (Int!)The number of a view belonging to the project.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.views (ProjectV2ViewConnection!)List of views in the project.Arguments for viewsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2ViewOrder)Ordering options for project v2 views returned from the connection.workflow (ProjectV2Workflow)A workflow of the project.Arguments for workflownumber (Int!)The number of a workflow belonging to the project.workflows (ProjectV2WorkflowConnection!)List of the workflows in the project.Arguments for workflowsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2WorkflowOrder)Ordering options for project v2 workflows returned from the connection.ProjectV2ActorConnectionThe connection type for ProjectV2Actor.Fields for ProjectV2ActorConnectionNameDescriptionedges ([ProjectV2ActorEdge])A list of edges.nodes ([ProjectV2Actor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2ActorEdgeAn edge in a connection.Fields for ProjectV2ActorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2Actor)The item at the end of the edge.ProjectV2ConnectionThe connection type for ProjectV2.Fields for ProjectV2ConnectionNameDescriptionedges ([ProjectV2Edge])A list of edges.nodes ([ProjectV2])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2EdgeAn edge in a connection.Fields for ProjectV2EdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2)The item at the end of the edge.ProjectV2FieldA field inside a project.ProjectV2Field ImplementsNodeProjectV2FieldCommonFields for ProjectV2FieldNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.dataType (ProjectV2FieldType!)The field's type.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ProjectV2Field object.name (String!)The project field's name.project (ProjectV2!)The project that contains this field.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2FieldConfigurationConnectionThe connection type for ProjectV2FieldConfiguration.Fields for ProjectV2FieldConfigurationConnectionNameDescriptionedges ([ProjectV2FieldConfigurationEdge])A list of edges.nodes ([ProjectV2FieldConfiguration])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2FieldConfigurationEdgeAn edge in a connection.Fields for ProjectV2FieldConfigurationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2FieldConfiguration)The item at the end of the edge.ProjectV2FieldConnectionThe connection type for ProjectV2Field.Fields for ProjectV2FieldConnectionNameDescriptionedges ([ProjectV2FieldEdge])A list of edges.nodes ([ProjectV2Field])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2FieldEdgeAn edge in a connection.Fields for ProjectV2FieldEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2Field)The item at the end of the edge.ProjectV2ItemAn item within a Project.ProjectV2Item ImplementsNodeFields for ProjectV2ItemNameDescriptioncontent (ProjectV2ItemContent)The content of the referenced draft issue, issue, or pull request.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2025-04-01 UTC.fieldValueByName (ProjectV2ItemFieldValue)The field value of the first project field which matches thenameargument that is set on the item.Arguments for fieldValueByNamename (String!)The name of the field to return the field value of.fieldValues (ProjectV2ItemFieldValueConnection!)The field values that are set on the item.Arguments for fieldValuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2ItemFieldValueOrder)Ordering options for project v2 item field values returned from the connection.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the ProjectV2Item object.isArchived (Boolean!)Whether the item is archived.project (ProjectV2!)The project that contains this item.type (ProjectV2ItemType!)The type of the item.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemConnectionThe connection type for ProjectV2Item.Fields for ProjectV2ItemConnectionNameDescriptionedges ([ProjectV2ItemEdge])A list of edges.nodes ([ProjectV2Item])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2ItemEdgeAn edge in a connection.Fields for ProjectV2ItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2Item)The item at the end of the edge.ProjectV2ItemFieldDateValueThe value of a date field in a Project item.ProjectV2ItemFieldDateValue ImplementsNodeProjectV2ItemFieldValueCommonFields for ProjectV2ItemFieldDateValueNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.date (Date)Date value for the field.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldDateValue object.item (ProjectV2Item!)The project item that contains this value.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldIterationValueThe value of an iteration field in a Project item.ProjectV2ItemFieldIterationValue ImplementsNodeProjectV2ItemFieldValueCommonFields for ProjectV2ItemFieldIterationValueNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.duration (Int!)The duration of the iteration in days.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldIterationValue object.item (ProjectV2Item!)The project item that contains this value.iterationId (String!)The ID of the iteration.startDate (Date!)The start date of the iteration.title (String!)The title of the iteration.titleHTML (String!)The title of the iteration, with HTML.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldLabelValueThe value of the labels field in a Project item.Fields for ProjectV2ItemFieldLabelValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.labels (LabelConnection)Labels value of a field.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ProjectV2ItemFieldMilestoneValueThe value of a milestone field in a Project item.Fields for ProjectV2ItemFieldMilestoneValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.milestone (Milestone)Milestone value of a field.ProjectV2ItemFieldNumberValueThe value of a number field in a Project item.ProjectV2ItemFieldNumberValue ImplementsNodeProjectV2ItemFieldValueCommonFields for ProjectV2ItemFieldNumberValueNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldNumberValue object.item (ProjectV2Item!)The project item that contains this value.number (Float)Number as a float(8).updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldPullRequestValueThe value of a pull request field in a Project item.Fields for ProjectV2ItemFieldPullRequestValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.pullRequests (PullRequestConnection)The pull requests for this field.Arguments for pullRequestsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (PullRequestOrder)Ordering options for pull requests.ProjectV2ItemFieldRepositoryValueThe value of a repository field in a Project item.Fields for ProjectV2ItemFieldRepositoryValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.repository (Repository)The repository for this field.ProjectV2ItemFieldReviewerValueThe value of a reviewers field in a Project item.Fields for ProjectV2ItemFieldReviewerValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.reviewers (RequestedReviewerConnection)The reviewers for this field.Arguments for reviewersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ProjectV2ItemFieldSingleSelectValueThe value of a single select field in a Project item.ProjectV2ItemFieldSingleSelectValue ImplementsNodeProjectV2ItemFieldValueCommonFields for ProjectV2ItemFieldSingleSelectValueNameDescriptioncolor (ProjectV2SingleSelectFieldOptionColor!)The color applied to the selected single-select option.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.description (String)A plain-text description of the selected single-select option, such as what the option means.descriptionHTML (String)The description of the selected single-select option, including HTML tags.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldSingleSelectValue object.item (ProjectV2Item!)The project item that contains this value.name (String)The name of the selected single select option.nameHTML (String)The html name of the selected single select option.optionId (String)The id of the selected single select option.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldTextValueThe value of a text field in a Project item.ProjectV2ItemFieldTextValue ImplementsNodeProjectV2ItemFieldValueCommonFields for ProjectV2ItemFieldTextValueNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldTextValue object.item (ProjectV2Item!)The project item that contains this value.text (String)Text value of a field.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldUserValueThe value of a user field in a Project item.Fields for ProjectV2ItemFieldUserValueNameDescriptionfield (ProjectV2FieldConfiguration!)The field that contains this value.users (UserConnection)The users for this field.Arguments for usersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ProjectV2ItemFieldValueConnectionThe connection type for ProjectV2ItemFieldValue.Fields for ProjectV2ItemFieldValueConnectionNameDescriptionedges ([ProjectV2ItemFieldValueEdge])A list of edges.nodes ([ProjectV2ItemFieldValue])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2ItemFieldValueEdgeAn edge in a connection.Fields for ProjectV2ItemFieldValueEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2ItemFieldValue)The item at the end of the edge.ProjectV2IterationFieldAn iteration field inside a project.ProjectV2IterationField ImplementsNodeProjectV2FieldCommonFields for ProjectV2IterationFieldNameDescriptionconfiguration (ProjectV2IterationFieldConfiguration!)Iteration configuration settings.createdAt (DateTime!)Identifies the date and time when the object was created.dataType (ProjectV2FieldType!)The field's type.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ProjectV2IterationField object.name (String!)The project field's name.project (ProjectV2!)The project that contains this field.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2IterationFieldConfigurationIteration field configuration for a project.Fields for ProjectV2IterationFieldConfigurationNameDescriptioncompletedIterations ([ProjectV2IterationFieldIteration!]!)The iteration's completed iterations.duration (Int!)The iteration's duration in days.iterations ([ProjectV2IterationFieldIteration!]!)The iteration's iterations.startDay (Int!)The iteration's start day of the week.ProjectV2IterationFieldIterationIteration field iteration settings for a project.Fields for ProjectV2IterationFieldIterationNameDescriptionduration (Int!)The iteration's duration in days.id (String!)The iteration's ID.startDate (Date!)The iteration's start date.title (String!)The iteration's title.titleHTML (String!)The iteration's html title.ProjectV2SingleSelectFieldA single select field inside a project.ProjectV2SingleSelectField ImplementsNodeProjectV2FieldCommonFields for ProjectV2SingleSelectFieldNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.dataType (ProjectV2FieldType!)The field's type.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ProjectV2SingleSelectField object.name (String!)The project field's name.options ([ProjectV2SingleSelectFieldOption!]!)Options for the single select field.Arguments for optionsnames ([String!])Filter returned options to only those matching these names, case insensitive.project (ProjectV2!)The project that contains this field.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2SingleSelectFieldOptionSingle select field option for a configuration for a project.Fields for ProjectV2SingleSelectFieldOptionNameDescriptioncolor (ProjectV2SingleSelectFieldOptionColor!)The option's display color.description (String!)The option's plain-text description.descriptionHTML (String!)The option's description, possibly containing HTML.id (String!)The option's ID.name (String!)The option's name.nameHTML (String!)The option's html name.ProjectV2SortByRepresents a sort by field and direction.Fields for ProjectV2SortByNameDescriptiondirection (OrderDirection!)The direction of the sorting. Possible values are ASC and DESC.field (ProjectV2Field!)The field by which items are sorted.ProjectV2SortByConnectionThe connection type for ProjectV2SortBy.Fields for ProjectV2SortByConnectionNameDescriptionedges ([ProjectV2SortByEdge])A list of edges.nodes ([ProjectV2SortBy])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2SortByEdgeAn edge in a connection.Fields for ProjectV2SortByEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2SortBy)The item at the end of the edge.ProjectV2SortByFieldRepresents a sort by field and direction.Fields for ProjectV2SortByFieldNameDescriptiondirection (OrderDirection!)The direction of the sorting. Possible values are ASC and DESC.field (ProjectV2FieldConfiguration!)The field by which items are sorted.ProjectV2SortByFieldConnectionThe connection type for ProjectV2SortByField.Fields for ProjectV2SortByFieldConnectionNameDescriptionedges ([ProjectV2SortByFieldEdge])A list of edges.nodes ([ProjectV2SortByField])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2SortByFieldEdgeAn edge in a connection.Fields for ProjectV2SortByFieldEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2SortByField)The item at the end of the edge.ProjectV2StatusUpdateA status update within a project.ProjectV2StatusUpdate ImplementsNodeFields for ProjectV2StatusUpdateNameDescriptionbody (String)The body of the status update.bodyHTML (HTML)The body of the status update rendered to HTML.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the status update.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2025-04-01 UTC.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the ProjectV2StatusUpdate object.project (ProjectV2!)The project that contains this status update.startDate (Date)The start date of the status update.status (ProjectV2StatusUpdateStatus)The status of the status update.targetDate (Date)The target date of the status update.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2StatusUpdateConnectionThe connection type for ProjectV2StatusUpdate.Fields for ProjectV2StatusUpdateConnectionNameDescriptionedges ([ProjectV2StatusUpdateEdge])A list of edges.nodes ([ProjectV2StatusUpdate])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2StatusUpdateEdgeAn edge in a connection.Fields for ProjectV2StatusUpdateEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2StatusUpdate)The item at the end of the edge.ProjectV2ViewA view within a ProjectV2.ProjectV2View ImplementsNodeFields for ProjectV2ViewNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2025-04-01 UTC.fields (ProjectV2FieldConfigurationConnection)The view's visible fields.Arguments for fieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.filter (String)The project view's filter.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.groupBy (ProjectV2FieldConnection)The view's group-by field.WarninggroupBy is deprecated.The ProjectV2View#order_by API is deprecated in favour of the more capable ProjectV2View#group_by_field API. Check out the ProjectV2View#group_by_fields API as an example for the more capable alternative. Removal on 2023-04-01 UTC.Arguments for groupByafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.groupByFields (ProjectV2FieldConfigurationConnection)The view's group-by field.Arguments for groupByFieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.id (ID!)The Node ID of the ProjectV2View object.layout (ProjectV2ViewLayout!)The project view's layout.name (String!)The project view's name.number (Int!)The project view's number.project (ProjectV2!)The project that contains this view.sortBy (ProjectV2SortByConnection)The view's sort-by config.WarningsortBy is deprecated.The ProjectV2View#sort_by API is deprecated in favour of the more capable ProjectV2View#sort_by_fields API. Check out the ProjectV2View#sort_by_fields API as an example for the more capable alternative. Removal on 2023-04-01 UTC.Arguments for sortByafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.sortByFields (ProjectV2SortByFieldConnection)The view's sort-by config.Arguments for sortByFieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.updatedAt (DateTime!)Identifies the date and time when the object was last updated.verticalGroupBy (ProjectV2FieldConnection)The view's vertical-group-by field.WarningverticalGroupBy is deprecated.The ProjectV2View#vertical_group_by API is deprecated in favour of the more capable ProjectV2View#vertical_group_by_fields API. Check out the ProjectV2View#vertical_group_by_fields API as an example for the more capable alternative. Removal on 2023-04-01 UTC.Arguments for verticalGroupByafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.verticalGroupByFields (ProjectV2FieldConfigurationConnection)The view's vertical-group-by field.Arguments for verticalGroupByFieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.visibleFields (ProjectV2FieldConnection)The view's visible fields.WarningvisibleFields is deprecated.The ProjectV2View#visibleFields API is deprecated in favour of the more capable ProjectV2View#fields API. Check out the ProjectV2View#fields API as an example for the more capable alternative. Removal on 2023-01-01 UTC.Arguments for visibleFieldsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectV2FieldOrder)Ordering options for the project v2 fields returned from the connection.ProjectV2ViewConnectionThe connection type for ProjectV2View.Fields for ProjectV2ViewConnectionNameDescriptionedges ([ProjectV2ViewEdge])A list of edges.nodes ([ProjectV2View])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2ViewEdgeAn edge in a connection.Fields for ProjectV2ViewEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2View)The item at the end of the edge.ProjectV2WorkflowA workflow inside a project.ProjectV2Workflow ImplementsNodeFields for ProjectV2WorkflowNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2025-04-01 UTC.enabled (Boolean!)Whether the workflow is enabled.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the ProjectV2Workflow object.name (String!)The name of the workflow.number (Int!)The number of the workflow.project (ProjectV2!)The project that contains this workflow.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2WorkflowConnectionThe connection type for ProjectV2Workflow.Fields for ProjectV2WorkflowConnectionNameDescriptionedges ([ProjectV2WorkflowEdge])A list of edges.nodes ([ProjectV2Workflow])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ProjectV2WorkflowEdgeAn edge in a connection.Fields for ProjectV2WorkflowEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ProjectV2Workflow)The item at the end of the edge.PropertyTargetDefinitionA property that must match.Fields for PropertyTargetDefinitionNameDescriptionname (String!)The name of the property.propertyValues ([String!]!)The values to match for.source (String)The source of the property. Choosecustomor 'system'. Defaults to 'custom' if not specified.PublicKeyA user's public key.PublicKey ImplementsNodeFields for PublicKeyNameDescriptionaccessedAt (DateTime)The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.createdAt (DateTime)Identifies the date and time when the key was created. Keys created before
March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.fingerprint (String!)The fingerprint for this PublicKey.id (ID!)The Node ID of the PublicKey object.isReadOnly (Boolean)Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.key (String!)The public key string.updatedAt (DateTime)Identifies the date and time when the key was updated. Keys created before
March 5th, 2014 may have inaccurate values. Values will be null for keys not
owned by the user.PublicKeyConnectionThe connection type for PublicKey.Fields for PublicKeyConnectionNameDescriptionedges ([PublicKeyEdge])A list of edges.nodes ([PublicKey])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PublicKeyEdgeAn edge in a connection.Fields for PublicKeyEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PublicKey)The item at the end of the edge.PullRequestA repository pull request.PullRequest ImplementsAssignableClosableCommentLabelableLockableNodeProjectV2OwnerReactableRepositoryNodeSubscribableUniformResourceLocatableUpdatableUpdatableCommentFields for PullRequestNameDescriptionactiveLockReason (LockReason)Reason that the conversation was locked.additions (Int!)The number of additions in this pull request.assignedActors (AssigneeConnection!)A list of actors assigned to this object.Arguments for assignedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.assignees (UserConnection!)A list of Users assigned to this object.Arguments for assigneesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.author (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.autoMergeRequest (AutoMergeRequest)Returns the auto-merge request object if one exists for this pull request.baseRef (Ref)Identifies the base Ref associated with the pull request.baseRefName (String!)Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.baseRefOid (GitObjectID!)Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.baseRepository (Repository)The repository associated with this pull request's base Ref.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.canBeRebased (Boolean!)Whether or not the pull request is rebaseable.changedFiles (Int!)The number of changed files in this pull request.checksResourcePath (URI!)The HTTP path for the checks of this pull request.checksUrl (URI!)The HTTP URL for the checks of this pull request.closed (Boolean!)true if the pull request is closed.closedAt (DateTime)Identifies the date and time when the object was closed.closingIssuesReferences (IssueConnection)List of issues that may be closed by this pull request.Arguments for closingIssuesReferencesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.userLinkedOnly (Boolean)Return only manually linked Issues.The default value is false.comments (IssueCommentConnection!)A list of comments associated with the pull request.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueCommentOrder)Ordering options for issue comments returned from the connection.commits (PullRequestCommitConnection!)A list of commits present in this pull request's head branch not present in the base branch.Arguments for commitsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2024-07-01 UTC.deletions (Int!)The number of deletions in this pull request.editor (Actor)The actor who edited this pull request's body.files (PullRequestChangedFileConnection)Lists the files changed within this pull request.Arguments for filesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.headRef (Ref)Identifies the head Ref associated with the pull request.headRefName (String!)Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.headRefOid (GitObjectID!)Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.headRepository (Repository)The repository associated with this pull request's head Ref.headRepositoryOwner (RepositoryOwner)The owner of the repository associated with this pull request's head Ref.hovercard (Hovercard!)The hovercard information for this issue.Arguments for hovercardincludeNotificationContexts (Boolean)Whether or not to include notification contexts.The default value is true.id (ID!)The Node ID of the PullRequest object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isCrossRepository (Boolean!)The head and base repositories are different.isDraft (Boolean!)Identifies if the pull request is a draft.isInMergeQueue (Boolean!)Indicates whether the pull request is in a merge queue.isMergeQueueEnabled (Boolean!)Indicates whether the pull request's base ref has a merge queue enabled.isReadByViewer (Boolean)Is this pull request read by the viewer.labels (LabelConnection)A list of labels associated with the object.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.lastEditedAt (DateTime)The moment the editor made the last edit.latestOpinionatedReviews (PullRequestReviewConnection)A list of latest reviews per user associated with the pull request.Arguments for latestOpinionatedReviewsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.writersOnly (Boolean)Only return reviews from user who have write access to the repository.The default value is false.latestReviews (PullRequestReviewConnection)A list of latest reviews per user associated with the pull request that are not also pending review.Arguments for latestReviewsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.locked (Boolean!)true if the pull request is locked.maintainerCanModify (Boolean!)Indicates whether maintainers can modify the pull request.mergeCommit (Commit)The commit that was created when this pull request was merged.mergeQueue (MergeQueue)The merge queue for the pull request's base branch.mergeQueueEntry (MergeQueueEntry)The merge queue entry of the pull request in the base branch's merge queue.mergeStateStatus (MergeStateStatus!)Detailed information about the current pull request merge state status.mergeable (MergeableState!)Whether or not the pull request can be merged based on the existence of merge conflicts.merged (Boolean!)Whether or not the pull request was merged.mergedAt (DateTime)The date and time that the pull request was merged.mergedBy (Actor)The actor who merged the pull request.milestone (Milestone)Identifies the milestone associated with the pull request.number (Int!)Identifies the pull request number.participants (UserConnection!)A list of Users that are participating in the Pull Request conversation.Arguments for participantsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.permalink (URI!)The permalink to the pull request.potentialMergeCommit (Commit)The commit that GitHub automatically generated to test if this pull request
could be merged. This field will not return a value if the pull request is
merged, or if the test merge commit is still being generated. See the
mergeable field for more details on the mergeability of the pull request.projectCards (ProjectCardConnection!)List of project cards associated with this pull request.WarningprojectCards is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectCardsafter (String)Returns the elements in the list that come after the specified cursor.archivedStates ([ProjectCardArchivedState])A list of archived states to filter the cards by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.projectItems (ProjectV2ItemConnection!)List of project items associated with this pull request.Arguments for projectItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeArchived (Boolean)Include archived items.The default value is true.last (Int)Returns the last n elements from the list.projectV2 (ProjectV2)Find a project by number.Arguments for projectV2number (Int!)The project number.projectsV2 (ProjectV2Connection!)A list of projects under the owner.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for under the owner.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path for this pull request.revertResourcePath (URI!)The HTTP path for reverting this pull request.revertUrl (URI!)The HTTP URL for reverting this pull request.reviewDecision (PullRequestReviewDecision)The current status of this pull request with respect to code review.reviewRequests (ReviewRequestConnection)A list of review requests associated with the pull request.Arguments for reviewRequestsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.reviewThreads (PullRequestReviewThreadConnection!)The list of all review threads for this pull request.Arguments for reviewThreadsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.reviews (PullRequestReviewConnection)A list of reviews associated with the pull request.Arguments for reviewsafter (String)Returns the elements in the list that come after the specified cursor.author (String)Filter by author of the review.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.states ([PullRequestReviewState!])A list of states to filter the reviews.state (PullRequestState!)Identifies the state of the pull request.statusCheckRollup (StatusCheckRollup)Check and Status rollup information for the PR's head ref.suggestedActors (AssigneeConnection!)A list of suggested actors to assign to this object.Arguments for suggestedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)If provided, searches users by login or profile name.suggestedReviewers ([SuggestedReviewer]!)A list of reviewer suggestions based on commit history and past review comments.timeline (PullRequestTimelineConnection!)A list of events, comments, commits, etc. associated with the pull request.Warningtimeline is deprecated.timeline will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.Arguments for timelineafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.since (DateTime)Allows filtering timeline events by a since timestamp.timelineItems (PullRequestTimelineItemsConnection!)A list of events, comments, commits, etc. associated with the pull request.Arguments for timelineItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.itemTypes ([PullRequestTimelineItemsItemType!])Filter timeline items by type.last (Int)Returns the last n elements from the list.since (DateTime)Filter timeline items by a since timestamp.skip (Int)Skips the first n elements in the list.title (String!)Identifies the pull request title.titleHTML (HTML!)Identifies the pull request title rendered to HTML.totalCommentsCount (Int)Returns a count of how many comments this pull request has received.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this pull request.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanApplySuggestion (Boolean!)Whether or not the viewer can apply suggestion.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanDeleteHeadRef (Boolean!)Check if the viewer can restore the deleted head ref.viewerCanDisableAutoMerge (Boolean!)Whether or not the viewer can disable auto-merge.viewerCanEditFiles (Boolean!)Can the viewer edit files within this pull request.viewerCanEnableAutoMerge (Boolean!)Whether or not the viewer can enable auto-merge.viewerCanLabel (Boolean!)Indicates if the viewer can edit labels for this object.viewerCanMergeAsAdmin (Boolean!)Indicates whether the viewer can bypass branch protections and merge the pull request immediately.viewerCanReact (Boolean!)Can user react to this subject.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCanUpdateBranch (Boolean!)Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.
If the head ref is up to date or unable to be updated by this user, this will return false.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.viewerLatestReview (PullRequestReview)The latest review given from the viewer.viewerLatestReviewRequest (ReviewRequest)The person who has requested the viewer for review on this pull request.viewerMergeBodyText (String!)The merge body text for the viewer and method.Arguments for viewerMergeBodyTextmergeType (PullRequestMergeMethod)The merge method for the message.viewerMergeHeadlineText (String!)The merge headline text for the viewer and method.Arguments for viewerMergeHeadlineTextmergeType (PullRequestMergeMethod)The merge method for the message.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.PullRequestChangedFileA file changed in a pull request.Fields for PullRequestChangedFileNameDescriptionadditions (Int!)The number of additions to the file.changeType (PatchStatus!)How the file was changed in this PullRequest.deletions (Int!)The number of deletions to the file.path (String!)The path of the file.viewerViewedState (FileViewedState!)The state of the file for the viewer.PullRequestChangedFileConnectionThe connection type for PullRequestChangedFile.Fields for PullRequestChangedFileConnectionNameDescriptionedges ([PullRequestChangedFileEdge])A list of edges.nodes ([PullRequestChangedFile])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestChangedFileEdgeAn edge in a connection.Fields for PullRequestChangedFileEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestChangedFile)The item at the end of the edge.PullRequestCommitRepresents a Git commit part of a pull request.PullRequestCommit ImplementsNodeUniformResourceLocatableFields for PullRequestCommitNameDescriptioncommit (Commit!)The Git commit object.id (ID!)The Node ID of the PullRequestCommit object.pullRequest (PullRequest!)The pull request this commit belongs to.resourcePath (URI!)The HTTP path for this pull request commit.url (URI!)The HTTP URL for this pull request commit.PullRequestCommitCommentThreadRepresents a commit comment thread part of a pull request.PullRequestCommitCommentThread ImplementsNodeRepositoryNodeFields for PullRequestCommitCommentThreadNameDescriptioncomments (CommitCommentConnection!)The comments that exist in this thread.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commit (Commit!)The commit the comments were made on.id (ID!)The Node ID of the PullRequestCommitCommentThread object.path (String)The file the comments were made on.position (Int)The position in the diff for the commit that the comment was made on.pullRequest (PullRequest!)The pull request this commit comment thread belongs to.repository (Repository!)The repository associated with this node.PullRequestCommitConnectionThe connection type for PullRequestCommit.Fields for PullRequestCommitConnectionNameDescriptionedges ([PullRequestCommitEdge])A list of edges.nodes ([PullRequestCommit])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestCommitEdgeAn edge in a connection.Fields for PullRequestCommitEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestCommit)The item at the end of the edge.PullRequestConnectionThe connection type for PullRequest.Fields for PullRequestConnectionNameDescriptionedges ([PullRequestEdge])A list of edges.nodes ([PullRequest])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestContributionsByRepositoryThis aggregates pull requests opened by a user within one repository.Fields for PullRequestContributionsByRepositoryNameDescriptioncontributions (CreatedPullRequestContributionConnection!)The pull request contributions.Arguments for contributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.repository (Repository!)The repository in which the pull requests were opened.PullRequestEdgeAn edge in a connection.Fields for PullRequestEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequest)The item at the end of the edge.PullRequestParametersRequire all commits be made to a non-target branch and submitted via a pull request before they can be merged.Fields for PullRequestParametersNameDescriptionallowedMergeMethods ([PullRequestAllowedMergeMethods!])Array of allowed merge methods. Allowed values include merge, squash, and
rebase. At least one option must be enabled.automaticCopilotCodeReviewEnabled (Boolean!)Automatically request review from Copilot for new pull requests, if the author has access to Copilot code review.dismissStaleReviewsOnPush (Boolean!)New, reviewable commits pushed will dismiss previous pull request review approvals.requireCodeOwnerReview (Boolean!)Require an approving review in pull requests that modify files that have a designated code owner.requireLastPushApproval (Boolean!)Whether the most recent reviewable push must be approved by someone other than the person who pushed it.requiredApprovingReviewCount (Int!)The number of approving reviews that are required before a pull request can be merged.requiredReviewThreadResolution (Boolean!)All conversations on code must be resolved before a pull request can be merged.PullRequestReviewA review object for a given pull request.PullRequestReview ImplementsCommentDeletableMinimizableNodeReactableRepositoryNodeUpdatableUpdatableCommentFields for PullRequestReviewNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.authorCanPushToRepository (Boolean!)Indicates whether the author of this review has push access to the repository.body (String!)Identifies the pull request review body.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body of this review rendered as plain text.comments (PullRequestReviewCommentConnection!)A list of review comments for the current pull request review.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commit (Commit)Identifies the commit associated with this pull request review.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2024-07-01 UTC.editor (Actor)The actor who edited the comment.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the PullRequestReview object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isMinimized (Boolean!)Returns whether or not a comment has been minimized.lastEditedAt (DateTime)The moment the editor made the last edit.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.onBehalfOf (TeamConnection!)A list of teams that this review was made on behalf of.Arguments for onBehalfOfafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.publishedAt (DateTime)Identifies when the comment was published at.pullRequest (PullRequest!)Identifies the pull request associated with this pull request review.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path permalink for this PullRequestReview.state (PullRequestReviewState!)Identifies the current state of the pull request review.submittedAt (DateTime)Identifies when the Pull Request Review was submitted.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL permalink for this PullRequestReview.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.PullRequestReviewCommentA review comment associated with a given repository pull request.PullRequestReviewComment ImplementsCommentDeletableMinimizableNodeReactableRepositoryNodeUpdatableUpdatableCommentFields for PullRequestReviewCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)The comment body of this review comment.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The comment body of this review comment rendered as plain text.commit (Commit)Identifies the commit associated with the comment.createdAt (DateTime!)Identifies when the comment was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.databaseId will be removed because it does not support 64-bit signed integer identifiers. Use fullDatabaseId instead. Removal on 2024-07-01 UTC.diffHunk (String!)The diff hunk to which the comment applies.draftedAt (DateTime!)Identifies when the comment was created in a draft state.editor (Actor)The actor who edited the comment.fullDatabaseId (BigInt)Identifies the primary key from the database as a BigInt.id (ID!)The Node ID of the PullRequestReviewComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isMinimized (Boolean!)Returns whether or not a comment has been minimized.lastEditedAt (DateTime)The moment the editor made the last edit.line (Int)The end line number on the file to which the comment applies.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.originalCommit (Commit)Identifies the original commit associated with the comment.originalLine (Int)The end line number on the file to which the comment applied when it was first created.originalPosition (Int!)The original line index in the diff to which the comment applies.WarningoriginalPosition is deprecated.We are phasing out diff-relative positioning for PR comments Removal on 2023-10-01 UTC.originalStartLine (Int)The start line number on the file to which the comment applied when it was first created.outdated (Boolean!)Identifies when the comment body is outdated.path (String!)The path to which the comment applies.position (Int)The line index in the diff to which the comment applies.Warningposition is deprecated.We are phasing out diff-relative positioning for PR comments Use the line and startLine fields instead, which are file line numbers instead of diff line numbers Removal on 2023-10-01 UTC.publishedAt (DateTime)Identifies when the comment was published at.pullRequest (PullRequest!)The pull request associated with this review comment.pullRequestReview (PullRequestReview)The pull request review associated with this review comment.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.replyTo (PullRequestReviewComment)The comment this is a reply to.repository (Repository!)The repository associated with this node.resourcePath (URI!)The HTTP path permalink for this review comment.startLine (Int)The start line number on the file to which the comment applies.state (PullRequestReviewCommentState!)Identifies the state of the comment.subjectType (PullRequestReviewThreadSubjectType!)The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.updatedAt (DateTime!)Identifies when the comment was last updated.url (URI!)The HTTP URL permalink for this review comment.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.PullRequestReviewCommentConnectionThe connection type for PullRequestReviewComment.Fields for PullRequestReviewCommentConnectionNameDescriptionedges ([PullRequestReviewCommentEdge])A list of edges.nodes ([PullRequestReviewComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestReviewCommentEdgeAn edge in a connection.Fields for PullRequestReviewCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestReviewComment)The item at the end of the edge.PullRequestReviewConnectionThe connection type for PullRequestReview.Fields for PullRequestReviewConnectionNameDescriptionedges ([PullRequestReviewEdge])A list of edges.nodes ([PullRequestReview])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestReviewContributionsByRepositoryThis aggregates pull request reviews made by a user within one repository.Fields for PullRequestReviewContributionsByRepositoryNameDescriptioncontributions (CreatedPullRequestReviewContributionConnection!)The pull request review contributions.Arguments for contributionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ContributionOrder)Ordering options for contributions returned from the connection.repository (Repository!)The repository in which the pull request reviews were made.PullRequestReviewEdgeAn edge in a connection.Fields for PullRequestReviewEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestReview)The item at the end of the edge.PullRequestReviewThreadA threaded list of comments for a given pull request.PullRequestReviewThread ImplementsNodeFields for PullRequestReviewThreadNameDescriptioncomments (PullRequestReviewCommentConnection!)A list of pull request comments associated with the thread.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.skip (Int)Skips the first n elements in the list.diffSide (DiffSide!)The side of the diff on which this thread was placed.id (ID!)The Node ID of the PullRequestReviewThread object.isCollapsed (Boolean!)Whether or not the thread has been collapsed (resolved).isOutdated (Boolean!)Indicates whether this thread was outdated by newer changes.isResolved (Boolean!)Whether this thread has been resolved.line (Int)The line in the file to which this thread refers.originalLine (Int)The original line in the file to which this thread refers.originalStartLine (Int)The original start line in the file to which this thread refers (multi-line only).path (String!)Identifies the file path of this thread.pullRequest (PullRequest!)Identifies the pull request associated with this thread.repository (Repository!)Identifies the repository associated with this thread.resolvedBy (User)The user who resolved this thread.startDiffSide (DiffSide)The side of the diff that the first line of the thread starts on (multi-line only).startLine (Int)The start line in the file to which this thread refers (multi-line only).subjectType (PullRequestReviewThreadSubjectType!)The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.viewerCanReply (Boolean!)Indicates whether the current viewer can reply to this thread.viewerCanResolve (Boolean!)Whether or not the viewer can resolve this thread.viewerCanUnresolve (Boolean!)Whether or not the viewer can unresolve this thread.PullRequestReviewThreadConnectionReview comment threads for a pull request review.Fields for PullRequestReviewThreadConnectionNameDescriptionedges ([PullRequestReviewThreadEdge])A list of edges.nodes ([PullRequestReviewThread])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestReviewThreadEdgeAn edge in a connection.Fields for PullRequestReviewThreadEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestReviewThread)The item at the end of the edge.PullRequestRevisionMarkerRepresents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.Fields for PullRequestRevisionMarkerNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.lastSeenCommit (Commit!)The last commit the viewer has seen.pullRequest (PullRequest!)The pull request to which the marker belongs.PullRequestTemplateA repository pull request template.Fields for PullRequestTemplateNameDescriptionbody (String)The body of the template.filename (String)The filename of the template.repository (Repository!)The repository the template belongs to.PullRequestThreadA threaded list of comments for a given pull request.PullRequestThread ImplementsNodeFields for PullRequestThreadNameDescriptioncomments (PullRequestReviewCommentConnection!)A list of pull request comments associated with the thread.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.skip (Int)Skips the first n elements in the list.diffSide (DiffSide!)The side of the diff on which this thread was placed.id (ID!)The Node ID of the PullRequestThread object.isCollapsed (Boolean!)Whether or not the thread has been collapsed (resolved).isOutdated (Boolean!)Indicates whether this thread was outdated by newer changes.isResolved (Boolean!)Whether this thread has been resolved.line (Int)The line in the file to which this thread refers.path (String!)Identifies the file path of this thread.pullRequest (PullRequest!)Identifies the pull request associated with this thread.repository (Repository!)Identifies the repository associated with this thread.resolvedBy (User)The user who resolved this thread.startDiffSide (DiffSide)The side of the diff that the first line of the thread starts on (multi-line only).startLine (Int)The line of the first file diff in the thread.subjectType (PullRequestReviewThreadSubjectType!)The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.viewerCanReply (Boolean!)Indicates whether the current viewer can reply to this thread.viewerCanResolve (Boolean!)Whether or not the viewer can resolve this thread.viewerCanUnresolve (Boolean!)Whether or not the viewer can unresolve this thread.PullRequestTimelineConnectionThe connection type for PullRequestTimelineItem.Fields for PullRequestTimelineConnectionNameDescriptionedges ([PullRequestTimelineItemEdge])A list of edges.nodes ([PullRequestTimelineItem])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PullRequestTimelineItemEdgeAn edge in a connection.Fields for PullRequestTimelineItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestTimelineItem)The item at the end of the edge.PullRequestTimelineItemsConnectionThe connection type for PullRequestTimelineItems.Fields for PullRequestTimelineItemsConnectionNameDescriptionedges ([PullRequestTimelineItemsEdge])A list of edges.filteredCount (Int!)Identifies the count of items after applying before and after filters.nodes ([PullRequestTimelineItems])A list of nodes.pageCount (Int!)Identifies the count of items after applying before/after filters and first/last/skip slicing.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.updatedAt (DateTime!)Identifies the date and time when the timeline was last updated.PullRequestTimelineItemsEdgeAn edge in a connection.Fields for PullRequestTimelineItemsEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PullRequestTimelineItems)The item at the end of the edge.PushA Git push.Push ImplementsNodeFields for PushNameDescriptionid (ID!)The Node ID of the Push object.nextSha (GitObjectID)The SHA after the push.permalink (URI!)The permalink for this push.previousSha (GitObjectID)The SHA before the push.pusher (Actor!)The actor who pushed.repository (Repository!)The repository that was pushed to.PushAllowanceA team, user, or app who has the ability to push to a protected branch.PushAllowance ImplementsNodeFields for PushAllowanceNameDescriptionactor (PushAllowanceActor)The actor that can push.branchProtectionRule (BranchProtectionRule)Identifies the branch protection rule associated with the allowed user, team, or app.id (ID!)The Node ID of the PushAllowance object.PushAllowanceConnectionThe connection type for PushAllowance.Fields for PushAllowanceConnectionNameDescriptionedges ([PushAllowanceEdge])A list of edges.nodes ([PushAllowance])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.PushAllowanceEdgeAn edge in a connection.Fields for PushAllowanceEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (PushAllowance)The item at the end of the edge.RateLimitRepresents the client's rate limit.Fields for RateLimitNameDescriptioncost (Int!)The point cost for the current query counting against the rate limit.limit (Int!)The maximum number of points the client is permitted to consume in a 60 minute window.nodeCount (Int!)The maximum number of nodes this query may return.remaining (Int!)The number of points remaining in the current rate limit window.resetAt (DateTime!)The time at which the current rate limit window resets in UTC epoch seconds.used (Int!)The number of points used in the current rate limit window.ReactingUserConnectionThe connection type for User.Fields for ReactingUserConnectionNameDescriptionedges ([ReactingUserEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReactingUserEdgeRepresents a user that's made a reaction.Fields for ReactingUserEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User!)N/AreactedAt (DateTime!)The moment when the user made the reaction.ReactionAn emoji reaction to a particular piece of content.Reaction ImplementsNodeFields for ReactionNameDescriptioncontent (ReactionContent!)Identifies the emoji reaction.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the Reaction object.reactable (Reactable!)The reactable piece of content.user (User)Identifies the user who created this reaction.ReactionConnectionA list of reactions that have been left on the subject.Fields for ReactionConnectionNameDescriptionedges ([ReactionEdge])A list of edges.nodes ([Reaction])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.viewerHasReacted (Boolean!)Whether or not the authenticated user has left a reaction on the subject.ReactionEdgeAn edge in a connection.Fields for ReactionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Reaction)The item at the end of the edge.ReactionGroupA group of emoji reactions to a particular piece of content.Fields for ReactionGroupNameDescriptioncontent (ReactionContent!)Identifies the emoji reaction.createdAt (DateTime)Identifies when the reaction was created.reactors (ReactorConnection!)Reactors to the reaction subject with the emotion represented by this reaction group.Arguments for reactorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.subject (Reactable!)The subject that was reacted to.users (ReactingUserConnection!)Users who have reacted to the reaction subject with the emotion represented by this reaction group.Warningusers is deprecated.Reactors can now be mannequins, bots, and organizations. Use the reactors field instead. Removal on 2021-10-01 UTC.Arguments for usersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerHasReacted (Boolean!)Whether or not the authenticated user has left a reaction on the subject.ReactorConnectionThe connection type for Reactor.Fields for ReactorConnectionNameDescriptionedges ([ReactorEdge])A list of edges.nodes ([Reactor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReactorEdgeRepresents an author of a reaction.Fields for ReactorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Reactor!)The author of the reaction.reactedAt (DateTime!)The moment when the user made the reaction.ReadyForReviewEventRepresents aready_for_reviewevent on a given pull request.ReadyForReviewEvent ImplementsNodeUniformResourceLocatableFields for ReadyForReviewEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ReadyForReviewEvent object.pullRequest (PullRequest!)PullRequest referenced by event.resourcePath (URI!)The HTTP path for this ready for review event.url (URI!)The HTTP URL for this ready for review event.RefRepresents a Git reference.Ref ImplementsNodeFields for RefNameDescriptionassociatedPullRequests (PullRequestConnection!)A list of pull requests with this ref as the head ref.Arguments for associatedPullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.branchProtectionRule (BranchProtectionRule)Branch protection rules for this ref.compare (Comparison)Compares the current ref as a base ref to another head ref, if the comparison can be made.Arguments for compareheadRef (String!)The head ref to compare against.id (ID!)The Node ID of the Ref object.name (String!)The ref name.prefix (String!)The ref's prefix, such as refs/heads/ or refs/tags/.refUpdateRule (RefUpdateRule)Branch protection rules that are viewable by non-admins.repository (Repository!)The repository the ref belongs to.rules (RepositoryRuleConnection)A list of rules from active Repository and Organization rulesets that apply to this ref.Arguments for rulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryRuleOrder)Ordering options for repository rules.target (GitObject)The object the ref points to. Returns null when object does not exist.RefConnectionThe connection type for Ref.Fields for RefConnectionNameDescriptionedges ([RefEdge])A list of edges.nodes ([Ref])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RefEdgeAn edge in a connection.Fields for RefEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Ref)The item at the end of the edge.RefNameConditionTargetParameters to be used for the ref_name condition.Fields for RefNameConditionTargetNameDescriptionexclude ([String!]!)Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.include ([String!]!)Array of ref names or patterns to include. One of these patterns must match
for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the
default branch or ~ALL to include all branches.RefUpdateRuleBranch protection rules that are enforced on the viewer.Fields for RefUpdateRuleNameDescriptionallowsDeletions (Boolean!)Can this branch be deleted.allowsForcePushes (Boolean!)Are force pushes allowed on this branch.blocksCreations (Boolean!)Can matching branches be created.pattern (String!)Identifies the protection rule pattern.requiredApprovingReviewCount (Int)Number of approving reviews required to update matching branches.requiredStatusCheckContexts ([String])List of required status check contexts that must pass for commits to be accepted to matching branches.requiresCodeOwnerReviews (Boolean!)Are reviews from code owners required to update matching branches.requiresConversationResolution (Boolean!)Are conversations required to be resolved before merging.requiresLinearHistory (Boolean!)Are merge commits prohibited from being pushed to this branch.requiresSignatures (Boolean!)Are commits required to be signed.viewerAllowedToDismissReviews (Boolean!)Is the viewer allowed to dismiss reviews.viewerCanPush (Boolean!)Can the viewer push to the branch.ReferencedEventRepresents areferencedevent on a given ReferencedSubject.ReferencedEvent ImplementsNodeFields for ReferencedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.commit (Commit)Identifies the commit associated with thereferencedevent.commitRepository (Repository!)Identifies the repository associated with thereferencedevent.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ReferencedEvent object.isCrossRepository (Boolean!)Reference originated in a different repository.isDirectReference (Boolean!)Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.subject (ReferencedSubject!)Object referenced by event.ReleaseA release contains the content for a release.Release ImplementsNodeReactableUniformResourceLocatableFields for ReleaseNameDescriptionauthor (User)The author of the release.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.description (String)The description of the release.descriptionHTML (HTML)The description of this release rendered to HTML.id (ID!)The Node ID of the Release object.isDraft (Boolean!)Whether or not the release is a draft.isLatest (Boolean!)Whether or not the release is the latest releast.isPrerelease (Boolean!)Whether or not the release is a prerelease.mentions (UserConnection)A list of users mentioned in the release description.Arguments for mentionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.name (String)The title of the release.publishedAt (DateTime)Identifies the date and time when the release was created.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.releaseAssets (ReleaseAssetConnection!)List of releases assets which are dependent on this release.Arguments for releaseAssetsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.name (String)A name to filter the assets by.repository (Repository!)The repository that the release belongs to.resourcePath (URI!)The HTTP path for this issue.shortDescriptionHTML (HTML)A description of the release, rendered to HTML without any links in it.Arguments for shortDescriptionHTMLlimit (Int)How many characters to return.The default value is 200.tag (Ref)The Git tag the release points to.tagCommit (Commit)The tag commit for this release.tagName (String!)The name of the release's Git tag.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this issue.viewerCanReact (Boolean!)Can user react to this subject.ReleaseAssetA release asset contains the content for a release asset.ReleaseAsset ImplementsNodeFields for ReleaseAssetNameDescriptioncontentType (String!)The asset's content-type.createdAt (DateTime!)Identifies the date and time when the object was created.downloadCount (Int!)The number of times this asset was downloaded.downloadUrl (URI!)Identifies the URL where you can download the release asset via the browser.id (ID!)The Node ID of the ReleaseAsset object.name (String!)Identifies the title of the release asset.release (Release)Release that the asset is associated with.size (Int!)The size (in bytes) of the asset.updatedAt (DateTime!)Identifies the date and time when the object was last updated.uploadedBy (User!)The user that performed the upload.url (URI!)Identifies the URL of the release asset.ReleaseAssetConnectionThe connection type for ReleaseAsset.Fields for ReleaseAssetConnectionNameDescriptionedges ([ReleaseAssetEdge])A list of edges.nodes ([ReleaseAsset])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReleaseAssetEdgeAn edge in a connection.Fields for ReleaseAssetEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ReleaseAsset)The item at the end of the edge.ReleaseConnectionThe connection type for Release.Fields for ReleaseConnectionNameDescriptionedges ([ReleaseEdge])A list of edges.nodes ([Release])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReleaseEdgeAn edge in a connection.Fields for ReleaseEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Release)The item at the end of the edge.RemovedFromMergeQueueEventRepresents aremoved_from_merge_queueevent on a given pull request.RemovedFromMergeQueueEvent ImplementsNodeFields for RemovedFromMergeQueueEventNameDescriptionactor (Actor)Identifies the actor who performed the event.beforeCommit (Commit)Identifies the before commit SHA for theremoved_from_merge_queueevent.createdAt (DateTime!)Identifies the date and time when the object was created.enqueuer (User)The user who removed this Pull Request from the merge queue.id (ID!)The Node ID of the RemovedFromMergeQueueEvent object.mergeQueue (MergeQueue)The merge queue where this pull request was removed from.pullRequest (PullRequest)PullRequest referenced by event.reason (String)The reason this pull request was removed from the queue.RemovedFromProjectEventRepresents aremoved_from_projectevent on a given issue or pull request.RemovedFromProjectEvent ImplementsNodeFields for RemovedFromProjectEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.WarningdatabaseId is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.id (ID!)The Node ID of the RemovedFromProjectEvent object.project (Project)Project referenced by event.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectColumnName (String!)Column name referenced by this project event.WarningprojectColumnName is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.RenamedTitleEventRepresents arenamedevent on a given issue or pull request.RenamedTitleEvent ImplementsNodeFields for RenamedTitleEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.currentTitle (String!)Identifies the current title of the issue or pull request.id (ID!)The Node ID of the RenamedTitleEvent object.previousTitle (String!)Identifies the previous title of the issue or pull request.subject (RenamedTitleSubject!)Subject that was renamed.ReopenedEventRepresents areopenedevent on any Closable.ReopenedEvent ImplementsNodeFields for ReopenedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.closable (Closable!)Object that was reopened.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ReopenedEvent object.stateReason (IssueStateReason)The reason the issue state was changed to open.RepoAccessAuditEntryAudit log entry for a repo.access event.RepoAccessAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoAccessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoAccessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoAccessAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoAddMemberAuditEntryAudit log entry for a repo.add_member event.RepoAddMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoAddMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoAddMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoAddMemberAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoAddTopicAuditEntryAudit log entry for a repo.add_topic event.RepoAddTopicAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataTopicAuditEntryDataFields for RepoAddTopicAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoAddTopicAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.topic (Topic)The name of the topic added to the repository.topicName (String)The name of the topic added to the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoArchivedAuditEntryAudit log entry for a repo.archived event.RepoArchivedAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoArchivedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoArchivedAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoArchivedAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoChangeMergeSettingAuditEntryAudit log entry for a repo.change_merge_setting event.RepoChangeMergeSettingAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoChangeMergeSettingAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoChangeMergeSettingAuditEntry object.isEnabled (Boolean)Whether the change was to enable (true) or disable (false) the merge type.WarningisEnabled is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.mergeType (RepoChangeMergeSettingAuditEntryMergeType)The merge method affected by the change.WarningmergeType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigDisableAnonymousGitAccessAuditEntryAudit log entry for a repo.config.disable_anonymous_git_access event.RepoConfigDisableAnonymousGitAccessAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigDisableAnonymousGitAccessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigDisableAnonymousGitAccessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigDisableCollaboratorsOnlyAuditEntryAudit log entry for a repo.config.disable_collaborators_only event.RepoConfigDisableCollaboratorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigDisableCollaboratorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigDisableCollaboratorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigDisableContributorsOnlyAuditEntryAudit log entry for a repo.config.disable_contributors_only event.RepoConfigDisableContributorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigDisableContributorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigDisableContributorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigDisableSockpuppetDisallowedAuditEntryAudit log entry for a repo.config.disable_sockpuppet_disallowed event.RepoConfigDisableSockpuppetDisallowedAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigDisableSockpuppetDisallowedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigDisableSockpuppetDisallowedAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigEnableAnonymousGitAccessAuditEntryAudit log entry for a repo.config.enable_anonymous_git_access event.RepoConfigEnableAnonymousGitAccessAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigEnableAnonymousGitAccessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigEnableAnonymousGitAccessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigEnableCollaboratorsOnlyAuditEntryAudit log entry for a repo.config.enable_collaborators_only event.RepoConfigEnableCollaboratorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigEnableCollaboratorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigEnableCollaboratorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigEnableContributorsOnlyAuditEntryAudit log entry for a repo.config.enable_contributors_only event.RepoConfigEnableContributorsOnlyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigEnableContributorsOnlyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigEnableContributorsOnlyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigEnableSockpuppetDisallowedAuditEntryAudit log entry for a repo.config.enable_sockpuppet_disallowed event.RepoConfigEnableSockpuppetDisallowedAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigEnableSockpuppetDisallowedAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigEnableSockpuppetDisallowedAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigLockAnonymousGitAccessAuditEntryAudit log entry for a repo.config.lock_anonymous_git_access event.RepoConfigLockAnonymousGitAccessAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigLockAnonymousGitAccessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigLockAnonymousGitAccessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoConfigUnlockAnonymousGitAccessAuditEntryAudit log entry for a repo.config.unlock_anonymous_git_access event.RepoConfigUnlockAnonymousGitAccessAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoConfigUnlockAnonymousGitAccessAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoConfigUnlockAnonymousGitAccessAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoCreateAuditEntryAudit log entry for a repo.create event.RepoCreateAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoCreateAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.forkParentName (String)The name of the parent repository for this forked repository.WarningforkParentName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.forkSourceName (String)The name of the root repository for this network.WarningforkSourceName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoCreateAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoCreateAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoDestroyAuditEntryAudit log entry for a repo.destroy event.RepoDestroyAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoDestroyAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoDestroyAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoDestroyAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoRemoveMemberAuditEntryAudit log entry for a repo.remove_member event.RepoRemoveMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataFields for RepoRemoveMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoRemoveMemberAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.visibility (RepoRemoveMemberAuditEntryVisibility)The visibility of the repository.Warningvisibility is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepoRemoveTopicAuditEntryAudit log entry for a repo.remove_topic event.RepoRemoveTopicAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataTopicAuditEntryDataFields for RepoRemoveTopicAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the RepoRemoveTopicAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.topic (Topic)The name of the topic added to the repository.topicName (String)The name of the topic added to the repository.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepositoryA repository contains the content for a project.Repository ImplementsNodePackageOwnerProjectOwnerProjectV2RecentRepositoryInfoStarrableSubscribableUniformResourceLocatableFields for RepositoryNameDescriptionallowUpdateBranch (Boolean!)Whether or not a pull request head branch that is behind its base branch can
always be updated even if it is not required to be up to date before merging.archivedAt (DateTime)Identifies the date and time when the repository was archived.assignableUsers (UserConnection!)A list of users that can be assigned to issues in this repository.Arguments for assignableUsersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)Filters users with query on user name and login.autoMergeAllowed (Boolean!)Whether or not Auto-merge can be enabled on pull requests in this repository.branchProtectionRules (BranchProtectionRuleConnection!)A list of branch protection rules for this repository.Arguments for branchProtectionRulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.codeOfConduct (CodeOfConduct)Returns the code of conduct for this repository.codeowners (RepositoryCodeowners)Information extracted from the repository's CODEOWNERS file.Arguments for codeownersrefName (String)The ref name used to return the associated CODEOWNERS file.collaborators (RepositoryCollaboratorConnection)A list of collaborators associated with the repository.Arguments for collaboratorsaffiliation (CollaboratorAffiliation)Collaborators affiliation level with a repository.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.login (String)The login of one specific collaborator.query (String)Filters users with query on user name and login.commitComments (CommitCommentConnection!)A list of commit comments associated with the repository.Arguments for commitCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.contactLinks ([RepositoryContactLink!])Returns a list of contact links associated to the repository.contributingGuidelines (ContributingGuidelines)Returns the contributing guidelines for this repository.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.defaultBranchRef (Ref)The Ref associated with the repository's default branch.deleteBranchOnMerge (Boolean!)Whether or not branches are automatically deleted when merged in this repository.dependencyGraphManifests (DependencyGraphManifestConnection)A list of dependency manifests contained in the repository.Arguments for dependencyGraphManifestsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.dependenciesAfter (String)Cursor to paginate dependencies.dependenciesFirst (Int)Number of dependencies to fetch.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.withDependencies (Boolean)Flag to scope to only manifests with dependencies.deployKeys (DeployKeyConnection!)A list of deploy keys that are on this repository.Arguments for deployKeysafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.deployments (DeploymentConnection!)Deployments associated with the repository.Arguments for deploymentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.environments ([String!])Environments to list deployments for.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DeploymentOrder)Ordering options for deployments returned from the connection.description (String)The description of the repository.descriptionHTML (HTML!)The description of the repository rendered to HTML.discussion (Discussion)Returns a single discussion from the current repository by number.Arguments for discussionnumber (Int!)The number for the discussion to be returned.discussionCategories (DiscussionCategoryConnection!)A list of discussion categories that are available in the repository.Arguments for discussionCategoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterByAssignable (Boolean)Filter by categories that are assignable by the viewer.The default value is false.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.discussionCategory (DiscussionCategory)A discussion category by slug.Arguments for discussionCategoryslug (String!)The slug of the discussion category to be returned.discussions (DiscussionConnection!)A list of discussions that have been opened in the repository.Arguments for discussionsafter (String)Returns the elements in the list that come after the specified cursor.answered (Boolean)Only show answered or unanswered discussions.before (String)Returns the elements in the list that come before the specified cursor.categoryId (ID)Only include discussions that belong to the category with this ID.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DiscussionOrder)Ordering options for discussions returned from the connection.states ([DiscussionState!])A list of states to filter the discussions by.diskUsage (Int)The number of kilobytes this repository occupies on disk.environment (Environment)Returns a single active environment from the current repository by name.Arguments for environmentname (String!)The name of the environment to be returned.environments (EnvironmentConnection!)A list of environments that are in this repository.Arguments for environmentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.names ([String!])The names of the environments to be returned.orderBy (Environments)Ordering options for the environments.pinnedEnvironmentFilter (EnvironmentPinnedFilterField)Filter to control pinned environments return.The default value is ALL.forkCount (Int!)Returns how many forks there are of this repository in the whole network.forkingAllowed (Boolean!)Whether this repository allows forks.forks (RepositoryConnection!)A list of direct forked repositories.Arguments for forksaffiliations ([RepositoryAffiliation])Array of viewer's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
current viewer owns.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.fundingLinks ([FundingLink!]!)The funding links for this repository.hasDiscussionsEnabled (Boolean!)Indicates if the repository has the Discussions feature enabled.hasIssuesEnabled (Boolean!)Indicates if the repository has issues feature enabled.hasProjectsEnabled (Boolean!)Indicates if the repository has the Projects feature enabled.hasSponsorshipsEnabled (Boolean!)Indicates if the repository displays a Sponsor button for financial contributions.hasVulnerabilityAlertsEnabled (Boolean!)Whether vulnerability alerts are enabled for the repository.hasWikiEnabled (Boolean!)Indicates if the repository has wiki feature enabled.homepageUrl (URI)The repository's URL.id (ID!)The Node ID of the Repository object.interactionAbility (RepositoryInteractionAbility)The interaction ability settings for this repository.isArchived (Boolean!)Indicates if the repository is unmaintained.isBlankIssuesEnabled (Boolean!)Returns true if blank issue creation is allowed.isDisabled (Boolean!)Returns whether or not this repository disabled.isEmpty (Boolean!)Returns whether or not this repository is empty.isFork (Boolean!)Identifies if the repository is a fork.isInOrganization (Boolean!)Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.isLocked (Boolean!)Indicates if the repository has been locked or not.isMirror (Boolean!)Identifies if the repository is a mirror.isPrivate (Boolean!)Identifies if the repository is private or internal.isSecurityPolicyEnabled (Boolean)Returns true if this repository has a security policy.isTemplate (Boolean!)Identifies if the repository is a template that can be used to generate new repositories.isUserConfigurationRepository (Boolean!)Is this repository a user configuration repository?.issue (Issue)Returns a single issue from the current repository by number.Arguments for issuenumber (Int!)The number for the issue to be returned.issueOrPullRequest (IssueOrPullRequest)Returns a single issue-like object from the current repository by number.Arguments for issueOrPullRequestnumber (Int!)The number for the issue to be returned.issueTemplates ([IssueTemplate!])Returns a list of issue templates associated to the repository.issueType (IssueType)Returns a single issue type by name.Arguments for issueTypename (String!)Issue type name.issueTypes (IssueTypeConnection)A list of the repository's issue types.Arguments for issueTypesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueTypeOrder)Ordering options for issue types returned from the connection.issues (IssueConnection!)A list of issues that have been opened in the repository.Arguments for issuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (IssueFilters)Filtering options for issues returned from the connection.first (Int)Returns the first n elements from the list.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.states ([IssueState!])A list of states to filter the issues by.label (Label)Returns a single label by name.Arguments for labelname (String!)Label name.labels (LabelConnection)A list of labels associated with the repository.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.query (String)If provided, searches labels by name and description.languages (LanguageConnection)A list containing a breakdown of the language composition of the repository.Arguments for languagesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LanguageOrder)Order for connection.latestRelease (Release)Get the latest release for the repository if one exists.licenseInfo (License)The license associated with the repository.lockReason (RepositoryLockReason)The reason the repository has been locked.mentionableUsers (UserConnection!)A list of Users that can be mentioned in the context of the repository.Arguments for mentionableUsersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)Filters users with query on user name and login.mergeCommitAllowed (Boolean!)Whether or not PRs are merged with a merge commit on this repository.mergeCommitMessage (MergeCommitMessage!)How the default commit message will be generated when merging a pull request.mergeCommitTitle (MergeCommitTitle!)How the default commit title will be generated when merging a pull request.mergeQueue (MergeQueue)The merge queue for a specified branch, otherwise the default branch if not provided.Arguments for mergeQueuebranch (String)The name of the branch to get the merge queue for. Case sensitive.milestone (Milestone)Returns a single milestone from the current repository by number.Arguments for milestonenumber (Int!)The number for the milestone to be returned.milestones (MilestoneConnection)A list of milestones associated with the repository.Arguments for milestonesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (MilestoneOrder)Ordering options for milestones.query (String)Filters milestones with a query on the title.states ([MilestoneState!])Filter by the state of the milestones.mirrorUrl (URI)The repository's original mirror URL.name (String!)The name of the repository.nameWithOwner (String!)The repository's name with owner.object (GitObject)A Git object in the repository.Arguments for objectexpression (String)A Git revision expression suitable for rev-parse.oid (GitObjectID)The Git object ID.openGraphImageUrl (URI!)The image used to represent this repository in Open Graph data.owner (RepositoryOwner!)The User owner of the repository.packages (PackageConnection!)A list of packages under the owner.Arguments for packagesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.names ([String])Find packages by their names.orderBy (PackageOrder)Ordering of the returned packages.packageType (PackageType)Filter registry package by type.repositoryId (ID)Find packages in a repository by ID.parent (Repository)The repository parent, if this is a fork.pinnedDiscussions (PinnedDiscussionConnection!)A list of discussions that have been pinned in this repository.Arguments for pinnedDiscussionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.pinnedEnvironments (PinnedEnvironmentConnection)A list of pinned environments for this repository.Arguments for pinnedEnvironmentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (PinnedEnvironmentOrder)Ordering options for the environments.pinnedIssues (PinnedIssueConnection)A list of pinned issues for this repository.Arguments for pinnedIssuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.planFeatures (RepositoryPlanFeatures!)Returns information about the availability of certain features and limits based on the repository's billing plan.primaryLanguage (Language)The primary language of the repository's code.project (Project)Find project by number.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectnumber (Int!)The project number to find.projectV2 (ProjectV2)Finds and returns the Project according to the provided Project number.Arguments for projectV2number (Int!)The Project number.projects (ProjectConnection!)A list of projects under the owner.Warningprojects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectOrder)Ordering options for projects returned from the connection.search (String)Query to search projects by, currently only searching by name.states ([ProjectState!])A list of states to filter the projects by.projectsResourcePath (URI!)The HTTP path listing the repository's projects.projectsUrl (URI!)The HTTP URL listing the repository's projects.projectsV2 (ProjectV2Connection!)List of projects linked to this repository.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for linked to the repo.pullRequest (PullRequest)Returns a single pull request from the current repository by number.Arguments for pullRequestnumber (Int!)The number for the pull request to be returned.pullRequestTemplates ([PullRequestTemplate!])Returns a list of pull request templates associated to the repository.pullRequests (PullRequestConnection!)A list of pull requests that have been opened in the repository.Arguments for pullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.pushedAt (DateTime)Identifies the date and time when the repository was last pushed to.rebaseMergeAllowed (Boolean!)Whether or not rebase-merging is enabled on this repository.recentProjects (ProjectV2Connection!)Recent projects that this user has modified in the context of the owner.Arguments for recentProjectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ref (Ref)Fetch a given ref from the repository.Arguments for refqualifiedName (String!)The ref to retrieve. Fully qualified matches are checked in order
(refs/heads/master) before falling back onto checks for short name matches (master).refs (RefConnection)Fetch a list of refs from the repository.Arguments for refsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.direction (OrderDirection)DEPRECATED: use orderBy. The ordering direction.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RefOrder)Ordering options for refs returned from the connection.query (String)Filters refs with query on name.refPrefix (String!)A ref name prefix like refs/heads/, refs/tags/, etc.release (Release)Lookup a single release given various criteria.Arguments for releasetagName (String!)The name of the Tag the Release was created from.releases (ReleaseConnection!)List of releases which are dependent on this repository.Arguments for releasesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReleaseOrder)Order for connection.repositoryTopics (RepositoryTopicConnection!)A list of applied repository-topic associations for this repository.Arguments for repositoryTopicsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.resourcePath (URI!)The HTTP path for this repository.ruleset (RepositoryRuleset)Returns a single ruleset from the current repository by ID.Arguments for rulesetdatabaseId (Int!)The ID of the ruleset to be returned.includeParents (Boolean)Include rulesets configured at higher levels that apply to this repository.The default value is true.rulesets (RepositoryRulesetConnection)A list of rulesets for this repository.Arguments for rulesetsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeParents (Boolean)Return rulesets configured at higher levels that apply to this repository.The default value is true.last (Int)Returns the last n elements from the list.targets ([RepositoryRulesetTarget!])Return rulesets that apply to the specified target.securityPolicyUrl (URI)The security policy URL.shortDescriptionHTML (HTML!)A description of the repository, rendered to HTML without any links in it.Arguments for shortDescriptionHTMLlimit (Int)How many characters to return.The default value is 200.squashMergeAllowed (Boolean!)Whether or not squash-merging is enabled on this repository.squashMergeCommitMessage (SquashMergeCommitMessage!)How the default commit message will be generated when squash merging a pull request.squashMergeCommitTitle (SquashMergeCommitTitle!)How the default commit title will be generated when squash merging a pull request.squashPrTitleUsedAsDefault (Boolean!)Whether a squash merge commit can use the pull request title as default.WarningsquashPrTitleUsedAsDefault is deprecated.squashPrTitleUsedAsDefault will be removed. Use Repository.squashMergeCommitTitle instead. Removal on 2023-04-01 UTC.sshUrl (GitSSHRemote!)The SSH URL to clone this repository.stargazerCount (Int!)Returns a count of how many stargazers there are on this object.stargazers (StargazerConnection!)A list of users who have starred this starrable.Arguments for stargazersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (StarOrder)Order for connection.submodules (SubmoduleConnection!)Returns a list of all submodules in this repository parsed from the
.gitmodules file as of the default branch's HEAD commit.Arguments for submodulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.suggestedActors (ActorConnection!)A list of suggested actors that can be attributed to content in this repository.Arguments for suggestedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.capabilities ([RepositorySuggestedActorFilter!]!)A list of capabilities to filter actors by.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.loginNames (String)A comma separated list of login names to filter actors by. Only the first 10 logins will be used.query (String)Search actors with query on user name and login.tempCloneToken (String)Temporary authentication token for cloning this repository.templateRepository (Repository)The repository from which this repository was generated, if any.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this repository.usesCustomOpenGraphImage (Boolean!)Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.viewerCanAdminister (Boolean!)Indicates whether the viewer has admin permissions on this repository.viewerCanCreateProjects (Boolean!)Can the current viewer create new projects on this owner.WarningviewerCanCreateProjects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerCanUpdateTopics (Boolean!)Indicates whether the viewer can update the topics of this repository.viewerDefaultCommitEmail (String)The last commit email for the viewer.viewerDefaultMergeMethod (PullRequestMergeMethod!)The last used merge method by the viewer or the default for the repository.viewerHasStarred (Boolean!)Returns a boolean indicating whether the viewing user has starred this starrable.viewerPermission (RepositoryPermission)The users permission level on the repository. Will return null if authenticated as an GitHub App.viewerPossibleCommitEmails ([String!])A list of emails this viewer can commit with.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.visibility (RepositoryVisibility!)Indicates the repository's visibility level.vulnerabilityAlert (RepositoryVulnerabilityAlert)Returns a single vulnerability alert from the current repository by number.Arguments for vulnerabilityAlertnumber (Int!)The number for the vulnerability alert to be returned.vulnerabilityAlerts (RepositoryVulnerabilityAlertConnection)A list of vulnerability alerts that are on this repository.Arguments for vulnerabilityAlertsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.dependencyScopes ([RepositoryVulnerabilityAlertDependencyScope!])Filter by the scope of the alert's dependency.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.states ([RepositoryVulnerabilityAlertState!])Filter by the state of the alert.watchers (UserConnection!)A list of users watching the repository.Arguments for watchersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.webCommitSignoffRequired (Boolean!)Whether contributors are required to sign off on web-based commits in this repository.RepositoryCodeownersInformation extracted from a repository's CODEOWNERS file.Fields for RepositoryCodeownersNameDescriptionerrors ([RepositoryCodeownersError!]!)Any problems that were encountered while parsing the CODEOWNERS file.RepositoryCodeownersErrorAn error in a CODEOWNERS file.Fields for RepositoryCodeownersErrorNameDescriptioncolumn (Int!)The column number where the error occurs.kind (String!)A short string describing the type of error.line (Int!)The line number where the error occurs.message (String!)A complete description of the error, combining information from other fields.path (String!)The path to the file when the error occurs.source (String!)The content of the line where the error occurs.suggestion (String)A suggestion of how to fix the error.RepositoryCollaboratorConnectionThe connection type for User.Fields for RepositoryCollaboratorConnectionNameDescriptionedges ([RepositoryCollaboratorEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryCollaboratorEdgeRepresents a user who is a collaborator of a repository.Fields for RepositoryCollaboratorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User!)N/Apermission (RepositoryPermission!)The permission the user has on the repository.permissionSources ([PermissionSource!])A list of sources for the user's access to the repository.RepositoryConnectionA list of repositories owned by the subject.Fields for RepositoryConnectionNameDescriptionedges ([RepositoryEdge])A list of edges.nodes ([Repository])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.totalDiskUsage (Int!)The total size in kilobytes of all repositories in the connection. Value will
never be larger than max 32-bit signed integer.RepositoryContactLinkA repository contact link.Fields for RepositoryContactLinkNameDescriptionabout (String!)The contact link purpose.name (String!)The contact link name.url (URI!)The contact link URL.RepositoryEdgeAn edge in a connection.Fields for RepositoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Repository)The item at the end of the edge.RepositoryIdConditionTargetParameters to be used for the repository_id condition.Fields for RepositoryIdConditionTargetNameDescriptionrepositoryIds ([ID!]!)One of these repo IDs must match the repo.RepositoryInteractionAbilityRepository interaction limit that applies to this object.Fields for RepositoryInteractionAbilityNameDescriptionexpiresAt (DateTime)The time the currently active limit expires.limit (RepositoryInteractionLimit!)The current limit that is enabled on this object.origin (RepositoryInteractionLimitOrigin!)The origin of the currently active interaction limit.RepositoryInvitationAn invitation for a user to be added to a repository.RepositoryInvitation ImplementsNodeFields for RepositoryInvitationNameDescriptionemail (String)The email address that received the invitation.id (ID!)The Node ID of the RepositoryInvitation object.invitee (User)The user who received the invitation.inviter (User!)The user who created the invitation.permalink (URI!)The permalink for this repository invitation.permission (RepositoryPermission!)The permission granted on this repository by this invitation.repository (RepositoryInfo)The Repository the user is invited to.RepositoryInvitationConnectionA list of repository invitations.Fields for RepositoryInvitationConnectionNameDescriptionedges ([RepositoryInvitationEdge])A list of edges.nodes ([RepositoryInvitation])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryInvitationEdgeAn edge in a connection.Fields for RepositoryInvitationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryInvitation)The item at the end of the edge.RepositoryMigrationA GitHub Enterprise Importer (GEI) repository migration.RepositoryMigration ImplementsMigrationNodeFields for RepositoryMigrationNameDescriptioncontinueOnError (Boolean!)The migration flag to continue on error.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (String)Identifies the primary key from the database.failureReason (String)The reason the migration failed.id (ID!)The Node ID of the RepositoryMigration object.migrationLogUrl (URI)The URL for the migration log (expires 1 day after migration completes).migrationSource (MigrationSource!)The migration source.repositoryName (String!)The target repository name.sourceUrl (URI!)The migration source URL, for example https://github.com or https://monalisa.ghe.com.state (MigrationState!)The migration state.warningsCount (Int!)The number of warnings encountered for this migration. To review the warnings,
check the Migration Log.RepositoryMigrationConnectionA list of migrations.Fields for RepositoryMigrationConnectionNameDescriptionedges ([RepositoryMigrationEdge])A list of edges.nodes ([RepositoryMigration])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryMigrationEdgeRepresents a repository migration.Fields for RepositoryMigrationEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryMigration)The item at the end of the edge.RepositoryNameConditionTargetParameters to be used for the repository_name condition.Fields for RepositoryNameConditionTargetNameDescriptionexclude ([String!]!)Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.include ([String!]!)Array of repository names or patterns to include. One of these patterns must
match for the condition to pass. Also accepts ~ALL to include all repositories.protected (Boolean!)Target changes that match these patterns will be prevented except by those with bypass permissions.RepositoryPlanFeaturesInformation about the availability of features and limits for a repository based on its billing plan.Fields for RepositoryPlanFeaturesNameDescriptioncodeowners (Boolean!)Whether reviews can be automatically requested and enforced with a CODEOWNERS file.draftPullRequests (Boolean!)Whether pull requests can be created as or converted to draft.maximumAssignees (Int!)Maximum number of users that can be assigned to an issue or pull request.maximumManualReviewRequests (Int!)Maximum number of manually-requested reviews on a pull request.teamReviewRequests (Boolean!)Whether teams can be requested to review pull requests.RepositoryPropertyConditionTargetParameters to be used for the repository_property condition.Fields for RepositoryPropertyConditionTargetNameDescriptionexclude ([PropertyTargetDefinition!]!)Array of repository properties that must not match.include ([PropertyTargetDefinition!]!)Array of repository properties that must match.RepositoryRuleA repository rule.RepositoryRule ImplementsNodeFields for RepositoryRuleNameDescriptionid (ID!)The Node ID of the RepositoryRule object.parameters (RuleParameters)The parameters for this rule.repositoryRuleset (RepositoryRuleset)The repository ruleset associated with this rule configuration.type (RepositoryRuleType!)The type of rule.RepositoryRuleConditionsSet of conditions that determine if a ruleset will evaluate.Fields for RepositoryRuleConditionsNameDescriptionrefName (RefNameConditionTarget)Configuration for the ref_name condition.repositoryId (RepositoryIdConditionTarget)Configuration for the repository_id condition.repositoryName (RepositoryNameConditionTarget)Configuration for the repository_name condition.repositoryProperty (RepositoryPropertyConditionTarget)Configuration for the repository_property condition.RepositoryRuleConnectionThe connection type for RepositoryRule.Fields for RepositoryRuleConnectionNameDescriptionedges ([RepositoryRuleEdge])A list of edges.nodes ([RepositoryRule])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryRuleEdgeAn edge in a connection.Fields for RepositoryRuleEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryRule)The item at the end of the edge.RepositoryRulesetA repository ruleset.RepositoryRuleset ImplementsNodeFields for RepositoryRulesetNameDescriptionbypassActors (RepositoryRulesetBypassActorConnection)The actors that can bypass this ruleset.Arguments for bypassActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.conditions (RepositoryRuleConditions!)The set of conditions that must evaluate to true for this ruleset to apply.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.enforcement (RuleEnforcement!)The enforcement level of this ruleset.id (ID!)The Node ID of the RepositoryRuleset object.name (String!)Name of the ruleset.rules (RepositoryRuleConnection)List of rules.Arguments for rulesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.type (RepositoryRuleType)The type of rule.source (RuleSource!)Source of ruleset.target (RepositoryRulesetTarget)Target of the ruleset.updatedAt (DateTime!)Identifies the date and time when the object was last updated.RepositoryRulesetBypassActorA team or app that has the ability to bypass a rules defined on a ruleset.RepositoryRulesetBypassActor ImplementsNodeFields for RepositoryRulesetBypassActorNameDescriptionactor (BypassActor)The actor that can bypass rules.bypassMode (RepositoryRulesetBypassActorBypassMode)The mode for the bypass actor.deployKey (Boolean!)This actor represents the ability for a deploy key to bypass.enterpriseOwner (Boolean!)This actor represents the ability for an enterprise owner to bypass.id (ID!)The Node ID of the RepositoryRulesetBypassActor object.organizationAdmin (Boolean!)This actor represents the ability for an organization owner to bypass.repositoryRoleDatabaseId (Int)If the actor is a repository role, the repository role's ID that can bypass.repositoryRoleName (String)If the actor is a repository role, the repository role's name that can bypass.repositoryRuleset (RepositoryRuleset)Identifies the ruleset associated with the allowed actor.RepositoryRulesetBypassActorConnectionThe connection type for RepositoryRulesetBypassActor.Fields for RepositoryRulesetBypassActorConnectionNameDescriptionedges ([RepositoryRulesetBypassActorEdge])A list of edges.nodes ([RepositoryRulesetBypassActor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryRulesetBypassActorEdgeAn edge in a connection.Fields for RepositoryRulesetBypassActorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryRulesetBypassActor)The item at the end of the edge.RepositoryRulesetConnectionThe connection type for RepositoryRuleset.Fields for RepositoryRulesetConnectionNameDescriptionedges ([RepositoryRulesetEdge])A list of edges.nodes ([RepositoryRuleset])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryRulesetEdgeAn edge in a connection.Fields for RepositoryRulesetEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryRuleset)The item at the end of the edge.RepositoryTopicA repository-topic connects a repository to a topic.RepositoryTopic ImplementsNodeUniformResourceLocatableFields for RepositoryTopicNameDescriptionid (ID!)The Node ID of the RepositoryTopic object.resourcePath (URI!)The HTTP path for this repository-topic.topic (Topic!)The topic.url (URI!)The HTTP URL for this repository-topic.RepositoryTopicConnectionThe connection type for RepositoryTopic.Fields for RepositoryTopicConnectionNameDescriptionedges ([RepositoryTopicEdge])A list of edges.nodes ([RepositoryTopic])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryTopicEdgeAn edge in a connection.Fields for RepositoryTopicEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryTopic)The item at the end of the edge.RepositoryVisibilityChangeDisableAuditEntryAudit log entry for a repository_visibility_change.disable event.RepositoryVisibilityChangeDisableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for RepositoryVisibilityChangeDisableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the RepositoryVisibilityChangeDisableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepositoryVisibilityChangeEnableAuditEntryAudit log entry for a repository_visibility_change.enable event.RepositoryVisibilityChangeEnableAuditEntry ImplementsAuditEntryEnterpriseAuditEntryDataNodeOrganizationAuditEntryDataFields for RepositoryVisibilityChangeEnableAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.enterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.id (ID!)The Node ID of the RepositoryVisibilityChangeEnableAuditEntry object.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.RepositoryVulnerabilityAlertA Dependabot alert for a repository with a dependency affected by a security vulnerability.RepositoryVulnerabilityAlert ImplementsNodeRepositoryNodeFields for RepositoryVulnerabilityAlertNameDescriptionautoDismissedAt (DateTime)When was the alert auto-dismissed?.createdAt (DateTime!)When was the alert created?.dependabotUpdate (DependabotUpdate)The associated Dependabot update.dependencyRelationship (RepositoryVulnerabilityAlertDependencyRelationship)The relationship of an alert's dependency.dependencyScope (RepositoryVulnerabilityAlertDependencyScope)The scope of an alert's dependency.dismissComment (String)Comment explaining the reason the alert was dismissed.dismissReason (String)The reason the alert was dismissed.dismissedAt (DateTime)When was the alert dismissed?.dismisser (User)The user who dismissed the alert.fixedAt (DateTime)When was the alert fixed?.id (ID!)The Node ID of the RepositoryVulnerabilityAlert object.number (Int!)Identifies the alert number.repository (Repository!)The associated repository.securityAdvisory (SecurityAdvisory)The associated security advisory.securityVulnerability (SecurityVulnerability)The associated security vulnerability.state (RepositoryVulnerabilityAlertState!)Identifies the state of the alert.vulnerableManifestFilename (String!)The vulnerable manifest filename.vulnerableManifestPath (String!)The vulnerable manifest path.vulnerableRequirements (String)The vulnerable requirements.RepositoryVulnerabilityAlertConnectionThe connection type for RepositoryVulnerabilityAlert.Fields for RepositoryVulnerabilityAlertConnectionNameDescriptionedges ([RepositoryVulnerabilityAlertEdge])A list of edges.nodes ([RepositoryVulnerabilityAlert])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RepositoryVulnerabilityAlertEdgeAn edge in a connection.Fields for RepositoryVulnerabilityAlertEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RepositoryVulnerabilityAlert)The item at the end of the edge.RequestedReviewerConnectionThe connection type for RequestedReviewer.Fields for RequestedReviewerConnectionNameDescriptionedges ([RequestedReviewerEdge])A list of edges.nodes ([RequestedReviewer])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.RequestedReviewerEdgeAn edge in a connection.Fields for RequestedReviewerEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (RequestedReviewer)The item at the end of the edge.RequiredDeploymentsParametersChoose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.Fields for RequiredDeploymentsParametersNameDescriptionrequiredDeploymentEnvironments ([String!]!)The environments that must be successfully deployed to before branches can be merged.RequiredStatusCheckDescriptionRepresents a required status check for a protected branch, but not any specific run of that check.Fields for RequiredStatusCheckDescriptionNameDescriptionapp (App)The App that must provide this status in order for it to be accepted.context (String!)The name of this status.RequiredStatusChecksParametersChoose which status checks must pass before the ref is updated. When enabled,
commits must first be pushed to another ref where the checks pass.Fields for RequiredStatusChecksParametersNameDescriptiondoNotEnforceOnCreate (Boolean!)Allow repositories and branches to be created if a check would otherwise prohibit it.requiredStatusChecks ([StatusCheckConfiguration!]!)Status checks that are required.strictRequiredStatusChecksPolicy (Boolean!)Whether pull requests targeting a matching branch must be tested with the
latest code. This setting will not take effect unless at least one status
check is enabled.RestrictedContributionRepresents a private contribution a user made on GitHub.RestrictedContribution ImplementsContributionFields for RestrictedContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.ReviewDismissalAllowanceA user, team, or app who has the ability to dismiss a review on a protected branch.ReviewDismissalAllowance ImplementsNodeFields for ReviewDismissalAllowanceNameDescriptionactor (ReviewDismissalAllowanceActor)The actor that can dismiss.branchProtectionRule (BranchProtectionRule)Identifies the branch protection rule associated with the allowed user, team, or app.id (ID!)The Node ID of the ReviewDismissalAllowance object.ReviewDismissalAllowanceConnectionThe connection type for ReviewDismissalAllowance.Fields for ReviewDismissalAllowanceConnectionNameDescriptionedges ([ReviewDismissalAllowanceEdge])A list of edges.nodes ([ReviewDismissalAllowance])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReviewDismissalAllowanceEdgeAn edge in a connection.Fields for ReviewDismissalAllowanceEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ReviewDismissalAllowance)The item at the end of the edge.ReviewDismissedEventRepresents areview_dismissedevent on a given issue or pull request.ReviewDismissedEvent ImplementsNodeUniformResourceLocatableFields for ReviewDismissedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.dismissalMessage (String)Identifies the optional message associated with thereview_dismissedevent.dismissalMessageHTML (String)Identifies the optional message associated with the event, rendered to HTML.id (ID!)The Node ID of the ReviewDismissedEvent object.previousReviewState (PullRequestReviewState!)Identifies the previous state of the review with thereview_dismissedevent.pullRequest (PullRequest!)PullRequest referenced by event.pullRequestCommit (PullRequestCommit)Identifies the commit which caused the review to become stale.resourcePath (URI!)The HTTP path for this review dismissed event.review (PullRequestReview)Identifies the review associated with thereview_dismissedevent.url (URI!)The HTTP URL for this review dismissed event.ReviewRequestA request for a user to review a pull request.ReviewRequest ImplementsNodeFields for ReviewRequestNameDescriptionasCodeOwner (Boolean!)Whether this request was created for a code owner.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ReviewRequest object.pullRequest (PullRequest!)Identifies the pull request associated with this review request.requestedReviewer (RequestedReviewer)The reviewer that is requested.ReviewRequestConnectionThe connection type for ReviewRequest.Fields for ReviewRequestConnectionNameDescriptionedges ([ReviewRequestEdge])A list of edges.nodes ([ReviewRequest])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.ReviewRequestEdgeAn edge in a connection.Fields for ReviewRequestEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (ReviewRequest)The item at the end of the edge.ReviewRequestRemovedEventRepresents anreview_request_removedevent on a given pull request.ReviewRequestRemovedEvent ImplementsNodeFields for ReviewRequestRemovedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ReviewRequestRemovedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.requestedReviewer (RequestedReviewer)Identifies the reviewer whose review request was removed.ReviewRequestedEventRepresents anreview_requestedevent on a given pull request.ReviewRequestedEvent ImplementsNodeFields for ReviewRequestedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the ReviewRequestedEvent object.pullRequest (PullRequest!)PullRequest referenced by event.requestedReviewer (RequestedReviewer)Identifies the reviewer whose review was requested.ReviewStatusHovercardContextA hovercard context with a message describing the current code review state of the pull
request.ReviewStatusHovercardContext ImplementsHovercardContextFields for ReviewStatusHovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.reviewDecision (PullRequestReviewDecision)The current status of the pull request with respect to code review.SavedReplyA Saved Reply is text a user can use to reply quickly.SavedReply ImplementsNodeFields for SavedReplyNameDescriptionbody (String!)The body of the saved reply.bodyHTML (HTML!)The saved reply body rendered to HTML.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the SavedReply object.title (String!)The title of the saved reply.user (Actor)The user that saved this reply.SavedReplyConnectionThe connection type for SavedReply.Fields for SavedReplyConnectionNameDescriptionedges ([SavedReplyEdge])A list of edges.nodes ([SavedReply])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SavedReplyEdgeAn edge in a connection.Fields for SavedReplyEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SavedReply)The item at the end of the edge.SearchResultItemConnectionA list of results that matched against a search query. Regardless of the number
of matches, a maximum of 1,000 results will be available across all types,
potentially split across many pages.Fields for SearchResultItemConnectionNameDescriptioncodeCount (Int!)The total number of pieces of code that matched the search query. Regardless
of the total number of matches, a maximum of 1,000 results will be available
across all types.discussionCount (Int!)The total number of discussions that matched the search query. Regardless of
the total number of matches, a maximum of 1,000 results will be available
across all types.edges ([SearchResultItemEdge])A list of edges.issueCount (Int!)The total number of issues that matched the search query. Regardless of the
total number of matches, a maximum of 1,000 results will be available across all types.nodes ([SearchResultItem])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.repositoryCount (Int!)The total number of repositories that matched the search query. Regardless of
the total number of matches, a maximum of 1,000 results will be available
across all types.userCount (Int!)The total number of users that matched the search query. Regardless of the
total number of matches, a maximum of 1,000 results will be available across all types.wikiCount (Int!)The total number of wiki pages that matched the search query. Regardless of
the total number of matches, a maximum of 1,000 results will be available
across all types.SearchResultItemEdgeAn edge in a connection.Fields for SearchResultItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SearchResultItem)The item at the end of the edge.textMatches ([TextMatch])Text matches on the result found.SecurityAdvisoryA GitHub Security Advisory.SecurityAdvisory ImplementsNodeFields for SecurityAdvisoryNameDescriptionclassification (SecurityAdvisoryClassification!)The classification of the advisory.cvss (CVSS!)The CVSS associated with this advisory.Warningcvss is deprecated.cvss will be removed. New cvss_severities field will now contain both cvss_v3 and cvss_v4 properties. Removal on 2025-10-01 UTC.cvssSeverities (CvssSeverities!)The CVSS associated with this advisory.cwes (CWEConnection!)CWEs associated with this Advisory.Arguments for cwesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.databaseId (Int)Identifies the primary key from the database.description (String!)This is a long plaintext description of the advisory.epss (EPSS)The Exploit Prediction Scoring System.ghsaId (String!)The GitHub Security Advisory ID.id (ID!)The Node ID of the SecurityAdvisory object.identifiers ([SecurityAdvisoryIdentifier!]!)A list of identifiers for this advisory.notificationsPermalink (URI)The permalink for the advisory's dependabot alerts page.origin (String!)The organization that originated the advisory.permalink (URI)The permalink for the advisory.publishedAt (DateTime!)When the advisory was published.references ([SecurityAdvisoryReference!]!)A list of references for this advisory.severity (SecurityAdvisorySeverity!)The severity of the advisory.summary (String!)A short plaintext summary of the advisory.updatedAt (DateTime!)When the advisory was last updated.vulnerabilities (SecurityVulnerabilityConnection!)Vulnerabilities associated with this Advisory.Arguments for vulnerabilitiesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.classifications ([SecurityAdvisoryClassification!])A list of advisory classifications to filter vulnerabilities by.ecosystem (SecurityAdvisoryEcosystem)An ecosystem to filter vulnerabilities by.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SecurityVulnerabilityOrder)Ordering options for the returned topics.package (String)A package name to filter vulnerabilities by.severities ([SecurityAdvisorySeverity!])A list of severities to filter vulnerabilities by.withdrawnAt (DateTime)When the advisory was withdrawn, if it has been withdrawn.SecurityAdvisoryConnectionThe connection type for SecurityAdvisory.Fields for SecurityAdvisoryConnectionNameDescriptionedges ([SecurityAdvisoryEdge])A list of edges.nodes ([SecurityAdvisory])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SecurityAdvisoryEdgeAn edge in a connection.Fields for SecurityAdvisoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SecurityAdvisory)The item at the end of the edge.SecurityAdvisoryIdentifierA GitHub Security Advisory Identifier.Fields for SecurityAdvisoryIdentifierNameDescriptiontype (String!)The identifier type, e.g. GHSA, CVE.value (String!)The identifier.SecurityAdvisoryPackageAn individual package.Fields for SecurityAdvisoryPackageNameDescriptionecosystem (SecurityAdvisoryEcosystem!)The ecosystem the package belongs to, e.g. RUBYGEMS, NPM.name (String!)The package name.SecurityAdvisoryPackageVersionAn individual package version.Fields for SecurityAdvisoryPackageVersionNameDescriptionidentifier (String!)The package name or version.SecurityAdvisoryReferenceA GitHub Security Advisory Reference.Fields for SecurityAdvisoryReferenceNameDescriptionurl (URI!)A publicly accessible reference.SecurityVulnerabilityAn individual vulnerability within an Advisory.Fields for SecurityVulnerabilityNameDescriptionadvisory (SecurityAdvisory!)The Advisory associated with this Vulnerability.firstPatchedVersion (SecurityAdvisoryPackageVersion)The first version containing a fix for the vulnerability.package (SecurityAdvisoryPackage!)A description of the vulnerable package.severity (SecurityAdvisorySeverity!)The severity of the vulnerability within this package.updatedAt (DateTime!)When the vulnerability was last updated.vulnerableVersionRange (String!)A string that describes the vulnerable package versions.
This string follows a basic syntax with a few forms.

= 0.2.0 denotes a single vulnerable version.
<= 1.0.8 denotes a version range up to and including the specified version
< 0.1.11 denotes a version range up to, but excluding, the specified version
>= 4.3.0, < 4.3.5 denotes a version range with a known minimum and maximum version.
>= 0.0.1 denotes a version range with a known minimum, but no known maximum.
SecurityVulnerabilityConnectionThe connection type for SecurityVulnerability.Fields for SecurityVulnerabilityConnectionNameDescriptionedges ([SecurityVulnerabilityEdge])A list of edges.nodes ([SecurityVulnerability])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SecurityVulnerabilityEdgeAn edge in a connection.Fields for SecurityVulnerabilityEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SecurityVulnerability)The item at the end of the edge.SmimeSignatureRepresents an S/MIME signature on a Commit or Tag.SmimeSignature ImplementsGitSignatureFields for SmimeSignatureNameDescriptionemail (String!)Email used to sign this object.isValid (Boolean!)True if the signature is valid and verified by GitHub.payload (String!)Payload for GPG signing object. Raw ODB object without the signature header.signature (String!)ASCII-armored signature header from object.signer (User)GitHub user corresponding to the email signing this commit.state (GitSignatureState!)The state of this signature. VALID if signature is valid and verified by
GitHub, otherwise represents reason why signature is considered invalid.verifiedAt (DateTime)The date the signature was verified, if valid.wasSignedByGitHub (Boolean!)True if the signature was made with GitHub's signing key.SocialAccountSocial media profile associated with a user.Fields for SocialAccountNameDescriptiondisplayName (String!)Name of the social media account as it appears on the profile.provider (SocialAccountProvider!)Software or company that hosts the social media account.url (URI!)URL of the social media account.SocialAccountConnectionThe connection type for SocialAccount.Fields for SocialAccountConnectionNameDescriptionedges ([SocialAccountEdge])A list of edges.nodes ([SocialAccount])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SocialAccountEdgeAn edge in a connection.Fields for SocialAccountEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SocialAccount)The item at the end of the edge.SponsorAndLifetimeValueA GitHub account and the total amount in USD they've paid for sponsorships to a
particular maintainer. Does not include payments made via Patreon.Fields for SponsorAndLifetimeValueNameDescriptionamountInCents (Int!)The amount in cents.formattedAmount (String!)The amount in USD, formatted as a string.sponsor (Sponsorable!)The sponsor's GitHub account.sponsorable (Sponsorable!)The maintainer's GitHub account.SponsorAndLifetimeValueConnectionThe connection type for SponsorAndLifetimeValue.Fields for SponsorAndLifetimeValueConnectionNameDescriptionedges ([SponsorAndLifetimeValueEdge])A list of edges.nodes ([SponsorAndLifetimeValue])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorAndLifetimeValueEdgeAn edge in a connection.Fields for SponsorAndLifetimeValueEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SponsorAndLifetimeValue)The item at the end of the edge.SponsorConnectionA list of users and organizations sponsoring someone via GitHub Sponsors.Fields for SponsorConnectionNameDescriptionedges ([SponsorEdge])A list of edges.nodes ([Sponsor])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorEdgeRepresents a user or organization who is sponsoring someone in GitHub Sponsors.Fields for SponsorEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Sponsor)The item at the end of the edge.SponsorableItemConnectionThe connection type for SponsorableItem.Fields for SponsorableItemConnectionNameDescriptionedges ([SponsorableItemEdge])A list of edges.nodes ([SponsorableItem])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorableItemEdgeAn edge in a connection.Fields for SponsorableItemEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SponsorableItem)The item at the end of the edge.SponsorsActivityAn event related to sponsorship activity.SponsorsActivity ImplementsNodeFields for SponsorsActivityNameDescriptionaction (SponsorsActivityAction!)What action this activity indicates took place.currentPrivacyLevel (SponsorshipPrivacy)The sponsor's current privacy level.id (ID!)The Node ID of the SponsorsActivity object.paymentSource (SponsorshipPaymentSource)The platform that was used to pay for the sponsorship.previousSponsorsTier (SponsorsTier)The tier that the sponsorship used to use, for tier change events.sponsor (Sponsor)The user or organization who triggered this activity and was/is sponsoring the sponsorable.sponsorable (Sponsorable!)The user or organization that is being sponsored, the maintainer.sponsorsTier (SponsorsTier)The associated sponsorship tier.timestamp (DateTime)The timestamp of this event.viaBulkSponsorship (Boolean!)Was this sponsorship made alongside other sponsorships at the same time from the same sponsor?.SponsorsActivityConnectionThe connection type for SponsorsActivity.Fields for SponsorsActivityConnectionNameDescriptionedges ([SponsorsActivityEdge])A list of edges.nodes ([SponsorsActivity])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorsActivityEdgeAn edge in a connection.Fields for SponsorsActivityEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SponsorsActivity)The item at the end of the edge.SponsorsGoalA goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain.Fields for SponsorsGoalNameDescriptiondescription (String)A description of the goal from the maintainer.kind (SponsorsGoalKind!)What the objective of this goal is.percentComplete (Int!)The percentage representing how complete this goal is, between 0-100.targetValue (Int!)What the goal amount is. Represents an amount in USD for monthly sponsorship
amount goals. Represents a count of unique sponsors for total sponsors count goals.title (String!)A brief summary of the kind and target value of this goal.SponsorsListingA GitHub Sponsors listing.SponsorsListing ImplementsNodeFields for SponsorsListingNameDescriptionactiveGoal (SponsorsGoal)The current goal the maintainer is trying to reach with GitHub Sponsors, if any.activeStripeConnectAccount (StripeConnectAccount)The Stripe Connect account currently in use for payouts for this Sponsors
listing, if any. Will only return a value when queried by the maintainer
themselves, or by an admin of the sponsorable organization.billingCountryOrRegion (String)The name of the country or region with the maintainer's bank account or fiscal
host. Will only return a value when queried by the maintainer themselves, or
by an admin of the sponsorable organization.contactEmailAddress (String)The email address used by GitHub to contact the sponsorable about their GitHub
Sponsors profile. Will only return a value when queried by the maintainer
themselves, or by an admin of the sponsorable organization.createdAt (DateTime!)Identifies the date and time when the object was created.dashboardResourcePath (URI!)The HTTP path for the Sponsors dashboard for this Sponsors listing.dashboardUrl (URI!)The HTTP URL for the Sponsors dashboard for this Sponsors listing.featuredItems ([SponsorsListingFeaturedItem!]!)The records featured on the GitHub Sponsors profile.Arguments for featuredItemsfeatureableTypes ([SponsorsListingFeaturedItemFeatureableType!])The types of featured items to return.fiscalHost (Organization)The fiscal host used for payments, if any. Will only return a value when
queried by the maintainer themselves, or by an admin of the sponsorable organization.fullDescription (String!)The full description of the listing.fullDescriptionHTML (HTML!)The full description of the listing rendered to HTML.id (ID!)The Node ID of the SponsorsListing object.isPublic (Boolean!)Whether this listing is publicly visible.name (String!)The listing's full name.nextPayoutDate (Date)A future date on which this listing is eligible to receive a payout.residenceCountryOrRegion (String)The name of the country or region where the maintainer resides. Will only
return a value when queried by the maintainer themselves, or by an admin of
the sponsorable organization.resourcePath (URI!)The HTTP path for this Sponsors listing.shortDescription (String!)The short description of the listing.slug (String!)The short name of the listing.sponsorable (Sponsorable!)The entity this listing represents who can be sponsored on GitHub Sponsors.tiers (SponsorsTierConnection)The tiers for this GitHub Sponsors profile.Arguments for tiersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeUnpublished (Boolean)Whether to include tiers that aren't published. Only admins of the Sponsors
listing can see draft tiers. Only admins of the Sponsors listing and viewers
who are currently sponsoring on a retired tier can see those retired tiers.
Defaults to including only published tiers, which are visible to anyone who
can see the GitHub Sponsors profile.The default value is false.last (Int)Returns the last n elements from the list.orderBy (SponsorsTierOrder)Ordering options for Sponsors tiers returned from the connection.url (URI!)The HTTP URL for this Sponsors listing.SponsorsListingFeaturedItemA record that is promoted on a GitHub Sponsors profile.SponsorsListingFeaturedItem ImplementsNodeFields for SponsorsListingFeaturedItemNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.description (String)Will either be a description from the sponsorable maintainer about why they
featured this item, or the item's description itself, such as a user's bio
from their GitHub profile page.featureable (SponsorsListingFeatureableItem!)The record that is featured on the GitHub Sponsors profile.id (ID!)The Node ID of the SponsorsListingFeaturedItem object.position (Int!)The position of this featured item on the GitHub Sponsors profile with a lower
position indicating higher precedence. Starts at 1.sponsorsListing (SponsorsListing!)The GitHub Sponsors profile that features this record.updatedAt (DateTime!)Identifies the date and time when the object was last updated.SponsorsTierA GitHub Sponsors tier associated with a GitHub Sponsors listing.SponsorsTier ImplementsNodeFields for SponsorsTierNameDescriptionadminInfo (SponsorsTierAdminInfo)SponsorsTier information only visible to users that can administer the associated Sponsors listing.closestLesserValueTier (SponsorsTier)Get a different tier for this tier's maintainer that is at the same frequency
as this tier but with an equal or lesser cost. Returns the published tier with
the monthly price closest to this tier's without going over.createdAt (DateTime!)Identifies the date and time when the object was created.description (String!)The description of the tier.descriptionHTML (HTML!)The tier description rendered to HTML.id (ID!)The Node ID of the SponsorsTier object.isCustomAmount (Boolean!)Whether this tier was chosen at checkout time by the sponsor rather than
defined ahead of time by the maintainer who manages the Sponsors listing.isOneTime (Boolean!)Whether this tier is only for use with one-time sponsorships.monthlyPriceInCents (Int!)How much this tier costs per month in cents.monthlyPriceInDollars (Int!)How much this tier costs per month in USD.name (String!)The name of the tier.sponsorsListing (SponsorsListing!)The sponsors listing that this tier belongs to.updatedAt (DateTime!)Identifies the date and time when the object was last updated.SponsorsTierAdminInfoSponsorsTier information only visible to users that can administer the associated Sponsors listing.Fields for SponsorsTierAdminInfoNameDescriptionisDraft (Boolean!)Indicates whether this tier is still a work in progress by the sponsorable and
not yet published to the associated GitHub Sponsors profile. Draft tiers
cannot be used for new sponsorships and will not be in use on existing
sponsorships. Draft tiers cannot be seen by anyone but the admins of the
GitHub Sponsors profile.isPublished (Boolean!)Indicates whether this tier is published to the associated GitHub Sponsors
profile. Published tiers are visible to anyone who can see the GitHub Sponsors
profile, and are available for use in sponsorships if the GitHub Sponsors
profile is publicly visible.isRetired (Boolean!)Indicates whether this tier has been retired from the associated GitHub
Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors
profile and cannot be chosen for new sponsorships. Existing sponsorships may
still use retired tiers if the sponsor selected the tier before it was retired.sponsorships (SponsorshipConnection!)The sponsorships using this tier.Arguments for sponsorshipsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includePrivate (Boolean)Whether or not to return private sponsorships using this tier. Defaults to
only returning public sponsorships on this tier.The default value is false.last (Int)Returns the last n elements from the list.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.SponsorsTierConnectionThe connection type for SponsorsTier.Fields for SponsorsTierConnectionNameDescriptionedges ([SponsorsTierEdge])A list of edges.nodes ([SponsorsTier])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorsTierEdgeAn edge in a connection.Fields for SponsorsTierEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SponsorsTier)The item at the end of the edge.SponsorshipA sponsorship relationship between a sponsor and a maintainer.Sponsorship ImplementsNodeFields for SponsorshipNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the Sponsorship object.isActive (Boolean!)Whether the sponsorship is active. False implies the sponsor is a past sponsor
of the maintainer, while true implies they are a current sponsor.isOneTimePayment (Boolean!)Whether this sponsorship represents a one-time payment versus a recurring sponsorship.isSponsorOptedIntoEmail (Boolean)Whether the sponsor has chosen to receive sponsorship update emails sent from
the sponsorable. Only returns a non-null value when the viewer has permission to know this.maintainer (User!)The entity that is being sponsored.Warningmaintainer is deprecated.Sponsorship.maintainer will be removed. Use Sponsorship.sponsorable instead. Removal on 2020-04-01 UTC.paymentSource (SponsorshipPaymentSource)The platform that was most recently used to pay for the sponsorship.privacyLevel (SponsorshipPrivacy!)The privacy level for this sponsorship.sponsor (User)The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.Warningsponsor is deprecated.Sponsorship.sponsor will be removed. Use Sponsorship.sponsorEntity instead. Removal on 2020-10-01 UTC.sponsorEntity (Sponsor)The user or organization that is sponsoring, if you have permission to view them.sponsorable (Sponsorable!)The entity that is being sponsored.tier (SponsorsTier)The associated sponsorship tier.tierSelectedAt (DateTime)Identifies the date and time when the current tier was chosen for this sponsorship.SponsorshipConnectionA list of sponsorships either from the subject or received by the subject.Fields for SponsorshipConnectionNameDescriptionedges ([SponsorshipEdge])A list of edges.nodes ([Sponsorship])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.totalRecurringMonthlyPriceInCents (Int!)The total amount in cents of all recurring sponsorships in the connection
whose amount you can view. Does not include one-time sponsorships.totalRecurringMonthlyPriceInDollars (Int!)The total amount in USD of all recurring sponsorships in the connection whose
amount you can view. Does not include one-time sponsorships.SponsorshipEdgeAn edge in a connection.Fields for SponsorshipEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Sponsorship)The item at the end of the edge.SponsorshipNewsletterAn update sent to sponsors of a user or organization on GitHub Sponsors.SponsorshipNewsletter ImplementsNodeFields for SponsorshipNewsletterNameDescriptionauthor (User)The author of the newsletter.body (String!)The contents of the newsletter, the message the sponsorable wanted to give.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the SponsorshipNewsletter object.isPublished (Boolean!)Indicates if the newsletter has been made available to sponsors.sponsorable (Sponsorable!)The user or organization this newsletter is from.subject (String!)The subject of the newsletter, what it's about.updatedAt (DateTime!)Identifies the date and time when the object was last updated.SponsorshipNewsletterConnectionThe connection type for SponsorshipNewsletter.Fields for SponsorshipNewsletterConnectionNameDescriptionedges ([SponsorshipNewsletterEdge])A list of edges.nodes ([SponsorshipNewsletter])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SponsorshipNewsletterEdgeAn edge in a connection.Fields for SponsorshipNewsletterEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (SponsorshipNewsletter)The item at the end of the edge.SshSignatureRepresents an SSH signature on a Commit or Tag.SshSignature ImplementsGitSignatureFields for SshSignatureNameDescriptionemail (String!)Email used to sign this object.isValid (Boolean!)True if the signature is valid and verified by GitHub.keyFingerprint (String)Hex-encoded fingerprint of the key that signed this object.payload (String!)Payload for GPG signing object. Raw ODB object without the signature header.signature (String!)ASCII-armored signature header from object.signer (User)GitHub user corresponding to the email signing this commit.state (GitSignatureState!)The state of this signature. VALID if signature is valid and verified by
GitHub, otherwise represents reason why signature is considered invalid.verifiedAt (DateTime)The date the signature was verified, if valid.wasSignedByGitHub (Boolean!)True if the signature was made with GitHub's signing key.StargazerConnectionThe connection type for User.Fields for StargazerConnectionNameDescriptionedges ([StargazerEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.StargazerEdgeRepresents a user that's starred a repository.Fields for StargazerEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User!)N/AstarredAt (DateTime!)Identifies when the item was starred.StarredRepositoryConnectionThe connection type for Repository.Fields for StarredRepositoryConnectionNameDescriptionedges ([StarredRepositoryEdge])A list of edges.isOverLimit (Boolean!)Is the list of stars for this user truncated? This is true for users that have many stars.nodes ([Repository])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.StarredRepositoryEdgeRepresents a starred repository.Fields for StarredRepositoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Repository!)N/AstarredAt (DateTime!)Identifies when the item was starred.StatusRepresents a commit status.Status ImplementsNodeFields for StatusNameDescriptioncombinedContexts (StatusCheckRollupContextConnection!)A list of status contexts and check runs for this commit.Arguments for combinedContextsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.commit (Commit)The commit this status is attached to.context (StatusContext)Looks up an individual status context by context name.Arguments for contextname (String!)The context name.contexts ([StatusContext!]!)The individual status contexts for this commit.id (ID!)The Node ID of the Status object.state (StatusState!)The combined commit status.StatusCheckConfigurationRequired status check.Fields for StatusCheckConfigurationNameDescriptioncontext (String!)The status check context name that must be present on the commit.integrationId (Int)The optional integration ID that this status check must originate from.StatusCheckRollupRepresents the rollup for both the check runs and status for a commit.StatusCheckRollup ImplementsNodeFields for StatusCheckRollupNameDescriptioncommit (Commit)The commit the status and check runs are attached to.contexts (StatusCheckRollupContextConnection!)A list of status contexts and check runs for this commit.Arguments for contextsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.id (ID!)The Node ID of the StatusCheckRollup object.state (StatusState!)The combined status for the commit.StatusCheckRollupContextConnectionThe connection type for StatusCheckRollupContext.Fields for StatusCheckRollupContextConnectionNameDescriptioncheckRunCount (Int!)The number of check runs in this rollup.checkRunCountsByState ([CheckRunStateCount!])Counts of check runs by state.edges ([StatusCheckRollupContextEdge])A list of edges.nodes ([StatusCheckRollupContext])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.statusContextCount (Int!)The number of status contexts in this rollup.statusContextCountsByState ([StatusContextStateCount!])Counts of status contexts by state.totalCount (Int!)Identifies the total count of items in the connection.StatusCheckRollupContextEdgeAn edge in a connection.Fields for StatusCheckRollupContextEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (StatusCheckRollupContext)The item at the end of the edge.StatusContextRepresents an individual commit status context.StatusContext ImplementsNodeRequirableByPullRequestFields for StatusContextNameDescriptionavatarUrl (URI)The avatar of the OAuth application or the user that created the status.Arguments for avatarUrlsize (Int)The size of the resulting square image.The default value is 40.commit (Commit)This commit this status context is attached to.context (String!)The name of this status context.createdAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created this status context.description (String)The description for this status context.id (ID!)The Node ID of the StatusContext object.isRequired (Boolean!)Whether this is required to pass before merging for a specific pull request.Arguments for isRequiredpullRequestId (ID)The id of the pull request this is required for.pullRequestNumber (Int)The number of the pull request this is required for.state (StatusState!)The state of this status context.targetUrl (URI)The URL for this status context.StatusContextStateCountRepresents a count of the state of a status context.Fields for StatusContextStateCountNameDescriptioncount (Int!)The number of statuses with this state.state (StatusState!)The state of a status context.StripeConnectAccountA Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.Fields for StripeConnectAccountNameDescriptionaccountId (String!)The account number used to identify this Stripe Connect account.billingCountryOrRegion (String)The name of the country or region of an external account, such as a bank
account, tied to the Stripe Connect account. Will only return a value when
queried by the maintainer of the associated GitHub Sponsors profile
themselves, or by an admin of the sponsorable organization.countryOrRegion (String)The name of the country or region of the Stripe Connect account. Will only
return a value when queried by the maintainer of the associated GitHub
Sponsors profile themselves, or by an admin of the sponsorable organization.isActive (Boolean!)Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile.sponsorsListing (SponsorsListing!)The GitHub Sponsors profile associated with this Stripe Connect account.stripeDashboardUrl (URI!)The URL to access this Stripe Connect account on Stripe's website.SubIssueAddedEventRepresents asub_issue_addedevent on a given issue.SubIssueAddedEvent ImplementsNodeFields for SubIssueAddedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the SubIssueAddedEvent object.subIssue (Issue)The sub-issue added.SubIssueRemovedEventRepresents asub_issue_removedevent on a given issue.SubIssueRemovedEvent ImplementsNodeFields for SubIssueRemovedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the SubIssueRemovedEvent object.subIssue (Issue)The sub-issue removed.SubIssuesSummarySummary of the state of an issue's sub-issues.Fields for SubIssuesSummaryNameDescriptioncompleted (Int!)Count of completed sub-issues.percentCompleted (Int!)Percent of sub-issues which are completed.total (Int!)Count of total number of sub-issues.SubmoduleA pointer to a repository at a specific revision embedded inside another repository.Fields for SubmoduleNameDescriptionbranch (String)The branch of the upstream submodule for tracking updates.gitUrl (URI!)The git URL of the submodule repository.name (String!)The name of the submodule in .gitmodules.nameRaw (Base64String!)The name of the submodule in .gitmodules (Base64-encoded).path (String!)The path in the superproject that this submodule is located in.pathRaw (Base64String!)The path in the superproject that this submodule is located in (Base64-encoded).subprojectCommitOid (GitObjectID)The commit revision of the subproject repository being tracked by the submodule.SubmoduleConnectionThe connection type for Submodule.Fields for SubmoduleConnectionNameDescriptionedges ([SubmoduleEdge])A list of edges.nodes ([Submodule])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.SubmoduleEdgeAn edge in a connection.Fields for SubmoduleEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Submodule)The item at the end of the edge.SubscribedEventRepresents asubscribedevent on a given Subscribable.SubscribedEvent ImplementsNodeFields for SubscribedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the SubscribedEvent object.subscribable (Subscribable!)Object referenced by event.SuggestedReviewerA suggestion to review a pull request based on a user's commit history and review comments.Fields for SuggestedReviewerNameDescriptionisAuthor (Boolean!)Is this suggestion based on past commits?.isCommenter (Boolean!)Is this suggestion based on past review comments?.reviewer (User!)Identifies the user suggested to review the pull request.TagRepresents a Git tag.Tag ImplementsGitObjectNodeFields for TagNameDescriptionabbreviatedOid (String!)An abbreviated version of the Git object ID.commitResourcePath (URI!)The HTTP path for this Git object.commitUrl (URI!)The HTTP URL for this Git object.id (ID!)The Node ID of the Tag object.message (String)The Git tag message.name (String!)The Git tag name.oid (GitObjectID!)The Git object ID.repository (Repository!)The Repository the Git object belongs to.tagger (GitActor)Details about the tag author.target (GitObject!)The Git object the tag points to.TagNamePatternParametersParameters to be used for the tag_name_pattern rule.Fields for TagNamePatternParametersNameDescriptionname (String)How this rule will appear to users.negate (Boolean!)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.TeamA team of users in an organization.Team ImplementsMemberStatusableNodeSubscribableFields for TeamNameDescriptionancestors (TeamConnection!)A list of teams that are ancestors of this team.Arguments for ancestorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.avatarUrl (URI)A URL pointing to the team's avatar.Arguments for avatarUrlsize (Int)The size in pixels of the resulting square image.The default value is 400.childTeams (TeamConnection!)List of child teams belonging to this team.Arguments for childTeamsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.immediateOnly (Boolean)Whether to list immediate child teams or all descendant child teams.The default value is true.last (Int)Returns the last n elements from the list.orderBy (TeamOrder)Order for connection.userLogins ([String!])User logins to filter by.combinedSlug (String!)The slug corresponding to the organization and team.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.description (String)The description of the team.discussion (TeamDiscussion)Find a team discussion by its number.Arguments for discussionnumber (Int!)The sequence number of the discussion to find.discussions (TeamDiscussionConnection!)A list of team discussions.Arguments for discussionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.isPinned (Boolean)If provided, filters discussions according to whether or not they are pinned.last (Int)Returns the last n elements from the list.orderBy (TeamDiscussionOrder)Order for connection.discussionsResourcePath (URI!)The HTTP path for team discussions.discussionsUrl (URI!)The HTTP URL for team discussions.editTeamResourcePath (URI!)The HTTP path for editing this team.editTeamUrl (URI!)The HTTP URL for editing this team.id (ID!)The Node ID of the Team object.invitations (OrganizationInvitationConnection)A list of pending invitations for users to this team.Arguments for invitationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.memberStatuses (UserStatusConnection!)Get the status messages members of this entity have set that are either public or visible only to the organization.Arguments for memberStatusesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (UserStatusOrder)Ordering options for user statuses returned from the connection.members (TeamMemberConnection!)A list of users who are members of this team.Arguments for membersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.membership (TeamMembershipType)Filter by membership type.The default value is ALL.orderBy (TeamMemberOrder)Order for the connection.query (String)The search string to look for.role (TeamMemberRole)Filter by team member role.membersResourcePath (URI!)The HTTP path for the team' members.membersUrl (URI!)The HTTP URL for the team' members.name (String!)The name of the team.newTeamResourcePath (URI!)The HTTP path creating a new team.newTeamUrl (URI!)The HTTP URL creating a new team.notificationSetting (TeamNotificationSetting!)The notification setting that the team has set.organization (Organization!)The organization that owns this team.parentTeam (Team)The parent team of the team.privacy (TeamPrivacy!)The level of privacy the team has.projectV2 (ProjectV2)Finds and returns the project according to the provided project number.Arguments for projectV2number (Int!)The Project number.projectsV2 (ProjectV2Connection!)List of projects this team has collaborator access to.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (ProjectV2Filters)Filtering options for projects returned from this connection.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)The query to search projects by.The default value is .repositories (TeamRepositoryConnection!)A list of repositories this team has access to.Arguments for repositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (TeamRepositoryOrder)Order for the connection.query (String)The search string to look for. Repositories will be returned where the name contains your search string.repositoriesResourcePath (URI!)The HTTP path for this team's repositories.repositoriesUrl (URI!)The HTTP URL for this team's repositories.resourcePath (URI!)The HTTP path for this team.reviewRequestDelegationAlgorithm (TeamReviewAssignmentAlgorithm)What algorithm is used for review assignment for this team.reviewRequestDelegationEnabled (Boolean!)True if review assignment is enabled for this team.reviewRequestDelegationMemberCount (Int)How many team members are required for review assignment for this team.reviewRequestDelegationNotifyTeam (Boolean!)When assigning team members via delegation, whether the entire team should be notified as well.slug (String!)The slug corresponding to the team.teamsResourcePath (URI!)The HTTP path for this team's teams.teamsUrl (URI!)The HTTP URL for this team's teams.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this team.viewerCanAdminister (Boolean!)Team is adminable by the viewer.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.TeamAddMemberAuditEntryAudit log entry for a team.add_member event.TeamAddMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataTeamAuditEntryDataFields for TeamAddMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the TeamAddMemberAuditEntry object.isLdapMapped (Boolean)Whether the team was mapped to an LDAP Group.WarningisLdapMapped is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.team (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.TeamAddRepositoryAuditEntryAudit log entry for a team.add_repository event.TeamAddRepositoryAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataTeamAuditEntryDataFields for TeamAddRepositoryAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the TeamAddRepositoryAuditEntry object.isLdapMapped (Boolean)Whether the team was mapped to an LDAP Group.WarningisLdapMapped is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.team (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.TeamChangeParentTeamAuditEntryAudit log entry for a team.change_parent_team event.TeamChangeParentTeamAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataTeamAuditEntryDataFields for TeamChangeParentTeamAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the TeamChangeParentTeamAuditEntry object.isLdapMapped (Boolean)Whether the team was mapped to an LDAP Group.WarningisLdapMapped is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeam (Team)The new parent team.WarningparentTeam is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamName (String)The name of the new parent team.WarningparentTeamName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamNameWas (String)The name of the former parent team.WarningparentTeamNameWas is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamResourcePath (URI)The HTTP path for the parent team.WarningparentTeamResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamUrl (URI)The HTTP URL for the parent team.WarningparentTeamUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamWas (Team)The former parent team.WarningparentTeamWas is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamWasResourcePath (URI)The HTTP path for the previous parent team.WarningparentTeamWasResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.parentTeamWasUrl (URI)The HTTP URL for the previous parent team.WarningparentTeamWasUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.team (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.TeamConnectionThe connection type for Team.Fields for TeamConnectionNameDescriptionedges ([TeamEdge])A list of edges.nodes ([Team])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.TeamDiscussionA team discussion.TeamDiscussion ImplementsCommentDeletableNodeReactableSubscribableUniformResourceLocatableUpdatableUpdatableCommentFields for TeamDiscussionNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the discussion's team.WarningauthorAssociation is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.bodyVersion (String!)Identifies the discussion body hash.WarningbodyVersion is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.comments (TeamDiscussionCommentConnection!)A list of comments on this discussion.Warningcomments is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.Arguments for commentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.fromComment (Int)When provided, filters the connection such that results begin with the comment with this number.last (Int)Returns the last n elements from the list.orderBy (TeamDiscussionCommentOrder)Order for connection.commentsResourcePath (URI!)The HTTP path for discussion comments.WarningcommentsResourcePath is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.commentsUrl (URI!)The HTTP URL for discussion comments.WarningcommentsUrl is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the TeamDiscussion object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.isPinned (Boolean!)Whether or not the discussion is pinned.WarningisPinned is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.isPrivate (Boolean!)Whether or not the discussion is only visible to team members and organization owners.WarningisPrivate is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.lastEditedAt (DateTime)The moment the editor made the last edit.number (Int!)Identifies the discussion within its team.Warningnumber is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.resourcePath (URI!)The HTTP path for this discussion.WarningresourcePath is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.team (Team!)The team that defines the context of this discussion.Warningteam is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.title (String!)The title of the discussion.Warningtitle is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this discussion.Warningurl is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanPin (Boolean!)Whether or not the current viewer can pin this discussion.WarningviewerCanPin is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.viewerCanReact (Boolean!)Can user react to this subject.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.TeamDiscussionCommentA comment on a team discussion.TeamDiscussionComment ImplementsCommentDeletableNodeReactableUniformResourceLocatableUpdatableUpdatableCommentFields for TeamDiscussionCommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the comment's team.WarningauthorAssociation is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.bodyVersion (String!)The current version of the body content.WarningbodyVersion is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.databaseId (Int)Identifies the primary key from the database.discussion (TeamDiscussion!)The discussion this comment is about.Warningdiscussion is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the TeamDiscussionComment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.lastEditedAt (DateTime)The moment the editor made the last edit.number (Int!)Identifies the comment number.Warningnumber is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.publishedAt (DateTime)Identifies when the comment was published at.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.resourcePath (URI!)The HTTP path for this comment.WarningresourcePath is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this comment.Warningurl is deprecated.The Team Discussions feature is deprecated in favor of Organization Discussions. Follow the guide at https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to find a suitable replacement. Removal on 2024-07-01 UTC.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerCanDelete (Boolean!)Check if the current viewer can delete this object.viewerCanReact (Boolean!)Can user react to this subject.viewerCanUpdate (Boolean!)Check if the current viewer can update this object.viewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.viewerDidAuthor (Boolean!)Did the viewer author this comment.TeamDiscussionCommentConnectionThe connection type for TeamDiscussionComment.Fields for TeamDiscussionCommentConnectionNameDescriptionedges ([TeamDiscussionCommentEdge])A list of edges.nodes ([TeamDiscussionComment])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.TeamDiscussionCommentEdgeAn edge in a connection.Fields for TeamDiscussionCommentEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (TeamDiscussionComment)The item at the end of the edge.TeamDiscussionConnectionThe connection type for TeamDiscussion.Fields for TeamDiscussionConnectionNameDescriptionedges ([TeamDiscussionEdge])A list of edges.nodes ([TeamDiscussion])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.TeamDiscussionEdgeAn edge in a connection.Fields for TeamDiscussionEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (TeamDiscussion)The item at the end of the edge.TeamEdgeAn edge in a connection.Fields for TeamEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Team)The item at the end of the edge.TeamMemberConnectionThe connection type for User.Fields for TeamMemberConnectionNameDescriptionedges ([TeamMemberEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.TeamMemberEdgeRepresents a user who is a member of a team.Fields for TeamMemberEdgeNameDescriptioncursor (String!)A cursor for use in pagination.memberAccessResourcePath (URI!)The HTTP path to the organization's member access page.memberAccessUrl (URI!)The HTTP URL to the organization's member access page.node (User!)N/Arole (TeamMemberRole!)The role the member has on the team.TeamRemoveMemberAuditEntryAudit log entry for a team.remove_member event.TeamRemoveMemberAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataTeamAuditEntryDataFields for TeamRemoveMemberAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the TeamRemoveMemberAuditEntry object.isLdapMapped (Boolean)Whether the team was mapped to an LDAP Group.WarningisLdapMapped is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.team (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.TeamRemoveRepositoryAuditEntryAudit log entry for a team.remove_repository event.TeamRemoveRepositoryAuditEntry ImplementsAuditEntryNodeOrganizationAuditEntryDataRepositoryAuditEntryDataTeamAuditEntryDataFields for TeamRemoveRepositoryAuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.id (ID!)The Node ID of the TeamRemoveRepositoryAuditEntry object.isLdapMapped (Boolean)Whether the team was mapped to an LDAP Group.WarningisLdapMapped is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.repository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.team (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.TeamRepositoryConnectionThe connection type for Repository.Fields for TeamRepositoryConnectionNameDescriptionedges ([TeamRepositoryEdge])A list of edges.nodes ([Repository])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.TeamRepositoryEdgeRepresents a team repository.Fields for TeamRepositoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (Repository!)N/Apermission (RepositoryPermission!)The permission level the team has on the repository.TextMatchA text match within a search result.Fields for TextMatchNameDescriptionfragment (String!)The specific text fragment within the property matched on.highlights ([TextMatchHighlight!]!)Highlights within the matched fragment.property (String!)The property matched on.TextMatchHighlightRepresents a single highlight in a search result match.Fields for TextMatchHighlightNameDescriptionbeginIndice (Int!)The indice in the fragment where the matched text begins.endIndice (Int!)The indice in the fragment where the matched text ends.text (String!)The text matched.TopicA topic aggregates entities that are related to a subject.Topic ImplementsNodeStarrableFields for TopicNameDescriptionid (ID!)The Node ID of the Topic object.name (String!)The topic's name.relatedTopics ([Topic!]!)A list of related topics, including aliases of this topic, sorted with the most relevant
first. Returns up to 10 Topics.Arguments for relatedTopicsfirst (Int)How many topics to return.The default value is 3.repositories (RepositoryConnection!)A list of repositories.Arguments for repositoriesaffiliations ([RepositoryAffiliation])Array of viewer's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
current viewer owns.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.sponsorableOnly (Boolean)If true, only repositories whose owner can be sponsored via GitHub Sponsors will be returned.The default value is false.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.stargazerCount (Int!)Returns a count of how many stargazers there are on this object.stargazers (StargazerConnection!)A list of users who have starred this starrable.Arguments for stargazersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (StarOrder)Order for connection.viewerHasStarred (Boolean!)Returns a boolean indicating whether the viewing user has starred this starrable.TransferredEventRepresents atransferredevent on a given issue or pull request.TransferredEvent ImplementsNodeFields for TransferredEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.fromRepository (Repository)The repository this came from.id (ID!)The Node ID of the TransferredEvent object.issue (Issue!)Identifies the issue associated with the event.TreeRepresents a Git tree.Tree ImplementsGitObjectNodeFields for TreeNameDescriptionabbreviatedOid (String!)An abbreviated version of the Git object ID.commitResourcePath (URI!)The HTTP path for this Git object.commitUrl (URI!)The HTTP URL for this Git object.entries ([TreeEntry!])A list of tree entries.id (ID!)The Node ID of the Tree object.oid (GitObjectID!)The Git object ID.repository (Repository!)The Repository the Git object belongs to.TreeEntryRepresents a Git tree entry.Fields for TreeEntryNameDescriptionextension (String)The extension of the file.isGenerated (Boolean!)Whether or not this tree entry is generated.language (Language)The programming language this file is written in.lineCount (Int)Number of lines in the file.mode (Int!)Entry file mode.name (String!)Entry file name.nameRaw (Base64String!)Entry file name. (Base64-encoded).object (GitObject)Entry file object.oid (GitObjectID!)Entry file Git object ID.path (String)The full path of the file.pathRaw (Base64String)The full path of the file. (Base64-encoded).repository (Repository!)The Repository the tree entry belongs to.size (Int!)Entry byte size.submodule (Submodule)If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule.type (String!)Entry file type.UnassignedEventRepresents anunassignedevent on any assignable object.UnassignedEvent ImplementsNodeFields for UnassignedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.assignable (Assignable!)Identifies the assignable associated with the event.assignee (Assignee)Identifies the user or mannequin that was unassigned.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UnassignedEvent object.user (User)Identifies the subject (user) who was unassigned.Warninguser is deprecated.Assignees can now be mannequins. Use the assignee field instead. Removal on 2020-01-01 UTC.UnknownSignatureRepresents an unknown signature on a Commit or Tag.UnknownSignature ImplementsGitSignatureFields for UnknownSignatureNameDescriptionemail (String!)Email used to sign this object.isValid (Boolean!)True if the signature is valid and verified by GitHub.payload (String!)Payload for GPG signing object. Raw ODB object without the signature header.signature (String!)ASCII-armored signature header from object.signer (User)GitHub user corresponding to the email signing this commit.state (GitSignatureState!)The state of this signature. VALID if signature is valid and verified by
GitHub, otherwise represents reason why signature is considered invalid.verifiedAt (DateTime)The date the signature was verified, if valid.wasSignedByGitHub (Boolean!)True if the signature was made with GitHub's signing key.UnlabeledEventRepresents anunlabeledevent on a given issue or pull request.UnlabeledEvent ImplementsNodeFields for UnlabeledEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UnlabeledEvent object.label (Label!)Identifies the label associated with theunlabeledevent.labelable (Labelable!)Identifies the Labelable associated with the event.UnlockedEventRepresents anunlockedevent on a given issue or pull request.UnlockedEvent ImplementsNodeFields for UnlockedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UnlockedEvent object.lockable (Lockable!)Object that was unlocked.UnmarkedAsDuplicateEventRepresents anunmarked_as_duplicateevent on a given issue or pull request.UnmarkedAsDuplicateEvent ImplementsNodeFields for UnmarkedAsDuplicateEventNameDescriptionactor (Actor)Identifies the actor who performed the event.canonical (IssueOrPullRequest)The authoritative issue or pull request which has been duplicated by another.createdAt (DateTime!)Identifies the date and time when the object was created.duplicate (IssueOrPullRequest)The issue or pull request which has been marked as a duplicate of another.id (ID!)The Node ID of the UnmarkedAsDuplicateEvent object.isCrossRepository (Boolean!)Canonical and duplicate belong to different repositories.UnpinnedEventRepresents anunpinnedevent on a given issue or pull request.UnpinnedEvent ImplementsNodeFields for UnpinnedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UnpinnedEvent object.issue (Issue!)Identifies the issue associated with the event.UnsubscribedEventRepresents anunsubscribedevent on a given Subscribable.UnsubscribedEvent ImplementsNodeFields for UnsubscribedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UnsubscribedEvent object.subscribable (Subscribable!)Object referenced by event.UpdateParametersOnly allow users with bypass permission to update matching refs.Fields for UpdateParametersNameDescriptionupdateAllowsFetchAndMerge (Boolean!)Branch can pull changes from its upstream repository.UserA user is an individual's account on GitHub that owns repositories and can make new content.User ImplementsActorNodePackageOwnerProfileOwnerProjectOwnerProjectV2OwnerProjectV2RecentRepositoryDiscussionAuthorRepositoryDiscussionCommentAuthorRepositoryOwnerSponsorableUniformResourceLocatableFields for UserNameDescriptionanyPinnableItems (Boolean!)Determine if this repository owner has any items that can be pinned to their profile.Arguments for anyPinnableItemstype (PinnableItemType)Filter to only a particular kind of pinnable item.avatarUrl (URI!)A URL pointing to the user's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.bio (String)The user's public profile bio.bioHTML (HTML!)The user's public profile bio as HTML.canReceiveOrganizationEmailsWhenNotificationsRestricted (Boolean!)Could this user receive email notifications, if the organization had notification restrictions enabled?.Arguments for canReceiveOrganizationEmailsWhenNotificationsRestrictedlogin (String!)The login of the organization to check.commitComments (CommitCommentConnection!)A list of commit comments made by this user.Arguments for commitCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.company (String)The user's public profile company.companyHTML (HTML!)The user's public profile company as HTML.contributionsCollection (ContributionsCollection!)The collection of contributions this user has made to different repositories.Arguments for contributionsCollectionfrom (DateTime)Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.organizationID (ID)The ID of the organization used to filter contributions.to (DateTime)Only contributions made before and up to (including) this time will be
counted. If omitted, defaults to the current time or one year from the
provided from argument.copilotEndpoints (CopilotEndpoints)The user's Copilot endpoint information.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.email (String!)The user's publicly visible profile email.enterprises (EnterpriseConnection)A list of enterprises that the user belongs to.Arguments for enterprisesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.membershipType (EnterpriseMembershipType)Filter enterprises returned based on the user's membership type.The default value is ALL.orderBy (EnterpriseOrder)Ordering options for the User's enterprises.estimatedNextSponsorsPayoutInCents (Int!)The estimated next GitHub Sponsors payout for this user/organization in cents (USD).followers (FollowerConnection!)A list of users the given user is followed by.Arguments for followersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.following (FollowingConnection!)A list of users the given user is following.Arguments for followingafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.gist (Gist)Find gist by repo name.Arguments for gistname (String!)The gist name to find.gistComments (GistCommentConnection!)A list of gist comments made by this user.Arguments for gistCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.gists (GistConnection!)A list of the Gists the user has created.Arguments for gistsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (GistOrder)Ordering options for gists returned from the connection.privacy (GistPrivacy)Filters Gists according to privacy.hasSponsorsListing (Boolean!)True if this user/organization has a GitHub Sponsors listing.hovercard (Hovercard!)The hovercard information for this user in a given context.Arguments for hovercardprimarySubjectId (ID)The ID of the subject to get the hovercard in the context of.id (ID!)The Node ID of the User object.interactionAbility (RepositoryInteractionAbility)The interaction ability settings for this user.isBountyHunter (Boolean!)Whether or not this user is a participant in the GitHub Security Bug Bounty.isCampusExpert (Boolean!)Whether or not this user is a participant in the GitHub Campus Experts Program.isDeveloperProgramMember (Boolean!)Whether or not this user is a GitHub Developer Program member.isEmployee (Boolean!)Whether or not this user is a GitHub employee.isFollowingViewer (Boolean!)Whether or not this user is following the viewer. Inverse of viewerIsFollowing.isGitHubStar (Boolean!)Whether or not this user is a member of the GitHub Stars Program.isHireable (Boolean!)Whether or not the user has marked themselves as for hire.isSiteAdmin (Boolean!)Whether or not this user is a site administrator.isSponsoredBy (Boolean!)Whether the given account is sponsoring this user/organization.Arguments for isSponsoredByaccountLogin (String!)The target account's login.isSponsoringViewer (Boolean!)True if the viewer is sponsored by this user/organization.isViewer (Boolean!)Whether or not this user is the viewing user.issueComments (IssueCommentConnection!)A list of issue comments made by this user.Arguments for issueCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (IssueCommentOrder)Ordering options for issue comments returned from the connection.issues (IssueConnection!)A list of issues associated with this user.Arguments for issuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.filterBy (IssueFilters)Filtering options for issues returned from the connection.first (Int)Returns the first n elements from the list.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for issues returned from the connection.states ([IssueState!])A list of states to filter the issues by.itemShowcase (ProfileItemShowcase!)Showcases a selection of repositories and gists that the profile owner has
either curated or that have been selected automatically based on popularity.lifetimeReceivedSponsorshipValues (SponsorAndLifetimeValueConnection!)Calculate how much each sponsor has ever paid total to this maintainer via
GitHub Sponsors. Does not include sponsorships paid via Patreon.Arguments for lifetimeReceivedSponsorshipValuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorAndLifetimeValueOrder)Ordering options for results returned from the connection.lists (UserListConnection!)A user-curated list of repositories.Arguments for listsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.location (String)The user's public profile location.login (String!)The username used to login.monthlyEstimatedSponsorsIncomeInCents (Int!)The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).name (String)The user's public profile name.organization (Organization)Find an organization by its login that the user belongs to.Arguments for organizationlogin (String!)The login of the organization to find.organizationVerifiedDomainEmails ([String!]!)Verified email addresses that match verified domains for a specified organization the user is a member of.Arguments for organizationVerifiedDomainEmailslogin (String!)The login of the organization to match verified domains from.organizations (OrganizationConnection!)A list of organizations the user belongs to.Arguments for organizationsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (OrganizationOrder)Ordering options for the User's organizations.packages (PackageConnection!)A list of packages under the owner.Arguments for packagesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.names ([String])Find packages by their names.orderBy (PackageOrder)Ordering of the returned packages.packageType (PackageType)Filter registry package by type.repositoryId (ID)Find packages in a repository by ID.pinnableItems (PinnableItemConnection!)A list of repositories and gists this profile owner can pin to their profile.Arguments for pinnableItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinnable items that are returned.pinnedItems (PinnableItemConnection!)A list of repositories and gists this profile owner has pinned to their profile.Arguments for pinnedItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinned items that are returned.pinnedItemsRemaining (Int!)Returns how many more items this profile owner can pin to their profile.project (Project)Find project by number.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectnumber (Int!)The project number to find.projectV2 (ProjectV2)Find a project by number.Arguments for projectV2number (Int!)The project number.projects (ProjectConnection!)A list of projects under the owner.Warningprojects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectOrder)Ordering options for projects returned from the connection.search (String)Query to search projects by, currently only searching by name.states ([ProjectState!])A list of states to filter the projects by.projectsResourcePath (URI!)The HTTP path listing user's projects.projectsUrl (URI!)The HTTP URL listing user's projects.projectsV2 (ProjectV2Connection!)A list of projects under the owner.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for under the owner.pronouns (String)The user's profile pronouns.publicKeys (PublicKeyConnection!)A list of public keys associated with this user.Arguments for publicKeysafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.pullRequests (PullRequestConnection!)A list of pull requests associated with this user.Arguments for pullRequestsafter (String)Returns the elements in the list that come after the specified cursor.baseRefName (String)The base ref name to filter the pull requests by.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.headRefName (String)The head ref name to filter the pull requests by.labels ([String!])A list of label names to filter the pull requests by.last (Int)Returns the last n elements from the list.orderBy (IssueOrder)Ordering options for pull requests returned from the connection.states ([PullRequestState!])A list of states to filter the pull requests by.recentProjects (ProjectV2Connection!)Recent projects that this user has modified in the context of the owner.Arguments for recentProjectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.repositories (RepositoryConnection!)A list of repositories that the user owns.Arguments for repositoriesaffiliations ([RepositoryAffiliation])Array of viewer's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
current viewer owns.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isArchived (Boolean)If non-null, filters repositories according to whether they are archived and not maintained.isFork (Boolean)If non-null, filters repositories according to whether they are forks of another repository.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.repositoriesContributedTo (RepositoryConnection!)A list of repositories that the user recently contributed to.Arguments for repositoriesContributedToafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.contributionTypes ([RepositoryContributionType])If non-null, include only the specified types of contributions. The
GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY].first (Int)Returns the first n elements from the list.hasIssues (Boolean)If non-null, filters repositories according to whether they have issues enabled.includeUserRepositories (Boolean)If true, include user repositories.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy.repository (Repository)Find Repository.Arguments for repositoryfollowRenames (Boolean)Follow repository renames. If disabled, a repository referenced by its old name will return an error.The default value is true.name (String!)Name of Repository to find.repositoryDiscussionComments (DiscussionCommentConnection!)Discussion comments this user has authored.Arguments for repositoryDiscussionCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.onlyAnswers (Boolean)Filter discussion comments to only those that were marked as the answer.The default value is false.repositoryId (ID)Filter discussion comments to only those in a specific repository.repositoryDiscussions (DiscussionConnection!)Discussions this user has started.Arguments for repositoryDiscussionsafter (String)Returns the elements in the list that come after the specified cursor.answered (Boolean)Filter discussions to only those that have been answered or not. Defaults to
including both answered and unanswered discussions.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DiscussionOrder)Ordering options for discussions returned from the connection.repositoryId (ID)Filter discussions to only those in a specific repository.states ([DiscussionState!])A list of states to filter the discussions by.resourcePath (URI!)The HTTP path for this user.savedReplies (SavedReplyConnection)Replies this user has saved.Arguments for savedRepliesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SavedReplyOrder)The field to order saved replies by.socialAccounts (SocialAccountConnection!)The user's social media accounts, ordered as they appear on the user's profile.Arguments for socialAccountsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.sponsoring (SponsorConnection!)List of users and organizations this entity is sponsoring.Arguments for sponsoringafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for the users and organizations returned from the connection.sponsors (SponsorConnection!)List of sponsors for this user or organization.Arguments for sponsorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for sponsors returned from the connection.tierId (ID)If given, will filter for sponsors at the given tier. Will only return
sponsors whose tier the viewer is permitted to see.sponsorsActivities (SponsorsActivityConnection!)Events involving this sponsorable, such as new sponsorships.Arguments for sponsorsActivitiesactions ([SponsorsActivityAction!])Filter activities to only the specified actions.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeAsSponsor (Boolean)Whether to include those events where this sponsorable acted as the sponsor.
Defaults to only including events where this sponsorable was the recipient
of a sponsorship.The default value is false.includePrivate (Boolean)Whether or not to include private activities in the result set. Defaults to including public and private activities.The default value is true.last (Int)Returns the last n elements from the list.orderBy (SponsorsActivityOrder)Ordering options for activity returned from the connection.period (SponsorsActivityPeriod)Filter activities returned to only those that occurred in the most recent
specified time period. Set to ALL to avoid filtering by when the activity
occurred. Will be ignored if since or until is given.The default value is MONTH.since (DateTime)Filter activities to those that occurred on or after this time.until (DateTime)Filter activities to those that occurred before this time.sponsorsListing (SponsorsListing)The GitHub Sponsors listing for this user or organization.sponsorshipForViewerAsSponsor (Sponsorship)The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.Arguments for sponsorshipForViewerAsSponsoractiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the viewer's sponsorship back even if it has been cancelled.The default value is true.sponsorshipForViewerAsSponsorable (Sponsorship)The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.Arguments for sponsorshipForViewerAsSponsorableactiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the sponsorship back even if it has been cancelled.The default value is true.sponsorshipNewsletters (SponsorshipNewsletterConnection!)List of sponsorship updates sent from this sponsorable to sponsors.Arguments for sponsorshipNewslettersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorshipNewsletterOrder)Ordering options for sponsorship updates returned from the connection.sponsorshipsAsMaintainer (SponsorshipConnection!)The sponsorships where this user or organization is the maintainer receiving the funds.Arguments for sponsorshipsAsMaintaineractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all
sponsorships this maintainer has ever received.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includePrivate (Boolean)Whether or not to include private sponsorships in the result set.The default value is false.last (Int)Returns the last n elements from the list.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.sponsorshipsAsSponsor (SponsorshipConnection!)The sponsorships where this user or organization is the funder.Arguments for sponsorshipsAsSponsoractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.maintainerLogins ([String!])Filter sponsorships returned to those for the specified maintainers. That
is, the recipient of the sponsorship is a user or organization with one of
the given logins.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.starredRepositories (StarredRepositoryConnection!)Repositories the user has starred.Arguments for starredRepositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (StarOrder)Order for connection.ownedByViewer (Boolean)Filters starred repositories to only return repositories owned by the viewer.status (UserStatus)The user's description of what they're currently doing.suggestedListNames ([UserListSuggestion!]!)Suggested names for user lists.topRepositories (RepositoryConnection!)Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created.Arguments for topRepositoriesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder!)Ordering options for repositories returned from the connection.since (DateTime)How far back in time to fetch contributed repositories.totalSponsorshipAmountAsSponsorInCents (Int)The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has
spent on GitHub to fund sponsorships. Only returns a value when viewed by the
user themselves or by a user who can manage sponsorships for the requested organization.Arguments for totalSponsorshipAmountAsSponsorInCentssince (DateTime)Filter payments to those that occurred on or after this time.sponsorableLogins ([String!])Filter payments to those made to the users or organizations with the specified usernames.until (DateTime)Filter payments to those that occurred before this time.twitterUsername (String)The user's Twitter username.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this user.userViewType (UserViewType!)Whether the request returns publicly visible information or privately visible information about the user.viewerCanChangePinnedItems (Boolean!)Can the viewer pin repositories and gists to the profile?.viewerCanCreateProjects (Boolean!)Can the current viewer create new projects on this owner.WarningviewerCanCreateProjects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.viewerCanFollow (Boolean!)Whether or not the viewer is able to follow the user.viewerCanSponsor (Boolean!)Whether or not the viewer is able to sponsor this user/organization.viewerIsFollowing (Boolean!)Whether or not this user is followed by the viewer. Inverse of isFollowingViewer.viewerIsSponsoring (Boolean!)True if the viewer is sponsoring this user/organization.watching (RepositoryConnection!)A list of repositories the given user is watching.Arguments for watchingaffiliations ([RepositoryAffiliation])Affiliation options for repositories returned from the connection. If none
specified, the results will include repositories for which the current
viewer is an owner or collaborator, or member.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.websiteUrl (URI)A URL pointing to the user's public website/blog.UserBlockedEventRepresents auser_blockedevent on a given user.UserBlockedEvent ImplementsNodeFields for UserBlockedEventNameDescriptionactor (Actor)Identifies the actor who performed the event.blockDuration (UserBlockDuration!)Number of days that the user was blocked for.createdAt (DateTime!)Identifies the date and time when the object was created.id (ID!)The Node ID of the UserBlockedEvent object.subject (User)The user who was blocked.UserConnectionA list of users.Fields for UserConnectionNameDescriptionedges ([UserEdge])A list of edges.nodes ([User])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserContentEditAn edit on user content.UserContentEdit ImplementsNodeFields for UserContentEditNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.deletedAt (DateTime)Identifies the date and time when the object was deleted.deletedBy (Actor)The actor who deleted this content.diff (String)A summary of the changes for this edit.editedAt (DateTime!)When this content was edited.editor (Actor)The actor who edited this content.id (ID!)The Node ID of the UserContentEdit object.updatedAt (DateTime!)Identifies the date and time when the object was last updated.UserContentEditConnectionA list of edits to content.Fields for UserContentEditConnectionNameDescriptionedges ([UserContentEditEdge])A list of edges.nodes ([UserContentEdit])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserContentEditEdgeAn edge in a connection.Fields for UserContentEditEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (UserContentEdit)The item at the end of the edge.UserEdgeRepresents a user.Fields for UserEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (User)The item at the end of the edge.UserEmailMetadataEmail attributes from External Identity.Fields for UserEmailMetadataNameDescriptionprimary (Boolean)Boolean to identify primary emails.type (String)Type of email.value (String!)Email id.UserListA user-curated list of repositories.UserList ImplementsNodeFields for UserListNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.description (String)The description of this list.id (ID!)The Node ID of the UserList object.isPrivate (Boolean!)Whether or not this list is private.items (UserListItemsConnection!)The items associated with this list.Arguments for itemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.lastAddedAt (DateTime!)The date and time at which this list was created or last had items added to it.name (String!)The name of this list.slug (String!)The slug of this list.updatedAt (DateTime!)Identifies the date and time when the object was last updated.user (User!)The user to which this list belongs.UserListConnectionThe connection type for UserList.Fields for UserListConnectionNameDescriptionedges ([UserListEdge])A list of edges.nodes ([UserList])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserListEdgeAn edge in a connection.Fields for UserListEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (UserList)The item at the end of the edge.UserListItemsConnectionThe connection type for UserListItems.Fields for UserListItemsConnectionNameDescriptionedges ([UserListItemsEdge])A list of edges.nodes ([UserListItems])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserListItemsEdgeAn edge in a connection.Fields for UserListItemsEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (UserListItems)The item at the end of the edge.UserListSuggestionRepresents a suggested user list.Fields for UserListSuggestionNameDescriptionid (ID)The ID of the suggested user list.name (String)The name of the suggested user list.UserNamespaceRepositoryA repository owned by an Enterprise Managed user.UserNamespaceRepository ImplementsNodeFields for UserNamespaceRepositoryNameDescriptionid (ID!)The Node ID of the UserNamespaceRepository object.name (String!)The name of the repository.nameWithOwner (String!)The repository's name with owner.owner (RepositoryOwner!)The user owner of the repository.UserNamespaceRepositoryConnectionA list of repositories owned by users in an enterprise with Enterprise Managed Users.Fields for UserNamespaceRepositoryConnectionNameDescriptionedges ([UserNamespaceRepositoryEdge])A list of edges.nodes ([UserNamespaceRepository])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserNamespaceRepositoryEdgeAn edge in a connection.Fields for UserNamespaceRepositoryEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (UserNamespaceRepository)The item at the end of the edge.UserStatusThe user's description of what they're currently doing.UserStatus ImplementsNodeFields for UserStatusNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.emoji (String)An emoji summarizing the user's status.emojiHTML (HTML)The status emoji as HTML.expiresAt (DateTime)If set, the status will not be shown after this date.id (ID!)The Node ID of the UserStatus object.indicatesLimitedAvailability (Boolean!)Whether this status indicates the user is not fully available on GitHub.message (String)A brief message describing what the user is doing.organization (Organization)The organization whose members can see this status. If null, this status is publicly visible.updatedAt (DateTime!)Identifies the date and time when the object was last updated.user (User!)The user who has this status.UserStatusConnectionThe connection type for UserStatus.Fields for UserStatusConnectionNameDescriptionedges ([UserStatusEdge])A list of edges.nodes ([UserStatus])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.UserStatusEdgeAn edge in a connection.Fields for UserStatusEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (UserStatus)The item at the end of the edge.VerifiableDomainA domain that can be verified or approved for an organization or an enterprise.VerifiableDomain ImplementsNodeFields for VerifiableDomainNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.dnsHostName (URI)The DNS host name that should be used for verification.domain (URI!)The unicode encoded domain.hasFoundHostName (Boolean!)Whether a TXT record for verification with the expected host name was found.hasFoundVerificationToken (Boolean!)Whether a TXT record for verification with the expected verification token was found.id (ID!)The Node ID of the VerifiableDomain object.isApproved (Boolean!)Whether or not the domain is approved.isRequiredForPolicyEnforcement (Boolean!)Whether this domain is required to exist for an organization or enterprise policy to be enforced.isVerified (Boolean!)Whether or not the domain is verified.owner (VerifiableDomainOwner!)The owner of the domain.punycodeEncodedDomain (URI!)The punycode encoded domain.tokenExpirationTime (DateTime)The time that the current verification token will expire.updatedAt (DateTime!)Identifies the date and time when the object was last updated.verificationToken (String)The current verification token for the domain.VerifiableDomainConnectionThe connection type for VerifiableDomain.Fields for VerifiableDomainConnectionNameDescriptionedges ([VerifiableDomainEdge])A list of edges.nodes ([VerifiableDomain])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.VerifiableDomainEdgeAn edge in a connection.Fields for VerifiableDomainEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (VerifiableDomain)The item at the end of the edge.ViewerHovercardContextA hovercard context with a message describing how the viewer is related.ViewerHovercardContext ImplementsHovercardContextFields for ViewerHovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.viewer (User!)Identifies the user who is related to this context.WorkflowA workflow contains meta information about an Actions workflow file.Workflow ImplementsNodeUniformResourceLocatableFields for WorkflowNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the Workflow object.name (String!)The name of the workflow.resourcePath (URI!)The HTTP path for this workflow.runs (WorkflowRunConnection!)The runs of the workflow.Arguments for runsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (WorkflowRunOrder)Ordering options for the connection.state (WorkflowState!)The state of the workflow.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this workflow.WorkflowFileReferenceA workflow that must run for this rule to pass.Fields for WorkflowFileReferenceNameDescriptionpath (String!)The path to the workflow file.ref (String)The ref (branch or tag) of the workflow file to use.repositoryId (Int!)The ID of the repository where the workflow is defined.sha (String)The commit SHA of the workflow file to use.WorkflowRunA workflow run.WorkflowRun ImplementsNodeUniformResourceLocatableFields for WorkflowRunNameDescriptioncheckSuite (CheckSuite!)The check suite this workflow run belongs to.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (Int)Identifies the primary key from the database.deploymentReviews (DeploymentReviewConnection!)The log of deployment reviews.Arguments for deploymentReviewsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.event (String!)The event that triggered the workflow run.file (WorkflowRunFile)The workflow file.id (ID!)The Node ID of the WorkflowRun object.pendingDeploymentRequests (DeploymentRequestConnection!)The pending deployment requests of all check runs in this workflow run.Arguments for pendingDeploymentRequestsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.resourcePath (URI!)The HTTP path for this workflow run.runNumber (Int!)A number that uniquely identifies this workflow run in its parent workflow.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this workflow run.workflow (Workflow!)The workflow executed in this workflow run.WorkflowRunConnectionThe connection type for WorkflowRun.Fields for WorkflowRunConnectionNameDescriptionedges ([WorkflowRunEdge])A list of edges.nodes ([WorkflowRun])A list of nodes.pageInfo (PageInfo!)Information to aid in pagination.totalCount (Int!)Identifies the total count of items in the connection.WorkflowRunEdgeAn edge in a connection.Fields for WorkflowRunEdgeNameDescriptioncursor (String!)A cursor for use in pagination.node (WorkflowRun)The item at the end of the edge.WorkflowRunFileAn executed workflow file for a workflow run.WorkflowRunFile ImplementsNodeUniformResourceLocatableFields for WorkflowRunFileNameDescriptionid (ID!)The Node ID of the WorkflowRunFile object.path (String!)The path of the workflow file relative to its repository.repositoryFileUrl (URI!)The direct link to the file in the repository which stores the workflow file.repositoryName (URI!)The repository name and owner which stores the workflow file.resourcePath (URI!)The HTTP path for this workflow run file.run (WorkflowRun!)The parent workflow run execution for this file.url (URI!)The HTTP URL for this workflow run file.viewerCanPushRepository (Boolean!)If the viewer has permissions to push to the repository which stores the workflow.viewerCanReadRepository (Boolean!)If the viewer has permissions to read the repository which stores the workflow.WorkflowsParametersRequire all changes made to a targeted branch to pass the specified workflows before they can be merged.Fields for WorkflowsParametersNameDescriptiondoNotEnforceOnCreate (Boolean!)Allow repositories and branches to be created if a check would otherwise prohibit it.workflows ([WorkflowFileReference!]!)Workflows that must pass for this rule to pass.\n\n\n\nGraphQL API/Reference/InterfacesInterfacesInterfaces serve as parent objects from which other objects can inherit.In this articleAbout interfacesActorAssignableAuditEntryClosableCommentContributionDeletableEnterpriseAuditEntryDataGitObjectGitSignatureHovercardContextLabelableLockableMemberStatusableMigrationMinimizableNodeOauthApplicationAuditEntryDataOrganizationAuditEntryDataPackageOwnerProfileOwnerProjectOwnerProjectV2FieldCommonProjectV2ItemFieldValueCommonProjectV2OwnerProjectV2RecentReactableRepositoryAuditEntryDataRepositoryDiscussionAuthorRepositoryDiscussionCommentAuthorRepositoryInfoRepositoryNodeRepositoryOwnerRequirableByPullRequestSponsorableStarrableSubscribableSubscribableThreadTeamAuditEntryDataTopicAuditEntryDataUniformResourceLocatableUpdatableUpdatableCommentVotableAbout interfaces
Interfaces serve as parent objects from which other objects can inherit.
For example, Lockable is an interface because both Issue and PullRequest objects can be locked. An interface has its own list of named fields that are shared by implementing objects.
For more information, see Introduction to GraphQL.ActorRepresents an object which can take actions on GitHub. Typically a User or Bot.Actor is implemented by
BotEnterpriseUserAccountMannequinOrganizationUserFields for ActorNameDescriptionavatarUrl (URI!)A URL pointing to the actor's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.login (String!)The username of the actor.resourcePath (URI!)The HTTP path for this actor.url (URI!)The HTTP URL for this actor.AssignableAn object that can have users assigned to it.Assignable is implemented by
IssuePullRequestFields for AssignableNameDescriptionassignedActors (AssigneeConnection!)A list of actors assigned to this object.Arguments for assignedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.assignees (UserConnection!)A list of Users assigned to this object.Arguments for assigneesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.suggestedActors (AssigneeConnection!)A list of suggested actors to assign to this object.Arguments for suggestedActorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.query (String)If provided, searches users by login or profile name.AuditEntryAn entry in the audit log.AuditEntry is implemented by
MembersCanDeleteReposClearAuditEntryMembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposEnableAuditEntryOauthApplicationCreateAuditEntryOrgAddBillingManagerAuditEntryOrgAddMemberAuditEntryOrgBlockUserAuditEntryOrgConfigDisableCollaboratorsOnlyAuditEntryOrgConfigEnableCollaboratorsOnlyAuditEntryOrgCreateAuditEntryOrgDisableOauthAppRestrictionsAuditEntryOrgDisableSamlAuditEntryOrgDisableTwoFactorRequirementAuditEntryOrgEnableOauthAppRestrictionsAuditEntryOrgEnableSamlAuditEntryOrgEnableTwoFactorRequirementAuditEntryOrgInviteMemberAuditEntryOrgInviteToBusinessAuditEntryOrgOauthAppAccessApprovedAuditEntryOrgOauthAppAccessBlockedAuditEntryOrgOauthAppAccessDeniedAuditEntryOrgOauthAppAccessRequestedAuditEntryOrgOauthAppAccessUnblockedAuditEntryOrgRemoveBillingManagerAuditEntryOrgRemoveMemberAuditEntryOrgRemoveOutsideCollaboratorAuditEntryOrgRestoreMemberAuditEntryOrgUnblockUserAuditEntryOrgUpdateDefaultRepositoryPermissionAuditEntryOrgUpdateMemberAuditEntryOrgUpdateMemberRepositoryCreationPermissionAuditEntryOrgUpdateMemberRepositoryInvitationPermissionAuditEntryPrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryRepoAccessAuditEntryRepoAddMemberAuditEntryRepoAddTopicAuditEntryRepoArchivedAuditEntryRepoChangeMergeSettingAuditEntryRepoConfigDisableAnonymousGitAccessAuditEntryRepoConfigDisableCollaboratorsOnlyAuditEntryRepoConfigDisableContributorsOnlyAuditEntryRepoConfigDisableSockpuppetDisallowedAuditEntryRepoConfigEnableAnonymousGitAccessAuditEntryRepoConfigEnableCollaboratorsOnlyAuditEntryRepoConfigEnableContributorsOnlyAuditEntryRepoConfigEnableSockpuppetDisallowedAuditEntryRepoConfigLockAnonymousGitAccessAuditEntryRepoConfigUnlockAnonymousGitAccessAuditEntryRepoCreateAuditEntryRepoDestroyAuditEntryRepoRemoveMemberAuditEntryRepoRemoveTopicAuditEntryRepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeEnableAuditEntryTeamAddMemberAuditEntryTeamAddRepositoryAuditEntryTeamChangeParentTeamAuditEntryTeamRemoveMemberAuditEntryTeamRemoveRepositoryAuditEntryFields for AuditEntryNameDescriptionaction (String!)The action name.Warningaction is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actor (AuditEntryActor)The user who initiated the action.Warningactor is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorIp (String)The IP address of the actor.WarningactorIp is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLocation (ActorLocation)A readable representation of the actor's location.WarningactorLocation is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorLogin (String)The username of the user who initiated the action.WarningactorLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorResourcePath (URI)The HTTP path for the actor.WarningactorResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.actorUrl (URI)The HTTP URL for the actor.WarningactorUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.createdAt (PreciseDateTime!)The time the action was initiated.WarningcreatedAt is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.operationType (OperationType)The corresponding operation type for the action.WarningoperationType is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.user (User)The user affected by the action.Warninguser is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userLogin (String)For actions involving two users, the actor is the initiator and the user is the affected user.WarninguserLogin is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userResourcePath (URI)The HTTP path for the user.WarninguserResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.userUrl (URI)The HTTP URL for the user.WarninguserUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.ClosableAn object that can be closed.Closable is implemented by
DiscussionIssueMilestoneProjectProjectV2PullRequestFields for ClosableNameDescriptionclosed (Boolean!)Indicates if the object is closed (definition of closed may depend on type).closedAt (DateTime)Identifies the date and time when the object was closed.viewerCanClose (Boolean!)Indicates if the object can be closed by the viewer.viewerCanReopen (Boolean!)Indicates if the object can be reopened by the viewer.CommentRepresents a comment.Comment is implemented by
CommitCommentDiscussionDiscussionCommentGistCommentIssueIssueCommentPullRequestPullRequestReviewPullRequestReviewCommentTeamDiscussionTeamDiscussionCommentFields for CommentNameDescriptionauthor (Actor)The actor who authored the comment.authorAssociation (CommentAuthorAssociation!)Author's association with the subject of the comment.body (String!)The body as Markdown.bodyHTML (HTML!)The body rendered to HTML.bodyText (String!)The body rendered to text.createdAt (DateTime!)Identifies the date and time when the object was created.createdViaEmail (Boolean!)Check if this comment was created via an email reply.editor (Actor)The actor who edited the comment.id (ID!)The Node ID of the Comment object.includesCreatedEdit (Boolean!)Check if this comment was edited and includes an edit with the creation data.lastEditedAt (DateTime)The moment the editor made the last edit.publishedAt (DateTime)Identifies when the comment was published at.updatedAt (DateTime!)Identifies the date and time when the object was last updated.userContentEdits (UserContentEditConnection)A list of edits to this content.Arguments for userContentEditsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.viewerDidAuthor (Boolean!)Did the viewer author this comment.ContributionRepresents a contribution a user made on GitHub, such as opening an issue.Contribution is implemented by
CreatedCommitContributionCreatedIssueContributionCreatedPullRequestContributionCreatedPullRequestReviewContributionCreatedRepositoryContributionJoinedGitHubContributionRestrictedContributionFields for ContributionNameDescriptionisRestricted (Boolean!)Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.occurredAt (DateTime!)When this contribution was made.resourcePath (URI!)The HTTP path for this contribution.url (URI!)The HTTP URL for this contribution.user (User!)The user who made this contribution.DeletableEntities that can be deleted.Deletable is implemented by
CommitCommentDiscussionDiscussionCommentGistCommentIssueIssueCommentPullRequestReviewPullRequestReviewCommentTeamDiscussionTeamDiscussionCommentFields for DeletableNameDescriptionviewerCanDelete (Boolean!)Check if the current viewer can delete this object.EnterpriseAuditEntryDataMetadata for an audit entry containing enterprise account information.EnterpriseAuditEntryData is implemented by
MembersCanDeleteReposClearAuditEntryMembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposEnableAuditEntryOrgInviteToBusinessAuditEntryPrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryRepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeEnableAuditEntryFields for EnterpriseAuditEntryDataNameDescriptionenterpriseResourcePath (URI)The HTTP path for this enterprise.enterpriseSlug (String)The slug of the enterprise.enterpriseUrl (URI)The HTTP URL for this enterprise.GitObjectRepresents a Git object.GitObject is implemented by
BlobCommitTagTreeFields for GitObjectNameDescriptionabbreviatedOid (String!)An abbreviated version of the Git object ID.commitResourcePath (URI!)The HTTP path for this Git object.commitUrl (URI!)The HTTP URL for this Git object.id (ID!)The Node ID of the GitObject object.oid (GitObjectID!)The Git object ID.repository (Repository!)The Repository the Git object belongs to.GitSignatureInformation about a signature (GPG or S/MIME) on a Commit or Tag.GitSignature is implemented by
GpgSignatureSmimeSignatureSshSignatureUnknownSignatureFields for GitSignatureNameDescriptionemail (String!)Email used to sign this object.isValid (Boolean!)True if the signature is valid and verified by GitHub.payload (String!)Payload for GPG signing object. Raw ODB object without the signature header.signature (String!)ASCII-armored signature header from object.signer (User)GitHub user corresponding to the email signing this commit.state (GitSignatureState!)The state of this signature. VALID if signature is valid and verified by
GitHub, otherwise represents reason why signature is considered invalid.verifiedAt (DateTime)The date the signature was verified, if valid.wasSignedByGitHub (Boolean!)True if the signature was made with GitHub's signing key.HovercardContextAn individual line of a hovercard.HovercardContext is implemented by
GenericHovercardContextOrganizationTeamsHovercardContextOrganizationsHovercardContextReviewStatusHovercardContextViewerHovercardContextFields for HovercardContextNameDescriptionmessage (String!)A string describing this context.octicon (String!)An octicon to accompany this context.LabelableAn object that can have labels assigned to it.Labelable is implemented by
DiscussionIssuePullRequestFields for LabelableNameDescriptionlabels (LabelConnection)A list of labels associated with the object.Arguments for labelsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (LabelOrder)Ordering options for labels returned from the connection.viewerCanLabel (Boolean!)Indicates if the viewer can edit labels for this object.LockableAn object that can be locked.Lockable is implemented by
DiscussionIssuePullRequestFields for LockableNameDescriptionactiveLockReason (LockReason)Reason that the conversation was locked.locked (Boolean!)true if the object is locked.MemberStatusableEntities that have members who can set status messages.MemberStatusable is implemented by
OrganizationTeamFields for MemberStatusableNameDescriptionmemberStatuses (UserStatusConnection!)Get the status messages members of this entity have set that are either public or visible only to the organization.Arguments for memberStatusesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (UserStatusOrder)Ordering options for user statuses returned from the connection.MigrationRepresents a GitHub Enterprise Importer (GEI) migration.Migration is implemented by
RepositoryMigrationFields for MigrationNameDescriptioncontinueOnError (Boolean!)The migration flag to continue on error.createdAt (DateTime!)Identifies the date and time when the object was created.databaseId (String)Identifies the primary key from the database.failureReason (String)The reason the migration failed.id (ID!)The Node ID of the Migration object.migrationLogUrl (URI)The URL for the migration log (expires 1 day after migration completes).migrationSource (MigrationSource!)The migration source.repositoryName (String!)The target repository name.sourceUrl (URI!)The migration source URL, for example https://github.com or https://monalisa.ghe.com.state (MigrationState!)The migration state.warningsCount (Int!)The number of warnings encountered for this migration. To review the warnings,
check the Migration Log.MinimizableEntities that can be minimized.Minimizable is implemented by
CommitCommentDiscussionCommentGistCommentIssueCommentPullRequestReviewPullRequestReviewCommentFields for MinimizableNameDescriptionisMinimized (Boolean!)Returns whether or not a comment has been minimized.minimizedReason (String)Returns why the comment was minimized. One of abuse, off-topic,
outdated, resolved, duplicate and spam. Note that the case and
formatting of these values differs from the inputs to the MinimizeComment mutation.viewerCanMinimize (Boolean!)Check if the current viewer can minimize this object.NodeAn object with an ID.Node is implemented by
AddedToMergeQueueEventAddedToProjectEventAppAssignedEventAutoMergeDisabledEventAutoMergeEnabledEventAutoRebaseEnabledEventAutoSquashEnabledEventAutomaticBaseChangeFailedEventAutomaticBaseChangeSucceededEventBaseRefChangedEventBaseRefDeletedEventBaseRefForcePushedEventBlobBotBranchProtectionRuleBypassForcePushAllowanceBypassPullRequestAllowanceCWECheckRunCheckSuiteClosedEventCodeOfConductCommentDeletedEventCommitCommitCommentCommitCommentThreadComparisonConnectedEventConvertToDraftEventConvertedNoteToIssueEventConvertedToDiscussionEventCrossReferencedEventDemilestonedEventDependencyGraphManifestDeployKeyDeployedEventDeploymentDeploymentEnvironmentChangedEventDeploymentReviewDeploymentStatusDisconnectedEventDiscussionDiscussionCategoryDiscussionCommentDiscussionPollDiscussionPollOptionDraftIssueEnterpriseEnterpriseAdministratorInvitationEnterpriseIdentityProviderEnterpriseMemberInvitationEnterpriseRepositoryInfoEnterpriseServerInstallationEnterpriseServerUserAccountEnterpriseServerUserAccountEmailEnterpriseServerUserAccountsUploadEnterpriseUserAccountEnvironmentExternalIdentityGistGistCommentHeadRefDeletedEventHeadRefForcePushedEventHeadRefRestoredEventIpAllowListEntryIssueIssueCommentIssueTypeIssueTypeAddedEventIssueTypeChangedEventIssueTypeRemovedEventLabelLabeledEventLanguageLicenseLinkedBranchLockedEventMannequinMarkedAsDuplicateEventMarketplaceCategoryMarketplaceListingMemberFeatureRequestNotificationMembersCanDeleteReposClearAuditEntryMembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposEnableAuditEntryMentionedEventMergeQueueMergeQueueEntryMergedEventMigrationSourceMilestoneMilestonedEventMovedColumnsInProjectEventOIDCProviderOauthApplicationCreateAuditEntryOrgAddBillingManagerAuditEntryOrgAddMemberAuditEntryOrgBlockUserAuditEntryOrgConfigDisableCollaboratorsOnlyAuditEntryOrgConfigEnableCollaboratorsOnlyAuditEntryOrgCreateAuditEntryOrgDisableOauthAppRestrictionsAuditEntryOrgDisableSamlAuditEntryOrgDisableTwoFactorRequirementAuditEntryOrgEnableOauthAppRestrictionsAuditEntryOrgEnableSamlAuditEntryOrgEnableTwoFactorRequirementAuditEntryOrgInviteMemberAuditEntryOrgInviteToBusinessAuditEntryOrgOauthAppAccessApprovedAuditEntryOrgOauthAppAccessBlockedAuditEntryOrgOauthAppAccessDeniedAuditEntryOrgOauthAppAccessRequestedAuditEntryOrgOauthAppAccessUnblockedAuditEntryOrgRemoveBillingManagerAuditEntryOrgRemoveMemberAuditEntryOrgRemoveOutsideCollaboratorAuditEntryOrgRestoreMemberAuditEntryOrgUnblockUserAuditEntryOrgUpdateDefaultRepositoryPermissionAuditEntryOrgUpdateMemberAuditEntryOrgUpdateMemberRepositoryCreationPermissionAuditEntryOrgUpdateMemberRepositoryInvitationPermissionAuditEntryOrganizationOrganizationIdentityProviderOrganizationInvitationOrganizationMigrationPackagePackageFilePackageTagPackageVersionParentIssueAddedEventParentIssueRemovedEventPinnedDiscussionPinnedEnvironmentPinnedEventPinnedIssuePrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryProjectProjectCardProjectColumnProjectV2ProjectV2FieldProjectV2ItemProjectV2ItemFieldDateValueProjectV2ItemFieldIterationValueProjectV2ItemFieldNumberValueProjectV2ItemFieldSingleSelectValueProjectV2ItemFieldTextValueProjectV2IterationFieldProjectV2SingleSelectFieldProjectV2StatusUpdateProjectV2ViewProjectV2WorkflowPublicKeyPullRequestPullRequestCommitPullRequestCommitCommentThreadPullRequestReviewPullRequestReviewCommentPullRequestReviewThreadPullRequestThreadPushPushAllowanceReactionReadyForReviewEventRefReferencedEventReleaseReleaseAssetRemovedFromMergeQueueEventRemovedFromProjectEventRenamedTitleEventReopenedEventRepoAccessAuditEntryRepoAddMemberAuditEntryRepoAddTopicAuditEntryRepoArchivedAuditEntryRepoChangeMergeSettingAuditEntryRepoConfigDisableAnonymousGitAccessAuditEntryRepoConfigDisableCollaboratorsOnlyAuditEntryRepoConfigDisableContributorsOnlyAuditEntryRepoConfigDisableSockpuppetDisallowedAuditEntryRepoConfigEnableAnonymousGitAccessAuditEntryRepoConfigEnableCollaboratorsOnlyAuditEntryRepoConfigEnableContributorsOnlyAuditEntryRepoConfigEnableSockpuppetDisallowedAuditEntryRepoConfigLockAnonymousGitAccessAuditEntryRepoConfigUnlockAnonymousGitAccessAuditEntryRepoCreateAuditEntryRepoDestroyAuditEntryRepoRemoveMemberAuditEntryRepoRemoveTopicAuditEntryRepositoryRepositoryInvitationRepositoryMigrationRepositoryRuleRepositoryRulesetRepositoryRulesetBypassActorRepositoryTopicRepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeEnableAuditEntryRepositoryVulnerabilityAlertReviewDismissalAllowanceReviewDismissedEventReviewRequestReviewRequestRemovedEventReviewRequestedEventSavedReplySecurityAdvisorySponsorsActivitySponsorsListingSponsorsListingFeaturedItemSponsorsTierSponsorshipSponsorshipNewsletterStatusStatusCheckRollupStatusContextSubIssueAddedEventSubIssueRemovedEventSubscribedEventTagTeamTeamAddMemberAuditEntryTeamAddRepositoryAuditEntryTeamChangeParentTeamAuditEntryTeamDiscussionTeamDiscussionCommentTeamRemoveMemberAuditEntryTeamRemoveRepositoryAuditEntryTopicTransferredEventTreeUnassignedEventUnlabeledEventUnlockedEventUnmarkedAsDuplicateEventUnpinnedEventUnsubscribedEventUserUserBlockedEventUserContentEditUserListUserNamespaceRepositoryUserStatusVerifiableDomainWorkflowWorkflowRunWorkflowRunFileFields for NodeNameDescriptionid (ID!)ID of the object.OauthApplicationAuditEntryDataMetadata for an audit entry with action oauth_application.*.OauthApplicationAuditEntryData is implemented by
OauthApplicationCreateAuditEntryOrgOauthAppAccessApprovedAuditEntryOrgOauthAppAccessBlockedAuditEntryOrgOauthAppAccessDeniedAuditEntryOrgOauthAppAccessRequestedAuditEntryOrgOauthAppAccessUnblockedAuditEntryFields for OauthApplicationAuditEntryDataNameDescriptionoauthApplicationName (String)The name of the OAuth application.oauthApplicationResourcePath (URI)The HTTP path for the OAuth application.oauthApplicationUrl (URI)The HTTP URL for the OAuth application.OrganizationAuditEntryDataMetadata for an audit entry with action org.*.OrganizationAuditEntryData is implemented by
MembersCanDeleteReposClearAuditEntryMembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposEnableAuditEntryOauthApplicationCreateAuditEntryOrgAddBillingManagerAuditEntryOrgAddMemberAuditEntryOrgBlockUserAuditEntryOrgConfigDisableCollaboratorsOnlyAuditEntryOrgConfigEnableCollaboratorsOnlyAuditEntryOrgCreateAuditEntryOrgDisableOauthAppRestrictionsAuditEntryOrgDisableSamlAuditEntryOrgDisableTwoFactorRequirementAuditEntryOrgEnableOauthAppRestrictionsAuditEntryOrgEnableSamlAuditEntryOrgEnableTwoFactorRequirementAuditEntryOrgInviteMemberAuditEntryOrgInviteToBusinessAuditEntryOrgOauthAppAccessApprovedAuditEntryOrgOauthAppAccessBlockedAuditEntryOrgOauthAppAccessDeniedAuditEntryOrgOauthAppAccessRequestedAuditEntryOrgOauthAppAccessUnblockedAuditEntryOrgRemoveBillingManagerAuditEntryOrgRemoveMemberAuditEntryOrgRemoveOutsideCollaboratorAuditEntryOrgRestoreMemberAuditEntryOrgRestoreMemberMembershipOrganizationAuditEntryDataOrgUnblockUserAuditEntryOrgUpdateDefaultRepositoryPermissionAuditEntryOrgUpdateMemberAuditEntryOrgUpdateMemberRepositoryCreationPermissionAuditEntryOrgUpdateMemberRepositoryInvitationPermissionAuditEntryPrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryRepoAccessAuditEntryRepoAddMemberAuditEntryRepoAddTopicAuditEntryRepoArchivedAuditEntryRepoChangeMergeSettingAuditEntryRepoConfigDisableAnonymousGitAccessAuditEntryRepoConfigDisableCollaboratorsOnlyAuditEntryRepoConfigDisableContributorsOnlyAuditEntryRepoConfigDisableSockpuppetDisallowedAuditEntryRepoConfigEnableAnonymousGitAccessAuditEntryRepoConfigEnableCollaboratorsOnlyAuditEntryRepoConfigEnableContributorsOnlyAuditEntryRepoConfigEnableSockpuppetDisallowedAuditEntryRepoConfigLockAnonymousGitAccessAuditEntryRepoConfigUnlockAnonymousGitAccessAuditEntryRepoCreateAuditEntryRepoDestroyAuditEntryRepoRemoveMemberAuditEntryRepoRemoveTopicAuditEntryRepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeEnableAuditEntryTeamAddMemberAuditEntryTeamAddRepositoryAuditEntryTeamChangeParentTeamAuditEntryTeamRemoveMemberAuditEntryTeamRemoveRepositoryAuditEntryFields for OrganizationAuditEntryDataNameDescriptionorganization (Organization)The Organization associated with the Audit Entry.Warningorganization is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationName (String)The name of the Organization.WarningorganizationName is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationResourcePath (URI)The HTTP path for the organization.WarningorganizationResourcePath is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.organizationUrl (URI)The HTTP URL for the organization.WarningorganizationUrl is deprecated.The GraphQL audit-log is deprecated. Please use the REST API instead. Removal on 2026-04-01 UTC.PackageOwnerRepresents an owner of a package.PackageOwner is implemented by
OrganizationRepositoryUserFields for PackageOwnerNameDescriptionid (ID!)The Node ID of the PackageOwner object.packages (PackageConnection!)A list of packages under the owner.Arguments for packagesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.names ([String])Find packages by their names.orderBy (PackageOrder)Ordering of the returned packages.packageType (PackageType)Filter registry package by type.repositoryId (ID)Find packages in a repository by ID.ProfileOwnerRepresents any entity on GitHub that has a profile page.ProfileOwner is implemented by
OrganizationUserFields for ProfileOwnerNameDescriptionanyPinnableItems (Boolean!)Determine if this repository owner has any items that can be pinned to their profile.Arguments for anyPinnableItemstype (PinnableItemType)Filter to only a particular kind of pinnable item.email (String)The public profile email.id (ID!)The Node ID of the ProfileOwner object.itemShowcase (ProfileItemShowcase!)Showcases a selection of repositories and gists that the profile owner has
either curated or that have been selected automatically based on popularity.location (String)The public profile location.login (String!)The username used to login.name (String)The public profile name.pinnableItems (PinnableItemConnection!)A list of repositories and gists this profile owner can pin to their profile.Arguments for pinnableItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinnable items that are returned.pinnedItems (PinnableItemConnection!)A list of repositories and gists this profile owner has pinned to their profile.Arguments for pinnedItemsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.types ([PinnableItemType!])Filter the types of pinned items that are returned.pinnedItemsRemaining (Int!)Returns how many more items this profile owner can pin to their profile.viewerCanChangePinnedItems (Boolean!)Can the viewer pin repositories and gists to the profile?.websiteUrl (URI)The public profile website URL.ProjectOwnerRepresents an owner of a Project.ProjectOwner is implemented by
OrganizationRepositoryUserFields for ProjectOwnerNameDescriptionid (ID!)The Node ID of the ProjectOwner object.Warningid is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.project (Project)Find project by number.Warningproject is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectnumber (Int!)The project number to find.projects (ProjectConnection!)A list of projects under the owner.Warningprojects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.Arguments for projectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ProjectOrder)Ordering options for projects returned from the connection.search (String)Query to search projects by, currently only searching by name.states ([ProjectState!])A list of states to filter the projects by.projectsResourcePath (URI!)The HTTP path listing owners projects.WarningprojectsResourcePath is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.projectsUrl (URI!)The HTTP URL listing owners projects.WarningprojectsUrl is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.viewerCanCreateProjects (Boolean!)Can the current viewer create new projects on this owner.WarningviewerCanCreateProjects is deprecated.Projects (classic) is being deprecated in favor of the new Projects experience, see: https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/. Removal on 2025-04-01 UTC.ProjectV2FieldCommonCommon fields across different project field types.ProjectV2FieldCommon is implemented by
ProjectV2FieldProjectV2IterationFieldProjectV2SingleSelectFieldFields for ProjectV2FieldCommonNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.dataType (ProjectV2FieldType!)The field's type.databaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the ProjectV2FieldCommon object.name (String!)The project field's name.project (ProjectV2!)The project that contains this field.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2ItemFieldValueCommonCommon fields across different project field value types.ProjectV2ItemFieldValueCommon is implemented by
ProjectV2ItemFieldDateValueProjectV2ItemFieldIterationValueProjectV2ItemFieldNumberValueProjectV2ItemFieldSingleSelectValueProjectV2ItemFieldTextValueFields for ProjectV2ItemFieldValueCommonNameDescriptioncreatedAt (DateTime!)Identifies the date and time when the object was created.creator (Actor)The actor who created the item.databaseId (Int)Identifies the primary key from the database.field (ProjectV2FieldConfiguration!)The project field that contains this value.id (ID!)The Node ID of the ProjectV2ItemFieldValueCommon object.item (ProjectV2Item!)The project item that contains this value.updatedAt (DateTime!)Identifies the date and time when the object was last updated.ProjectV2OwnerRepresents an owner of a project.ProjectV2Owner is implemented by
IssueOrganizationPullRequestUserFields for ProjectV2OwnerNameDescriptionid (ID!)The Node ID of the ProjectV2Owner object.projectV2 (ProjectV2)Find a project by number.Arguments for projectV2number (Int!)The project number.projectsV2 (ProjectV2Connection!)A list of projects under the owner.Arguments for projectsV2after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.minPermissionLevel (ProjectV2PermissionLevel)Filter projects based on user role.The default value is READ.orderBy (ProjectV2Order)How to order the returned projects.query (String)A project to search for under the owner.ProjectV2RecentRecent projects for the owner.ProjectV2Recent is implemented by
OrganizationRepositoryUserFields for ProjectV2RecentNameDescriptionrecentProjects (ProjectV2Connection!)Recent projects that this user has modified in the context of the owner.Arguments for recentProjectsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.ReactableRepresents a subject that can be reacted on.Reactable is implemented by
CommitCommentDiscussionDiscussionCommentIssueIssueCommentPullRequestPullRequestReviewPullRequestReviewCommentReleaseTeamDiscussionTeamDiscussionCommentFields for ReactableNameDescriptiondatabaseId (Int)Identifies the primary key from the database.id (ID!)The Node ID of the Reactable object.reactionGroups ([ReactionGroup!])A list of reactions grouped by content left on the subject.reactions (ReactionConnection!)A list of Reactions left on the Issue.Arguments for reactionsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.content (ReactionContent)Allows filtering Reactions by emoji.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (ReactionOrder)Allows specifying the order in which reactions are returned.viewerCanReact (Boolean!)Can user react to this subject.RepositoryAuditEntryDataMetadata for an audit entry with action repo.*.RepositoryAuditEntryData is implemented by
OrgRestoreMemberMembershipRepositoryAuditEntryDataPrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryRepoAccessAuditEntryRepoAddMemberAuditEntryRepoAddTopicAuditEntryRepoArchivedAuditEntryRepoChangeMergeSettingAuditEntryRepoConfigDisableAnonymousGitAccessAuditEntryRepoConfigDisableCollaboratorsOnlyAuditEntryRepoConfigDisableContributorsOnlyAuditEntryRepoConfigDisableSockpuppetDisallowedAuditEntryRepoConfigEnableAnonymousGitAccessAuditEntryRepoConfigEnableCollaboratorsOnlyAuditEntryRepoConfigEnableContributorsOnlyAuditEntryRepoConfigEnableSockpuppetDisallowedAuditEntryRepoConfigLockAnonymousGitAccessAuditEntryRepoConfigUnlockAnonymousGitAccessAuditEntryRepoCreateAuditEntryRepoDestroyAuditEntryRepoRemoveMemberAuditEntryRepoRemoveTopicAuditEntryTeamAddRepositoryAuditEntryTeamRemoveRepositoryAuditEntryFields for RepositoryAuditEntryDataNameDescriptionrepository (Repository)The repository associated with the action.repositoryName (String)The name of the repository.repositoryResourcePath (URI)The HTTP path for the repository.repositoryUrl (URI)The HTTP URL for the repository.RepositoryDiscussionAuthorRepresents an author of discussions in repositories.RepositoryDiscussionAuthor is implemented by
OrganizationUserFields for RepositoryDiscussionAuthorNameDescriptionrepositoryDiscussions (DiscussionConnection!)Discussions this user has started.Arguments for repositoryDiscussionsafter (String)Returns the elements in the list that come after the specified cursor.answered (Boolean)Filter discussions to only those that have been answered or not. Defaults to
including both answered and unanswered discussions.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (DiscussionOrder)Ordering options for discussions returned from the connection.repositoryId (ID)Filter discussions to only those in a specific repository.states ([DiscussionState!])A list of states to filter the discussions by.RepositoryDiscussionCommentAuthorRepresents an author of discussion comments in repositories.RepositoryDiscussionCommentAuthor is implemented by
OrganizationUserFields for RepositoryDiscussionCommentAuthorNameDescriptionrepositoryDiscussionComments (DiscussionCommentConnection!)Discussion comments this user has authored.Arguments for repositoryDiscussionCommentsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.onlyAnswers (Boolean)Filter discussion comments to only those that were marked as the answer.The default value is false.repositoryId (ID)Filter discussion comments to only those in a specific repository.RepositoryInfoA subset of repository info.RepositoryInfo is implemented by
RepositoryFields for RepositoryInfoNameDescriptionarchivedAt (DateTime)Identifies the date and time when the repository was archived.createdAt (DateTime!)Identifies the date and time when the object was created.description (String)The description of the repository.descriptionHTML (HTML!)The description of the repository rendered to HTML.forkCount (Int!)Returns how many forks there are of this repository in the whole network.hasDiscussionsEnabled (Boolean!)Indicates if the repository has the Discussions feature enabled.hasIssuesEnabled (Boolean!)Indicates if the repository has issues feature enabled.hasProjectsEnabled (Boolean!)Indicates if the repository has the Projects feature enabled.hasSponsorshipsEnabled (Boolean!)Indicates if the repository displays a Sponsor button for financial contributions.hasWikiEnabled (Boolean!)Indicates if the repository has wiki feature enabled.homepageUrl (URI)The repository's URL.isArchived (Boolean!)Indicates if the repository is unmaintained.isFork (Boolean!)Identifies if the repository is a fork.isInOrganization (Boolean!)Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.isLocked (Boolean!)Indicates if the repository has been locked or not.isMirror (Boolean!)Identifies if the repository is a mirror.isPrivate (Boolean!)Identifies if the repository is private or internal.isTemplate (Boolean!)Identifies if the repository is a template that can be used to generate new repositories.licenseInfo (License)The license associated with the repository.lockReason (RepositoryLockReason)The reason the repository has been locked.mirrorUrl (URI)The repository's original mirror URL.name (String!)The name of the repository.nameWithOwner (String!)The repository's name with owner.openGraphImageUrl (URI!)The image used to represent this repository in Open Graph data.owner (RepositoryOwner!)The User owner of the repository.pushedAt (DateTime)Identifies the date and time when the repository was last pushed to.resourcePath (URI!)The HTTP path for this repository.shortDescriptionHTML (HTML!)A description of the repository, rendered to HTML without any links in it.Arguments for shortDescriptionHTMLlimit (Int)How many characters to return.The default value is 200.updatedAt (DateTime!)Identifies the date and time when the object was last updated.url (URI!)The HTTP URL for this repository.usesCustomOpenGraphImage (Boolean!)Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.visibility (RepositoryVisibility!)Indicates the repository's visibility level.RepositoryNodeRepresents a object that belongs to a repository.RepositoryNode is implemented by
CommitCommentCommitCommentThreadDependabotUpdateDiscussionDiscussionCategoryIssueIssueCommentPinnedDiscussionPullRequestPullRequestCommitCommentThreadPullRequestReviewPullRequestReviewCommentRepositoryVulnerabilityAlertFields for RepositoryNodeNameDescriptionrepository (Repository!)The repository associated with this node.RepositoryOwnerRepresents an owner of a Repository.RepositoryOwner is implemented by
OrganizationUserFields for RepositoryOwnerNameDescriptionavatarUrl (URI!)A URL pointing to the owner's public avatar.Arguments for avatarUrlsize (Int)The size of the resulting square image.id (ID!)The Node ID of the RepositoryOwner object.login (String!)The username used to login.repositories (RepositoryConnection!)A list of repositories that the user owns.Arguments for repositoriesaffiliations ([RepositoryAffiliation])Array of viewer's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
current viewer owns.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.hasIssuesEnabled (Boolean)If non-null, filters repositories according to whether they have issues enabled.isArchived (Boolean)If non-null, filters repositories according to whether they are archived and not maintained.isFork (Boolean)If non-null, filters repositories according to whether they are forks of another repository.isLocked (Boolean)If non-null, filters repositories according to whether they have been locked.last (Int)Returns the last n elements from the list.orderBy (RepositoryOrder)Ordering options for repositories returned from the connection.ownerAffiliations ([RepositoryAffiliation])Array of owner's affiliation options for repositories returned from the
connection. For example, OWNER will include only repositories that the
organization or user being viewed owns.privacy (RepositoryPrivacy)If non-null, filters repositories according to privacy. Internal
repositories are considered private; consider using the visibility argument
if only internal repositories are needed. Cannot be combined with the
visibility argument.visibility (RepositoryVisibility)If non-null, filters repositories according to visibility. Cannot be combined with the privacy argument.repository (Repository)Find Repository.Arguments for repositoryfollowRenames (Boolean)Follow repository renames. If disabled, a repository referenced by its old name will return an error.The default value is true.name (String!)Name of Repository to find.resourcePath (URI!)The HTTP URL for the owner.url (URI!)The HTTP URL for the owner.RequirableByPullRequestRepresents a type that can be required by a pull request for merging.RequirableByPullRequest is implemented by
CheckRunStatusContextFields for RequirableByPullRequestNameDescriptionisRequired (Boolean!)Whether this is required to pass before merging for a specific pull request.Arguments for isRequiredpullRequestId (ID)The id of the pull request this is required for.pullRequestNumber (Int)The number of the pull request this is required for.SponsorableEntities that can sponsor or be sponsored through GitHub Sponsors.Sponsorable is implemented by
OrganizationUserFields for SponsorableNameDescriptionestimatedNextSponsorsPayoutInCents (Int!)The estimated next GitHub Sponsors payout for this user/organization in cents (USD).hasSponsorsListing (Boolean!)True if this user/organization has a GitHub Sponsors listing.isSponsoredBy (Boolean!)Whether the given account is sponsoring this user/organization.Arguments for isSponsoredByaccountLogin (String!)The target account's login.isSponsoringViewer (Boolean!)True if the viewer is sponsored by this user/organization.lifetimeReceivedSponsorshipValues (SponsorAndLifetimeValueConnection!)Calculate how much each sponsor has ever paid total to this maintainer via
GitHub Sponsors. Does not include sponsorships paid via Patreon.Arguments for lifetimeReceivedSponsorshipValuesafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorAndLifetimeValueOrder)Ordering options for results returned from the connection.monthlyEstimatedSponsorsIncomeInCents (Int!)The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).sponsoring (SponsorConnection!)List of users and organizations this entity is sponsoring.Arguments for sponsoringafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for the users and organizations returned from the connection.sponsors (SponsorConnection!)List of sponsors for this user or organization.Arguments for sponsorsafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorOrder)Ordering options for sponsors returned from the connection.tierId (ID)If given, will filter for sponsors at the given tier. Will only return
sponsors whose tier the viewer is permitted to see.sponsorsActivities (SponsorsActivityConnection!)Events involving this sponsorable, such as new sponsorships.Arguments for sponsorsActivitiesactions ([SponsorsActivityAction!])Filter activities to only the specified actions.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includeAsSponsor (Boolean)Whether to include those events where this sponsorable acted as the sponsor.
Defaults to only including events where this sponsorable was the recipient
of a sponsorship.The default value is false.includePrivate (Boolean)Whether or not to include private activities in the result set. Defaults to including public and private activities.The default value is true.last (Int)Returns the last n elements from the list.orderBy (SponsorsActivityOrder)Ordering options for activity returned from the connection.period (SponsorsActivityPeriod)Filter activities returned to only those that occurred in the most recent
specified time period. Set to ALL to avoid filtering by when the activity
occurred. Will be ignored if since or until is given.The default value is MONTH.since (DateTime)Filter activities to those that occurred on or after this time.until (DateTime)Filter activities to those that occurred before this time.sponsorsListing (SponsorsListing)The GitHub Sponsors listing for this user or organization.sponsorshipForViewerAsSponsor (Sponsorship)The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.Arguments for sponsorshipForViewerAsSponsoractiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the viewer's sponsorship back even if it has been cancelled.The default value is true.sponsorshipForViewerAsSponsorable (Sponsorship)The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.Arguments for sponsorshipForViewerAsSponsorableactiveOnly (Boolean)Whether to return the sponsorship only if it's still active. Pass false to
get the sponsorship back even if it has been cancelled.The default value is true.sponsorshipNewsletters (SponsorshipNewsletterConnection!)List of sponsorship updates sent from this sponsorable to sponsors.Arguments for sponsorshipNewslettersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (SponsorshipNewsletterOrder)Ordering options for sponsorship updates returned from the connection.sponsorshipsAsMaintainer (SponsorshipConnection!)The sponsorships where this user or organization is the maintainer receiving the funds.Arguments for sponsorshipsAsMaintaineractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all
sponsorships this maintainer has ever received.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.includePrivate (Boolean)Whether or not to include private sponsorships in the result set.The default value is false.last (Int)Returns the last n elements from the list.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.sponsorshipsAsSponsor (SponsorshipConnection!)The sponsorships where this user or organization is the funder.Arguments for sponsorshipsAsSponsoractiveOnly (Boolean)Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.The default value is true.after (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.maintainerLogins ([String!])Filter sponsorships returned to those for the specified maintainers. That
is, the recipient of the sponsorship is a user or organization with one of
the given logins.orderBy (SponsorshipOrder)Ordering options for sponsorships returned from this connection. If left
blank, the sponsorships will be ordered based on relevancy to the viewer.totalSponsorshipAmountAsSponsorInCents (Int)The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has
spent on GitHub to fund sponsorships. Only returns a value when viewed by the
user themselves or by a user who can manage sponsorships for the requested organization.Arguments for totalSponsorshipAmountAsSponsorInCentssince (DateTime)Filter payments to those that occurred on or after this time.sponsorableLogins ([String!])Filter payments to those made to the users or organizations with the specified usernames.until (DateTime)Filter payments to those that occurred before this time.viewerCanSponsor (Boolean!)Whether or not the viewer is able to sponsor this user/organization.viewerIsSponsoring (Boolean!)True if the viewer is sponsoring this user/organization.StarrableThings that can be starred.Starrable is implemented by
GistRepositoryTopicFields for StarrableNameDescriptionid (ID!)The Node ID of the Starrable object.stargazerCount (Int!)Returns a count of how many stargazers there are on this object.stargazers (StargazerConnection!)A list of users who have starred this starrable.Arguments for stargazersafter (String)Returns the elements in the list that come after the specified cursor.before (String)Returns the elements in the list that come before the specified cursor.first (Int)Returns the first n elements from the list.last (Int)Returns the last n elements from the list.orderBy (StarOrder)Order for connection.viewerHasStarred (Boolean!)Returns a boolean indicating whether the viewing user has starred this starrable.SubscribableEntities that can be subscribed to for web and email notifications.Subscribable is implemented by
CommitDiscussionIssuePullRequestRepositoryTeamTeamDiscussionFields for SubscribableNameDescriptionid (ID!)The Node ID of the Subscribable object.viewerCanSubscribe (Boolean!)Check if the viewer is able to change their subscription status for the repository.viewerSubscription (SubscriptionState)Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.SubscribableThreadEntities that can be subscribed to for web and email notifications.SubscribableThread is implemented by
IssueFields for SubscribableThreadNameDescriptionid (ID!)The Node ID of the SubscribableThread object.viewerThreadSubscriptionFormAction (ThreadSubscriptionFormAction)Identifies the viewer's thread subscription form action.viewerThreadSubscriptionStatus (ThreadSubscriptionState)Identifies the viewer's thread subscription status.TeamAuditEntryDataMetadata for an audit entry with action team.*.TeamAuditEntryData is implemented by
OrgRestoreMemberMembershipTeamAuditEntryDataTeamAddMemberAuditEntryTeamAddRepositoryAuditEntryTeamChangeParentTeamAuditEntryTeamRemoveMemberAuditEntryTeamRemoveRepositoryAuditEntryFields for TeamAuditEntryDataNameDescriptionteam (Team)The team associated with the action.teamName (String)The name of the team.teamResourcePath (URI)The HTTP path for this team.teamUrl (URI)The HTTP URL for this team.TopicAuditEntryDataMetadata for an audit entry with a topic.TopicAuditEntryData is implemented by
RepoAddTopicAuditEntryRepoRemoveTopicAuditEntryFields for TopicAuditEntryDataNameDescriptiontopic (Topic)The name of the topic added to the repository.topicName (String)The name of the topic added to the repository.UniformResourceLocatableRepresents a type that can be retrieved by a URL.UniformResourceLocatable is implemented by
BotCheckRunClosedEventCommitConvertToDraftEventCrossReferencedEventGistIssueMannequinMergedEventMilestoneOrganizationPullRequestPullRequestCommitReadyForReviewEventReleaseRepositoryRepositoryTopicReviewDismissedEventTeamDiscussionTeamDiscussionCommentUserWorkflowWorkflowRunWorkflowRunFileFields for UniformResourceLocatableNameDescriptionresourcePath (URI!)The HTML path to this resource.url (URI!)The URL to this resource.UpdatableEntities that can be updated.Updatable is implemented by
CommitCommentDiscussionDiscussionCommentGistCommentIssueIssueCommentProjectProjectV2PullRequestPullRequestReviewPullRequestReviewCommentTeamDiscussionTeamDiscussionCommentFields for UpdatableNameDescriptionviewerCanUpdate (Boolean!)Check if the current viewer can update this object.UpdatableCommentComments that can be updated.UpdatableComment is implemented by
CommitCommentDiscussionCommentGistCommentIssueIssueCommentPullRequestPullRequestReviewPullRequestReviewCommentTeamDiscussionTeamDiscussionCommentFields for UpdatableCommentNameDescriptionviewerCannotUpdateReasons ([CommentCannotUpdateReason!]!)Reasons why the current viewer can not update this comment.VotableA subject that may be upvoted.Votable is implemented by
DiscussionDiscussionCommentFields for VotableNameDescriptionupvoteCount (Int!)Number of upvotes that this subject has received.viewerCanUpvote (Boolean!)Whether or not the current user can add or remove an upvote on this subject.viewerHasUpvoted (Boolean!)Whether or not the current user has already upvoted this subject.\n\n\n\nGraphQL API/Reference/EnumsEnumsEnums represent possible sets of values for a field.In this articleAbout enumsActorTypeAuditLogOrderFieldCheckAnnotationLevelCheckConclusionStateCheckRunStateCheckRunTypeCheckStatusStateCollaboratorAffiliationCommentAuthorAssociationCommentCannotUpdateReasonCommitContributionOrderFieldComparisonStatusContributionLevelDefaultRepositoryPermissionFieldDependencyGraphEcosystemDeploymentOrderFieldDeploymentProtectionRuleTypeDeploymentReviewStateDeploymentStateDeploymentStatusStateDiffSideDiscussionCloseReasonDiscussionOrderFieldDiscussionPollOptionOrderFieldDiscussionStateDiscussionStateReasonDismissReasonEnterpriseAdministratorInvitationOrderFieldEnterpriseAdministratorRoleEnterpriseAllowPrivateRepositoryForkingPolicyValueEnterpriseDefaultRepositoryPermissionSettingValueEnterpriseDisallowedMethodsSettingValueEnterpriseEnabledDisabledSettingValueEnterpriseEnabledSettingValueEnterpriseMemberInvitationOrderFieldEnterpriseMemberOrderFieldEnterpriseMembersCanCreateRepositoriesSettingValueEnterpriseMembersCanMakePurchasesSettingValueEnterpriseMembershipTypeEnterpriseOrderFieldEnterpriseServerInstallationOrderFieldEnterpriseServerUserAccountEmailOrderFieldEnterpriseServerUserAccountOrderFieldEnterpriseServerUserAccountsUploadOrderFieldEnterpriseServerUserAccountsUploadSyncStateEnterpriseUserAccountMembershipRoleEnterpriseUserDeploymentEnvironmentOrderFieldEnvironmentPinnedFilterFieldFileViewedStateFundingPlatformGistOrderFieldGistPrivacyGitSignatureStateIdentityProviderConfigurationStateIpAllowListEnabledSettingValueIpAllowListEntryOrderFieldIpAllowListForInstalledAppsEnabledSettingValueIssueClosedStateReasonIssueCommentOrderFieldIssueOrderFieldIssueStateIssueStateReasonIssueTimelineItemsItemTypeIssueTypeColorIssueTypeOrderFieldLabelOrderFieldLanguageOrderFieldLockReasonMannequinOrderFieldMergeCommitMessageMergeCommitTitleMergeQueueEntryStateMergeQueueGroupingStrategyMergeQueueMergeMethodMergeQueueMergingStrategyMergeStateStatusMergeableStateMigrationSourceTypeMigrationStateMilestoneOrderFieldMilestoneStateNotificationRestrictionSettingValueOIDCProviderTypeOauthApplicationCreateAuditEntryStateOperationTypeOrderDirectionOrgAddMemberAuditEntryPermissionOrgCreateAuditEntryBillingPlanOrgEnterpriseOwnerOrderFieldOrgRemoveBillingManagerAuditEntryReasonOrgRemoveMemberAuditEntryMembershipTypeOrgRemoveMemberAuditEntryReasonOrgRemoveOutsideCollaboratorAuditEntryMembershipTypeOrgRemoveOutsideCollaboratorAuditEntryReasonOrgUpdateDefaultRepositoryPermissionAuditEntryPermissionOrgUpdateMemberAuditEntryPermissionOrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityOrganizationInvitationRoleOrganizationInvitationSourceOrganizationInvitationTypeOrganizationMemberRoleOrganizationMembersCanCreateRepositoriesSettingValueOrganizationMigrationStateOrganizationOrderFieldPackageFileOrderFieldPackageOrderFieldPackageTypePackageVersionOrderFieldPatchStatusPinnableItemTypePinnedDiscussionGradientPinnedDiscussionPatternPinnedEnvironmentOrderFieldProjectCardArchivedStateProjectCardStateProjectColumnPurposeProjectOrderFieldProjectStateProjectTemplateProjectV2CustomFieldTypeProjectV2FieldOrderFieldProjectV2FieldTypeProjectV2ItemFieldValueOrderFieldProjectV2ItemOrderFieldProjectV2ItemTypeProjectV2OrderFieldProjectV2PermissionLevelProjectV2RolesProjectV2SingleSelectFieldOptionColorProjectV2StateProjectV2StatusUpdateOrderFieldProjectV2StatusUpdateStatusProjectV2ViewLayoutProjectV2ViewOrderFieldProjectV2WorkflowsOrderFieldPullRequestAllowedMergeMethodsPullRequestBranchUpdateMethodPullRequestMergeMethodPullRequestOrderFieldPullRequestReviewCommentStatePullRequestReviewDecisionPullRequestReviewEventPullRequestReviewStatePullRequestReviewThreadSubjectTypePullRequestStatePullRequestTimelineItemsItemTypePullRequestUpdateStateReactionContentReactionOrderFieldRefOrderFieldReleaseOrderFieldRepoAccessAuditEntryVisibilityRepoAddMemberAuditEntryVisibilityRepoArchivedAuditEntryVisibilityRepoChangeMergeSettingAuditEntryMergeTypeRepoCreateAuditEntryVisibilityRepoDestroyAuditEntryVisibilityRepoRemoveMemberAuditEntryVisibilityReportedContentClassifiersRepositoryAffiliationRepositoryContributionTypeRepositoryInteractionLimitRepositoryInteractionLimitExpiryRepositoryInteractionLimitOriginRepositoryInvitationOrderFieldRepositoryLockReasonRepositoryMigrationOrderDirectionRepositoryMigrationOrderFieldRepositoryOrderFieldRepositoryPermissionRepositoryPrivacyRepositoryRuleOrderFieldRepositoryRuleTypeRepositoryRulesetBypassActorBypassModeRepositoryRulesetTargetRepositorySuggestedActorFilterRepositoryVisibilityRepositoryVulnerabilityAlertDependencyRelationshipRepositoryVulnerabilityAlertDependencyScopeRepositoryVulnerabilityAlertStateRequestableCheckStatusStateRoleInOrganizationRuleEnforcementSamlDigestAlgorithmSamlSignatureAlgorithmSavedReplyOrderFieldSearchTypeSecurityAdvisoryClassificationSecurityAdvisoryEcosystemSecurityAdvisoryIdentifierTypeSecurityAdvisoryOrderFieldSecurityAdvisorySeveritySecurityVulnerabilityOrderFieldSocialAccountProviderSponsorAndLifetimeValueOrderFieldSponsorOrderFieldSponsorableOrderFieldSponsorsActivityActionSponsorsActivityOrderFieldSponsorsActivityPeriodSponsorsCountryOrRegionCodeSponsorsGoalKindSponsorsListingFeaturedItemFeatureableTypeSponsorsTierOrderFieldSponsorshipNewsletterOrderFieldSponsorshipOrderFieldSponsorshipPaymentSourceSponsorshipPrivacySquashMergeCommitMessageSquashMergeCommitTitleStarOrderFieldStatusStateSubscriptionStateTeamDiscussionCommentOrderFieldTeamDiscussionOrderFieldTeamMemberOrderFieldTeamMemberRoleTeamMembershipTypeTeamNotificationSettingTeamOrderFieldTeamPrivacyTeamRepositoryOrderFieldTeamReviewAssignmentAlgorithmTeamRoleThreadSubscriptionFormActionThreadSubscriptionStateTopicSuggestionDeclineReasonTrackedIssueStatesTwoFactorCredentialSecurityTypeUserBlockDurationUserStatusOrderFieldUserViewTypeVerifiableDomainOrderFieldWorkflowRunOrderFieldWorkflowStateAbout enums
Enums represent possible sets of values for a field.
For example, the Issue object has a field called state. The state is an enum (specifically, of type IssueState) because it may be OPEN or CLOSED.
For more information, see Introduction to GraphQL.ActorTypeThe actor's type.Values for ActorTypeTEAMIndicates a team actor.USERIndicates a user actor.AuditLogOrderFieldProperties by which Audit Log connections can be ordered.Values for AuditLogOrderFieldCREATED_ATOrder audit log entries by timestamp.CheckAnnotationLevelRepresents an annotation's information level.Values for CheckAnnotationLevelFAILUREAn annotation indicating an inescapable error.NOTICEAn annotation indicating some information.WARNINGAn annotation indicating an ignorable error.CheckConclusionStateThe possible states for a check suite or run conclusion.Values for CheckConclusionStateACTION_REQUIREDThe check suite or run requires action.CANCELLEDThe check suite or run has been cancelled.FAILUREThe check suite or run has failed.NEUTRALThe check suite or run was neutral.SKIPPEDThe check suite or run was skipped.STALEThe check suite or run was marked stale by GitHub. Only GitHub can use this conclusion.STARTUP_FAILUREThe check suite or run has failed at startup.SUCCESSThe check suite or run has succeeded.TIMED_OUTThe check suite or run has timed out.CheckRunStateThe possible states of a check run in a status rollup.Values for CheckRunStateACTION_REQUIREDThe check run requires action.CANCELLEDThe check run has been cancelled.COMPLETEDThe check run has been completed.FAILUREThe check run has failed.IN_PROGRESSThe check run is in progress.NEUTRALThe check run was neutral.PENDINGThe check run is in pending state.QUEUEDThe check run has been queued.SKIPPEDThe check run was skipped.STALEThe check run was marked stale by GitHub. Only GitHub can use this conclusion.STARTUP_FAILUREThe check run has failed at startup.SUCCESSThe check run has succeeded.TIMED_OUTThe check run has timed out.WAITINGThe check run is in waiting state.CheckRunTypeThe possible types of check runs.Values for CheckRunTypeALLEvery check run available.LATESTThe latest check run.CheckStatusStateThe possible states for a check suite or run status.Values for CheckStatusStateCOMPLETEDThe check suite or run has been completed.IN_PROGRESSThe check suite or run is in progress.PENDINGThe check suite or run is in pending state.QUEUEDThe check suite or run has been queued.REQUESTEDThe check suite or run has been requested.WAITINGThe check suite or run is in waiting state.CollaboratorAffiliationCollaborators affiliation level with a subject.Values for CollaboratorAffiliationALLAll collaborators the authenticated user can see.DIRECTAll collaborators with permissions to an organization-owned subject, regardless of organization membership status.OUTSIDEAll outside collaborators of an organization-owned subject.CommentAuthorAssociationA comment author association with repository.Values for CommentAuthorAssociationCOLLABORATORAuthor has been invited to collaborate on the repository.CONTRIBUTORAuthor has previously committed to the repository.FIRST_TIMERAuthor has not previously committed to GitHub.FIRST_TIME_CONTRIBUTORAuthor has not previously committed to the repository.MANNEQUINAuthor is a placeholder for an unclaimed user.MEMBERAuthor is a member of the organization that owns the repository.NONEAuthor has no association with the repository.OWNERAuthor is the owner of the repository.CommentCannotUpdateReasonThe possible errors that will prevent a user from updating a comment.Values for CommentCannotUpdateReasonARCHIVEDUnable to create comment because repository is archived.DENIEDYou cannot update this comment.INSUFFICIENT_ACCESSYou must be the author or have write access to this repository to update this comment.LOCKEDUnable to create comment because issue is locked.LOGIN_REQUIREDYou must be logged in to update this comment.MAINTENANCERepository is under maintenance.VERIFIED_EMAIL_REQUIREDAt least one email address must be verified to update this comment.CommitContributionOrderFieldProperties by which commit contribution connections can be ordered.Values for CommitContributionOrderFieldCOMMIT_COUNTOrder commit contributions by how many commits they represent.OCCURRED_ATOrder commit contributions by when they were made.ComparisonStatusThe status of a git comparison between two refs.Values for ComparisonStatusAHEADThe head ref is ahead of the base ref.BEHINDThe head ref is behind the base ref.DIVERGEDThe head ref is both ahead and behind of the base ref, indicating git history has diverged.IDENTICALThe head ref and base ref are identical.ContributionLevelVarying levels of contributions from none to many.Values for ContributionLevelFIRST_QUARTILELowest 25% of days of contributions.FOURTH_QUARTILEHighest 25% of days of contributions. More contributions than the third quartile.NONENo contributions occurred.SECOND_QUARTILESecond lowest 25% of days of contributions. More contributions than the first quartile.THIRD_QUARTILESecond highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile.DefaultRepositoryPermissionFieldThe possible base permissions for repositories.Values for DefaultRepositoryPermissionFieldADMINCan read, write, and administrate repos by default.NONENo access.READCan read repos by default.WRITECan read and write repos by default.DependencyGraphEcosystemThe possible ecosystems of a dependency graph package.Values for DependencyGraphEcosystemACTIONSGitHub Actions.COMPOSERPHP packages hosted at packagist.org.GOGo modules.MAVENJava artifacts hosted at the Maven central repository.NPMJavaScript packages hosted at npmjs.com.NUGET.NET packages hosted at the NuGet Gallery.PIPPython packages hosted at PyPI.org.PUBDart packages hosted at pub.dev.RUBYGEMSRuby gems hosted at RubyGems.org.RUSTRust crates.SWIFTSwift packages.DeploymentOrderFieldProperties by which deployment connections can be ordered.Values for DeploymentOrderFieldCREATED_ATOrder collection by creation time.DeploymentProtectionRuleTypeThe possible protection rule types.Values for DeploymentProtectionRuleTypeBRANCH_POLICYBranch policy.REQUIRED_REVIEWERSRequired reviewers.WAIT_TIMERWait timer.DeploymentReviewStateThe possible states for a deployment review.Values for DeploymentReviewStateAPPROVEDThe deployment was approved.REJECTEDThe deployment was rejected.DeploymentStateThe possible states in which a deployment can be.Values for DeploymentStateABANDONEDThe pending deployment was not updated after 30 minutes.ACTIVEThe deployment is currently active.DESTROYEDAn inactive transient deployment.ERRORThe deployment experienced an error.FAILUREThe deployment has failed.INACTIVEThe deployment is inactive.IN_PROGRESSThe deployment is in progress.PENDINGThe deployment is pending.QUEUEDThe deployment has queued.SUCCESSThe deployment was successful.WAITINGThe deployment is waiting.DeploymentStatusStateThe possible states for a deployment status.Values for DeploymentStatusStateERRORThe deployment experienced an error.FAILUREThe deployment has failed.INACTIVEThe deployment is inactive.IN_PROGRESSThe deployment is in progress.PENDINGThe deployment is pending.QUEUEDThe deployment is queued.SUCCESSThe deployment was successful.WAITINGThe deployment is waiting.DiffSideThe possible sides of a diff.Values for DiffSideLEFTThe left side of the diff.RIGHTThe right side of the diff.DiscussionCloseReasonThe possible reasons for closing a discussion.Values for DiscussionCloseReasonDUPLICATEThe discussion is a duplicate of another.OUTDATEDThe discussion is no longer relevant.RESOLVEDThe discussion has been resolved.DiscussionOrderFieldProperties by which discussion connections can be ordered.Values for DiscussionOrderFieldCREATED_ATOrder discussions by creation time.UPDATED_ATOrder discussions by most recent modification time.DiscussionPollOptionOrderFieldProperties by which discussion poll option connections can be ordered.Values for DiscussionPollOptionOrderFieldAUTHORED_ORDEROrder poll options by the order that the poll author specified when creating the poll.VOTE_COUNTOrder poll options by the number of votes it has.DiscussionStateThe possible states of a discussion.Values for DiscussionStateCLOSEDA discussion that has been closed.OPENA discussion that is open.DiscussionStateReasonThe possible state reasons of a discussion.Values for DiscussionStateReasonDUPLICATEThe discussion is a duplicate of another.OUTDATEDThe discussion is no longer relevant.REOPENEDThe discussion was reopened.RESOLVEDThe discussion has been resolved.DismissReasonThe possible reasons that a Dependabot alert was dismissed.Values for DismissReasonFIX_STARTEDA fix has already been started.INACCURATEThis alert is inaccurate or incorrect.NOT_USEDVulnerable code is not actually used.NO_BANDWIDTHNo bandwidth to fix this.TOLERABLE_RISKRisk is tolerable to this project.EnterpriseAdministratorInvitationOrderFieldProperties by which enterprise administrator invitation connections can be ordered.Values for EnterpriseAdministratorInvitationOrderFieldCREATED_ATOrder enterprise administrator member invitations by creation time.EnterpriseAdministratorRoleThe possible administrator roles in an enterprise account.Values for EnterpriseAdministratorRoleBILLING_MANAGERRepresents a billing manager of the enterprise account.OWNERRepresents an owner of the enterprise account.UNAFFILIATEDUnaffiliated member of the enterprise account without an admin role.EnterpriseAllowPrivateRepositoryForkingPolicyValueThe possible values for the enterprise allow private repository forking policy value.Values for EnterpriseAllowPrivateRepositoryForkingPolicyValueENTERPRISE_ORGANIZATIONSMembers can fork a repository to an organization within this enterprise.ENTERPRISE_ORGANIZATIONS_USER_ACCOUNTSMembers can fork a repository to their enterprise-managed user account or an organization inside this enterprise.EVERYWHEREMembers can fork a repository to their user account or an organization, either inside or outside of this enterprise.SAME_ORGANIZATIONMembers can fork a repository only within the same organization (intra-org).SAME_ORGANIZATION_USER_ACCOUNTSMembers can fork a repository to their user account or within the same organization.USER_ACCOUNTSMembers can fork a repository to their user account.EnterpriseDefaultRepositoryPermissionSettingValueThe possible values for the enterprise base repository permission setting.Values for EnterpriseDefaultRepositoryPermissionSettingValueADMINOrganization members will be able to clone, pull, push, and add new collaborators to all organization repositories.NONEOrganization members will only be able to clone and pull public repositories.NO_POLICYOrganizations in the enterprise choose base repository permissions for their members.READOrganization members will be able to clone and pull all organization repositories.WRITEOrganization members will be able to clone, pull, and push all organization repositories.EnterpriseDisallowedMethodsSettingValueThe possible values for an enabled/no policy enterprise setting.Values for EnterpriseDisallowedMethodsSettingValueINSECUREThe setting prevents insecure 2FA methods from being used by members of the enterprise.NO_POLICYThere is no policy set for preventing insecure 2FA methods from being used by members of the enterprise.EnterpriseEnabledDisabledSettingValueThe possible values for an enabled/disabled enterprise setting.Values for EnterpriseEnabledDisabledSettingValueDISABLEDThe setting is disabled for organizations in the enterprise.ENABLEDThe setting is enabled for organizations in the enterprise.NO_POLICYThere is no policy set for organizations in the enterprise.EnterpriseEnabledSettingValueThe possible values for an enabled/no policy enterprise setting.Values for EnterpriseEnabledSettingValueENABLEDThe setting is enabled for organizations in the enterprise.NO_POLICYThere is no policy set for organizations in the enterprise.EnterpriseMemberInvitationOrderFieldProperties by which enterprise member invitation connections can be ordered.Values for EnterpriseMemberInvitationOrderFieldCREATED_ATOrder enterprise member invitations by creation time.EnterpriseMemberOrderFieldProperties by which enterprise member connections can be ordered.Values for EnterpriseMemberOrderFieldCREATED_ATOrder enterprise members by creation time.LOGINOrder enterprise members by login.EnterpriseMembersCanCreateRepositoriesSettingValueThe possible values for the enterprise members can create repositories setting.Values for EnterpriseMembersCanCreateRepositoriesSettingValueALLMembers will be able to create public and private repositories.DISABLEDMembers will not be able to create public or private repositories.NO_POLICYOrganization owners choose whether to allow members to create repositories.PRIVATEMembers will be able to create only private repositories.PUBLICMembers will be able to create only public repositories.EnterpriseMembersCanMakePurchasesSettingValueThe possible values for the members can make purchases setting.Values for EnterpriseMembersCanMakePurchasesSettingValueDISABLEDThe setting is disabled for organizations in the enterprise.ENABLEDThe setting is enabled for organizations in the enterprise.EnterpriseMembershipTypeThe possible values we have for filtering Platform::Objects::User#enterprises.Values for EnterpriseMembershipTypeADMINReturns all enterprises in which the user is an admin.ALLReturns all enterprises in which the user is a member, admin, or billing manager.BILLING_MANAGERReturns all enterprises in which the user is a billing manager.ORG_MEMBERSHIPReturns all enterprises in which the user is a member of an org that is owned by the enterprise.EnterpriseOrderFieldProperties by which enterprise connections can be ordered.Values for EnterpriseOrderFieldNAMEOrder enterprises by name.EnterpriseServerInstallationOrderFieldProperties by which Enterprise Server installation connections can be ordered.Values for EnterpriseServerInstallationOrderFieldCREATED_ATOrder Enterprise Server installations by creation time.CUSTOMER_NAMEOrder Enterprise Server installations by customer name.HOST_NAMEOrder Enterprise Server installations by host name.EnterpriseServerUserAccountEmailOrderFieldProperties by which Enterprise Server user account email connections can be ordered.Values for EnterpriseServerUserAccountEmailOrderFieldEMAILOrder emails by email.EnterpriseServerUserAccountOrderFieldProperties by which Enterprise Server user account connections can be ordered.Values for EnterpriseServerUserAccountOrderFieldLOGINOrder user accounts by login.REMOTE_CREATED_ATOrder user accounts by creation time on the Enterprise Server installation.EnterpriseServerUserAccountsUploadOrderFieldProperties by which Enterprise Server user accounts upload connections can be ordered.Values for EnterpriseServerUserAccountsUploadOrderFieldCREATED_ATOrder user accounts uploads by creation time.EnterpriseServerUserAccountsUploadSyncStateSynchronization state of the Enterprise Server user accounts upload.Values for EnterpriseServerUserAccountsUploadSyncStateFAILUREThe synchronization of the upload failed.PENDINGThe synchronization of the upload is pending.SUCCESSThe synchronization of the upload succeeded.EnterpriseUserAccountMembershipRoleThe possible roles for enterprise membership.Values for EnterpriseUserAccountMembershipRoleMEMBERThe user is a member of an organization in the enterprise.OWNERThe user is an owner of an organization in the enterprise.UNAFFILIATEDThe user is not an owner of the enterprise, and not a member or owner of any
organizations in the enterprise; only for EMU-enabled enterprises.EnterpriseUserDeploymentThe possible GitHub Enterprise deployments where this user can exist.Values for EnterpriseUserDeploymentCLOUDThe user is part of a GitHub Enterprise Cloud deployment.SERVERThe user is part of a GitHub Enterprise Server deployment.EnvironmentOrderFieldProperties by which environments connections can be ordered.Values for EnvironmentOrderFieldNAMEOrder environments by name.EnvironmentPinnedFilterFieldProperties by which environments connections can be ordered.Values for EnvironmentPinnedFilterFieldALLAll environments will be returned.NONEEnvironments exclude pinned will be returned.ONLYOnly pinned environment will be returned.FileViewedStateThe possible viewed states of a file .Values for FileViewedStateDISMISSEDThe file has new changes since last viewed.UNVIEWEDThe file has not been marked as viewed.VIEWEDThe file has been marked as viewed.FundingPlatformThe possible funding platforms for repository funding links.Values for FundingPlatformBUY_ME_A_COFFEEBuy Me a Coffee funding platform.COMMUNITY_BRIDGECommunity Bridge funding platform.CUSTOMCustom funding platform.GITHUBGitHub funding platform.ISSUEHUNTIssueHunt funding platform.KO_FIKo-fi funding platform.LFX_CROWDFUNDINGLFX Crowdfunding funding platform.LIBERAPAYLiberapay funding platform.OPEN_COLLECTIVEOpen Collective funding platform.PATREONPatreon funding platform.POLARPolar funding platform.THANKS_DEVthanks.dev funding platform.TIDELIFTTidelift funding platform.GistOrderFieldProperties by which gist connections can be ordered.Values for GistOrderFieldCREATED_ATOrder gists by creation time.PUSHED_ATOrder gists by push time.UPDATED_ATOrder gists by update time.GistPrivacyThe privacy of a Gist.Values for GistPrivacyALLGists that are public and secret.PUBLICPublic.SECRETSecret.GitSignatureStateThe state of a Git signature.Values for GitSignatureStateBAD_CERTThe signing certificate or its chain could not be verified.BAD_EMAILInvalid email used for signing.EXPIRED_KEYSigning key expired.GPGVERIFY_ERRORInternal error - the GPG verification service misbehaved.GPGVERIFY_UNAVAILABLEInternal error - the GPG verification service is unavailable at the moment.INVALIDInvalid signature.MALFORMED_SIGMalformed signature.NOT_SIGNING_KEYThe usage flags for the key that signed this don't allow signing.NO_USEREmail used for signing not known to GitHub.OCSP_ERRORValid signature, though certificate revocation check failed.OCSP_PENDINGValid signature, pending certificate revocation checking.OCSP_REVOKEDOne or more certificates in chain has been revoked.UNKNOWN_KEYKey used for signing not known to GitHub.UNKNOWN_SIG_TYPEUnknown signature type.UNSIGNEDUnsigned.UNVERIFIED_EMAILEmail used for signing unverified on GitHub.VALIDValid signature and verified by GitHub.IdentityProviderConfigurationStateThe possible states in which authentication can be configured with an identity provider.Values for IdentityProviderConfigurationStateCONFIGUREDAuthentication with an identity provider is configured but not enforced.ENFORCEDAuthentication with an identity provider is configured and enforced.UNCONFIGUREDAuthentication with an identity provider is not configured.IpAllowListEnabledSettingValueThe possible values for the IP allow list enabled setting.Values for IpAllowListEnabledSettingValueDISABLEDThe setting is disabled for the owner.ENABLEDThe setting is enabled for the owner.IpAllowListEntryOrderFieldProperties by which IP allow list entry connections can be ordered.Values for IpAllowListEntryOrderFieldALLOW_LIST_VALUEOrder IP allow list entries by the allow list value.CREATED_ATOrder IP allow list entries by creation time.IpAllowListForInstalledAppsEnabledSettingValueThe possible values for the IP allow list configuration for installed GitHub Apps setting.Values for IpAllowListForInstalledAppsEnabledSettingValueDISABLEDThe setting is disabled for the owner.ENABLEDThe setting is enabled for the owner.IssueClosedStateReasonThe possible state reasons of a closed issue.Values for IssueClosedStateReasonCOMPLETEDAn issue that has been closed as completed.DUPLICATEAn issue that has been closed as a duplicate.NOT_PLANNEDAn issue that has been closed as not planned.IssueCommentOrderFieldProperties by which issue comment connections can be ordered.Values for IssueCommentOrderFieldUPDATED_ATOrder issue comments by update time.IssueOrderFieldProperties by which issue connections can be ordered.Values for IssueOrderFieldCOMMENTSOrder issues by comment count.CREATED_ATOrder issues by creation time.UPDATED_ATOrder issues by update time.IssueStateThe possible states of an issue.Values for IssueStateCLOSEDAn issue that has been closed.OPENAn issue that is still open.IssueStateReasonThe possible state reasons of an issue.Values for IssueStateReasonCOMPLETEDAn issue that has been closed as completed.DUPLICATEAn issue that has been closed as a duplicate. To retrieve this value, set
(enableDuplicate: true) when querying the stateReason field.NOT_PLANNEDAn issue that has been closed as not planned.REOPENEDAn issue that has been reopened.IssueTimelineItemsItemTypeThe possible item types found in a timeline.Values for IssueTimelineItemsItemTypeADDED_TO_PROJECT_EVENTRepresents aadded_to_projectevent on a given issue or pull request.ASSIGNED_EVENTRepresents anassignedevent on any assignable object.CLOSED_EVENTRepresents aclosedevent on any Closable.COMMENT_DELETED_EVENTRepresents acomment_deletedevent on a given issue or pull request.CONNECTED_EVENTRepresents aconnectedevent on a given issue or pull request.CONVERTED_NOTE_TO_ISSUE_EVENTRepresents aconverted_note_to_issueevent on a given issue or pull request.CONVERTED_TO_DISCUSSION_EVENTRepresents aconverted_to_discussionevent on a given issue.CROSS_REFERENCED_EVENTRepresents a mention made by one issue or pull request to another.DEMILESTONED_EVENTRepresents ademilestonedevent on a given issue or pull request.DISCONNECTED_EVENTRepresents adisconnectedevent on a given issue or pull request.ISSUE_COMMENTRepresents a comment on an Issue.ISSUE_TYPE_ADDED_EVENTRepresents aissue_type_addedevent on a given issue.ISSUE_TYPE_CHANGED_EVENTRepresents aissue_type_changedevent on a given issue.ISSUE_TYPE_REMOVED_EVENTRepresents aissue_type_removedevent on a given issue.LABELED_EVENTRepresents alabeledevent on a given issue or pull request.LOCKED_EVENTRepresents alockedevent on a given issue or pull request.MARKED_AS_DUPLICATE_EVENTRepresents amarked_as_duplicateevent on a given issue or pull request.MENTIONED_EVENTRepresents amentionedevent on a given issue or pull request.MILESTONED_EVENTRepresents amilestonedevent on a given issue or pull request.MOVED_COLUMNS_IN_PROJECT_EVENTRepresents amoved_columns_in_projectevent on a given issue or pull request.PARENT_ISSUE_ADDED_EVENTRepresents aparent_issue_addedevent on a given issue.PARENT_ISSUE_REMOVED_EVENTRepresents aparent_issue_removedevent on a given issue.PINNED_EVENTRepresents apinnedevent on a given issue or pull request.REFERENCED_EVENTRepresents areferencedevent on a given ReferencedSubject.REMOVED_FROM_PROJECT_EVENTRepresents aremoved_from_projectevent on a given issue or pull request.RENAMED_TITLE_EVENTRepresents arenamedevent on a given issue or pull request.REOPENED_EVENTRepresents areopenedevent on any Closable.SUBSCRIBED_EVENTRepresents asubscribedevent on a given Subscribable.SUB_ISSUE_ADDED_EVENTRepresents asub_issue_addedevent on a given issue.SUB_ISSUE_REMOVED_EVENTRepresents asub_issue_removedevent on a given issue.TRANSFERRED_EVENTRepresents atransferredevent on a given issue or pull request.UNASSIGNED_EVENTRepresents anunassignedevent on any assignable object.UNLABELED_EVENTRepresents anunlabeledevent on a given issue or pull request.UNLOCKED_EVENTRepresents anunlockedevent on a given issue or pull request.UNMARKED_AS_DUPLICATE_EVENTRepresents anunmarked_as_duplicateevent on a given issue or pull request.UNPINNED_EVENTRepresents anunpinnedevent on a given issue or pull request.UNSUBSCRIBED_EVENTRepresents anunsubscribedevent on a given Subscribable.USER_BLOCKED_EVENTRepresents auser_blockedevent on a given user.IssueTypeColorThe possible color for an issue type.Values for IssueTypeColorBLUEblue.GRAYgray.GREENgreen.ORANGEorange.PINKpink.PURPLEpurple.REDred.YELLOWyellow.IssueTypeOrderFieldProperties by which issue type connections can be ordered.Values for IssueTypeOrderFieldCREATED_ATOrder issue types by creation time.NAMEOrder issue types by name.LabelOrderFieldProperties by which label connections can be ordered.Values for LabelOrderFieldCREATED_ATOrder labels by creation time.NAMEOrder labels by name.LanguageOrderFieldProperties by which language connections can be ordered.Values for LanguageOrderFieldSIZEOrder languages by the size of all files containing the language.LockReasonThe possible reasons that an issue or pull request was locked.Values for LockReasonOFF_TOPICThe issue or pull request was locked because the conversation was off-topic.RESOLVEDThe issue or pull request was locked because the conversation was resolved.SPAMThe issue or pull request was locked because the conversation was spam.TOO_HEATEDThe issue or pull request was locked because the conversation was too heated.MannequinOrderFieldProperties by which mannequins can be ordered.Values for MannequinOrderFieldCREATED_ATOrder mannequins why when they were created.LOGINOrder mannequins alphabetically by their source login.MergeCommitMessageThe possible default commit messages for merges.Values for MergeCommitMessageBLANKDefault to a blank commit message.PR_BODYDefault to the pull request's body.PR_TITLEDefault to the pull request's title.MergeCommitTitleThe possible default commit titles for merges.Values for MergeCommitTitleMERGE_MESSAGEDefault to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).PR_TITLEDefault to the pull request's title.MergeQueueEntryStateThe possible states for a merge queue entry.Values for MergeQueueEntryStateAWAITING_CHECKSThe entry is currently waiting for checks to pass.LOCKEDThe entry is currently locked.MERGEABLEThe entry is currently mergeable.QUEUEDThe entry is currently queued.UNMERGEABLEThe entry is currently unmergeable.MergeQueueGroupingStrategyWhen set to ALLGREEN, the merge commit created by merge queue for each PR in the
group must pass all required checks to merge. When set to HEADGREEN, only the
commit at the head of the merge group, i.e. the commit containing changes from
all of the PRs in the group, must pass its required checks to merge.Values for MergeQueueGroupingStrategyALLGREENThe merge commit created by merge queue for each PR in the group must pass all required checks to merge.HEADGREENOnly the commit at the head of the merge group must pass its required checks to merge.MergeQueueMergeMethodMethod to use when merging changes from queued pull requests.Values for MergeQueueMergeMethodMERGEMerge commit.REBASERebase and merge.SQUASHSquash and merge.MergeQueueMergingStrategyThe possible merging strategies for a merge queue.Values for MergeQueueMergingStrategyALLGREENEntries only allowed to merge if they are passing.HEADGREENFailing Entires are allowed to merge if they are with a passing entry.MergeStateStatusDetailed status information about a pull request merge.Values for MergeStateStatusBEHINDThe head ref is out of date.BLOCKEDThe merge is blocked.CLEANMergeable and passing commit status.DIRTYThe merge commit cannot be cleanly created.DRAFTThe merge is blocked due to the pull request being a draft.HAS_HOOKSMergeable with passing commit status and pre-receive hooks.UNKNOWNThe state cannot currently be determined.UNSTABLEMergeable with non-passing commit status.MergeableStateWhether or not a PullRequest can be merged.Values for MergeableStateCONFLICTINGThe pull request cannot be merged due to merge conflicts.MERGEABLEThe pull request can be merged.UNKNOWNThe mergeability of the pull request is still being calculated.MigrationSourceTypeRepresents the different GitHub Enterprise Importer (GEI) migration sources.Values for MigrationSourceTypeAZURE_DEVOPSAn Azure DevOps migration source.BITBUCKET_SERVERA Bitbucket Server migration source.GITHUB_ARCHIVEA GitHub Migration API source.MigrationStateThe GitHub Enterprise Importer (GEI) migration state.Values for MigrationStateFAILEDThe migration has failed.FAILED_VALIDATIONThe migration has invalid credentials.IN_PROGRESSThe migration is in progress.NOT_STARTEDThe migration has not started.PENDING_VALIDATIONThe migration needs to have its credentials validated.QUEUEDThe migration has been queued.SUCCEEDEDThe migration has succeeded.MilestoneOrderFieldProperties by which milestone connections can be ordered.Values for MilestoneOrderFieldCREATED_ATOrder milestones by when they were created.DUE_DATEOrder milestones by when they are due.NUMBEROrder milestones by their number.UPDATED_ATOrder milestones by when they were last updated.MilestoneStateThe possible states of a milestone.Values for MilestoneStateCLOSEDA milestone that has been closed.OPENA milestone that is still open.NotificationRestrictionSettingValueThe possible values for the notification restriction setting.Values for NotificationRestrictionSettingValueDISABLEDThe setting is disabled for the owner.ENABLEDThe setting is enabled for the owner.OIDCProviderTypeThe OIDC identity provider type.Values for OIDCProviderTypeAADAzure Active Directory.OauthApplicationCreateAuditEntryStateThe state of an OAuth application when it was created.Values for OauthApplicationCreateAuditEntryStateACTIVEThe OAuth application was active and allowed to have OAuth Accesses.PENDING_DELETIONThe OAuth application was in the process of being deleted.SUSPENDEDThe OAuth application was suspended from generating OAuth Accesses due to abuse or security concerns.OperationTypeThe corresponding operation type for the action.Values for OperationTypeACCESSAn existing resource was accessed.AUTHENTICATIONA resource performed an authentication event.CREATEA new resource was created.MODIFYAn existing resource was modified.REMOVEAn existing resource was removed.RESTOREAn existing resource was restored.TRANSFERAn existing resource was transferred between multiple resources.OrderDirectionPossible directions in which to order a list of items when provided an orderBy argument.Values for OrderDirectionASCSpecifies an ascending order for a given orderBy argument.DESCSpecifies a descending order for a given orderBy argument.OrgAddMemberAuditEntryPermissionThe permissions available to members on an Organization.Values for OrgAddMemberAuditEntryPermissionADMINCan read, clone, push, and add collaborators to repositories.READCan read and clone repositories.OrgCreateAuditEntryBillingPlanThe billing plans available for organizations.Values for OrgCreateAuditEntryBillingPlanBUSINESSTeam Plan.BUSINESS_PLUSEnterprise Cloud Plan.FREEFree Plan.TIERED_PER_SEATTiered Per Seat Plan.UNLIMITEDLegacy Unlimited Plan.OrgEnterpriseOwnerOrderFieldProperties by which enterprise owners can be ordered.Values for OrgEnterpriseOwnerOrderFieldLOGINOrder enterprise owners by login.OrgRemoveBillingManagerAuditEntryReasonThe reason a billing manager was removed from an Organization.Values for OrgRemoveBillingManagerAuditEntryReasonSAML_EXTERNAL_IDENTITY_MISSINGSAML external identity missing.SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITYSAML SSO enforcement requires an external identity.TWO_FACTOR_REQUIREMENT_NON_COMPLIANCEThe organization required 2FA of its billing managers and this user did not have 2FA enabled.OrgRemoveMemberAuditEntryMembershipTypeThe type of membership a user has with an Organization.Values for OrgRemoveMemberAuditEntryMembershipTypeADMINOrganization owners have full access and can change several settings,
including the names of repositories that belong to the Organization and Owners
team membership. In addition, organization owners can delete the organization
and all of its repositories.BILLING_MANAGERA billing manager is a user who manages the billing settings for the Organization, such as updating payment information.DIRECT_MEMBERA direct member is a user that is a member of the Organization.OUTSIDE_COLLABORATORAn outside collaborator is a person who isn't explicitly a member of the
Organization, but who has Read, Write, or Admin permissions to one or more
repositories in the organization.SUSPENDEDA suspended member.UNAFFILIATEDAn unaffiliated collaborator is a person who is not a member of the
Organization and does not have access to any repositories in the Organization.OrgRemoveMemberAuditEntryReasonThe reason a member was removed from an Organization.Values for OrgRemoveMemberAuditEntryReasonSAML_EXTERNAL_IDENTITY_MISSINGSAML external identity missing.SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITYSAML SSO enforcement requires an external identity.TWO_FACTOR_ACCOUNT_RECOVERYUser was removed from organization during account recovery.TWO_FACTOR_REQUIREMENT_NON_COMPLIANCEThe organization required 2FA of its billing managers and this user did not have 2FA enabled.USER_ACCOUNT_DELETEDUser account has been deleted.OrgRemoveOutsideCollaboratorAuditEntryMembershipTypeThe type of membership a user has with an Organization.Values for OrgRemoveOutsideCollaboratorAuditEntryMembershipTypeBILLING_MANAGERA billing manager is a user who manages the billing settings for the Organization, such as updating payment information.OUTSIDE_COLLABORATORAn outside collaborator is a person who isn't explicitly a member of the
Organization, but who has Read, Write, or Admin permissions to one or more
repositories in the organization.UNAFFILIATEDAn unaffiliated collaborator is a person who is not a member of the
Organization and does not have access to any repositories in the organization.OrgRemoveOutsideCollaboratorAuditEntryReasonThe reason an outside collaborator was removed from an Organization.Values for OrgRemoveOutsideCollaboratorAuditEntryReasonSAML_EXTERNAL_IDENTITY_MISSINGSAML external identity missing.TWO_FACTOR_REQUIREMENT_NON_COMPLIANCEThe organization required 2FA of its billing managers and this user did not have 2FA enabled.OrgUpdateDefaultRepositoryPermissionAuditEntryPermissionThe default permission a repository can have in an Organization.Values for OrgUpdateDefaultRepositoryPermissionAuditEntryPermissionADMINCan read, clone, push, and add collaborators to repositories.NONENo default permission value.READCan read and clone repositories.WRITECan read, clone and push to repositories.OrgUpdateMemberAuditEntryPermissionThe permissions available to members on an Organization.Values for OrgUpdateMemberAuditEntryPermissionADMINCan read, clone, push, and add collaborators to repositories.READCan read and clone repositories.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityThe permissions available for repository creation on an Organization.Values for OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibilityALLAll organization members are restricted from creating any repositories.INTERNALAll organization members are restricted from creating internal repositories.NONEAll organization members are allowed to create any repositories.PRIVATEAll organization members are restricted from creating private repositories.PRIVATE_INTERNALAll organization members are restricted from creating private or internal repositories.PUBLICAll organization members are restricted from creating public repositories.PUBLIC_INTERNALAll organization members are restricted from creating public or internal repositories.PUBLIC_PRIVATEAll organization members are restricted from creating public or private repositories.OrganizationInvitationRoleThe possible organization invitation roles.Values for OrganizationInvitationRoleADMINThe user is invited to be an admin of the organization.BILLING_MANAGERThe user is invited to be a billing manager of the organization.DIRECT_MEMBERThe user is invited to be a direct member of the organization.REINSTATEThe user's previous role will be reinstated.OrganizationInvitationSourceThe possible organization invitation sources.Values for OrganizationInvitationSourceMEMBERThe invitation was created from the web interface or from API.SCIMThe invitation was created from SCIM.UNKNOWNThe invitation was sent before this feature was added.OrganizationInvitationTypeThe possible organization invitation types.Values for OrganizationInvitationTypeEMAILThe invitation was to an email address.USERThe invitation was to an existing user.OrganizationMemberRoleThe possible roles within an organization for its members.Values for OrganizationMemberRoleADMINThe user is an administrator of the organization.MEMBERThe user is a member of the organization.OrganizationMembersCanCreateRepositoriesSettingValueThe possible values for the members can create repositories setting on an organization.Values for OrganizationMembersCanCreateRepositoriesSettingValueALLMembers will be able to create public and private repositories.DISABLEDMembers will not be able to create public or private repositories.INTERNALMembers will be able to create only internal repositories.PRIVATEMembers will be able to create only private repositories.OrganizationMigrationStateThe Octoshift Organization migration state.Values for OrganizationMigrationStateFAILEDThe Octoshift migration has failed.FAILED_VALIDATIONThe Octoshift migration has invalid credentials.IN_PROGRESSThe Octoshift migration is in progress.NOT_STARTEDThe Octoshift migration has not started.PENDING_VALIDATIONThe Octoshift migration needs to have its credentials validated.POST_REPO_MIGRATIONThe Octoshift migration is performing post repository migrations.PRE_REPO_MIGRATIONThe Octoshift migration is performing pre repository migrations.QUEUEDThe Octoshift migration has been queued.REPO_MIGRATIONThe Octoshift org migration is performing repository migrations.SUCCEEDEDThe Octoshift migration has succeeded.OrganizationOrderFieldProperties by which organization connections can be ordered.Values for OrganizationOrderFieldCREATED_ATOrder organizations by creation time.LOGINOrder organizations by login.PackageFileOrderFieldProperties by which package file connections can be ordered.Values for PackageFileOrderFieldCREATED_ATOrder package files by creation time.PackageOrderFieldProperties by which package connections can be ordered.Values for PackageOrderFieldCREATED_ATOrder packages by creation time.PackageTypeThe possible types of a package.Values for PackageTypeDEBIANA debian package.DOCKERA docker image.MAVENA maven package.NPMAn npm package.NUGETA nuget package.PYPIA python package.RUBYGEMSA rubygems package.PackageVersionOrderFieldProperties by which package version connections can be ordered.Values for PackageVersionOrderFieldCREATED_ATOrder package versions by creation time.PatchStatusThe possible types of patch statuses.Values for PatchStatusADDEDThe file was added. Git status 'A'.CHANGEDThe file's type was changed. Git status 'T'.COPIEDThe file was copied. Git status 'C'.DELETEDThe file was deleted. Git status 'D'.MODIFIEDThe file's contents were changed. Git status 'M'.RENAMEDThe file was renamed. Git status 'R'.PinnableItemTypeRepresents items that can be pinned to a profile page or dashboard.Values for PinnableItemTypeGISTA gist.ISSUEAn issue.ORGANIZATIONAn organization.PROJECTA project.PULL_REQUESTA pull request.REPOSITORYA repository.TEAMA team.USERA user.PinnedDiscussionGradientPreconfigured gradients that may be used to style discussions pinned within a repository.Values for PinnedDiscussionGradientBLUE_MINTA gradient of blue to mint.BLUE_PURPLEA gradient of blue to purple.PINK_BLUEA gradient of pink to blue.PURPLE_CORALA gradient of purple to coral.RED_ORANGEA gradient of red to orange.PinnedDiscussionPatternPreconfigured background patterns that may be used to style discussions pinned within a repository.Values for PinnedDiscussionPatternCHEVRON_UPAn upward-facing chevron pattern.DOTA hollow dot pattern.DOT_FILLA solid dot pattern.HEART_FILLA heart pattern.PLUSA plus sign pattern.ZAPA lightning bolt pattern.PinnedEnvironmentOrderFieldProperties by which pinned environments connections can be ordered.Values for PinnedEnvironmentOrderFieldPOSITIONOrder pinned environments by position.ProjectCardArchivedStateThe possible archived states of a project card.Values for ProjectCardArchivedStateARCHIVEDA project card that is archived.NOT_ARCHIVEDA project card that is not archived.ProjectCardStateVarious content states of a ProjectCard.Values for ProjectCardStateCONTENT_ONLYThe card has content only.NOTE_ONLYThe card has a note only.REDACTEDThe card is redacted.ProjectColumnPurposeThe semantic purpose of the column - todo, in progress, or done.Values for ProjectColumnPurposeDONEThe column contains cards which are complete.IN_PROGRESSThe column contains cards which are currently being worked on.TODOThe column contains cards still to be worked on.ProjectOrderFieldProperties by which project connections can be ordered.Values for ProjectOrderFieldCREATED_ATOrder projects by creation time.NAMEOrder projects by name.UPDATED_ATOrder projects by update time.ProjectStateState of the project; eitheropenor 'closed'.Values for ProjectStateCLOSEDThe project is closed.OPENThe project is open.ProjectTemplateGitHub-provided templates for Projects.Values for ProjectTemplateAUTOMATED_KANBAN_V2Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns.AUTOMATED_REVIEWS_KANBANCreate a board with triggers to automatically move cards across columns with review automation.BASIC_KANBANCreate a board with columns for To do, In progress and Done.BUG_TRIAGECreate a board to triage and prioritize bugs with To do, priority, and Done columns.ProjectV2CustomFieldTypeThe type of a project field.Values for ProjectV2CustomFieldTypeDATEDate.ITERATIONIteration.NUMBERNumber.SINGLE_SELECTSingle Select.TEXTText.ProjectV2FieldOrderFieldProperties by which project v2 field connections can be ordered.Values for ProjectV2FieldOrderFieldCREATED_ATOrder project v2 fields by creation time.NAMEOrder project v2 fields by name.POSITIONOrder project v2 fields by position.ProjectV2FieldTypeThe type of a project field.Values for ProjectV2FieldTypeASSIGNEESAssignees.DATEDate.ISSUE_TYPEIssue type.ITERATIONIteration.LABELSLabels.LINKED_PULL_REQUESTSLinked Pull Requests.MILESTONEMilestone.NUMBERNumber.PARENT_ISSUEParent issue.REPOSITORYRepository.REVIEWERSReviewers.SINGLE_SELECTSingle Select.SUB_ISSUES_PROGRESSSub-issues progress.TEXTText.TITLETitle.TRACKED_BYTracked by.TRACKSTracks.ProjectV2ItemFieldValueOrderFieldProperties by which project v2 item field value connections can be ordered.Values for ProjectV2ItemFieldValueOrderFieldPOSITIONOrder project v2 item field values by the their position in the project.ProjectV2ItemOrderFieldProperties by which project v2 item connections can be ordered.Values for ProjectV2ItemOrderFieldPOSITIONOrder project v2 items by the their position in the project.ProjectV2ItemTypeThe type of a project item.Values for ProjectV2ItemTypeDRAFT_ISSUEDraft Issue.ISSUEIssue.PULL_REQUESTPull Request.REDACTEDRedacted Item.ProjectV2OrderFieldProperties by which projects can be ordered.Values for ProjectV2OrderFieldCREATED_ATThe project's date and time of creation.NUMBERThe project's number.TITLEThe project's title.UPDATED_ATThe project's date and time of update.ProjectV2PermissionLevelThe possible roles of a collaborator on a project.Values for ProjectV2PermissionLevelADMINThe collaborator can view, edit, and maange the settings of the project.READThe collaborator can view the project.WRITEThe collaborator can view and edit the project.ProjectV2RolesThe possible roles of a collaborator on a project.Values for ProjectV2RolesADMINThe collaborator can view, edit, and maange the settings of the project.NONEThe collaborator has no direct access to the project.READERThe collaborator can view the project.WRITERThe collaborator can view and edit the project.ProjectV2SingleSelectFieldOptionColorThe display color of a single-select field option.Values for ProjectV2SingleSelectFieldOptionColorBLUEBLUE.GRAYGRAY.GREENGREEN.ORANGEORANGE.PINKPINK.PURPLEPURPLE.REDRED.YELLOWYELLOW.ProjectV2StateThe possible states of a project v2.Values for ProjectV2StateCLOSEDA project v2 that has been closed.OPENA project v2 that is still open.ProjectV2StatusUpdateOrderFieldProperties by which project v2 status updates can be ordered.Values for ProjectV2StatusUpdateOrderFieldCREATED_ATAllows chronological ordering of project v2 status updates.ProjectV2StatusUpdateStatusThe possible statuses of a project v2.Values for ProjectV2StatusUpdateStatusAT_RISKA project v2 that is at risk and encountering some challenges.COMPLETEA project v2 that is complete.INACTIVEA project v2 that is inactive.OFF_TRACKA project v2 that is off track and needs attention.ON_TRACKA project v2 that is on track with no risks.ProjectV2ViewLayoutThe layout of a project v2 view.Values for ProjectV2ViewLayoutBOARD_LAYOUTBoard layout.ROADMAP_LAYOUTRoadmap layout.TABLE_LAYOUTTable layout.ProjectV2ViewOrderFieldProperties by which project v2 view connections can be ordered.Values for ProjectV2ViewOrderFieldCREATED_ATOrder project v2 views by creation time.NAMEOrder project v2 views by name.POSITIONOrder project v2 views by position.ProjectV2WorkflowsOrderFieldProperties by which project workflows can be ordered.Values for ProjectV2WorkflowsOrderFieldCREATED_ATThe date and time of the workflow creation.NAMEThe name of the workflow.NUMBERThe number of the workflow.UPDATED_ATThe date and time of the workflow update.PullRequestAllowedMergeMethodsArray of allowed merge methods. Allowed values include merge, squash, and rebase. At least one option must be enabled.Values for PullRequestAllowedMergeMethodsMERGEAdd all commits from the head branch to the base branch with a merge commit.REBASEAdd all commits from the head branch onto the base branch individually.SQUASHCombine all commits from the head branch into a single commit in the base branch.PullRequestBranchUpdateMethodThe possible methods for updating a pull request's head branch with the base branch.Values for PullRequestBranchUpdateMethodMERGEUpdate branch via merge.REBASEUpdate branch via rebase.PullRequestMergeMethodRepresents available types of methods to use when merging a pull request.Values for PullRequestMergeMethodMERGEAdd all commits from the head branch to the base branch with a merge commit.REBASEAdd all commits from the head branch onto the base branch individually.SQUASHCombine all commits from the head branch into a single commit in the base branch.PullRequestOrderFieldProperties by which pull_requests connections can be ordered.Values for PullRequestOrderFieldCREATED_ATOrder pull_requests by creation time.UPDATED_ATOrder pull_requests by update time.PullRequestReviewCommentStateThe possible states of a pull request review comment.Values for PullRequestReviewCommentStatePENDINGA comment that is part of a pending review.SUBMITTEDA comment that is part of a submitted review.PullRequestReviewDecisionThe review status of a pull request.Values for PullRequestReviewDecisionAPPROVEDThe pull request has received an approving review.CHANGES_REQUESTEDChanges have been requested on the pull request.REVIEW_REQUIREDA review is required before the pull request can be merged.PullRequestReviewEventThe possible events to perform on a pull request review.Values for PullRequestReviewEventAPPROVESubmit feedback and approve merging these changes.COMMENTSubmit general feedback without explicit approval.DISMISSDismiss review so it now longer effects merging.REQUEST_CHANGESSubmit feedback that must be addressed before merging.PullRequestReviewStateThe possible states of a pull request review.Values for PullRequestReviewStateAPPROVEDA review allowing the pull request to merge.CHANGES_REQUESTEDA review blocking the pull request from merging.COMMENTEDAn informational review.DISMISSEDA review that has been dismissed.PENDINGA review that has not yet been submitted.PullRequestReviewThreadSubjectTypeThe possible subject types of a pull request review comment.Values for PullRequestReviewThreadSubjectTypeFILEA comment that has been made against the file of a pull request.LINEA comment that has been made against the line of a pull request.PullRequestStateThe possible states of a pull request.Values for PullRequestStateCLOSEDA pull request that has been closed without being merged.MERGEDA pull request that has been closed by being merged.OPENA pull request that is still open.PullRequestTimelineItemsItemTypeThe possible item types found in a timeline.Values for PullRequestTimelineItemsItemTypeADDED_TO_MERGE_QUEUE_EVENTRepresents anadded_to_merge_queueevent on a given pull request.ADDED_TO_PROJECT_EVENTRepresents aadded_to_projectevent on a given issue or pull request.ASSIGNED_EVENTRepresents anassignedevent on any assignable object.AUTOMATIC_BASE_CHANGE_FAILED_EVENTRepresents aautomatic_base_change_failedevent on a given pull request.AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENTRepresents aautomatic_base_change_succeededevent on a given pull request.AUTO_MERGE_DISABLED_EVENTRepresents aauto_merge_disabledevent on a given pull request.AUTO_MERGE_ENABLED_EVENTRepresents aauto_merge_enabledevent on a given pull request.AUTO_REBASE_ENABLED_EVENTRepresents aauto_rebase_enabledevent on a given pull request.AUTO_SQUASH_ENABLED_EVENTRepresents aauto_squash_enabledevent on a given pull request.BASE_REF_CHANGED_EVENTRepresents abase_ref_changedevent on a given issue or pull request.BASE_REF_DELETED_EVENTRepresents abase_ref_deletedevent on a given pull request.BASE_REF_FORCE_PUSHED_EVENTRepresents abase_ref_force_pushedevent on a given pull request.CLOSED_EVENTRepresents aclosedevent on any Closable.COMMENT_DELETED_EVENTRepresents acomment_deletedevent on a given issue or pull request.CONNECTED_EVENTRepresents aconnectedevent on a given issue or pull request.CONVERTED_NOTE_TO_ISSUE_EVENTRepresents aconverted_note_to_issueevent on a given issue or pull request.CONVERTED_TO_DISCUSSION_EVENTRepresents aconverted_to_discussionevent on a given issue.CONVERT_TO_DRAFT_EVENTRepresents aconvert_to_draftevent on a given pull request.CROSS_REFERENCED_EVENTRepresents a mention made by one issue or pull request to another.DEMILESTONED_EVENTRepresents ademilestonedevent on a given issue or pull request.DEPLOYED_EVENTRepresents adeployedevent on a given pull request.DEPLOYMENT_ENVIRONMENT_CHANGED_EVENTRepresents adeployment_environment_changedevent on a given pull request.DISCONNECTED_EVENTRepresents adisconnectedevent on a given issue or pull request.HEAD_REF_DELETED_EVENTRepresents ahead_ref_deletedevent on a given pull request.HEAD_REF_FORCE_PUSHED_EVENTRepresents ahead_ref_force_pushedevent on a given pull request.HEAD_REF_RESTORED_EVENTRepresents ahead_ref_restoredevent on a given pull request.ISSUE_COMMENTRepresents a comment on an Issue.ISSUE_TYPE_ADDED_EVENTRepresents aissue_type_addedevent on a given issue.ISSUE_TYPE_CHANGED_EVENTRepresents aissue_type_changedevent on a given issue.ISSUE_TYPE_REMOVED_EVENTRepresents aissue_type_removedevent on a given issue.LABELED_EVENTRepresents alabeledevent on a given issue or pull request.LOCKED_EVENTRepresents alockedevent on a given issue or pull request.MARKED_AS_DUPLICATE_EVENTRepresents amarked_as_duplicateevent on a given issue or pull request.MENTIONED_EVENTRepresents amentionedevent on a given issue or pull request.MERGED_EVENTRepresents amergedevent on a given pull request.MILESTONED_EVENTRepresents amilestonedevent on a given issue or pull request.MOVED_COLUMNS_IN_PROJECT_EVENTRepresents amoved_columns_in_projectevent on a given issue or pull request.PARENT_ISSUE_ADDED_EVENTRepresents aparent_issue_addedevent on a given issue.PARENT_ISSUE_REMOVED_EVENTRepresents aparent_issue_removedevent on a given issue.PINNED_EVENTRepresents apinnedevent on a given issue or pull request.PULL_REQUEST_COMMITRepresents a Git commit part of a pull request.PULL_REQUEST_COMMIT_COMMENT_THREADRepresents a commit comment thread part of a pull request.PULL_REQUEST_REVIEWA review object for a given pull request.PULL_REQUEST_REVIEW_THREADA threaded list of comments for a given pull request.PULL_REQUEST_REVISION_MARKERRepresents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.READY_FOR_REVIEW_EVENTRepresents aready_for_reviewevent on a given pull request.REFERENCED_EVENTRepresents areferencedevent on a given ReferencedSubject.REMOVED_FROM_MERGE_QUEUE_EVENTRepresents aremoved_from_merge_queueevent on a given pull request.REMOVED_FROM_PROJECT_EVENTRepresents aremoved_from_projectevent on a given issue or pull request.RENAMED_TITLE_EVENTRepresents arenamedevent on a given issue or pull request.REOPENED_EVENTRepresents areopenedevent on any Closable.REVIEW_DISMISSED_EVENTRepresents areview_dismissedevent on a given issue or pull request.REVIEW_REQUESTED_EVENTRepresents anreview_requestedevent on a given pull request.REVIEW_REQUEST_REMOVED_EVENTRepresents anreview_request_removedevent on a given pull request.SUBSCRIBED_EVENTRepresents asubscribedevent on a given Subscribable.SUB_ISSUE_ADDED_EVENTRepresents asub_issue_addedevent on a given issue.SUB_ISSUE_REMOVED_EVENTRepresents asub_issue_removedevent on a given issue.TRANSFERRED_EVENTRepresents atransferredevent on a given issue or pull request.UNASSIGNED_EVENTRepresents anunassignedevent on any assignable object.UNLABELED_EVENTRepresents anunlabeledevent on a given issue or pull request.UNLOCKED_EVENTRepresents anunlockedevent on a given issue or pull request.UNMARKED_AS_DUPLICATE_EVENTRepresents anunmarked_as_duplicateevent on a given issue or pull request.UNPINNED_EVENTRepresents anunpinnedevent on a given issue or pull request.UNSUBSCRIBED_EVENTRepresents anunsubscribedevent on a given Subscribable.USER_BLOCKED_EVENTRepresents auser_blockedevent on a given user.PullRequestUpdateStateThe possible target states when updating a pull request.Values for PullRequestUpdateStateCLOSEDA pull request that has been closed without being merged.OPENA pull request that is still open.ReactionContentEmojis that can be attached to Issues, Pull Requests and Comments.Values for ReactionContentCONFUSEDRepresents the :confused: emoji.EYESRepresents the :eyes: emoji.HEARTRepresents the :heart: emoji.HOORAYRepresents the :hooray: emoji.LAUGHRepresents the :laugh: emoji.ROCKETRepresents the :rocket: emoji.THUMBS_DOWNRepresents the :-1: emoji.THUMBS_UPRepresents the :+1: emoji.ReactionOrderFieldA list of fields that reactions can be ordered by.Values for ReactionOrderFieldCREATED_ATAllows ordering a list of reactions by when they were created.RefOrderFieldProperties by which ref connections can be ordered.Values for RefOrderFieldALPHABETICALOrder refs by their alphanumeric name.TAG_COMMIT_DATEOrder refs by underlying commit date if the ref prefix is refs/tags/.ReleaseOrderFieldProperties by which release connections can be ordered.Values for ReleaseOrderFieldCREATED_ATOrder releases by creation time.NAMEOrder releases alphabetically by name.RepoAccessAuditEntryVisibilityThe privacy of a repository.Values for RepoAccessAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepoAddMemberAuditEntryVisibilityThe privacy of a repository.Values for RepoAddMemberAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepoArchivedAuditEntryVisibilityThe privacy of a repository.Values for RepoArchivedAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepoChangeMergeSettingAuditEntryMergeTypeThe merge options available for pull requests to this repository.Values for RepoChangeMergeSettingAuditEntryMergeTypeMERGEThe pull request is added to the base branch in a merge commit.REBASECommits from the pull request are added onto the base branch individually without a merge commit.SQUASHThe pull request's commits are squashed into a single commit before they are merged to the base branch.RepoCreateAuditEntryVisibilityThe privacy of a repository.Values for RepoCreateAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepoDestroyAuditEntryVisibilityThe privacy of a repository.Values for RepoDestroyAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepoRemoveMemberAuditEntryVisibilityThe privacy of a repository.Values for RepoRemoveMemberAuditEntryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.ReportedContentClassifiersThe reasons a piece of content can be reported or minimized.Values for ReportedContentClassifiersABUSEAn abusive or harassing piece of content.DUPLICATEA duplicated piece of content.OFF_TOPICAn irrelevant piece of content.OUTDATEDAn outdated piece of content.RESOLVEDThe content has been resolved.SPAMA spammy piece of content.RepositoryAffiliationThe affiliation of a user to a repository.Values for RepositoryAffiliationCOLLABORATORRepositories that the user has been added to as a collaborator.ORGANIZATION_MEMBERRepositories that the user has access to through being a member of an
organization. This includes every repository on every team that the user is on.OWNERRepositories that are owned by the authenticated user.RepositoryContributionTypeThe reason a repository is listed as 'contributed'.Values for RepositoryContributionTypeCOMMITCreated a commit.ISSUECreated an issue.PULL_REQUESTCreated a pull request.PULL_REQUEST_REVIEWReviewed a pull request.REPOSITORYCreated the repository.RepositoryInteractionLimitA repository interaction limit.Values for RepositoryInteractionLimitCOLLABORATORS_ONLYUsers that are not collaborators will not be able to interact with the repository.CONTRIBUTORS_ONLYUsers that have not previously committed to a repository’s default branch will be unable to interact with the repository.EXISTING_USERSUsers that have recently created their account will be unable to interact with the repository.NO_LIMITNo interaction limits are enabled.RepositoryInteractionLimitExpiryThe length for a repository interaction limit to be enabled for.Values for RepositoryInteractionLimitExpiryONE_DAYThe interaction limit will expire after 1 day.ONE_MONTHThe interaction limit will expire after 1 month.ONE_WEEKThe interaction limit will expire after 1 week.SIX_MONTHSThe interaction limit will expire after 6 months.THREE_DAYSThe interaction limit will expire after 3 days.RepositoryInteractionLimitOriginIndicates where an interaction limit is configured.Values for RepositoryInteractionLimitOriginORGANIZATIONA limit that is configured at the organization level.REPOSITORYA limit that is configured at the repository level.USERA limit that is configured at the user-wide level.RepositoryInvitationOrderFieldProperties by which repository invitation connections can be ordered.Values for RepositoryInvitationOrderFieldCREATED_ATOrder repository invitations by creation time.RepositoryLockReasonThe possible reasons a given repository could be in a locked state.Values for RepositoryLockReasonBILLINGThe repository is locked due to a billing related reason.MIGRATINGThe repository is locked due to a migration.MOVINGThe repository is locked due to a move.RENAMEThe repository is locked due to a rename.TRADE_RESTRICTIONThe repository is locked due to a trade controls related reason.TRANSFERRING_OWNERSHIPThe repository is locked due to an ownership transfer.RepositoryMigrationOrderDirectionPossible directions in which to order a list of repository migrations when provided an orderBy argument.Values for RepositoryMigrationOrderDirectionASCSpecifies an ascending order for a given orderBy argument.DESCSpecifies a descending order for a given orderBy argument.RepositoryMigrationOrderFieldProperties by which repository migrations can be ordered.Values for RepositoryMigrationOrderFieldCREATED_ATOrder mannequins why when they were created.RepositoryOrderFieldProperties by which repository connections can be ordered.Values for RepositoryOrderFieldCREATED_ATOrder repositories by creation time.NAMEOrder repositories by name.PUSHED_ATOrder repositories by push time.STARGAZERSOrder repositories by number of stargazers.UPDATED_ATOrder repositories by update time.RepositoryPermissionThe access level to a repository.Values for RepositoryPermissionADMINCan read, clone, and push to this repository. Can also manage issues, pull
requests, and repository settings, including adding collaborators.MAINTAINCan read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings.READCan read and clone this repository. Can also open and comment on issues and pull requests.TRIAGECan read and clone this repository. Can also manage issues and pull requests.WRITECan read, clone, and push to this repository. Can also manage issues and pull requests.RepositoryPrivacyThe privacy of a repository.Values for RepositoryPrivacyPRIVATEPrivate.PUBLICPublic.RepositoryRuleOrderFieldProperties by which repository rule connections can be ordered.Values for RepositoryRuleOrderFieldCREATED_ATOrder repository rules by created time.TYPEOrder repository rules by type.UPDATED_ATOrder repository rules by updated time.RepositoryRuleTypeThe rule types supported in rulesets.Values for RepositoryRuleTypeAUTHORIZATIONAuthorization.BRANCH_NAME_PATTERNBranch name pattern.CODE_SCANNINGChoose which tools must provide code scanning results before the reference is
updated. When configured, code scanning must be enabled and have results for
both the commit and the reference being updated.COMMITTER_EMAIL_PATTERNCommitter email pattern.COMMIT_AUTHOR_EMAIL_PATTERNCommit author email pattern.COMMIT_MESSAGE_PATTERNCommit message pattern.CREATIONOnly allow users with bypass permission to create matching refs.DELETIONOnly allow users with bypass permissions to delete matching refs.FILE_EXTENSION_RESTRICTIONPrevent commits that include files with specified file extensions from being pushed to the commit graph.FILE_PATH_RESTRICTIONPrevent commits that include changes in specified file and folder paths from
being pushed to the commit graph. This includes absolute paths that contain file names.LOCK_BRANCHBranch is read-only. Users cannot push to the branch.MAX_FILE_PATH_LENGTHPrevent commits that include file paths that exceed the specified character limit from being pushed to the commit graph.MAX_FILE_SIZEPrevent commits with individual files that exceed the specified limit from being pushed to the commit graph.MAX_REF_UPDATESMax ref updates.MERGE_QUEUEMerges must be performed via a merge queue.MERGE_QUEUE_LOCKED_REFMerge queue locked ref.NON_FAST_FORWARDPrevent users with push access from force pushing to refs.PULL_REQUESTRequire all commits be made to a non-target branch and submitted via a pull request before they can be merged.REQUIRED_DEPLOYMENTSChoose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.REQUIRED_LINEAR_HISTORYPrevent merge commits from being pushed to matching refs.REQUIRED_REVIEW_THREAD_RESOLUTIONWhen enabled, all conversations on code must be resolved before a pull request
can be merged into a branch that matches this rule.REQUIRED_SIGNATURESCommits pushed to matching refs must have verified signatures.REQUIRED_STATUS_CHECKSChoose which status checks must pass before the ref is updated. When enabled,
commits must first be pushed to another ref where the checks pass.REQUIRED_WORKFLOW_STATUS_CHECKSRequire all commits be made to a non-target branch and submitted via a pull
request and required workflow checks to pass before they can be merged.SECRET_SCANNINGSecret scanning.TAGTag.TAG_NAME_PATTERNTag name pattern.UPDATEOnly allow users with bypass permission to update matching refs.WORKFLOWSRequire all changes made to a targeted branch to pass the specified workflows before they can be merged.WORKFLOW_UPDATESWorkflow files cannot be modified.RepositoryRulesetBypassActorBypassModeThe bypass mode for a specific actor on a ruleset.Values for RepositoryRulesetBypassActorBypassModeALWAYSThe actor can always bypass rules.PULL_REQUESTThe actor can only bypass rules via a pull request.RepositoryRulesetTargetThe targets supported for rulesets.Values for RepositoryRulesetTargetBRANCHBranch.PUSHPush.REPOSITORYrepository.TAGTag.RepositorySuggestedActorFilterThe possible filters for suggested actors in a repository.Values for RepositorySuggestedActorFilterCAN_BE_ASSIGNEDActors that can be assigned to issues and pull requests.CAN_BE_AUTHORActors that can be the author of issues and pull requests.RepositoryVisibilityThe repository's visibility level.Values for RepositoryVisibilityINTERNALThe repository is visible only to users in the same enterprise.PRIVATEThe repository is visible only to those with explicit access.PUBLICThe repository is visible to everyone.RepositoryVulnerabilityAlertDependencyRelationshipThe possible relationships of an alert's dependency.Values for RepositoryVulnerabilityAlertDependencyRelationshipDIRECTA direct dependency of your project.TRANSITIVEA transitive dependency of your project.UNKNOWNThe relationship is unknown.RepositoryVulnerabilityAlertDependencyScopeThe possible scopes of an alert's dependency.Values for RepositoryVulnerabilityAlertDependencyScopeDEVELOPMENTA dependency that is only used in development.RUNTIMEA dependency that is leveraged during application runtime.RepositoryVulnerabilityAlertStateThe possible states of an alert.Values for RepositoryVulnerabilityAlertStateAUTO_DISMISSEDAn alert that has been automatically closed by Dependabot.DISMISSEDAn alert that has been manually closed by a user.FIXEDAn alert that has been resolved by a code change.OPENAn alert that is still open.RequestableCheckStatusStateThe possible states that can be requested when creating a check run.Values for RequestableCheckStatusStateCOMPLETEDThe check suite or run has been completed.IN_PROGRESSThe check suite or run is in progress.PENDINGThe check suite or run is in pending state.QUEUEDThe check suite or run has been queued.WAITINGThe check suite or run is in waiting state.RoleInOrganizationPossible roles a user may have in relation to an organization.Values for RoleInOrganizationDIRECT_MEMBERA user who is a direct member of the organization.OWNERA user with full administrative access to the organization.UNAFFILIATEDA user who is unaffiliated with the organization.RuleEnforcementThe level of enforcement for a rule or ruleset.Values for RuleEnforcementACTIVERules will be enforced.DISABLEDDo not evaluate or enforce rules.EVALUATEAllow admins to test rules before enforcing them. Admins can view insights on
the Rule Insights page (evaluate is only available with GitHub Enterprise).SamlDigestAlgorithmThe possible digest algorithms used to sign SAML requests for an identity provider.Values for SamlDigestAlgorithmSHA1SHA1.SHA256SHA256.SHA384SHA384.SHA512SHA512.SamlSignatureAlgorithmThe possible signature algorithms used to sign SAML requests for a Identity Provider.Values for SamlSignatureAlgorithmRSA_SHA1RSA-SHA1.RSA_SHA256RSA-SHA256.RSA_SHA384RSA-SHA384.RSA_SHA512RSA-SHA512.SavedReplyOrderFieldProperties by which saved reply connections can be ordered.Values for SavedReplyOrderFieldUPDATED_ATOrder saved reply by when they were updated.SearchTypeRepresents the individual results of a search.Values for SearchTypeDISCUSSIONReturns matching discussions in repositories.ISSUEReturns results matching issues in repositories.ISSUE_ADVANCEDReturns results matching issues in repositories.REPOSITORYReturns results matching repositories.USERReturns results matching users and organizations on GitHub.SecurityAdvisoryClassificationClassification of the advisory.Values for SecurityAdvisoryClassificationGENERALClassification of general advisories.MALWAREClassification of malware advisories.SecurityAdvisoryEcosystemThe possible ecosystems of a security vulnerability's package.Values for SecurityAdvisoryEcosystemACTIONSGitHub Actions.COMPOSERPHP packages hosted at packagist.org.ERLANGErlang/Elixir packages hosted at hex.pm.GOGo modules.MAVENJava artifacts hosted at the Maven central repository.NPMJavaScript packages hosted at npmjs.com.NUGET.NET packages hosted at the NuGet Gallery.PIPPython packages hosted at PyPI.org.PUBDart packages hosted at pub.dev.RUBYGEMSRuby gems hosted at RubyGems.org.RUSTRust crates.SWIFTSwift packages.SecurityAdvisoryIdentifierTypeIdentifier formats available for advisories.Values for SecurityAdvisoryIdentifierTypeCVECommon Vulnerabilities and Exposures Identifier.GHSAGitHub Security Advisory ID.SecurityAdvisoryOrderFieldProperties by which security advisory connections can be ordered.Values for SecurityAdvisoryOrderFieldEPSS_PERCENTAGEOrder advisories by EPSS percentage.EPSS_PERCENTILEOrder advisories by EPSS percentile.PUBLISHED_ATOrder advisories by publication time.UPDATED_ATOrder advisories by update time.SecurityAdvisorySeveritySeverity of the vulnerability.Values for SecurityAdvisorySeverityCRITICALCritical.HIGHHigh.LOWLow.MODERATEModerate.SecurityVulnerabilityOrderFieldProperties by which security vulnerability connections can be ordered.Values for SecurityVulnerabilityOrderFieldUPDATED_ATOrder vulnerability by update time.SocialAccountProviderSoftware or company that hosts social media accounts.Values for SocialAccountProviderBLUESKYDecentralized microblogging social platform.FACEBOOKSocial media and networking website.GENERICCatch-all for social media providers that do not yet have specific handling.HOMETOWNFork of Mastodon with a greater focus on local posting.INSTAGRAMSocial media website with a focus on photo and video sharing.LINKEDINProfessional networking website.MASTODONOpen-source federated microblogging service.NPMJavaScript package registry.REDDITSocial news aggregation and discussion website.TWITCHLive-streaming service.TWITTERMicroblogging website.YOUTUBEOnline video platform.SponsorAndLifetimeValueOrderFieldProperties by which sponsor and lifetime value connections can be ordered.Values for SponsorAndLifetimeValueOrderFieldLIFETIME_VALUEOrder results by how much money the sponsor has paid in total.SPONSOR_LOGINOrder results by the sponsor's login (username).SPONSOR_RELEVANCEOrder results by the sponsor's relevance to the viewer.SponsorOrderFieldProperties by which sponsor connections can be ordered.Values for SponsorOrderFieldLOGINOrder sponsorable entities by login (username).RELEVANCEOrder sponsors by their relevance to the viewer.SponsorableOrderFieldProperties by which sponsorable connections can be ordered.Values for SponsorableOrderFieldLOGINOrder sponsorable entities by login (username).SponsorsActivityActionThe possible actions that GitHub Sponsors activities can represent.Values for SponsorsActivityActionCANCELLED_SPONSORSHIPThe activity was cancelling a sponsorship.NEW_SPONSORSHIPThe activity was starting a sponsorship.PENDING_CHANGEThe activity was scheduling a downgrade or cancellation.REFUNDThe activity was funds being refunded to the sponsor or GitHub.SPONSOR_MATCH_DISABLEDThe activity was disabling matching for a previously matched sponsorship.TIER_CHANGEThe activity was changing the sponsorship tier, either directly by the sponsor or by a scheduled/pending change.SponsorsActivityOrderFieldProperties by which GitHub Sponsors activity connections can be ordered.Values for SponsorsActivityOrderFieldTIMESTAMPOrder activities by when they happened.SponsorsActivityPeriodThe possible time periods for which Sponsors activities can be requested.Values for SponsorsActivityPeriodALLDon't restrict the activity to any date range, include all activity.DAYThe previous calendar day.MONTHThe previous thirty days.WEEKThe previous seven days.SponsorsCountryOrRegionCodeRepresents countries or regions for billing and residence for a GitHub Sponsors profile.Values for SponsorsCountryOrRegionCodeADAndorra.AEUnited Arab Emirates.AFAfghanistan.AGAntigua and Barbuda.AIAnguilla.ALAlbania.AMArmenia.AOAngola.AQAntarctica.ARArgentina.ASAmerican Samoa.ATAustria.AUAustralia.AWAruba.AXÅland.AZAzerbaijan.BABosnia and Herzegovina.BBBarbados.BDBangladesh.BEBelgium.BFBurkina Faso.BGBulgaria.BHBahrain.BIBurundi.BJBenin.BLSaint Barthélemy.BMBermuda.BNBrunei Darussalam.BOBolivia.BQBonaire, Sint Eustatius and Saba.BRBrazil.BSBahamas.BTBhutan.BVBouvet Island.BWBotswana.BYBelarus.BZBelize.CACanada.CCCocos (Keeling) Islands.CDCongo (Kinshasa).CFCentral African Republic.CGCongo (Brazzaville).CHSwitzerland.CICôte d'Ivoire.CKCook Islands.CLChile.CMCameroon.CNChina.COColombia.CRCosta Rica.CVCape Verde.CWCuraçao.CXChristmas Island.CYCyprus.CZCzech Republic.DEGermany.DJDjibouti.DKDenmark.DMDominica.DODominican Republic.DZAlgeria.ECEcuador.EEEstonia.EGEgypt.EHWestern Sahara.EREritrea.ESSpain.ETEthiopia.FIFinland.FJFiji.FKFalkland Islands.FMMicronesia.FOFaroe Islands.FRFrance.GAGabon.GBUnited Kingdom.GDGrenada.GEGeorgia.GFFrench Guiana.GGGuernsey.GHGhana.GIGibraltar.GLGreenland.GMGambia.GNGuinea.GPGuadeloupe.GQEquatorial Guinea.GRGreece.GSSouth Georgia and South Sandwich Islands.GTGuatemala.GUGuam.GWGuinea-Bissau.GYGuyana.HKHong Kong.HMHeard and McDonald Islands.HNHonduras.HRCroatia.HTHaiti.HUHungary.IDIndonesia.IEIreland.ILIsrael.IMIsle of Man.INIndia.IOBritish Indian Ocean Territory.IQIraq.IRIran.ISIceland.ITItaly.JEJersey.JMJamaica.JOJordan.JPJapan.KEKenya.KGKyrgyzstan.KHCambodia.KIKiribati.KMComoros.KNSaint Kitts and Nevis.KRKorea, South.KWKuwait.KYCayman Islands.KZKazakhstan.LALaos.LBLebanon.LCSaint Lucia.LILiechtenstein.LKSri Lanka.LRLiberia.LSLesotho.LTLithuania.LULuxembourg.LVLatvia.LYLibya.MAMorocco.MCMonaco.MDMoldova.MEMontenegro.MFSaint Martin (French part).MGMadagascar.MHMarshall Islands.MKMacedonia.MLMali.MMMyanmar.MNMongolia.MOMacau.MPNorthern Mariana Islands.MQMartinique.MRMauritania.MSMontserrat.MTMalta.MUMauritius.MVMaldives.MWMalawi.MXMexico.MYMalaysia.MZMozambique.NANamibia.NCNew Caledonia.NENiger.NFNorfolk Island.NGNigeria.NINicaragua.NLNetherlands.NONorway.NPNepal.NRNauru.NUNiue.NZNew Zealand.OMOman.PAPanama.PEPeru.PFFrench Polynesia.PGPapua New Guinea.PHPhilippines.PKPakistan.PLPoland.PMSaint Pierre and Miquelon.PNPitcairn.PRPuerto Rico.PSPalestine.PTPortugal.PWPalau.PYParaguay.QAQatar.REReunion.RORomania.RSSerbia.RURussian Federation.RWRwanda.SASaudi Arabia.SBSolomon Islands.SCSeychelles.SDSudan.SESweden.SGSingapore.SHSaint Helena.SISlovenia.SJSvalbard and Jan Mayen Islands.SKSlovakia.SLSierra Leone.SMSan Marino.SNSenegal.SOSomalia.SRSuriname.SSSouth Sudan.STSao Tome and Principe.SVEl Salvador.SXSint Maarten (Dutch part).SZSwaziland.TCTurks and Caicos Islands.TDChad.TFFrench Southern Lands.TGTogo.THThailand.TJTajikistan.TKTokelau.TLTimor-Leste.TMTurkmenistan.TNTunisia.TOTonga.TRTürkiye.TTTrinidad and Tobago.TVTuvalu.TWTaiwan.TZTanzania.UAUkraine.UGUganda.UMUnited States Minor Outlying Islands.USUnited States of America.UYUruguay.UZUzbekistan.VAVatican City.VCSaint Vincent and the Grenadines.VEVenezuela.VGVirgin Islands, British.VIVirgin Islands, U.S.VNVietnam.VUVanuatu.WFWallis and Futuna Islands.WSSamoa.YEYemen.YTMayotte.ZASouth Africa.ZMZambia.ZWZimbabwe.SponsorsGoalKindThe different kinds of goals a GitHub Sponsors member can have.Values for SponsorsGoalKindMONTHLY_SPONSORSHIP_AMOUNTThe goal is about getting a certain amount in USD from sponsorships each month.TOTAL_SPONSORS_COUNTThe goal is about reaching a certain number of sponsors.SponsorsListingFeaturedItemFeatureableTypeThe different kinds of records that can be featured on a GitHub Sponsors profile page.Values for SponsorsListingFeaturedItemFeatureableTypeREPOSITORYA repository owned by the user or organization with the GitHub Sponsors profile.USERA user who belongs to the organization with the GitHub Sponsors profile.SponsorsTierOrderFieldProperties by which Sponsors tiers connections can be ordered.Values for SponsorsTierOrderFieldCREATED_ATOrder tiers by creation time.MONTHLY_PRICE_IN_CENTSOrder tiers by their monthly price in cents.SponsorshipNewsletterOrderFieldProperties by which sponsorship update connections can be ordered.Values for SponsorshipNewsletterOrderFieldCREATED_ATOrder sponsorship newsletters by when they were created.SponsorshipOrderFieldProperties by which sponsorship connections can be ordered.Values for SponsorshipOrderFieldCREATED_ATOrder sponsorship by creation time.SponsorshipPaymentSourceHow payment was made for funding a GitHub Sponsors sponsorship.Values for SponsorshipPaymentSourceGITHUBPayment was made through GitHub.PATREONPayment was made through Patreon.SponsorshipPrivacyThe privacy of a sponsorship.Values for SponsorshipPrivacyPRIVATEPrivate.PUBLICPublic.SquashMergeCommitMessageThe possible default commit messages for squash merges.Values for SquashMergeCommitMessageBLANKDefault to a blank commit message.COMMIT_MESSAGESDefault to the branch's commit messages.PR_BODYDefault to the pull request's body.SquashMergeCommitTitleThe possible default commit titles for squash merges.Values for SquashMergeCommitTitleCOMMIT_OR_PR_TITLEDefault to the commit's title (if only one commit) or the pull request's title (when more than one commit).PR_TITLEDefault to the pull request's title.StarOrderFieldProperties by which star connections can be ordered.Values for StarOrderFieldSTARRED_ATAllows ordering a list of stars by when they were created.StatusStateThe possible commit status states.Values for StatusStateERRORStatus is errored.EXPECTEDStatus is expected.FAILUREStatus is failing.PENDINGStatus is pending.SUCCESSStatus is successful.SubscriptionStateThe possible states of a subscription.Values for SubscriptionStateIGNOREDThe User is never notified.SUBSCRIBEDThe User is notified of all conversations.UNSUBSCRIBEDThe User is only notified when participating or @mentioned.TeamDiscussionCommentOrderFieldProperties by which team discussion comment connections can be ordered.Values for TeamDiscussionCommentOrderFieldNUMBERAllows sequential ordering of team discussion comments (which is equivalent to chronological ordering).TeamDiscussionOrderFieldProperties by which team discussion connections can be ordered.Values for TeamDiscussionOrderFieldCREATED_ATAllows chronological ordering of team discussions.TeamMemberOrderFieldProperties by which team member connections can be ordered.Values for TeamMemberOrderFieldCREATED_ATOrder team members by creation time.LOGINOrder team members by login.TeamMemberRoleThe possible team member roles; eithermaintaineror 'member'.Values for TeamMemberRoleMAINTAINERA team maintainer has permission to add and remove team members.MEMBERA team member has no administrative permissions on the team.TeamMembershipTypeDefines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.Values for TeamMembershipTypeALLIncludes immediate and child team members for the team.CHILD_TEAMIncludes only child team members for the team.IMMEDIATEIncludes only immediate members of the team.TeamNotificationSettingThe possible team notification values.Values for TeamNotificationSettingNOTIFICATIONS_DISABLEDNo one will receive notifications.NOTIFICATIONS_ENABLEDEveryone will receive notifications when the team is @mentioned.TeamOrderFieldProperties by which team connections can be ordered.Values for TeamOrderFieldNAMEAllows ordering a list of teams by name.TeamPrivacyThe possible team privacy values.Values for TeamPrivacySECRETA secret team can only be seen by its members.VISIBLEA visible team can be seen and @mentioned by every member of the organization.TeamRepositoryOrderFieldProperties by which team repository connections can be ordered.Values for TeamRepositoryOrderFieldCREATED_ATOrder repositories by creation time.NAMEOrder repositories by name.PERMISSIONOrder repositories by permission.PUSHED_ATOrder repositories by push time.STARGAZERSOrder repositories by number of stargazers.UPDATED_ATOrder repositories by update time.TeamReviewAssignmentAlgorithmThe possible team review assignment algorithms.Values for TeamReviewAssignmentAlgorithmLOAD_BALANCEBalance review load across the entire team.ROUND_ROBINAlternate reviews between each team member.TeamRoleThe role of a user on a team.Values for TeamRoleADMINUser has admin rights on the team.MEMBERUser is a member of the team.ThreadSubscriptionFormActionThe possible states of a thread subscription form action.Values for ThreadSubscriptionFormActionNONEThe User cannot subscribe or unsubscribe to the thread.SUBSCRIBEThe User can subscribe to the thread.UNSUBSCRIBEThe User can unsubscribe to the thread.ThreadSubscriptionStateThe possible states of a subscription.Values for ThreadSubscriptionStateDISABLEDThe subscription status is currently disabled.IGNORING_LISTThe User is never notified because they are ignoring the list.IGNORING_THREADThe User is never notified because they are ignoring the thread.NONEThe User is not recieving notifications from this thread.SUBSCRIBED_TO_LISTThe User is notified becuase they are watching the list.SUBSCRIBED_TO_THREADThe User is notified because they are subscribed to the thread.SUBSCRIBED_TO_THREAD_EVENTSThe User is notified because they chose custom settings for this thread.SUBSCRIBED_TO_THREAD_TYPEThe User is notified because they chose custom settings for this thread.UNAVAILABLEThe subscription status is currently unavailable.TopicSuggestionDeclineReasonReason that the suggested topic is declined.Values for TopicSuggestionDeclineReasonNOT_RELEVANTThe suggested topic is not relevant to the repository.PERSONAL_PREFERENCEThe viewer does not like the suggested topic.TOO_GENERALThe suggested topic is too general for the repository.TOO_SPECIFICThe suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1).TrackedIssueStatesThe possible states of a tracked issue.Values for TrackedIssueStatesCLOSEDThe tracked issue is closed.OPENThe tracked issue is open.TwoFactorCredentialSecurityTypeFilters by whether or not 2FA is enabled and if the method configured is considered secure or insecure.Values for TwoFactorCredentialSecurityTypeDISABLEDNo method of two-factor authentication.INSECUREHas an insecure method of two-factor authentication. GitHub currently defines this as SMS two-factor authentication.SECUREHas only secure methods of two-factor authentication.UserBlockDurationThe possible durations that a user can be blocked for.Values for UserBlockDurationONE_DAYThe user was blocked for 1 day.ONE_MONTHThe user was blocked for 30 days.ONE_WEEKThe user was blocked for 7 days.PERMANENTThe user was blocked permanently.THREE_DAYSThe user was blocked for 3 days.UserStatusOrderFieldProperties by which user status connections can be ordered.Values for UserStatusOrderFieldUPDATED_ATOrder user statuses by when they were updated.UserViewTypeWhether a user being viewed contains public or private information.Values for UserViewTypePRIVATEA user containing information only visible to the authenticated user.PUBLICA user that is publicly visible.VerifiableDomainOrderFieldProperties by which verifiable domain connections can be ordered.Values for VerifiableDomainOrderFieldCREATED_ATOrder verifiable domains by their creation date.DOMAINOrder verifiable domains by the domain name.WorkflowRunOrderFieldProperties by which workflow run connections can be ordered.Values for WorkflowRunOrderFieldCREATED_ATOrder workflow runs by most recently created.WorkflowStateThe possible states for a workflow.Values for WorkflowStateACTIVEThe workflow is active.DELETEDThe workflow was deleted from the git repository.DISABLED_FORKThe workflow was disabled by default on a fork.DISABLED_INACTIVITYThe workflow was disabled for inactivity in the repository.DISABLED_MANUALLYThe workflow was disabled manually.\n\n\n\nGraphQL API/Reference/UnionsUnionsA union is a type of object representing many objects.In this articleAbout unionsAssigneeAuditEntryActorBotOrUserBranchActorAllowanceActorBypassActorClaimableCloserCreatedIssueOrRestrictedContributionCreatedPullRequestOrRestrictedContributionCreatedRepositoryOrRestrictedContributionDeploymentReviewerEnterpriseMemberIpAllowListOwnerIssueOrPullRequestIssueTimelineItemIssueTimelineItemsMilestoneItemOrgRestoreMemberAuditEntryMembershipOrganizationAuditEntryOrganizationOrUserPermissionGranterPinnableItemProjectCardItemProjectV2ActorProjectV2FieldConfigurationProjectV2ItemContentProjectV2ItemFieldValuePullRequestTimelineItemPullRequestTimelineItemsPushAllowanceActorReactorReferencedSubjectRenamedTitleSubjectRequestedReviewerReviewDismissalAllowanceActorRuleParametersRuleSourceSearchResultItemSponsorSponsorableItemSponsorsListingFeatureableItemStatusCheckRollupContextUserListItemsVerifiableDomainOwnerAbout unions
A union is a type of object representing many objects.
For example, a field marked as an ProjectCardItem could be an Issue or a PullRequest because each of those objects can be inside a project card. Using a union instead of an object gives you flexibility.
For more information, see Introduction to GraphQL.AssigneeTypes that can be assigned to issues.Possible types for AssigneeBotMannequinOrganizationUserAuditEntryActorTypes that can initiate an audit log event.Possible types for AuditEntryActorBotOrganizationUserBotOrUserUsed when either Bot or User are accepted.Possible types for BotOrUserBotUserBranchActorAllowanceActorTypes which can be actors for BranchActorAllowance objects.Possible types for BranchActorAllowanceActorAppTeamUserBypassActorTypes that can represent a repository ruleset bypass actor.Possible types for BypassActorAppTeamClaimableAn object which can have its data claimed or claim data from another.Possible types for ClaimableMannequinUserCloserThe object which triggered a ClosedEvent.Possible types for CloserCommitProjectV2PullRequestCreatedIssueOrRestrictedContributionRepresents either a issue the viewer can access or a restricted contribution.Possible types for CreatedIssueOrRestrictedContributionCreatedIssueContributionRestrictedContributionCreatedPullRequestOrRestrictedContributionRepresents either a pull request the viewer can access or a restricted contribution.Possible types for CreatedPullRequestOrRestrictedContributionCreatedPullRequestContributionRestrictedContributionCreatedRepositoryOrRestrictedContributionRepresents either a repository the viewer can access or a restricted contribution.Possible types for CreatedRepositoryOrRestrictedContributionCreatedRepositoryContributionRestrictedContributionDeploymentReviewerUsers and teams.Possible types for DeploymentReviewerTeamUserEnterpriseMemberAn object that is a member of an enterprise.Possible types for EnterpriseMemberEnterpriseUserAccountUserIpAllowListOwnerTypes that can own an IP allow list.Possible types for IpAllowListOwnerAppEnterpriseOrganizationIssueOrPullRequestUsed for return value of Repository.issueOrPullRequest.Possible types for IssueOrPullRequestIssuePullRequestIssueTimelineItemAn item in an issue timeline.Possible types for IssueTimelineItemAssignedEventClosedEventCommitCrossReferencedEventDemilestonedEventIssueCommentLabeledEventLockedEventMilestonedEventReferencedEventRenamedTitleEventReopenedEventSubscribedEventTransferredEventUnassignedEventUnlabeledEventUnlockedEventUnsubscribedEventUserBlockedEventIssueTimelineItemsAn item in an issue timeline.Possible types for IssueTimelineItemsAddedToProjectEventAssignedEventClosedEventCommentDeletedEventConnectedEventConvertedNoteToIssueEventConvertedToDiscussionEventCrossReferencedEventDemilestonedEventDisconnectedEventIssueCommentIssueTypeAddedEventIssueTypeChangedEventIssueTypeRemovedEventLabeledEventLockedEventMarkedAsDuplicateEventMentionedEventMilestonedEventMovedColumnsInProjectEventParentIssueAddedEventParentIssueRemovedEventPinnedEventReferencedEventRemovedFromProjectEventRenamedTitleEventReopenedEventSubIssueAddedEventSubIssueRemovedEventSubscribedEventTransferredEventUnassignedEventUnlabeledEventUnlockedEventUnmarkedAsDuplicateEventUnpinnedEventUnsubscribedEventUserBlockedEventMilestoneItemTypes that can be inside a Milestone.Possible types for MilestoneItemIssuePullRequestOrgRestoreMemberAuditEntryMembershipTypes of memberships that can be restored for an Organization member.Possible types for OrgRestoreMemberAuditEntryMembershipOrgRestoreMemberMembershipOrganizationAuditEntryDataOrgRestoreMemberMembershipRepositoryAuditEntryDataOrgRestoreMemberMembershipTeamAuditEntryDataOrganizationAuditEntryAn audit entry in an organization audit log.Possible types for OrganizationAuditEntryMembersCanDeleteReposClearAuditEntryMembersCanDeleteReposDisableAuditEntryMembersCanDeleteReposEnableAuditEntryOauthApplicationCreateAuditEntryOrgAddBillingManagerAuditEntryOrgAddMemberAuditEntryOrgBlockUserAuditEntryOrgConfigDisableCollaboratorsOnlyAuditEntryOrgConfigEnableCollaboratorsOnlyAuditEntryOrgCreateAuditEntryOrgDisableOauthAppRestrictionsAuditEntryOrgDisableSamlAuditEntryOrgDisableTwoFactorRequirementAuditEntryOrgEnableOauthAppRestrictionsAuditEntryOrgEnableSamlAuditEntryOrgEnableTwoFactorRequirementAuditEntryOrgInviteMemberAuditEntryOrgInviteToBusinessAuditEntryOrgOauthAppAccessApprovedAuditEntryOrgOauthAppAccessBlockedAuditEntryOrgOauthAppAccessDeniedAuditEntryOrgOauthAppAccessRequestedAuditEntryOrgOauthAppAccessUnblockedAuditEntryOrgRemoveBillingManagerAuditEntryOrgRemoveMemberAuditEntryOrgRemoveOutsideCollaboratorAuditEntryOrgRestoreMemberAuditEntryOrgUnblockUserAuditEntryOrgUpdateDefaultRepositoryPermissionAuditEntryOrgUpdateMemberAuditEntryOrgUpdateMemberRepositoryCreationPermissionAuditEntryOrgUpdateMemberRepositoryInvitationPermissionAuditEntryPrivateRepositoryForkingDisableAuditEntryPrivateRepositoryForkingEnableAuditEntryRepoAccessAuditEntryRepoAddMemberAuditEntryRepoAddTopicAuditEntryRepoArchivedAuditEntryRepoChangeMergeSettingAuditEntryRepoConfigDisableAnonymousGitAccessAuditEntryRepoConfigDisableCollaboratorsOnlyAuditEntryRepoConfigDisableContributorsOnlyAuditEntryRepoConfigDisableSockpuppetDisallowedAuditEntryRepoConfigEnableAnonymousGitAccessAuditEntryRepoConfigEnableCollaboratorsOnlyAuditEntryRepoConfigEnableContributorsOnlyAuditEntryRepoConfigEnableSockpuppetDisallowedAuditEntryRepoConfigLockAnonymousGitAccessAuditEntryRepoConfigUnlockAnonymousGitAccessAuditEntryRepoCreateAuditEntryRepoDestroyAuditEntryRepoRemoveMemberAuditEntryRepoRemoveTopicAuditEntryRepositoryVisibilityChangeDisableAuditEntryRepositoryVisibilityChangeEnableAuditEntryTeamAddMemberAuditEntryTeamAddRepositoryAuditEntryTeamChangeParentTeamAuditEntryTeamRemoveMemberAuditEntryTeamRemoveRepositoryAuditEntryOrganizationOrUserUsed for argument of CreateProjectV2 mutation.Possible types for OrganizationOrUserOrganizationUserPermissionGranterTypes that can grant permissions on a repository to a user.Possible types for PermissionGranterOrganizationRepositoryTeamPinnableItemTypes that can be pinned to a profile page.Possible types for PinnableItemGistRepositoryProjectCardItemTypes that can be inside Project Cards.Possible types for ProjectCardItemIssuePullRequestProjectV2ActorPossible collaborators for a project.Possible types for ProjectV2ActorTeamUserProjectV2FieldConfigurationConfigurations for project fields.Possible types for ProjectV2FieldConfigurationProjectV2FieldProjectV2IterationFieldProjectV2SingleSelectFieldProjectV2ItemContentTypes that can be inside Project Items.Possible types for ProjectV2ItemContentDraftIssueIssuePullRequestProjectV2ItemFieldValueProject field values.Possible types for ProjectV2ItemFieldValueProjectV2ItemFieldDateValueProjectV2ItemFieldIterationValueProjectV2ItemFieldLabelValueProjectV2ItemFieldMilestoneValueProjectV2ItemFieldNumberValueProjectV2ItemFieldPullRequestValueProjectV2ItemFieldRepositoryValueProjectV2ItemFieldReviewerValueProjectV2ItemFieldSingleSelectValueProjectV2ItemFieldTextValueProjectV2ItemFieldUserValuePullRequestTimelineItemAn item in a pull request timeline.Possible types for PullRequestTimelineItemAssignedEventBaseRefDeletedEventBaseRefForcePushedEventClosedEventCommitCommitCommentThreadCrossReferencedEventDemilestonedEventDeployedEventDeploymentEnvironmentChangedEventHeadRefDeletedEventHeadRefForcePushedEventHeadRefRestoredEventIssueCommentLabeledEventLockedEventMergedEventMilestonedEventPullRequestReviewPullRequestReviewCommentPullRequestReviewThreadReferencedEventRenamedTitleEventReopenedEventReviewDismissedEventReviewRequestRemovedEventReviewRequestedEventSubscribedEventUnassignedEventUnlabeledEventUnlockedEventUnsubscribedEventUserBlockedEventPullRequestTimelineItemsAn item in a pull request timeline.Possible types for PullRequestTimelineItemsAddedToMergeQueueEventAddedToProjectEventAssignedEventAutoMergeDisabledEventAutoMergeEnabledEventAutoRebaseEnabledEventAutoSquashEnabledEventAutomaticBaseChangeFailedEventAutomaticBaseChangeSucceededEventBaseRefChangedEventBaseRefDeletedEventBaseRefForcePushedEventClosedEventCommentDeletedEventConnectedEventConvertToDraftEventConvertedNoteToIssueEventConvertedToDiscussionEventCrossReferencedEventDemilestonedEventDeployedEventDeploymentEnvironmentChangedEventDisconnectedEventHeadRefDeletedEventHeadRefForcePushedEventHeadRefRestoredEventIssueCommentIssueTypeAddedEventIssueTypeChangedEventIssueTypeRemovedEventLabeledEventLockedEventMarkedAsDuplicateEventMentionedEventMergedEventMilestonedEventMovedColumnsInProjectEventParentIssueAddedEventParentIssueRemovedEventPinnedEventPullRequestCommitPullRequestCommitCommentThreadPullRequestReviewPullRequestReviewThreadPullRequestRevisionMarkerReadyForReviewEventReferencedEventRemovedFromMergeQueueEventRemovedFromProjectEventRenamedTitleEventReopenedEventReviewDismissedEventReviewRequestRemovedEventReviewRequestedEventSubIssueAddedEventSubIssueRemovedEventSubscribedEventTransferredEventUnassignedEventUnlabeledEventUnlockedEventUnmarkedAsDuplicateEventUnpinnedEventUnsubscribedEventUserBlockedEventPushAllowanceActorTypes that can be an actor.Possible types for PushAllowanceActorAppTeamUserReactorTypes that can be assigned to reactions.Possible types for ReactorBotMannequinOrganizationUserReferencedSubjectAny referencable object.Possible types for ReferencedSubjectIssuePullRequestRenamedTitleSubjectAn object which has a renamable title.Possible types for RenamedTitleSubjectIssuePullRequestRequestedReviewerTypes that can be requested reviewers.Possible types for RequestedReviewerBotMannequinTeamUserReviewDismissalAllowanceActorTypes that can be an actor.Possible types for ReviewDismissalAllowanceActorAppTeamUserRuleParametersTypes which can be parameters for RepositoryRule objects.Possible types for RuleParametersBranchNamePatternParametersCodeScanningParametersCommitAuthorEmailPatternParametersCommitMessagePatternParametersCommitterEmailPatternParametersFileExtensionRestrictionParametersFilePathRestrictionParametersMaxFilePathLengthParametersMaxFileSizeParametersMergeQueueParametersPullRequestParametersRequiredDeploymentsParametersRequiredStatusChecksParametersTagNamePatternParametersUpdateParametersWorkflowsParametersRuleSourceTypes which can have RepositoryRule objects.Possible types for RuleSourceEnterpriseOrganizationRepositorySearchResultItemThe results of a search.Possible types for SearchResultItemAppDiscussionIssueMarketplaceListingOrganizationPullRequestRepositoryUserSponsorEntities that can sponsor others via GitHub Sponsors.Possible types for SponsorOrganizationUserSponsorableItemEntities that can be sponsored via GitHub Sponsors.Possible types for SponsorableItemOrganizationUserSponsorsListingFeatureableItemA record that can be featured on a GitHub Sponsors profile.Possible types for SponsorsListingFeatureableItemRepositoryUserStatusCheckRollupContextTypes that can be inside a StatusCheckRollup context.Possible types for StatusCheckRollupContextCheckRunStatusContextUserListItemsTypes that can be added to a user list.Possible types for UserListItemsRepositoryVerifiableDomainOwnerTypes that can own a verifiable domain.Possible types for VerifiableDomainOwnerEnterpriseOrganization\n\n\n\nGraphQL API/Reference/Input objectsInput objectsInput objects can be described as "composable objects" because they include a set of input fields that define the object.In this articleAbout input objectsAbortQueuedMigrationsInputAbortRepositoryMigrationInputAcceptEnterpriseAdministratorInvitationInputAcceptEnterpriseMemberInvitationInputAcceptTopicSuggestionInputAccessUserNamespaceRepositoryInputAddAssigneesToAssignableInputAddCommentInputAddDiscussionCommentInputAddDiscussionPollVoteInputAddEnterpriseOrganizationMemberInputAddEnterpriseSupportEntitlementInputAddLabelsToLabelableInputAddProjectCardInputAddProjectColumnInputAddProjectV2DraftIssueInputAddProjectV2ItemByIdInputAddPullRequestReviewCommentInputAddPullRequestReviewInputAddPullRequestReviewThreadInputAddPullRequestReviewThreadReplyInputAddReactionInputAddStarInputAddSubIssueInputAddUpvoteInputAddVerifiableDomainInputApproveDeploymentsInputApproveVerifiableDomainInputArchiveProjectV2ItemInputArchiveRepositoryInputAuditLogOrderBranchNamePatternParametersInputBulkSponsorshipCancelEnterpriseAdminInvitationInputCancelEnterpriseMemberInvitationInputCancelSponsorshipInputChangeUserStatusInputCheckAnnotationDataCheckAnnotationRangeCheckRunActionCheckRunFilterCheckRunOutputCheckRunOutputImageCheckSuiteAutoTriggerPreferenceCheckSuiteFilterClearLabelsFromLabelableInputClearProjectV2ItemFieldValueInputCloneProjectInputCloneTemplateRepositoryInputCloseDiscussionInputCloseIssueInputClosePullRequestInputCodeScanningParametersInputCodeScanningToolInputCommitAuthorCommitAuthorEmailPatternParametersInputCommitContributionOrderCommitMessageCommitMessagePatternParametersInputCommittableBranchCommitterEmailPatternParametersInputContributionOrderConvertProjectCardNoteToIssueInputConvertProjectV2DraftIssueItemToIssueInputConvertPullRequestToDraftInputCopyProjectV2InputCreateAttributionInvitationInputCreateBranchProtectionRuleInputCreateCheckRunInputCreateCheckSuiteInputCreateCommitOnBranchInputCreateDeploymentInputCreateDeploymentStatusInputCreateDiscussionInputCreateEnterpriseOrganizationInputCreateEnvironmentInputCreateIpAllowListEntryInputCreateIssueInputCreateIssueTypeInputCreateLabelInputCreateLinkedBranchInputCreateMigrationSourceInputCreateProjectInputCreateProjectV2FieldInputCreateProjectV2InputCreateProjectV2StatusUpdateInputCreatePullRequestInputCreateRefInputCreateRepositoryInputCreateRepositoryRulesetInputCreateSponsorsListingInputCreateSponsorsTierInputCreateSponsorshipInputCreateSponsorshipsInputCreateTeamDiscussionCommentInputCreateTeamDiscussionInputCreateUserListInputDeclineTopicSuggestionInputDeleteBranchProtectionRuleInputDeleteDeploymentInputDeleteDiscussionCommentInputDeleteDiscussionInputDeleteEnvironmentInputDeleteIpAllowListEntryInputDeleteIssueCommentInputDeleteIssueInputDeleteIssueTypeInputDeleteLabelInputDeleteLinkedBranchInputDeletePackageVersionInputDeleteProjectCardInputDeleteProjectColumnInputDeleteProjectInputDeleteProjectV2FieldInputDeleteProjectV2InputDeleteProjectV2ItemInputDeleteProjectV2StatusUpdateInputDeleteProjectV2WorkflowInputDeletePullRequestReviewCommentInputDeletePullRequestReviewInputDeleteRefInputDeleteRepositoryRulesetInputDeleteTeamDiscussionCommentInputDeleteTeamDiscussionInputDeleteUserListInputDeleteVerifiableDomainInputDeploymentOrderDequeuePullRequestInputDisablePullRequestAutoMergeInputDiscussionOrderDiscussionPollOptionOrderDismissPullRequestReviewInputDismissRepositoryVulnerabilityAlertInputDraftPullRequestReviewCommentDraftPullRequestReviewThreadEnablePullRequestAutoMergeInputEnqueuePullRequestInputEnterpriseAdministratorInvitationOrderEnterpriseMemberInvitationOrderEnterpriseMemberOrderEnterpriseOrderEnterpriseServerInstallationOrderEnterpriseServerUserAccountEmailOrderEnterpriseServerUserAccountOrderEnterpriseServerUserAccountsUploadOrderEnvironmentsFileAdditionFileChangesFileDeletionFileExtensionRestrictionParametersInputFilePathRestrictionParametersInputFollowOrganizationInputFollowUserInputGistOrderGrantEnterpriseOrganizationsMigratorRoleInputGrantMigratorRoleInputImportProjectInputInviteEnterpriseAdminInputInviteEnterpriseMemberInputIpAllowListEntryOrderIssueCommentOrderIssueFiltersIssueOrderIssueTypeOrderLabelOrderLanguageOrderLinkProjectV2ToRepositoryInputLinkProjectV2ToTeamInputLinkRepositoryToProjectInputLockLockableInputMannequinOrderMarkDiscussionCommentAsAnswerInputMarkFileAsViewedInputMarkProjectV2AsTemplateInputMarkPullRequestReadyForReviewInputMaxFilePathLengthParametersInputMaxFileSizeParametersInputMergeBranchInputMergePullRequestInputMergeQueueParametersInputMilestoneOrderMinimizeCommentInputMoveProjectCardInputMoveProjectColumnInputOrgEnterpriseOwnerOrderOrganizationOrderPackageFileOrderPackageOrderPackageVersionOrderPinEnvironmentInputPinIssueInputPinnedEnvironmentOrderProjectCardImportProjectColumnImportProjectOrderProjectV2CollaboratorProjectV2FieldOrderProjectV2FieldValueProjectV2FiltersProjectV2ItemFieldValueOrderProjectV2ItemOrderProjectV2IterationProjectV2IterationFieldConfigurationInputProjectV2OrderProjectV2SingleSelectFieldOptionInputProjectV2StatusOrderProjectV2ViewOrderProjectV2WorkflowOrderPropertyTargetDefinitionInputPublishSponsorsTierInputPullRequestOrderPullRequestParametersInputReactionOrderRefNameConditionTargetInputRefOrderRefUpdateRegenerateEnterpriseIdentityProviderRecoveryCodesInputRegenerateVerifiableDomainTokenInputRejectDeploymentsInputReleaseOrderRemoveAssigneesFromAssignableInputRemoveEnterpriseAdminInputRemoveEnterpriseIdentityProviderInputRemoveEnterpriseMemberInputRemoveEnterpriseOrganizationInputRemoveEnterpriseSupportEntitlementInputRemoveLabelsFromLabelableInputRemoveOutsideCollaboratorInputRemoveReactionInputRemoveStarInputRemoveSubIssueInputRemoveUpvoteInputReopenDiscussionInputReopenIssueInputReopenPullRequestInputReorderEnvironmentInputReplaceActorsForAssignableInputRepositoryIdConditionTargetInputRepositoryInvitationOrderRepositoryMigrationOrderRepositoryNameConditionTargetInputRepositoryOrderRepositoryPropertyConditionTargetInputRepositoryRuleConditionsInputRepositoryRuleInputRepositoryRuleOrderRepositoryRulesetBypassActorInputReprioritizeSubIssueInputRequestReviewsInputRequiredDeploymentsParametersInputRequiredStatusCheckInputRequiredStatusChecksParametersInputRerequestCheckSuiteInputResolveReviewThreadInputRetireSponsorsTierInputRevertPullRequestInputRevokeEnterpriseOrganizationsMigratorRoleInputRevokeMigratorRoleInputRuleParametersInputSavedReplyOrderSecurityAdvisoryIdentifierFilterSecurityAdvisoryOrderSecurityVulnerabilityOrderSetEnterpriseIdentityProviderInputSetOrganizationInteractionLimitInputSetRepositoryInteractionLimitInputSetUserInteractionLimitInputSponsorAndLifetimeValueOrderSponsorOrderSponsorableOrderSponsorsActivityOrderSponsorsTierOrderSponsorshipNewsletterOrderSponsorshipOrderStarOrderStartOrganizationMigrationInputStartRepositoryMigrationInputStatusCheckConfigurationInputSubmitPullRequestReviewInputTagNamePatternParametersInputTeamDiscussionCommentOrderTeamDiscussionOrderTeamMemberOrderTeamOrderTeamRepositoryOrderTransferEnterpriseOrganizationInputTransferIssueInputUnarchiveProjectV2ItemInputUnarchiveRepositoryInputUnfollowOrganizationInputUnfollowUserInputUnlinkProjectV2FromRepositoryInputUnlinkProjectV2FromTeamInputUnlinkRepositoryFromProjectInputUnlockLockableInputUnmarkDiscussionCommentAsAnswerInputUnmarkFileAsViewedInputUnmarkIssueAsDuplicateInputUnmarkProjectV2AsTemplateInputUnminimizeCommentInputUnpinIssueInputUnresolveReviewThreadInputUpdateBranchProtectionRuleInputUpdateCheckRunInputUpdateCheckSuitePreferencesInputUpdateDiscussionCommentInputUpdateDiscussionInputUpdateEnterpriseAdministratorRoleInputUpdateEnterpriseAllowPrivateRepositoryForkingSettingInputUpdateEnterpriseDefaultRepositoryPermissionSettingInputUpdateEnterpriseDeployKeySettingInputUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInputUpdateEnterpriseMembersCanCreateRepositoriesSettingInputUpdateEnterpriseMembersCanDeleteIssuesSettingInputUpdateEnterpriseMembersCanDeleteRepositoriesSettingInputUpdateEnterpriseMembersCanInviteCollaboratorsSettingInputUpdateEnterpriseMembersCanMakePurchasesSettingInputUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInputUpdateEnterpriseMembersCanViewDependencyInsightsSettingInputUpdateEnterpriseOrganizationProjectsSettingInputUpdateEnterpriseOwnerOrganizationRoleInputUpdateEnterpriseProfileInputUpdateEnterpriseRepositoryProjectsSettingInputUpdateEnterpriseTeamDiscussionsSettingInputUpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInputUpdateEnterpriseTwoFactorAuthenticationRequiredSettingInputUpdateEnvironmentInputUpdateIpAllowListEnabledSettingInputUpdateIpAllowListEntryInputUpdateIpAllowListForInstalledAppsEnabledSettingInputUpdateIssueCommentInputUpdateIssueInputUpdateIssueIssueTypeInputUpdateIssueTypeInputUpdateLabelInputUpdateNotificationRestrictionSettingInputUpdateOrganizationAllowPrivateRepositoryForkingSettingInputUpdateOrganizationWebCommitSignoffSettingInputUpdateParametersInputUpdatePatreonSponsorabilityInputUpdateProjectCardInputUpdateProjectColumnInputUpdateProjectInputUpdateProjectV2CollaboratorsInputUpdateProjectV2DraftIssueInputUpdateProjectV2FieldInputUpdateProjectV2InputUpdateProjectV2ItemFieldValueInputUpdateProjectV2ItemPositionInputUpdateProjectV2StatusUpdateInputUpdatePullRequestBranchInputUpdatePullRequestInputUpdatePullRequestReviewCommentInputUpdatePullRequestReviewInputUpdateRefInputUpdateRefsInputUpdateRepositoryInputUpdateRepositoryRulesetInputUpdateRepositoryWebCommitSignoffSettingInputUpdateSponsorshipPreferencesInputUpdateSubscriptionInputUpdateTeamDiscussionCommentInputUpdateTeamDiscussionInputUpdateTeamReviewAssignmentInputUpdateTeamsRepositoryInputUpdateTopicsInputUpdateUserListInputUpdateUserListsForItemInputUserStatusOrderVerifiableDomainOrderVerifyVerifiableDomainInputWorkflowFileReferenceInputWorkflowRunOrderWorkflowsParametersInputAbout input objects
Input objects can be described as "composable objects" because they include a set of input fields that define the object.
For example, CommitAuthor takes a field called emails. Providing a value for emails transforms CommitAuthor into a list of User objects containing that email address. Note that objects may have input objects, whereas mutations require input objects.
For more information, see Forming calls with GraphQL.AbortQueuedMigrationsInputAutogenerated input type of AbortQueuedMigrations.Input fields for AbortQueuedMigrationsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The ID of the organization that is running the migrations.AbortRepositoryMigrationInputAutogenerated input type of AbortRepositoryMigration.Input fields for AbortRepositoryMigrationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.migrationId (ID!)The ID of the migration to be aborted.AcceptEnterpriseAdministratorInvitationInputAutogenerated input type of AcceptEnterpriseAdministratorInvitation.Input fields for AcceptEnterpriseAdministratorInvitationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitationId (ID!)The id of the invitation being accepted.AcceptEnterpriseMemberInvitationInputAutogenerated input type of AcceptEnterpriseMemberInvitation.Input fields for AcceptEnterpriseMemberInvitationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitationId (ID!)The id of the invitation being accepted.AcceptTopicSuggestionInputAutogenerated input type of AcceptTopicSuggestion.Input fields for AcceptTopicSuggestionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String)The name of the suggested topic.
Upcoming Change on 2024-04-01 UTC
Description: name will be removed.
Reason: Suggested topics are no longer supported.repositoryId (ID)The Node ID of the repository.
Upcoming Change on 2024-04-01 UTC
Description: repositoryId will be removed.
Reason: Suggested topics are no longer supported.AccessUserNamespaceRepositoryInputAutogenerated input type of AccessUserNamespaceRepository.Input fields for AccessUserNamespaceRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise owning the user namespace repository.repositoryId (ID!)The ID of the user namespace repository to access.AddAssigneesToAssignableInputAutogenerated input type of AddAssigneesToAssignable.Input fields for AddAssigneesToAssignableInputNameDescriptionassignableId (ID!)The id of the assignable object to add assignees to.assigneeIds ([ID!]!)The id of users to add as assignees.clientMutationId (String)A unique identifier for the client performing the mutation.AddCommentInputAutogenerated input type of AddComment.Input fields for AddCommentInputNameDescriptionbody (String!)The contents of the comment.clientMutationId (String)A unique identifier for the client performing the mutation.subjectId (ID!)The Node ID of the subject to modify.AddDiscussionCommentInputAutogenerated input type of AddDiscussionComment.Input fields for AddDiscussionCommentInputNameDescriptionbody (String!)The contents of the comment.clientMutationId (String)A unique identifier for the client performing the mutation.discussionId (ID!)The Node ID of the discussion to comment on.replyToId (ID)The Node ID of the discussion comment within this discussion to reply to.AddDiscussionPollVoteInputAutogenerated input type of AddDiscussionPollVote.Input fields for AddDiscussionPollVoteInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pollOptionId (ID!)The Node ID of the discussion poll option to vote for.AddEnterpriseOrganizationMemberInputAutogenerated input type of AddEnterpriseOrganizationMember.Input fields for AddEnterpriseOrganizationMemberInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise which owns the organization.organizationId (ID!)The ID of the organization the users will be added to.role (OrganizationMemberRole)The role to assign the users in the organization.userIds ([ID!]!)The IDs of the enterprise members to add.AddEnterpriseSupportEntitlementInputAutogenerated input type of AddEnterpriseSupportEntitlement.Input fields for AddEnterpriseSupportEntitlementInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the Enterprise which the admin belongs to.login (String!)The login of a member who will receive the support entitlement.AddLabelsToLabelableInputAutogenerated input type of AddLabelsToLabelable.Input fields for AddLabelsToLabelableInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelIds ([ID!]!)The ids of the labels to add.labelableId (ID!)The id of the labelable object to add labels to.AddProjectCardInputAutogenerated input type of AddProjectCard.Input fields for AddProjectCardInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.contentId (ID)The content of the card. Must be a member of the ProjectCardItem union.note (String)The note on the card.projectColumnId (ID!)The Node ID of the ProjectColumn.AddProjectColumnInputAutogenerated input type of AddProjectColumn.Input fields for AddProjectColumnInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String!)The name of the column.projectId (ID!)The Node ID of the project.AddProjectV2DraftIssueInputAutogenerated input type of AddProjectV2DraftIssue.Input fields for AddProjectV2DraftIssueInputNameDescriptionassigneeIds ([ID!])The IDs of the assignees of the draft issue.body (String)The body of the draft issue.clientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to add the draft issue to.title (String!)The title of the draft issue. A project item can also be created by providing
the URL of an Issue or Pull Request if you have access.AddProjectV2ItemByIdInputAutogenerated input type of AddProjectV2ItemById.Input fields for AddProjectV2ItemByIdInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.contentId (ID!)The id of the Issue or Pull Request to add.projectId (ID!)The ID of the Project to add the item to.AddPullRequestReviewCommentInputAutogenerated input type of AddPullRequestReviewComment.Input fields for AddPullRequestReviewCommentInputNameDescriptionbody (String)The text of the comment. This field is required
Upcoming Change on 2023-10-01 UTC
Description: body will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.clientMutationId (String)A unique identifier for the client performing the mutation.commitOID (GitObjectID)The SHA of the commit to comment on.
Upcoming Change on 2023-10-01 UTC
Description: commitOID will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.inReplyTo (ID)The comment id to reply to.
Upcoming Change on 2023-10-01 UTC
Description: inReplyTo will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.path (String)The relative path of the file to comment on.
Upcoming Change on 2023-10-01 UTC
Description: path will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.position (Int)The line index in the diff to comment on.
Upcoming Change on 2023-10-01 UTC
Description: position will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.pullRequestId (ID)The node ID of the pull request reviewing
Upcoming Change on 2023-10-01 UTC
Description: pullRequestId will be removed. use
addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.pullRequestReviewId (ID)The Node ID of the review to modify.
Upcoming Change on 2023-10-01 UTC
Description: pullRequestReviewId will be removed. use
addPullRequestReviewThread or addPullRequestReviewThreadReply instead
Reason: We are deprecating the addPullRequestReviewComment mutation.AddPullRequestReviewInputAutogenerated input type of AddPullRequestReview.Input fields for AddPullRequestReviewInputNameDescriptionbody (String)The contents of the review body comment.clientMutationId (String)A unique identifier for the client performing the mutation.comments ([DraftPullRequestReviewComment])The review line comments.
Upcoming Change on 2023-10-01 UTC
Description: comments will be removed. use the threads argument instead
Reason: We are deprecating comment fields that use diff-relative positioning.commitOID (GitObjectID)The commit OID the review pertains to.event (PullRequestReviewEvent)The event to perform on the pull request review.pullRequestId (ID!)The Node ID of the pull request to modify.threads ([DraftPullRequestReviewThread])The review line comment threads.AddPullRequestReviewThreadInputAutogenerated input type of AddPullRequestReviewThread.Input fields for AddPullRequestReviewThreadInputNameDescriptionbody (String!)Body of the thread's first comment.clientMutationId (String)A unique identifier for the client performing the mutation.line (Int)The line of the blob to which the thread refers, required for line-level
threads. The end of the line range for multi-line comments.path (String)Path to the file being commented on.pullRequestId (ID)The node ID of the pull request reviewing.pullRequestReviewId (ID)The Node ID of the review to modify.side (DiffSide)The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.startLine (Int)The first line of the range to which the comment refers.startSide (DiffSide)The side of the diff on which the start line resides.subjectType (PullRequestReviewThreadSubjectType)The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.AddPullRequestReviewThreadReplyInputAutogenerated input type of AddPullRequestReviewThreadReply.Input fields for AddPullRequestReviewThreadReplyInputNameDescriptionbody (String!)The text of the reply.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReviewId (ID)The Node ID of the pending review to which the reply will belong.pullRequestReviewThreadId (ID!)The Node ID of the thread to which this reply is being written.AddReactionInputAutogenerated input type of AddReaction.Input fields for AddReactionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.content (ReactionContent!)The name of the emoji to react with.subjectId (ID!)The Node ID of the subject to modify.AddStarInputAutogenerated input type of AddStar.Input fields for AddStarInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.starrableId (ID!)The Starrable ID to star.AddSubIssueInputAutogenerated input type of AddSubIssue.Input fields for AddSubIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The id of the issue.replaceParent (Boolean)Option to replace parent issue if one already exists.subIssueId (ID)The id of the sub-issue.subIssueUrl (String)The url of the sub-issue.AddUpvoteInputAutogenerated input type of AddUpvote.Input fields for AddUpvoteInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subjectId (ID!)The Node ID of the discussion or comment to upvote.AddVerifiableDomainInputAutogenerated input type of AddVerifiableDomain.Input fields for AddVerifiableDomainInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.domain (URI!)The URL of the domain.ownerId (ID!)The ID of the owner to add the domain to.ApproveDeploymentsInputAutogenerated input type of ApproveDeployments.Input fields for ApproveDeploymentsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (String)Optional comment for approving deployments.environmentIds ([ID!]!)The ids of environments to reject deployments.workflowRunId (ID!)The node ID of the workflow run containing the pending deployments.ApproveVerifiableDomainInputAutogenerated input type of ApproveVerifiableDomain.Input fields for ApproveVerifiableDomainInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the verifiable domain to approve.ArchiveProjectV2ItemInputAutogenerated input type of ArchiveProjectV2Item.Input fields for ArchiveProjectV2ItemInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The ID of the ProjectV2Item to archive.projectId (ID!)The ID of the Project to archive the item from.ArchiveRepositoryInputAutogenerated input type of ArchiveRepository.Input fields for ArchiveRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The ID of the repository to mark as archived.AuditLogOrderOrdering options for Audit Log connections.Input fields for AuditLogOrderNameDescriptiondirection (OrderDirection)The ordering direction.field (AuditLogOrderField)The field to order Audit Logs by.BranchNamePatternParametersInputParameters to be used for the branch_name_pattern rule.Input fields for BranchNamePatternParametersInputNameDescriptionname (String)How this rule will appear to users.negate (Boolean)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.BulkSponsorshipInformation about a sponsorship to make for a user or organization with a GitHub
Sponsors profile, as part of sponsoring many users or organizations at once.Input fields for BulkSponsorshipNameDescriptionamount (Int!)The amount to pay to the sponsorable in US dollars. Valid values: 1-12000.sponsorableId (ID)The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.sponsorableLogin (String)The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.CancelEnterpriseAdminInvitationInputAutogenerated input type of CancelEnterpriseAdminInvitation.Input fields for CancelEnterpriseAdminInvitationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitationId (ID!)The Node ID of the pending enterprise administrator invitation.CancelEnterpriseMemberInvitationInputAutogenerated input type of CancelEnterpriseMemberInvitation.Input fields for CancelEnterpriseMemberInvitationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.invitationId (ID!)The Node ID of the pending enterprise member invitation.CancelSponsorshipInputAutogenerated input type of CancelSponsorship.Input fields for CancelSponsorshipInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sponsorId (ID)The ID of the user or organization who is acting as the sponsor, paying for
the sponsorship. Required if sponsorLogin is not given.sponsorLogin (String)The username of the user or organization who is acting as the sponsor, paying
for the sponsorship. Required if sponsorId is not given.sponsorableId (ID)The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.sponsorableLogin (String)The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.ChangeUserStatusInputAutogenerated input type of ChangeUserStatus.Input fields for ChangeUserStatusInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.emoji (String)The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., 😀.expiresAt (DateTime)If set, the user status will not be shown after this date.limitedAvailability (Boolean)Whether this status should indicate you are not fully available on GitHub, e.g., you are away.message (String)A short description of your current status.organizationId (ID)The ID of the organization whose members will be allowed to see the status. If
omitted, the status will be publicly visible.CheckAnnotationDataInformation from a check run analysis to specific lines of code.Input fields for CheckAnnotationDataNameDescriptionannotationLevel (CheckAnnotationLevel!)Represents an annotation's information level.location (CheckAnnotationRange!)The location of the annotation.message (String!)A short description of the feedback for these lines of code.path (String!)The path of the file to add an annotation to.rawDetails (String)Details about this annotation.title (String)The title that represents the annotation.CheckAnnotationRangeInformation from a check run analysis to specific lines of code.Input fields for CheckAnnotationRangeNameDescriptionendColumn (Int)The ending column of the range.endLine (Int!)The ending line of the range.startColumn (Int)The starting column of the range.startLine (Int!)The starting line of the range.CheckRunActionPossible further actions the integrator can perform.Input fields for CheckRunActionNameDescriptiondescription (String!)A short explanation of what this action would do.identifier (String!)A reference for the action on the integrator's system.label (String!)The text to be displayed on a button in the web UI.CheckRunFilterThe filters that are available when fetching check runs.Input fields for CheckRunFilterNameDescriptionappId (Int)Filters the check runs created by this application ID.checkName (String)Filters the check runs by this name.checkType (CheckRunType)Filters the check runs by this type.conclusions ([CheckConclusionState!])Filters the check runs by these conclusions.status (CheckStatusState)Filters the check runs by this status. Superceded by statuses.statuses ([CheckStatusState!])Filters the check runs by this status. Overrides status.CheckRunOutputDescriptive details about the check run.Input fields for CheckRunOutputNameDescriptionannotations ([CheckAnnotationData!])The annotations that are made as part of the check run.images ([CheckRunOutputImage!])Images attached to the check run output displayed in the GitHub pull request UI.summary (String!)The summary of the check run (supports Commonmark).text (String)The details of the check run (supports Commonmark).title (String!)A title to provide for this check run.CheckRunOutputImageImages attached to the check run output displayed in the GitHub pull request UI.Input fields for CheckRunOutputImageNameDescriptionalt (String!)The alternative text for the image.caption (String)A short image description.imageUrl (URI!)The full URL of the image.CheckSuiteAutoTriggerPreferenceThe auto-trigger preferences that are available for check suites.Input fields for CheckSuiteAutoTriggerPreferenceNameDescriptionappId (ID!)The node ID of the application that owns the check suite.setting (Boolean!)Set to true to enable automatic creation of CheckSuite events upon pushes to the repository.CheckSuiteFilterThe filters that are available when fetching check suites.Input fields for CheckSuiteFilterNameDescriptionappId (Int)Filters the check suites created by this application ID.checkName (String)Filters the check suites by this name.ClearLabelsFromLabelableInputAutogenerated input type of ClearLabelsFromLabelable.Input fields for ClearLabelsFromLabelableInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelableId (ID!)The id of the labelable object to clear the labels from.ClearProjectV2ItemFieldValueInputAutogenerated input type of ClearProjectV2ItemFieldValue.Input fields for ClearProjectV2ItemFieldValueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.fieldId (ID!)The ID of the field to be cleared.itemId (ID!)The ID of the item to be cleared.projectId (ID!)The ID of the Project.CloneProjectInputAutogenerated input type of CloneProject.Input fields for CloneProjectInputNameDescriptionbody (String)The description of the project.clientMutationId (String)A unique identifier for the client performing the mutation.includeWorkflows (Boolean!)Whether or not to clone the source project's workflows.name (String!)The name of the project.public (Boolean)The visibility of the project, defaults to false (private).sourceId (ID!)The source project to clone.targetOwnerId (ID!)The owner ID to create the project under.CloneTemplateRepositoryInputAutogenerated input type of CloneTemplateRepository.Input fields for CloneTemplateRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)A short description of the new repository.includeAllBranches (Boolean)Whether to copy all branches from the template to the new repository. Defaults
to copying only the default branch of the template.name (String!)The name of the new repository.ownerId (ID!)The ID of the owner for the new repository.repositoryId (ID!)The Node ID of the template repository.visibility (RepositoryVisibility!)Indicates the repository's visibility level.CloseDiscussionInputAutogenerated input type of CloseDiscussion.Input fields for CloseDiscussionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussionId (ID!)ID of the discussion to be closed.reason (DiscussionCloseReason)The reason why the discussion is being closed.CloseIssueInputAutogenerated input type of CloseIssue.Input fields for CloseIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.duplicateIssueId (ID)ID of the issue that this is a duplicate of.issueId (ID!)ID of the issue to be closed.stateReason (IssueClosedStateReason)The reason the issue is to be closed.ClosePullRequestInputAutogenerated input type of ClosePullRequest.Input fields for ClosePullRequestInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)ID of the pull request to be closed.CodeScanningParametersInputChoose which tools must provide code scanning results before the reference is
updated. When configured, code scanning must be enabled and have results for
both the commit and the reference being updated.Input fields for CodeScanningParametersInputNameDescriptioncodeScanningTools ([CodeScanningToolInput!]!)Tools that must provide code scanning results for this rule to pass.CodeScanningToolInputA tool that must provide code scanning results for this rule to pass.Input fields for CodeScanningToolInputNameDescriptionalertsThreshold (String!)The severity level at which code scanning results that raise alerts block a
reference update. For more information on alert severity levels, see "About code scanning alerts.".securityAlertsThreshold (String!)The severity level at which code scanning results that raise security alerts
block a reference update. For more information on security severity levels,
see "About code scanning alerts.".tool (String!)The name of a code scanning tool.CommitAuthorSpecifies an author for filtering Git commits.Input fields for CommitAuthorNameDescriptionemails ([String!])Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.id (ID)ID of a User to filter by. If non-null, only commits authored by this user
will be returned. This field takes precedence over emails.CommitAuthorEmailPatternParametersInputParameters to be used for the commit_author_email_pattern rule.Input fields for CommitAuthorEmailPatternParametersInputNameDescriptionname (String)How this rule will appear to users.negate (Boolean)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.CommitContributionOrderOrdering options for commit contribution connections.Input fields for CommitContributionOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (CommitContributionOrderField!)The field by which to order commit contributions.CommitMessageA message to include with a new commit.Input fields for CommitMessageNameDescriptionbody (String)The body of the message.headline (String!)The headline of the message.CommitMessagePatternParametersInputParameters to be used for the commit_message_pattern rule.Input fields for CommitMessagePatternParametersInputNameDescriptionname (String)How this rule will appear to users.negate (Boolean)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.CommittableBranchA git ref for a commit to be appended to.
The ref must be a branch, i.e. its fully qualified name must start
with refs/heads/ (although the input is not required to be fully
qualified).
The Ref may be specified by its global node ID or by the
repositoryNameWithOwner and branchName.
Examples
Specify a branch using a global node ID:
{ "id": "MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=" }

Specify a branch using repositoryNameWithOwner and branchName:
{
  "repositoryNameWithOwner": "github/graphql-client",
  "branchName": "main"
}.
Input fields for CommittableBranchNameDescriptionbranchName (String)The unqualified name of the branch to append the commit to.id (ID)The Node ID of the Ref to be updated.repositoryNameWithOwner (String)The nameWithOwner of the repository to commit to.CommitterEmailPatternParametersInputParameters to be used for the committer_email_pattern rule.Input fields for CommitterEmailPatternParametersInputNameDescriptionname (String)How this rule will appear to users.negate (Boolean)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.ContributionOrderOrdering options for contribution connections.Input fields for ContributionOrderNameDescriptiondirection (OrderDirection!)The ordering direction.ConvertProjectCardNoteToIssueInputAutogenerated input type of ConvertProjectCardNoteToIssue.Input fields for ConvertProjectCardNoteToIssueInputNameDescriptionbody (String)The body of the newly created issue.clientMutationId (String)A unique identifier for the client performing the mutation.projectCardId (ID!)The ProjectCard ID to convert.repositoryId (ID!)The ID of the repository to create the issue in.title (String)The title of the newly created issue. Defaults to the card's note text.ConvertProjectV2DraftIssueItemToIssueInputAutogenerated input type of ConvertProjectV2DraftIssueItemToIssue.Input fields for ConvertProjectV2DraftIssueItemToIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The ID of the draft issue ProjectV2Item to convert.repositoryId (ID!)The ID of the repository to create the issue in.ConvertPullRequestToDraftInputAutogenerated input type of ConvertPullRequestToDraft.Input fields for ConvertPullRequestToDraftInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)ID of the pull request to convert to draft.CopyProjectV2InputAutogenerated input type of CopyProjectV2.Input fields for CopyProjectV2InputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.includeDraftIssues (Boolean)Include draft issues in the new project.ownerId (ID!)The owner ID of the new project.projectId (ID!)The ID of the source Project to copy.title (String!)The title of the project.CreateAttributionInvitationInputAutogenerated input type of CreateAttributionInvitation.Input fields for CreateAttributionInvitationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The Node ID of the owner scoping the reattributable data.sourceId (ID!)The Node ID of the account owning the data to reattribute.targetId (ID!)The Node ID of the account which may claim the data.CreateBranchProtectionRuleInputAutogenerated input type of CreateBranchProtectionRule.Input fields for CreateBranchProtectionRuleInputNameDescriptionallowsDeletions (Boolean)Can this branch be deleted.allowsForcePushes (Boolean)Are force pushes allowed on this branch.blocksCreations (Boolean)Is branch creation a protected operation.bypassForcePushActorIds ([ID!])A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.bypassPullRequestActorIds ([ID!])A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.clientMutationId (String)A unique identifier for the client performing the mutation.dismissesStaleReviews (Boolean)Will new commits pushed to matching branches dismiss pull request review approvals.isAdminEnforced (Boolean)Can admins override branch protection.lockAllowsFetchAndMerge (Boolean)Whether users can pull changes from upstream when the branch is locked. Set to
true to allow fork syncing. Set to false to prevent fork syncing.lockBranch (Boolean)Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.pattern (String!)The glob-like pattern used to determine matching branches.pushActorIds ([ID!])A list of User, Team, or App IDs allowed to push to matching branches.repositoryId (ID!)The global relay id of the repository in which a new branch protection rule should be created in.requireLastPushApproval (Boolean)Whether the most recent push must be approved by someone other than the person who pushed it.requiredApprovingReviewCount (Int)Number of approving reviews required to update matching branches.requiredDeploymentEnvironments ([String!])The list of required deployment environments.requiredStatusCheckContexts ([String!])List of required status check contexts that must pass for commits to be accepted to matching branches.requiredStatusChecks ([RequiredStatusCheckInput!])The list of required status checks.requiresApprovingReviews (Boolean)Are approving reviews required to update matching branches.requiresCodeOwnerReviews (Boolean)Are reviews from code owners required to update matching branches.requiresCommitSignatures (Boolean)Are commits required to be signed.requiresConversationResolution (Boolean)Are conversations required to be resolved before merging.requiresDeployments (Boolean)Are successful deployments required before merging.requiresLinearHistory (Boolean)Are merge commits prohibited from being pushed to this branch.requiresStatusChecks (Boolean)Are status checks required to update matching branches.requiresStrictStatusChecks (Boolean)Are branches required to be up to date before merging.restrictsPushes (Boolean)Is pushing to matching branches restricted.restrictsReviewDismissals (Boolean)Is dismissal of pull request reviews restricted.reviewDismissalActorIds ([ID!])A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.CreateCheckRunInputAutogenerated input type of CreateCheckRun.Input fields for CreateCheckRunInputNameDescriptionactions ([CheckRunAction!])Possible further actions the integrator can perform, which a user may trigger.clientMutationId (String)A unique identifier for the client performing the mutation.completedAt (DateTime)The time that the check run finished.conclusion (CheckConclusionState)The final conclusion of the check.detailsUrl (URI)The URL of the integrator's site that has the full details of the check.externalId (String)A reference for the run on the integrator's system.headSha (GitObjectID!)The SHA of the head commit.name (String!)The name of the check.output (CheckRunOutput)Descriptive details about the run.repositoryId (ID!)The node ID of the repository.startedAt (DateTime)The time that the check run began.status (RequestableCheckStatusState)The current status.CreateCheckSuiteInputAutogenerated input type of CreateCheckSuite.Input fields for CreateCheckSuiteInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.headSha (GitObjectID!)The SHA of the head commit.repositoryId (ID!)The Node ID of the repository.CreateCommitOnBranchInputAutogenerated input type of CreateCommitOnBranch.Input fields for CreateCommitOnBranchInputNameDescriptionbranch (CommittableBranch!)The Ref to be updated.  Must be a branch.clientMutationId (String)A unique identifier for the client performing the mutation.expectedHeadOid (GitObjectID!)The git commit oid expected at the head of the branch prior to the commit.fileChanges (FileChanges)A description of changes to files in this commit.message (CommitMessage!)The commit message the be included with the commit.CreateDeploymentInputAutogenerated input type of CreateDeployment.Input fields for CreateDeploymentInputNameDescriptionautoMerge (Boolean)Attempt to automatically merge the default branch into the requested ref, defaults to true.clientMutationId (String)A unique identifier for the client performing the mutation.description (String)Short description of the deployment.environment (String)Name for the target deployment environment.payload (String)JSON payload with extra information about the deployment.refId (ID!)The node ID of the ref to be deployed.repositoryId (ID!)The node ID of the repository.requiredContexts ([String!])The status contexts to verify against commit status checks. To bypass required
contexts, pass an empty array. Defaults to all unique contexts.task (String)Specifies a task to execute.CreateDeploymentStatusInputAutogenerated input type of CreateDeploymentStatus.Input fields for CreateDeploymentStatusInputNameDescriptionautoInactive (Boolean)Adds a new inactive status to all non-transient, non-production environment
deployments with the same repository and environment name as the created
status's deployment.clientMutationId (String)A unique identifier for the client performing the mutation.deploymentId (ID!)The node ID of the deployment.description (String)A short description of the status. Maximum length of 140 characters.environment (String)If provided, updates the environment of the deploy. Otherwise, does not modify the environment.environmentUrl (String)Sets the URL for accessing your environment.logUrl (String)The log URL to associate with this status.       This URL should contain
output to keep the user updated while the task is running       or serve as
historical information for what happened in the deployment.state (DeploymentStatusState!)The state of the deployment.CreateDiscussionInputAutogenerated input type of CreateDiscussion.Input fields for CreateDiscussionInputNameDescriptionbody (String!)The body of the discussion.categoryId (ID!)The id of the discussion category to associate with this discussion.clientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The id of the repository on which to create the discussion.title (String!)The title of the discussion.CreateEnterpriseOrganizationInputAutogenerated input type of CreateEnterpriseOrganization.Input fields for CreateEnterpriseOrganizationInputNameDescriptionadminLogins ([String!]!)The logins for the administrators of the new organization.billingEmail (String!)The email used for sending billing receipts.clientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise owning the new organization.login (String!)The login of the new organization.profileName (String!)The profile name of the new organization.CreateEnvironmentInputAutogenerated input type of CreateEnvironment.Input fields for CreateEnvironmentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String!)The name of the environment.repositoryId (ID!)The node ID of the repository.CreateIpAllowListEntryInputAutogenerated input type of CreateIpAllowListEntry.Input fields for CreateIpAllowListEntryInputNameDescriptionallowListValue (String!)An IP address or range of addresses in CIDR notation.clientMutationId (String)A unique identifier for the client performing the mutation.isActive (Boolean!)Whether the IP allow list entry is active when an IP allow list is enabled.name (String)An optional name for the IP allow list entry.ownerId (ID!)The ID of the owner for which to create the new IP allow list entry.CreateIssueInputAutogenerated input type of CreateIssue.Input fields for CreateIssueInputNameDescriptionassigneeIds ([ID!])The Node ID of assignees for this issue.body (String)The body for the issue description.clientMutationId (String)A unique identifier for the client performing the mutation.issueTemplate (String)The name of an issue template in the repository, assigns labels and assignees from the template to the issue.issueTypeId (ID)The Node ID of the issue type for this issue.labelIds ([ID!])An array of Node IDs of labels for this issue.milestoneId (ID)The Node ID of the milestone for this issue.parentIssueId (ID)The Node ID of the parent issue to add this new issue to.projectIds ([ID!])An array of Node IDs for projects associated with this issue.repositoryId (ID!)The Node ID of the repository.title (String!)The title for the issue.CreateIssueTypeInputAutogenerated input type of CreateIssueType.Input fields for CreateIssueTypeInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.color (IssueTypeColor)Color for the issue type.description (String)Description of the new issue type.isEnabled (Boolean!)Whether or not the issue type is enabled on the org level.name (String!)Name of the new issue type.ownerId (ID!)The ID for the organization on which the issue type is created.CreateLabelInputAutogenerated input type of CreateLabel.Input fields for CreateLabelInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.color (String!)A 6 character hex code, without the leading #, identifying the color of the label.description (String)A brief description of the label, such as its purpose.name (String!)The name of the label.repositoryId (ID!)The Node ID of the repository.CreateLinkedBranchInputAutogenerated input type of CreateLinkedBranch.Input fields for CreateLinkedBranchInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)ID of the issue to link to.name (String)The name of the new branch. Defaults to issue number and title.oid (GitObjectID!)The commit SHA to base the new branch on.repositoryId (ID)ID of the repository to create the branch in. Defaults to the issue repository.CreateMigrationSourceInputAutogenerated input type of CreateMigrationSource.Input fields for CreateMigrationSourceInputNameDescriptionaccessToken (String)The migration source access token.clientMutationId (String)A unique identifier for the client performing the mutation.githubPat (String)The GitHub personal access token of the user importing to the target repository.name (String!)The migration source name.ownerId (ID!)The ID of the organization that will own the migration source.type (MigrationSourceType!)The migration source type.url (String)The migration source URL, for example https://github.com or https://monalisa.ghe.com.CreateProjectInputAutogenerated input type of CreateProject.Input fields for CreateProjectInputNameDescriptionbody (String)The description of project.clientMutationId (String)A unique identifier for the client performing the mutation.name (String!)The name of project.ownerId (ID!)The owner ID to create the project under.repositoryIds ([ID!])A list of repository IDs to create as linked repositories for the project.template (ProjectTemplate)The name of the GitHub-provided template.CreateProjectV2FieldInputAutogenerated input type of CreateProjectV2Field.Input fields for CreateProjectV2FieldInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.dataType (ProjectV2CustomFieldType!)The data type of the field.iterationConfiguration (ProjectV2IterationFieldConfigurationInput)Configuration for an iteration field.name (String!)The name of the field.projectId (ID!)The ID of the Project to create the field in.singleSelectOptions ([ProjectV2SingleSelectFieldOptionInput!])Options for a single select field. At least one value is required if data_type is SINGLE_SELECT.CreateProjectV2InputAutogenerated input type of CreateProjectV2.Input fields for CreateProjectV2InputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The owner ID to create the project under.repositoryId (ID)The repository to link the project to.teamId (ID)The team to link the project to. The team will be granted read permissions.title (String!)The title of the project.CreateProjectV2StatusUpdateInputAutogenerated input type of CreateProjectV2StatusUpdate.Input fields for CreateProjectV2StatusUpdateInputNameDescriptionbody (String)The body of the status update.clientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to create the status update in.startDate (Date)The start date of the status update.status (ProjectV2StatusUpdateStatus)The status of the status update.targetDate (Date)The target date of the status update.CreatePullRequestInputAutogenerated input type of CreatePullRequest.Input fields for CreatePullRequestInputNameDescriptionbaseRefName (String!)The name of the branch you want your changes pulled into. This should be an existing branch
on the current repository. You cannot update the base branch on a pull request to point
to another repository.body (String)The contents of the pull request.clientMutationId (String)A unique identifier for the client performing the mutation.draft (Boolean)Indicates whether this pull request should be a draft.headRefName (String!)The name of the branch where your changes are implemented. For cross-repository pull requests
in the same network, namespace head_ref_name with a user like this: username:branch.headRepositoryId (ID)The Node ID of the head repository.maintainerCanModify (Boolean)Indicates whether maintainers can modify the pull request.repositoryId (ID!)The Node ID of the repository.title (String!)The title of the pull request.CreateRefInputAutogenerated input type of CreateRef.Input fields for CreateRefInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String!)The fully qualified name of the new Ref (ie: refs/heads/my_new_branch).oid (GitObjectID!)The GitObjectID that the new Ref shall target. Must point to a commit.repositoryId (ID!)The Node ID of the Repository to create the Ref in.CreateRepositoryInputAutogenerated input type of CreateRepository.Input fields for CreateRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)A short description of the new repository.hasIssuesEnabled (Boolean)Indicates if the repository should have the issues feature enabled.hasWikiEnabled (Boolean)Indicates if the repository should have the wiki feature enabled.homepageUrl (URI)The URL for a web page about this repository.name (String!)The name of the new repository.ownerId (ID)The ID of the owner for the new repository.teamId (ID)When an organization is specified as the owner, this ID identifies the team
that should be granted access to the new repository.template (Boolean)Whether this repository should be marked as a template such that anyone who
can access it can create new repositories with the same files and directory structure.visibility (RepositoryVisibility!)Indicates the repository's visibility level.CreateRepositoryRulesetInputAutogenerated input type of CreateRepositoryRuleset.Input fields for CreateRepositoryRulesetInputNameDescriptionbypassActors ([RepositoryRulesetBypassActorInput!])A list of actors that are allowed to bypass rules in this ruleset.clientMutationId (String)A unique identifier for the client performing the mutation.conditions (RepositoryRuleConditionsInput!)The set of conditions for this ruleset.enforcement (RuleEnforcement!)The enforcement level for this ruleset.name (String!)The name of the ruleset.rules ([RepositoryRuleInput!])The list of rules for this ruleset.sourceId (ID!)The global relay id of the source in which a new ruleset should be created in.target (RepositoryRulesetTarget)The target of the ruleset.CreateSponsorsListingInputAutogenerated input type of CreateSponsorsListing.Input fields for CreateSponsorsListingInputNameDescriptionbillingCountryOrRegionCode (SponsorsCountryOrRegionCode)The country or region where the sponsorable's bank account is located.
Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.clientMutationId (String)A unique identifier for the client performing the mutation.contactEmail (String)The email address we should use to contact you about the GitHub Sponsors
profile being created. This will not be shared publicly. Must be a verified
email address already on your GitHub account. Only relevant when the
sponsorable is yourself. Defaults to your primary email address on file if omitted.fiscalHostLogin (String)The username of the supported fiscal host's GitHub organization, if you want
to receive sponsorship payouts through a fiscal host rather than directly to a
bank account. For example,Open-Source-Collectivefor Open Source Collective
or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts
for more information.fiscallyHostedProjectProfileUrl (String)The URL for your profile page on the fiscal host's website, e.g.,
https://opencollective.com/babel or https://numfocus.org/project/bokeh.
Required if fiscalHostLogin is specified.fullDescription (String)Provide an introduction to serve as the main focus that appears on your GitHub
Sponsors profile. It's a great opportunity to help potential sponsors learn
more about you, your work, and why their sponsorship is important to you.
GitHub-flavored Markdown is supported.residenceCountryOrRegionCode (SponsorsCountryOrRegionCode)The country or region where the sponsorable resides. This is for tax purposes.
Required if the sponsorable is yourself, ignored when sponsorableLogin
specifies an organization.sponsorableLogin (String)The username of the organization to create a GitHub Sponsors profile for, if
desired. Defaults to creating a GitHub Sponsors profile for the authenticated
user if omitted.CreateSponsorsTierInputAutogenerated input type of CreateSponsorsTier.Input fields for CreateSponsorsTierInputNameDescriptionamount (Int!)The value of the new tier in US dollars. Valid values: 1-12000.clientMutationId (String)A unique identifier for the client performing the mutation.description (String!)A description of what this tier is, what perks sponsors might receive, what a sponsorship at this tier means for you, etc.isRecurring (Boolean)Whether sponsorships using this tier should happen monthly/yearly or just once.publish (Boolean)Whether to make the tier available immediately for sponsors to choose.
Defaults to creating a draft tier that will not be publicly visible.repositoryId (ID)Optional ID of the private repository that sponsors at this tier should gain
read-only access to. Must be owned by an organization.repositoryName (String)Optional name of the private repository that sponsors at this tier should gain
read-only access to. Must be owned by an organization. Necessary if
repositoryOwnerLogin is given. Will be ignored if repositoryId is given.repositoryOwnerLogin (String)Optional login of the organization owner of the private repository that
sponsors at this tier should gain read-only access to. Necessary if
repositoryName is given. Will be ignored if repositoryId is given.sponsorableId (ID)The ID of the user or organization who owns the GitHub Sponsors profile.
Defaults to the current user if omitted and sponsorableLogin is not given.sponsorableLogin (String)The username of the user or organization who owns the GitHub Sponsors profile.
Defaults to the current user if omitted and sponsorableId is not given.welcomeMessage (String)Optional message new sponsors at this tier will receive.CreateSponsorshipInputAutogenerated input type of CreateSponsorship.Input fields for CreateSponsorshipInputNameDescriptionamount (Int)The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000.clientMutationId (String)A unique identifier for the client performing the mutation.isRecurring (Boolean)Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified.privacyLevel (SponsorshipPrivacy)Specify whether others should be able to see that the sponsor is sponsoring
the sponsorable. Public visibility still does not reveal which tier is used.receiveEmails (Boolean)Whether the sponsor should receive email updates from the sponsorable.sponsorId (ID)The ID of the user or organization who is acting as the sponsor, paying for
the sponsorship. Required if sponsorLogin is not given.sponsorLogin (String)The username of the user or organization who is acting as the sponsor, paying
for the sponsorship. Required if sponsorId is not given.sponsorableId (ID)The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.sponsorableLogin (String)The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.tierId (ID)The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified.CreateSponsorshipsInputAutogenerated input type of CreateSponsorships.Input fields for CreateSponsorshipsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.privacyLevel (SponsorshipPrivacy)Specify whether others should be able to see that the sponsor is sponsoring
the sponsorables. Public visibility still does not reveal the dollar value of
the sponsorship.receiveEmails (Boolean)Whether the sponsor should receive email updates from the sponsorables.recurring (Boolean)Whether the sponsorships created should continue each billing cycle for the
sponsor (monthly or annually), versus lasting only a single month. Defaults to
one-time sponsorships.sponsorLogin (String!)The username of the user or organization who is acting as the sponsor, paying for the sponsorships.sponsorships ([BulkSponsorship!]!)The list of maintainers to sponsor and for how much apiece.CreateTeamDiscussionCommentInputAutogenerated input type of CreateTeamDiscussionComment.Input fields for CreateTeamDiscussionCommentInputNameDescriptionbody (String)The content of the comment. This field is required.
Upcoming Change on 2024-07-01 UTC
Description: body will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.clientMutationId (String)A unique identifier for the client performing the mutation.discussionId (ID)The ID of the discussion to which the comment belongs. This field is required.
Upcoming Change on 2024-07-01 UTC
Description: discussionId will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.CreateTeamDiscussionInputAutogenerated input type of CreateTeamDiscussion.Input fields for CreateTeamDiscussionInputNameDescriptionbody (String)The content of the discussion. This field is required.
Upcoming Change on 2024-07-01 UTC
Description: body will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.clientMutationId (String)A unique identifier for the client performing the mutation.private (Boolean)If true, restricts the visibility of this discussion to team members and
organization owners. If false or not specified, allows any organization member
to view this discussion.
Upcoming Change on 2024-07-01 UTC
Description: private will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.teamId (ID)The ID of the team to which the discussion belongs. This field is required.
Upcoming Change on 2024-07-01 UTC
Description: teamId will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.title (String)The title of the discussion. This field is required.
Upcoming Change on 2024-07-01 UTC
Description: title will be removed. Follow the guide at
https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
find a suitable replacement.
Reason: The Team Discussions feature is deprecated in favor of Organization Discussions.CreateUserListInputAutogenerated input type of CreateUserList.Input fields for CreateUserListInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)A description of the list.isPrivate (Boolean)Whether or not the list is private.name (String!)The name of the new list.DeclineTopicSuggestionInputAutogenerated input type of DeclineTopicSuggestion.Input fields for DeclineTopicSuggestionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String)The name of the suggested topic.
Upcoming Change on 2024-04-01 UTC
Description: name will be removed.
Reason: Suggested topics are no longer supported.reason (TopicSuggestionDeclineReason)The reason why the suggested topic is declined.
Upcoming Change on 2024-04-01 UTC
Description: reason will be removed.
Reason: Suggested topics are no longer supported.repositoryId (ID)The Node ID of the repository.
Upcoming Change on 2024-04-01 UTC
Description: repositoryId will be removed.
Reason: Suggested topics are no longer supported.DeleteBranchProtectionRuleInputAutogenerated input type of DeleteBranchProtectionRule.Input fields for DeleteBranchProtectionRuleInputNameDescriptionbranchProtectionRuleId (ID!)The global relay id of the branch protection rule to be deleted.clientMutationId (String)A unique identifier for the client performing the mutation.DeleteDeploymentInputAutogenerated input type of DeleteDeployment.Input fields for DeleteDeploymentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the deployment to be deleted.DeleteDiscussionCommentInputAutogenerated input type of DeleteDiscussionComment.Input fields for DeleteDiscussionCommentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node id of the discussion comment to delete.DeleteDiscussionInputAutogenerated input type of DeleteDiscussion.Input fields for DeleteDiscussionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The id of the discussion to delete.DeleteEnvironmentInputAutogenerated input type of DeleteEnvironment.Input fields for DeleteEnvironmentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the environment to be deleted.DeleteIpAllowListEntryInputAutogenerated input type of DeleteIpAllowListEntry.Input fields for DeleteIpAllowListEntryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ipAllowListEntryId (ID!)The ID of the IP allow list entry to delete.DeleteIssueCommentInputAutogenerated input type of DeleteIssueComment.Input fields for DeleteIssueCommentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the comment to delete.DeleteIssueInputAutogenerated input type of DeleteIssue.Input fields for DeleteIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The ID of the issue to delete.DeleteIssueTypeInputAutogenerated input type of DeleteIssueType.Input fields for DeleteIssueTypeInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueTypeId (ID!)The ID of the issue type to delete.DeleteLabelInputAutogenerated input type of DeleteLabel.Input fields for DeleteLabelInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the label to be deleted.DeleteLinkedBranchInputAutogenerated input type of DeleteLinkedBranch.Input fields for DeleteLinkedBranchInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.linkedBranchId (ID!)The ID of the linked branch.DeletePackageVersionInputAutogenerated input type of DeletePackageVersion.Input fields for DeletePackageVersionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.packageVersionId (ID!)The ID of the package version to be deleted.DeleteProjectCardInputAutogenerated input type of DeleteProjectCard.Input fields for DeleteProjectCardInputNameDescriptioncardId (ID!)The id of the card to delete.clientMutationId (String)A unique identifier for the client performing the mutation.DeleteProjectColumnInputAutogenerated input type of DeleteProjectColumn.Input fields for DeleteProjectColumnInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.columnId (ID!)The id of the column to delete.DeleteProjectInputAutogenerated input type of DeleteProject.Input fields for DeleteProjectInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The Project ID to update.DeleteProjectV2FieldInputAutogenerated input type of DeleteProjectV2Field.Input fields for DeleteProjectV2FieldInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.fieldId (ID!)The ID of the field to delete.DeleteProjectV2InputAutogenerated input type of DeleteProjectV2.Input fields for DeleteProjectV2InputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to delete.DeleteProjectV2ItemInputAutogenerated input type of DeleteProjectV2Item.Input fields for DeleteProjectV2ItemInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The ID of the item to be removed.projectId (ID!)The ID of the Project from which the item should be removed.DeleteProjectV2StatusUpdateInputAutogenerated input type of DeleteProjectV2StatusUpdate.Input fields for DeleteProjectV2StatusUpdateInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.statusUpdateId (ID!)The ID of the status update to be removed.DeleteProjectV2WorkflowInputAutogenerated input type of DeleteProjectV2Workflow.Input fields for DeleteProjectV2WorkflowInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.workflowId (ID!)The ID of the workflow to be removed.DeletePullRequestReviewCommentInputAutogenerated input type of DeletePullRequestReviewComment.Input fields for DeletePullRequestReviewCommentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the comment to delete.DeletePullRequestReviewInputAutogenerated input type of DeletePullRequestReview.Input fields for DeletePullRequestReviewInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReviewId (ID!)The Node ID of the pull request review to delete.DeleteRefInputAutogenerated input type of DeleteRef.Input fields for DeleteRefInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.refId (ID!)The Node ID of the Ref to be deleted.DeleteRepositoryRulesetInputAutogenerated input type of DeleteRepositoryRuleset.Input fields for DeleteRepositoryRulesetInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryRulesetId (ID!)The global relay id of the repository ruleset to be deleted.DeleteTeamDiscussionCommentInputAutogenerated input type of DeleteTeamDiscussionComment.Input fields for DeleteTeamDiscussionCommentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the comment to delete.DeleteTeamDiscussionInputAutogenerated input type of DeleteTeamDiscussion.Input fields for DeleteTeamDiscussionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The discussion ID to delete.DeleteUserListInputAutogenerated input type of DeleteUserList.Input fields for DeleteUserListInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.listId (ID!)The ID of the list to delete.DeleteVerifiableDomainInputAutogenerated input type of DeleteVerifiableDomain.Input fields for DeleteVerifiableDomainInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the verifiable domain to delete.DeploymentOrderOrdering options for deployment connections.Input fields for DeploymentOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (DeploymentOrderField!)The field to order deployments by.DequeuePullRequestInputAutogenerated input type of DequeuePullRequest.Input fields for DequeuePullRequestInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the pull request to be dequeued.DisablePullRequestAutoMergeInputAutogenerated input type of DisablePullRequestAutoMerge.Input fields for DisablePullRequestAutoMergeInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)ID of the pull request to disable auto merge on.DiscussionOrderWays in which lists of discussions can be ordered upon return.Input fields for DiscussionOrderNameDescriptiondirection (OrderDirection!)The direction in which to order discussions by the specified field.field (DiscussionOrderField!)The field by which to order discussions.DiscussionPollOptionOrderOrdering options for discussion poll option connections.Input fields for DiscussionPollOptionOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (DiscussionPollOptionOrderField!)The field to order poll options by.DismissPullRequestReviewInputAutogenerated input type of DismissPullRequestReview.Input fields for DismissPullRequestReviewInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.message (String!)The contents of the pull request review dismissal message.pullRequestReviewId (ID!)The Node ID of the pull request review to modify.DismissRepositoryVulnerabilityAlertInputAutogenerated input type of DismissRepositoryVulnerabilityAlert.Input fields for DismissRepositoryVulnerabilityAlertInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.dismissReason (DismissReason!)The reason the Dependabot alert is being dismissed.repositoryVulnerabilityAlertId (ID!)The Dependabot alert ID to dismiss.DraftPullRequestReviewCommentSpecifies a review comment to be left with a Pull Request Review.Input fields for DraftPullRequestReviewCommentNameDescriptionbody (String!)Body of the comment to leave.path (String!)Path to the file being commented on.position (Int!)Position in the file to leave a comment on.DraftPullRequestReviewThreadSpecifies a review comment thread to be left with a Pull Request Review.Input fields for DraftPullRequestReviewThreadNameDescriptionbody (String!)Body of the comment to leave.line (Int)The line of the blob to which the thread refers. The end of the line range for
multi-line comments. Required if not using positioning.path (String)Path to the file being commented on. Required if not using positioning.side (DiffSide)The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.startLine (Int)The first line of the range to which the comment refers.startSide (DiffSide)The side of the diff on which the start line resides.EnablePullRequestAutoMergeInputAutogenerated input type of EnablePullRequestAutoMerge.Input fields for EnablePullRequestAutoMergeInputNameDescriptionauthorEmail (String)The email address to associate with this merge.clientMutationId (String)A unique identifier for the client performing the mutation.commitBody (String)Commit body to use for the commit when the PR is mergable; if omitted, a
default message will be used. NOTE: when merging with a merge queue any input
value for commit message is ignored.commitHeadline (String)Commit headline to use for the commit when the PR is mergable; if omitted, a
default message will be used. NOTE: when merging with a merge queue any input
value for commit headline is ignored.expectedHeadOid (GitObjectID)The expected head OID of the pull request.mergeMethod (PullRequestMergeMethod)The merge method to use. If omitted, defaults to MERGE. NOTE: when merging
with a merge queue any input value for merge method is ignored.pullRequestId (ID!)ID of the pull request to enable auto-merge on.EnqueuePullRequestInputAutogenerated input type of EnqueuePullRequest.Input fields for EnqueuePullRequestInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expectedHeadOid (GitObjectID)The expected head OID of the pull request.jump (Boolean)Add the pull request to the front of the queue.pullRequestId (ID!)The ID of the pull request to enqueue.EnterpriseAdministratorInvitationOrderOrdering options for enterprise administrator invitation connections.Input fields for EnterpriseAdministratorInvitationOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseAdministratorInvitationOrderField!)The field to order enterprise administrator invitations by.EnterpriseMemberInvitationOrderOrdering options for enterprise administrator invitation connections.Input fields for EnterpriseMemberInvitationOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseMemberInvitationOrderField!)The field to order enterprise member invitations by.EnterpriseMemberOrderOrdering options for enterprise member connections.Input fields for EnterpriseMemberOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseMemberOrderField!)The field to order enterprise members by.EnterpriseOrderOrdering options for enterprises.Input fields for EnterpriseOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseOrderField!)The field to order enterprises by.EnterpriseServerInstallationOrderOrdering options for Enterprise Server installation connections.Input fields for EnterpriseServerInstallationOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseServerInstallationOrderField!)The field to order Enterprise Server installations by.EnterpriseServerUserAccountEmailOrderOrdering options for Enterprise Server user account email connections.Input fields for EnterpriseServerUserAccountEmailOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseServerUserAccountEmailOrderField!)The field to order emails by.EnterpriseServerUserAccountOrderOrdering options for Enterprise Server user account connections.Input fields for EnterpriseServerUserAccountOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseServerUserAccountOrderField!)The field to order user accounts by.EnterpriseServerUserAccountsUploadOrderOrdering options for Enterprise Server user accounts upload connections.Input fields for EnterpriseServerUserAccountsUploadOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (EnterpriseServerUserAccountsUploadOrderField!)The field to order user accounts uploads by.EnvironmentsOrdering options for environments.Input fields for EnvironmentsNameDescriptiondirection (OrderDirection!)The direction in which to order environments by the specified field.field (EnvironmentOrderField!)The field to order environments by.FileAdditionA command to add a file at the given path with the given contents as part of a
commit.  Any existing file at that that path will be replaced.Input fields for FileAdditionNameDescriptioncontents (Base64String!)The base64 encoded contents of the file.path (String!)The path in the repository where the file will be located.FileChangesA description of a set of changes to a file tree to be made as part of
a git commit, modeled as zero or more file additions and zero or more
file deletions.
Both fields are optional; omitting both will produce a commit with no
file changes.
deletions and additions describe changes to files identified
by their path in the git tree using unix-style path separators, i.e.
/.  The root of a git tree is an empty string, so paths are not
slash-prefixed.
path values must be unique across all additions and deletions
provided.  Any duplication will result in a validation error.
Encoding
File contents must be provided in full for each FileAddition.
The contents of a FileAddition must be encoded using RFC 4648
compliant base64, i.e. correct padding is required and no characters
outside the standard alphabet may be used.  Invalid base64
encoding will be rejected with a validation error.
The encoded contents may be binary.
For text files, no assumptions are made about the character encoding of
the file contents (after base64 decoding).  No charset transcoding or
line-ending normalization will be performed; it is the client's
responsibility to manage the character encoding of files they provide.
However, for maximum compatibility we recommend using UTF-8 encoding
and ensuring that all files in a repository use a consistent
line-ending convention (\n or \r\n), and that all files end
with a newline.
Modeling file changes
Each of the the five types of conceptual changes that can be made in a
git commit can be described using the FileChanges type as follows:


New file addition: create file hello world\n at path docs/README.txt:
{
  "additions" [
    {
      "path": "docs/README.txt",
      "contents": base64encode("hello world\n")
    }
  ]
}



Existing file modification: change existing docs/README.txt to have new
content new content here\n:
{
  "additions" [
    {
      "path": "docs/README.txt",
      "contents": base64encode("new content here\n")
    }
  ]
}



Existing file deletion: remove existing file docs/README.txt.
Note that the path is required to exist -- specifying a
path that does not exist on the given branch will abort the
commit and return an error.
{
  "deletions" [
    {
      "path": "docs/README.txt"
    }
  ]
}



File rename with no changes: rename docs/README.txt with
previous content hello world\n to the same content at
newdocs/README.txt:
{
  "deletions" [
    {
      "path": "docs/README.txt",
    }
  ],
  "additions" [
    {
      "path": "newdocs/README.txt",
      "contents": base64encode("hello world\n")
    }
  ]
}



File rename with changes: rename docs/README.txt with
previous content hello world\n to a file at path
newdocs/README.txt with content new contents\n:
{
  "deletions" [
    {
      "path": "docs/README.txt",
    }
  ],
  "additions" [
    {
      "path": "newdocs/README.txt",
      "contents": base64encode("new contents\n")
    }
  ]
}.


Input fields for FileChangesNameDescriptionadditions ([FileAddition!])File to add or change.deletions ([FileDeletion!])Files to delete.FileDeletionA command to delete the file at the given path as part of a commit.Input fields for FileDeletionNameDescriptionpath (String!)The path to delete.FileExtensionRestrictionParametersInputPrevent commits that include files with specified file extensions from being pushed to the commit graph.Input fields for FileExtensionRestrictionParametersInputNameDescriptionrestrictedFileExtensions ([String!]!)The file extensions that are restricted from being pushed to the commit graph.FilePathRestrictionParametersInputPrevent commits that include changes in specified file and folder paths from
being pushed to the commit graph. This includes absolute paths that contain file names.Input fields for FilePathRestrictionParametersInputNameDescriptionrestrictedFilePaths ([String!]!)The file paths that are restricted from being pushed to the commit graph.FollowOrganizationInputAutogenerated input type of FollowOrganization.Input fields for FollowOrganizationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)ID of the organization to follow.FollowUserInputAutogenerated input type of FollowUser.Input fields for FollowUserInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.userId (ID!)ID of the user to follow.GistOrderOrdering options for gist connections.Input fields for GistOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (GistOrderField!)The field to order repositories by.GrantEnterpriseOrganizationsMigratorRoleInputAutogenerated input type of GrantEnterpriseOrganizationsMigratorRole.Input fields for GrantEnterpriseOrganizationsMigratorRoleInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise to which all organizations managed by it will be granted the migrator role.login (String!)The login of the user to grant the migrator role.GrantMigratorRoleInputAutogenerated input type of GrantMigratorRole.Input fields for GrantMigratorRoleInputNameDescriptionactor (String!)The user login or Team slug to grant the migrator role.actorType (ActorType!)Specifies the type of the actor, can be either USER or TEAM.clientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)The ID of the organization that the user/team belongs to.ImportProjectInputAutogenerated input type of ImportProject.Input fields for ImportProjectInputNameDescriptionbody (String)The description of Project.clientMutationId (String)A unique identifier for the client performing the mutation.columnImports ([ProjectColumnImport!]!)A list of columns containing issues and pull requests.name (String!)The name of Project.ownerName (String!)The name of the Organization or User to create the Project under.public (Boolean)Whether the Project is public or not.InviteEnterpriseAdminInputAutogenerated input type of InviteEnterpriseAdmin.Input fields for InviteEnterpriseAdminInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.email (String)The email of the person to invite as an administrator.enterpriseId (ID!)The ID of the enterprise to which you want to invite an administrator.invitee (String)The login of a user to invite as an administrator.role (EnterpriseAdministratorRole)The role of the administrator.InviteEnterpriseMemberInputAutogenerated input type of InviteEnterpriseMember.Input fields for InviteEnterpriseMemberInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.email (String)The email of the person to invite as an unaffiliated member.enterpriseId (ID!)The ID of the enterprise to which you want to invite an unaffiliated member.invitee (String)The login of a user to invite as an unaffiliated member.IpAllowListEntryOrderOrdering options for IP allow list entry connections.Input fields for IpAllowListEntryOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (IpAllowListEntryOrderField!)The field to order IP allow list entries by.IssueCommentOrderWays in which lists of issue comments can be ordered upon return.Input fields for IssueCommentOrderNameDescriptiondirection (OrderDirection!)The direction in which to order issue comments by the specified field.field (IssueCommentOrderField!)The field in which to order issue comments by.IssueFiltersWays in which to filter lists of issues.Input fields for IssueFiltersNameDescriptionassignee (String)List issues assigned to given name. Pass in null for issues with no assigned
user, and * for issues assigned to any user.createdBy (String)List issues created by given name.labels ([String!])List issues where the list of label names exist on the issue.mentioned (String)List issues where the given name is mentioned in the issue.milestone (String)List issues by given milestone argument. If an string representation of an
integer is passed, it should refer to a milestone by its database ID. Pass in
null for issues with no milestone, and * for issues that are assigned to any milestone.milestoneNumber (String)List issues by given milestone argument. If an string representation of an
integer is passed, it should refer to a milestone by its number field. Pass in
null for issues with no milestone, and * for issues that are assigned to any milestone.since (DateTime)List issues that have been updated at or after the given date.states ([IssueState!])List issues filtered by the list of states given.type (String)List issues filtered by the type given, only supported by searches on repositories.viewerSubscribed (Boolean)List issues subscribed to by viewer.IssueOrderWays in which lists of issues can be ordered upon return.Input fields for IssueOrderNameDescriptiondirection (OrderDirection!)The direction in which to order issues by the specified field.field (IssueOrderField!)The field in which to order issues by.IssueTypeOrderOrdering options for issue types connections.Input fields for IssueTypeOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (IssueTypeOrderField!)The field to order issue types by.LabelOrderWays in which lists of labels can be ordered upon return.Input fields for LabelOrderNameDescriptiondirection (OrderDirection!)The direction in which to order labels by the specified field.field (LabelOrderField!)The field in which to order labels by.LanguageOrderOrdering options for language connections.Input fields for LanguageOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (LanguageOrderField!)The field to order languages by.LinkProjectV2ToRepositoryInputAutogenerated input type of LinkProjectV2ToRepository.Input fields for LinkProjectV2ToRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the project to link to the repository.repositoryId (ID!)The ID of the repository to link to the project.LinkProjectV2ToTeamInputAutogenerated input type of LinkProjectV2ToTeam.Input fields for LinkProjectV2ToTeamInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the project to link to the team.teamId (ID!)The ID of the team to link to the project.LinkRepositoryToProjectInputAutogenerated input type of LinkRepositoryToProject.Input fields for LinkRepositoryToProjectInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to link to a Repository.repositoryId (ID!)The ID of the Repository to link to a Project.LockLockableInputAutogenerated input type of LockLockable.Input fields for LockLockableInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.lockReason (LockReason)A reason for why the item will be locked.lockableId (ID!)ID of the item to be locked.MannequinOrderOrdering options for mannequins.Input fields for MannequinOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (MannequinOrderField!)The field to order mannequins by.MarkDiscussionCommentAsAnswerInputAutogenerated input type of MarkDiscussionCommentAsAnswer.Input fields for MarkDiscussionCommentAsAnswerInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the discussion comment to mark as an answer.MarkFileAsViewedInputAutogenerated input type of MarkFileAsViewed.Input fields for MarkFileAsViewedInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.path (String!)The path of the file to mark as viewed.pullRequestId (ID!)The Node ID of the pull request.MarkProjectV2AsTemplateInputAutogenerated input type of MarkProjectV2AsTemplate.Input fields for MarkProjectV2AsTemplateInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to mark as a template.MarkPullRequestReadyForReviewInputAutogenerated input type of MarkPullRequestReadyForReview.Input fields for MarkPullRequestReadyForReviewInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)ID of the pull request to be marked as ready for review.MaxFilePathLengthParametersInputPrevent commits that include file paths that exceed the specified character limit from being pushed to the commit graph.Input fields for MaxFilePathLengthParametersInputNameDescriptionmaxFilePathLength (Int!)The maximum amount of characters allowed in file paths.MaxFileSizeParametersInputPrevent commits with individual files that exceed the specified limit from being pushed to the commit graph.Input fields for MaxFileSizeParametersInputNameDescriptionmaxFileSize (Int!)The maximum file size allowed in megabytes. This limit does not apply to Git Large File Storage (Git LFS).MergeBranchInputAutogenerated input type of MergeBranch.Input fields for MergeBranchInputNameDescriptionauthorEmail (String)The email address to associate with this commit.base (String!)The name of the base branch that the provided head will be merged into.clientMutationId (String)A unique identifier for the client performing the mutation.commitMessage (String)Message to use for the merge commit. If omitted, a default will be used.head (String!)The head to merge into the base branch. This can be a branch name or a commit GitObjectID.repositoryId (ID!)The Node ID of the Repository containing the base branch that will be modified.MergePullRequestInputAutogenerated input type of MergePullRequest.Input fields for MergePullRequestInputNameDescriptionauthorEmail (String)The email address to associate with this merge.clientMutationId (String)A unique identifier for the client performing the mutation.commitBody (String)Commit body to use for the merge commit; if omitted, a default message will be used.commitHeadline (String)Commit headline to use for the merge commit; if omitted, a default message will be used.expectedHeadOid (GitObjectID)OID that the pull request head ref must match to allow merge; if omitted, no check is performed.mergeMethod (PullRequestMergeMethod)The merge method to use. If omitted, defaults to 'MERGE'.pullRequestId (ID!)ID of the pull request to be merged.MergeQueueParametersInputMerges must be performed via a merge queue.Input fields for MergeQueueParametersInputNameDescriptioncheckResponseTimeoutMinutes (Int!)Maximum time for a required status check to report a conclusion. After this
much time has elapsed, checks that have not reported a conclusion will be
assumed to have failed.groupingStrategy (MergeQueueGroupingStrategy!)When set to ALLGREEN, the merge commit created by merge queue for each PR in
the group must pass all required checks to merge. When set to HEADGREEN, only
the commit at the head of the merge group, i.e. the commit containing changes
from all of the PRs in the group, must pass its required checks to merge.maxEntriesToBuild (Int!)Limit the number of queued pull requests requesting checks and workflow runs at the same time.maxEntriesToMerge (Int!)The maximum number of PRs that will be merged together in a group.mergeMethod (MergeQueueMergeMethod!)Method to use when merging changes from queued pull requests.minEntriesToMerge (Int!)The minimum number of PRs that will be merged together in a group.minEntriesToMergeWaitMinutes (Int!)The time merge queue should wait after the first PR is added to the queue for
the minimum group size to be met. After this time has elapsed, the minimum
group size will be ignored and a smaller group will be merged.MilestoneOrderOrdering options for milestone connections.Input fields for MilestoneOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (MilestoneOrderField!)The field to order milestones by.MinimizeCommentInputAutogenerated input type of MinimizeComment.Input fields for MinimizeCommentInputNameDescriptionclassifier (ReportedContentClassifiers!)The classification of comment.clientMutationId (String)A unique identifier for the client performing the mutation.subjectId (ID!)The Node ID of the subject to modify.MoveProjectCardInputAutogenerated input type of MoveProjectCard.Input fields for MoveProjectCardInputNameDescriptionafterCardId (ID)Place the new card after the card with this id. Pass null to place it at the top.cardId (ID!)The id of the card to move.clientMutationId (String)A unique identifier for the client performing the mutation.columnId (ID!)The id of the column to move it into.MoveProjectColumnInputAutogenerated input type of MoveProjectColumn.Input fields for MoveProjectColumnInputNameDescriptionafterColumnId (ID)Place the new column after the column with this id. Pass null to place it at the front.clientMutationId (String)A unique identifier for the client performing the mutation.columnId (ID!)The id of the column to move.OrgEnterpriseOwnerOrderOrdering options for an organization's enterprise owner connections.Input fields for OrgEnterpriseOwnerOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (OrgEnterpriseOwnerOrderField!)The field to order enterprise owners by.OrganizationOrderOrdering options for organization connections.Input fields for OrganizationOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (OrganizationOrderField!)The field to order organizations by.PackageFileOrderWays in which lists of package files can be ordered upon return.Input fields for PackageFileOrderNameDescriptiondirection (OrderDirection)The direction in which to order package files by the specified field.field (PackageFileOrderField)The field in which to order package files by.PackageOrderWays in which lists of packages can be ordered upon return.Input fields for PackageOrderNameDescriptiondirection (OrderDirection)The direction in which to order packages by the specified field.field (PackageOrderField)The field in which to order packages by.PackageVersionOrderWays in which lists of package versions can be ordered upon return.Input fields for PackageVersionOrderNameDescriptiondirection (OrderDirection)The direction in which to order package versions by the specified field.field (PackageVersionOrderField)The field in which to order package versions by.PinEnvironmentInputAutogenerated input type of PinEnvironment.Input fields for PinEnvironmentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environmentId (ID!)The ID of the environment to modify.pinned (Boolean!)The desired state of the environment. If true, environment will be pinned. If false, it will be unpinned.PinIssueInputAutogenerated input type of PinIssue.Input fields for PinIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The ID of the issue to be pinned.PinnedEnvironmentOrderOrdering options for pinned environments.Input fields for PinnedEnvironmentOrderNameDescriptiondirection (OrderDirection!)The direction in which to order pinned environments by the specified field.field (PinnedEnvironmentOrderField!)The field to order pinned environments by.ProjectCardImportAn issue or PR and its owning repository to be used in a project card.Input fields for ProjectCardImportNameDescriptionnumber (Int!)The issue or pull request number.repository (String!)Repository name with owner (owner/repository).ProjectColumnImportA project column and a list of its issues and PRs.Input fields for ProjectColumnImportNameDescriptioncolumnName (String!)The name of the column.issues ([ProjectCardImport!])A list of issues and pull requests in the column.position (Int!)The position of the column, starting from 0.ProjectOrderWays in which lists of projects can be ordered upon return.Input fields for ProjectOrderNameDescriptiondirection (OrderDirection!)The direction in which to order projects by the specified field.field (ProjectOrderField!)The field in which to order projects by.ProjectV2CollaboratorA collaborator to update on a project. Only one of the userId or teamId should be provided.Input fields for ProjectV2CollaboratorNameDescriptionrole (ProjectV2Roles!)The role to grant the collaborator.teamId (ID)The ID of the team as a collaborator.userId (ID)The ID of the user as a collaborator.ProjectV2FieldOrderOrdering options for project v2 field connections.Input fields for ProjectV2FieldOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (ProjectV2FieldOrderField!)The field to order the project v2 fields by.ProjectV2FieldValueThe values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.Input fields for ProjectV2FieldValueNameDescriptiondate (Date)The ISO 8601 date to set on the field.iterationId (String)The id of the iteration to set on the field.number (Float)The number to set on the field.singleSelectOptionId (String)The id of the single select option to set on the field.text (String)The text to set on the field.ProjectV2FiltersWays in which to filter lists of projects.Input fields for ProjectV2FiltersNameDescriptionstate (ProjectV2State)List project v2 filtered by the state given.ProjectV2ItemFieldValueOrderOrdering options for project v2 item field value connections.Input fields for ProjectV2ItemFieldValueOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (ProjectV2ItemFieldValueOrderField!)The field to order the project v2 item field values by.ProjectV2ItemOrderOrdering options for project v2 item connections.Input fields for ProjectV2ItemOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (ProjectV2ItemOrderField!)The field to order the project v2 items by.ProjectV2IterationRepresents an iteration.Input fields for ProjectV2IterationNameDescriptionduration (Int!)The duration of the iteration, in days.startDate (Date!)The start date for the iteration.title (String!)The title for the iteration.ProjectV2IterationFieldConfigurationInputRepresents an iteration field configuration.Input fields for ProjectV2IterationFieldConfigurationInputNameDescriptionduration (Int!)The duration of each iteration, in days.iterations ([ProjectV2Iteration!]!)Zero or more iterations for the field.startDate (Date!)The start date for the first iteration.ProjectV2OrderWays in which lists of projects can be ordered upon return.Input fields for ProjectV2OrderNameDescriptiondirection (OrderDirection!)The direction in which to order projects by the specified field.field (ProjectV2OrderField!)The field in which to order projects by.ProjectV2SingleSelectFieldOptionInputRepresents a single select field option.Input fields for ProjectV2SingleSelectFieldOptionInputNameDescriptioncolor (ProjectV2SingleSelectFieldOptionColor!)The display color of the option.description (String!)The description text of the option.name (String!)The name of the option.ProjectV2StatusOrderWays in which project v2 status updates can be ordered.Input fields for ProjectV2StatusOrderNameDescriptiondirection (OrderDirection!)The direction in which to order nodes.field (ProjectV2StatusUpdateOrderField!)The field by which to order nodes.ProjectV2ViewOrderOrdering options for project v2 view connections.Input fields for ProjectV2ViewOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (ProjectV2ViewOrderField!)The field to order the project v2 views by.ProjectV2WorkflowOrderOrdering options for project v2 workflows connections.Input fields for ProjectV2WorkflowOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (ProjectV2WorkflowsOrderField!)The field to order the project v2 workflows by.PropertyTargetDefinitionInputA property that must match.Input fields for PropertyTargetDefinitionInputNameDescriptionname (String!)The name of the property.propertyValues ([String!]!)The values to match for.source (String)The source of the property. Choosecustomor 'system'. Defaults to 'custom' if not specified.PublishSponsorsTierInputAutogenerated input type of PublishSponsorsTier.Input fields for PublishSponsorsTierInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.tierId (ID!)The ID of the draft tier to publish.PullRequestOrderWays in which lists of issues can be ordered upon return.Input fields for PullRequestOrderNameDescriptiondirection (OrderDirection!)The direction in which to order pull requests by the specified field.field (PullRequestOrderField!)The field in which to order pull requests by.PullRequestParametersInputRequire all commits be made to a non-target branch and submitted via a pull request before they can be merged.Input fields for PullRequestParametersInputNameDescriptionallowedMergeMethods ([PullRequestAllowedMergeMethods!])Array of allowed merge methods. Allowed values include merge, squash, and
rebase. At least one option must be enabled.automaticCopilotCodeReviewEnabled (Boolean)Automatically request review from Copilot for new pull requests, if the author has access to Copilot code review.dismissStaleReviewsOnPush (Boolean!)New, reviewable commits pushed will dismiss previous pull request review approvals.requireCodeOwnerReview (Boolean!)Require an approving review in pull requests that modify files that have a designated code owner.requireLastPushApproval (Boolean!)Whether the most recent reviewable push must be approved by someone other than the person who pushed it.requiredApprovingReviewCount (Int!)The number of approving reviews that are required before a pull request can be merged.requiredReviewThreadResolution (Boolean!)All conversations on code must be resolved before a pull request can be merged.ReactionOrderWays in which lists of reactions can be ordered upon return.Input fields for ReactionOrderNameDescriptiondirection (OrderDirection!)The direction in which to order reactions by the specified field.field (ReactionOrderField!)The field in which to order reactions by.RefNameConditionTargetInputParameters to be used for the ref_name condition.Input fields for RefNameConditionTargetInputNameDescriptionexclude ([String!]!)Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.include ([String!]!)Array of ref names or patterns to include. One of these patterns must match
for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the
default branch or ~ALL to include all branches.RefOrderWays in which lists of git refs can be ordered upon return.Input fields for RefOrderNameDescriptiondirection (OrderDirection!)The direction in which to order refs by the specified field.field (RefOrderField!)The field in which to order refs by.RefUpdateA ref update.Input fields for RefUpdateNameDescriptionafterOid (GitObjectID!)The value this ref should be updated to.beforeOid (GitObjectID)The value this ref needs to point to before the update.force (Boolean)Force a non fast-forward update.name (GitRefname!)The fully qualified name of the ref to be update. For example refs/heads/branch-name.RegenerateEnterpriseIdentityProviderRecoveryCodesInputAutogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes.Input fields for RegenerateEnterpriseIdentityProviderRecoveryCodesInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set an identity provider.RegenerateVerifiableDomainTokenInputAutogenerated input type of RegenerateVerifiableDomainToken.Input fields for RegenerateVerifiableDomainTokenInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the verifiable domain to regenerate the verification token of.RejectDeploymentsInputAutogenerated input type of RejectDeployments.Input fields for RejectDeploymentsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.comment (String)Optional comment for rejecting deployments.environmentIds ([ID!]!)The ids of environments to reject deployments.workflowRunId (ID!)The node ID of the workflow run containing the pending deployments.ReleaseOrderWays in which lists of releases can be ordered upon return.Input fields for ReleaseOrderNameDescriptiondirection (OrderDirection!)The direction in which to order releases by the specified field.field (ReleaseOrderField!)The field in which to order releases by.RemoveAssigneesFromAssignableInputAutogenerated input type of RemoveAssigneesFromAssignable.Input fields for RemoveAssigneesFromAssignableInputNameDescriptionassignableId (ID!)The id of the assignable object to remove assignees from.assigneeIds ([ID!]!)The id of users to remove as assignees.clientMutationId (String)A unique identifier for the client performing the mutation.RemoveEnterpriseAdminInputAutogenerated input type of RemoveEnterpriseAdmin.Input fields for RemoveEnterpriseAdminInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The Enterprise ID from which to remove the administrator.login (String!)The login of the user to remove as an administrator.RemoveEnterpriseIdentityProviderInputAutogenerated input type of RemoveEnterpriseIdentityProvider.Input fields for RemoveEnterpriseIdentityProviderInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise from which to remove the identity provider.RemoveEnterpriseMemberInputAutogenerated input type of RemoveEnterpriseMember.Input fields for RemoveEnterpriseMemberInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise from which the user should be removed.userId (ID!)The ID of the user to remove from the enterprise.RemoveEnterpriseOrganizationInputAutogenerated input type of RemoveEnterpriseOrganization.Input fields for RemoveEnterpriseOrganizationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise from which the organization should be removed.organizationId (ID!)The ID of the organization to remove from the enterprise.RemoveEnterpriseSupportEntitlementInputAutogenerated input type of RemoveEnterpriseSupportEntitlement.Input fields for RemoveEnterpriseSupportEntitlementInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the Enterprise which the admin belongs to.login (String!)The login of a member who will lose the support entitlement.RemoveLabelsFromLabelableInputAutogenerated input type of RemoveLabelsFromLabelable.Input fields for RemoveLabelsFromLabelableInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.labelIds ([ID!]!)The ids of labels to remove.labelableId (ID!)The id of the Labelable to remove labels from.RemoveOutsideCollaboratorInputAutogenerated input type of RemoveOutsideCollaborator.Input fields for RemoveOutsideCollaboratorInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)The ID of the organization to remove the outside collaborator from.userId (ID!)The ID of the outside collaborator to remove.RemoveReactionInputAutogenerated input type of RemoveReaction.Input fields for RemoveReactionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.content (ReactionContent!)The name of the emoji reaction to remove.subjectId (ID!)The Node ID of the subject to modify.RemoveStarInputAutogenerated input type of RemoveStar.Input fields for RemoveStarInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.starrableId (ID!)The Starrable ID to unstar.RemoveSubIssueInputAutogenerated input type of RemoveSubIssue.Input fields for RemoveSubIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The id of the issue.subIssueId (ID!)The id of the sub-issue.RemoveUpvoteInputAutogenerated input type of RemoveUpvote.Input fields for RemoveUpvoteInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subjectId (ID!)The Node ID of the discussion or comment to remove upvote.ReopenDiscussionInputAutogenerated input type of ReopenDiscussion.Input fields for ReopenDiscussionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.discussionId (ID!)ID of the discussion to be reopened.ReopenIssueInputAutogenerated input type of ReopenIssue.Input fields for ReopenIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)ID of the issue to be opened.ReopenPullRequestInputAutogenerated input type of ReopenPullRequest.Input fields for ReopenPullRequestInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)ID of the pull request to be reopened.ReorderEnvironmentInputAutogenerated input type of ReorderEnvironment.Input fields for ReorderEnvironmentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environmentId (ID!)The ID of the environment to modify.position (Int!)The desired position of the environment.ReplaceActorsForAssignableInputAutogenerated input type of ReplaceActorsForAssignable.Input fields for ReplaceActorsForAssignableInputNameDescriptionactorIds ([ID!]!)The ids of the actors to replace the existing assignees.assignableId (ID!)The id of the assignable object to replace the assignees for.clientMutationId (String)A unique identifier for the client performing the mutation.RepositoryIdConditionTargetInputParameters to be used for the repository_id condition.Input fields for RepositoryIdConditionTargetInputNameDescriptionrepositoryIds ([ID!]!)One of these repo IDs must match the repo.RepositoryInvitationOrderOrdering options for repository invitation connections.Input fields for RepositoryInvitationOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (RepositoryInvitationOrderField!)The field to order repository invitations by.RepositoryMigrationOrderOrdering options for repository migrations.Input fields for RepositoryMigrationOrderNameDescriptiondirection (RepositoryMigrationOrderDirection!)The ordering direction.field (RepositoryMigrationOrderField!)The field to order repository migrations by.RepositoryNameConditionTargetInputParameters to be used for the repository_name condition.Input fields for RepositoryNameConditionTargetInputNameDescriptionexclude ([String!]!)Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.include ([String!]!)Array of repository names or patterns to include. One of these patterns must
match for the condition to pass. Also accepts ~ALL to include all repositories.protected (Boolean)Target changes that match these patterns will be prevented except by those with bypass permissions.RepositoryOrderOrdering options for repository connections.Input fields for RepositoryOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (RepositoryOrderField!)The field to order repositories by.RepositoryPropertyConditionTargetInputParameters to be used for the repository_property condition.Input fields for RepositoryPropertyConditionTargetInputNameDescriptionexclude ([PropertyTargetDefinitionInput!]!)Array of repository properties that must not match.include ([PropertyTargetDefinitionInput!]!)Array of repository properties that must match.RepositoryRuleConditionsInputSpecifies the conditions required for a ruleset to evaluate.Input fields for RepositoryRuleConditionsInputNameDescriptionrefName (RefNameConditionTargetInput)Configuration for the ref_name condition.repositoryId (RepositoryIdConditionTargetInput)Configuration for the repository_id condition.repositoryName (RepositoryNameConditionTargetInput)Configuration for the repository_name condition.repositoryProperty (RepositoryPropertyConditionTargetInput)Configuration for the repository_property condition.RepositoryRuleInputSpecifies the attributes for a new or updated rule.Input fields for RepositoryRuleInputNameDescriptionid (ID)Optional ID of this rule when updating.parameters (RuleParametersInput)The parameters for the rule.type (RepositoryRuleType!)The type of rule to create.RepositoryRuleOrderOrdering options for repository rules.Input fields for RepositoryRuleOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (RepositoryRuleOrderField!)The field to order repository rules by.RepositoryRulesetBypassActorInputSpecifies the attributes for a new or updated ruleset bypass actor. Only one of
actor_id, repository_role_database_id, organization_admin, or deploy_key
should be specified.Input fields for RepositoryRulesetBypassActorInputNameDescriptionactorId (ID)For Team and Integration bypasses, the Team or Integration ID.bypassMode (RepositoryRulesetBypassActorBypassMode!)The bypass mode for this actor.deployKey (Boolean)For deploy key bypasses, true. Can only use ALWAYS as the bypass mode.enterpriseOwner (Boolean)For enterprise owner bypasses, true.organizationAdmin (Boolean)For organization owner bypasses, true.repositoryRoleDatabaseId (Int)For role bypasses, the role database ID.ReprioritizeSubIssueInputAutogenerated input type of ReprioritizeSubIssue.Input fields for ReprioritizeSubIssueInputNameDescriptionafterId (ID)The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).beforeId (ID)The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).clientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The id of the parent issue.subIssueId (ID!)The id of the sub-issue to reprioritize.RequestReviewsInputAutogenerated input type of RequestReviews.Input fields for RequestReviewsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.pullRequestId (ID!)The Node ID of the pull request to modify.teamIds ([ID!])The Node IDs of the team to request.union (Boolean)Add users to the set rather than replace.userIds ([ID!])The Node IDs of the user to request.RequiredDeploymentsParametersInputChoose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.Input fields for RequiredDeploymentsParametersInputNameDescriptionrequiredDeploymentEnvironments ([String!]!)The environments that must be successfully deployed to before branches can be merged.RequiredStatusCheckInputSpecifies the attributes for a new or updated required status check.Input fields for RequiredStatusCheckInputNameDescriptionappId (ID)The ID of the App that must set the status in order for it to be accepted.
Omit this value to use whichever app has recently been setting this status, or
use "any" to allow any app to set the status.context (String!)Status check context that must pass for commits to be accepted to the matching branch.RequiredStatusChecksParametersInputChoose which status checks must pass before the ref is updated. When enabled,
commits must first be pushed to another ref where the checks pass.Input fields for RequiredStatusChecksParametersInputNameDescriptiondoNotEnforceOnCreate (Boolean)Allow repositories and branches to be created if a check would otherwise prohibit it.requiredStatusChecks ([StatusCheckConfigurationInput!]!)Status checks that are required.strictRequiredStatusChecksPolicy (Boolean!)Whether pull requests targeting a matching branch must be tested with the
latest code. This setting will not take effect unless at least one status
check is enabled.RerequestCheckSuiteInputAutogenerated input type of RerequestCheckSuite.Input fields for RerequestCheckSuiteInputNameDescriptioncheckSuiteId (ID!)The Node ID of the check suite.clientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The Node ID of the repository.ResolveReviewThreadInputAutogenerated input type of ResolveReviewThread.Input fields for ResolveReviewThreadInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.threadId (ID!)The ID of the thread to resolve.RetireSponsorsTierInputAutogenerated input type of RetireSponsorsTier.Input fields for RetireSponsorsTierInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.tierId (ID!)The ID of the published tier to retire.RevertPullRequestInputAutogenerated input type of RevertPullRequest.Input fields for RevertPullRequestInputNameDescriptionbody (String)The description of the revert pull request.clientMutationId (String)A unique identifier for the client performing the mutation.draft (Boolean)Indicates whether the revert pull request should be a draft.pullRequestId (ID!)The ID of the pull request to revert.title (String)The title of the revert pull request.RevokeEnterpriseOrganizationsMigratorRoleInputAutogenerated input type of RevokeEnterpriseOrganizationsMigratorRole.Input fields for RevokeEnterpriseOrganizationsMigratorRoleInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise to which all organizations managed by it will be granted the migrator role.login (String!)The login of the user to revoke the migrator role.RevokeMigratorRoleInputAutogenerated input type of RevokeMigratorRole.Input fields for RevokeMigratorRoleInputNameDescriptionactor (String!)The user login or Team slug to revoke the migrator role from.actorType (ActorType!)Specifies the type of the actor, can be either USER or TEAM.clientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)The ID of the organization that the user/team belongs to.RuleParametersInputSpecifies the parameters for a RepositoryRule object. Only one of the fields should be specified.Input fields for RuleParametersInputNameDescriptionbranchNamePattern (BranchNamePatternParametersInput)Parameters used for the branch_name_pattern rule type.codeScanning (CodeScanningParametersInput)Parameters used for the code_scanning rule type.commitAuthorEmailPattern (CommitAuthorEmailPatternParametersInput)Parameters used for the commit_author_email_pattern rule type.commitMessagePattern (CommitMessagePatternParametersInput)Parameters used for the commit_message_pattern rule type.committerEmailPattern (CommitterEmailPatternParametersInput)Parameters used for the committer_email_pattern rule type.fileExtensionRestriction (FileExtensionRestrictionParametersInput)Parameters used for the file_extension_restriction rule type.filePathRestriction (FilePathRestrictionParametersInput)Parameters used for the file_path_restriction rule type.maxFilePathLength (MaxFilePathLengthParametersInput)Parameters used for the max_file_path_length rule type.maxFileSize (MaxFileSizeParametersInput)Parameters used for the max_file_size rule type.mergeQueue (MergeQueueParametersInput)Parameters used for the merge_queue rule type.pullRequest (PullRequestParametersInput)Parameters used for the pull_request rule type.requiredDeployments (RequiredDeploymentsParametersInput)Parameters used for the required_deployments rule type.requiredStatusChecks (RequiredStatusChecksParametersInput)Parameters used for the required_status_checks rule type.tagNamePattern (TagNamePatternParametersInput)Parameters used for the tag_name_pattern rule type.update (UpdateParametersInput)Parameters used for the update rule type.workflows (WorkflowsParametersInput)Parameters used for the workflows rule type.SavedReplyOrderOrdering options for saved reply connections.Input fields for SavedReplyOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SavedReplyOrderField!)The field to order saved replies by.SecurityAdvisoryIdentifierFilterAn advisory identifier to filter results on.Input fields for SecurityAdvisoryIdentifierFilterNameDescriptiontype (SecurityAdvisoryIdentifierType!)The identifier type.value (String!)The identifier string. Supports exact or partial matching.SecurityAdvisoryOrderOrdering options for security advisory connections.Input fields for SecurityAdvisoryOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SecurityAdvisoryOrderField!)The field to order security advisories by.SecurityVulnerabilityOrderOrdering options for security vulnerability connections.Input fields for SecurityVulnerabilityOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SecurityVulnerabilityOrderField!)The field to order security vulnerabilities by.SetEnterpriseIdentityProviderInputAutogenerated input type of SetEnterpriseIdentityProvider.Input fields for SetEnterpriseIdentityProviderInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.digestMethod (SamlDigestAlgorithm!)The digest algorithm used to sign SAML requests for the identity provider.enterpriseId (ID!)The ID of the enterprise on which to set an identity provider.idpCertificate (String!)The x509 certificate used by the identity provider to sign assertions and responses.issuer (String)The Issuer Entity ID for the SAML identity provider.signatureMethod (SamlSignatureAlgorithm!)The signature algorithm used to sign SAML requests for the identity provider.ssoUrl (URI!)The URL endpoint for the identity provider's SAML SSO.SetOrganizationInteractionLimitInputAutogenerated input type of SetOrganizationInteractionLimit.Input fields for SetOrganizationInteractionLimitInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expiry (RepositoryInteractionLimitExpiry)When this limit should expire.limit (RepositoryInteractionLimit!)The limit to set.organizationId (ID!)The ID of the organization to set a limit for.SetRepositoryInteractionLimitInputAutogenerated input type of SetRepositoryInteractionLimit.Input fields for SetRepositoryInteractionLimitInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expiry (RepositoryInteractionLimitExpiry)When this limit should expire.limit (RepositoryInteractionLimit!)The limit to set.repositoryId (ID!)The ID of the repository to set a limit for.SetUserInteractionLimitInputAutogenerated input type of SetUserInteractionLimit.Input fields for SetUserInteractionLimitInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expiry (RepositoryInteractionLimitExpiry)When this limit should expire.limit (RepositoryInteractionLimit!)The limit to set.userId (ID!)The ID of the user to set a limit for.SponsorAndLifetimeValueOrderOrdering options for connections to get sponsor entities and associated USD amounts for GitHub Sponsors.Input fields for SponsorAndLifetimeValueOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorAndLifetimeValueOrderField!)The field to order results by.SponsorOrderOrdering options for connections to get sponsor entities for GitHub Sponsors.Input fields for SponsorOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorOrderField!)The field to order sponsor entities by.SponsorableOrderOrdering options for connections to get sponsorable entities for GitHub Sponsors.Input fields for SponsorableOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorableOrderField!)The field to order sponsorable entities by.SponsorsActivityOrderOrdering options for GitHub Sponsors activity connections.Input fields for SponsorsActivityOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorsActivityOrderField!)The field to order activity by.SponsorsTierOrderOrdering options for Sponsors tiers connections.Input fields for SponsorsTierOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorsTierOrderField!)The field to order tiers by.SponsorshipNewsletterOrderOrdering options for sponsorship newsletter connections.Input fields for SponsorshipNewsletterOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorshipNewsletterOrderField!)The field to order sponsorship newsletters by.SponsorshipOrderOrdering options for sponsorship connections.Input fields for SponsorshipOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (SponsorshipOrderField!)The field to order sponsorship by.StarOrderWays in which star connections can be ordered.Input fields for StarOrderNameDescriptiondirection (OrderDirection!)The direction in which to order nodes.field (StarOrderField!)The field in which to order nodes by.StartOrganizationMigrationInputAutogenerated input type of StartOrganizationMigration.Input fields for StartOrganizationMigrationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.sourceAccessToken (String!)The migration source access token.sourceOrgUrl (URI!)The URL of the organization to migrate.targetEnterpriseId (ID!)The ID of the enterprise the target organization belongs to.targetOrgName (String!)The name of the target organization.StartRepositoryMigrationInputAutogenerated input type of StartRepositoryMigration.Input fields for StartRepositoryMigrationInputNameDescriptionaccessToken (String)The migration source access token.clientMutationId (String)A unique identifier for the client performing the mutation.continueOnError (Boolean)Whether to continue the migration on error. Defaults to true.gitArchiveUrl (String)The signed URL to access the user-uploaded git archive.githubPat (String)The GitHub personal access token of the user importing to the target repository.lockSource (Boolean)Whether to lock the source repository.metadataArchiveUrl (String)The signed URL to access the user-uploaded metadata archive.ownerId (ID!)The ID of the organization that will own the imported repository.repositoryName (String!)The name of the imported repository.skipReleases (Boolean)Whether to skip migrating releases for the repository.sourceId (ID!)The ID of the migration source.sourceRepositoryUrl (URI!)The URL of the source repository.targetRepoVisibility (String)The visibility of the imported repository.StatusCheckConfigurationInputRequired status check.Input fields for StatusCheckConfigurationInputNameDescriptioncontext (String!)The status check context name that must be present on the commit.integrationId (Int)The optional integration ID that this status check must originate from.SubmitPullRequestReviewInputAutogenerated input type of SubmitPullRequestReview.Input fields for SubmitPullRequestReviewInputNameDescriptionbody (String)The text field to set on the Pull Request Review.clientMutationId (String)A unique identifier for the client performing the mutation.event (PullRequestReviewEvent!)The event to send to the Pull Request Review.pullRequestId (ID)The Pull Request ID to submit any pending reviews.pullRequestReviewId (ID)The Pull Request Review ID to submit.TagNamePatternParametersInputParameters to be used for the tag_name_pattern rule.Input fields for TagNamePatternParametersInputNameDescriptionname (String)How this rule will appear to users.negate (Boolean)If true, the rule will fail if the pattern matches.operator (String!)The operator to use for matching.pattern (String!)The pattern to match with.TeamDiscussionCommentOrderWays in which team discussion comment connections can be ordered.Input fields for TeamDiscussionCommentOrderNameDescriptiondirection (OrderDirection!)The direction in which to order nodes.field (TeamDiscussionCommentOrderField!)The field by which to order nodes.TeamDiscussionOrderWays in which team discussion connections can be ordered.Input fields for TeamDiscussionOrderNameDescriptiondirection (OrderDirection!)The direction in which to order nodes.field (TeamDiscussionOrderField!)The field by which to order nodes.TeamMemberOrderOrdering options for team member connections.Input fields for TeamMemberOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (TeamMemberOrderField!)The field to order team members by.TeamOrderWays in which team connections can be ordered.Input fields for TeamOrderNameDescriptiondirection (OrderDirection!)The direction in which to order nodes.field (TeamOrderField!)The field in which to order nodes by.TeamRepositoryOrderOrdering options for team repository connections.Input fields for TeamRepositoryOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (TeamRepositoryOrderField!)The field to order repositories by.TransferEnterpriseOrganizationInputAutogenerated input type of TransferEnterpriseOrganization.Input fields for TransferEnterpriseOrganizationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.destinationEnterpriseId (ID!)The ID of the enterprise where the organization should be transferred.organizationId (ID!)The ID of the organization to transfer.TransferIssueInputAutogenerated input type of TransferIssue.Input fields for TransferIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.createLabelsIfMissing (Boolean)Whether to create labels if they don't exist in the target repository (matched by name).issueId (ID!)The Node ID of the issue to be transferred.repositoryId (ID!)The Node ID of the repository the issue should be transferred to.UnarchiveProjectV2ItemInputAutogenerated input type of UnarchiveProjectV2Item.Input fields for UnarchiveProjectV2ItemInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The ID of the ProjectV2Item to unarchive.projectId (ID!)The ID of the Project to archive the item from.UnarchiveRepositoryInputAutogenerated input type of UnarchiveRepository.Input fields for UnarchiveRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The ID of the repository to unarchive.UnfollowOrganizationInputAutogenerated input type of UnfollowOrganization.Input fields for UnfollowOrganizationInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)ID of the organization to unfollow.UnfollowUserInputAutogenerated input type of UnfollowUser.Input fields for UnfollowUserInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.userId (ID!)ID of the user to unfollow.UnlinkProjectV2FromRepositoryInputAutogenerated input type of UnlinkProjectV2FromRepository.Input fields for UnlinkProjectV2FromRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the project to unlink from the repository.repositoryId (ID!)The ID of the repository to unlink from the project.UnlinkProjectV2FromTeamInputAutogenerated input type of UnlinkProjectV2FromTeam.Input fields for UnlinkProjectV2FromTeamInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the project to unlink from the team.teamId (ID!)The ID of the team to unlink from the project.UnlinkRepositoryFromProjectInputAutogenerated input type of UnlinkRepositoryFromProject.Input fields for UnlinkRepositoryFromProjectInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project linked to the Repository.repositoryId (ID!)The ID of the Repository linked to the Project.UnlockLockableInputAutogenerated input type of UnlockLockable.Input fields for UnlockLockableInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.lockableId (ID!)ID of the item to be unlocked.UnmarkDiscussionCommentAsAnswerInputAutogenerated input type of UnmarkDiscussionCommentAsAnswer.Input fields for UnmarkDiscussionCommentAsAnswerInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the discussion comment to unmark as an answer.UnmarkFileAsViewedInputAutogenerated input type of UnmarkFileAsViewed.Input fields for UnmarkFileAsViewedInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.path (String!)The path of the file to mark as unviewed.pullRequestId (ID!)The Node ID of the pull request.UnmarkIssueAsDuplicateInputAutogenerated input type of UnmarkIssueAsDuplicate.Input fields for UnmarkIssueAsDuplicateInputNameDescriptioncanonicalId (ID!)ID of the issue or pull request currently considered canonical/authoritative/original.clientMutationId (String)A unique identifier for the client performing the mutation.duplicateId (ID!)ID of the issue or pull request currently marked as a duplicate.UnmarkProjectV2AsTemplateInputAutogenerated input type of UnmarkProjectV2AsTemplate.Input fields for UnmarkProjectV2AsTemplateInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.projectId (ID!)The ID of the Project to unmark as a template.UnminimizeCommentInputAutogenerated input type of UnminimizeComment.Input fields for UnminimizeCommentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.subjectId (ID!)The Node ID of the subject to modify.UnpinIssueInputAutogenerated input type of UnpinIssue.Input fields for UnpinIssueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The ID of the issue to be unpinned.UnresolveReviewThreadInputAutogenerated input type of UnresolveReviewThread.Input fields for UnresolveReviewThreadInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.threadId (ID!)The ID of the thread to unresolve.UpdateBranchProtectionRuleInputAutogenerated input type of UpdateBranchProtectionRule.Input fields for UpdateBranchProtectionRuleInputNameDescriptionallowsDeletions (Boolean)Can this branch be deleted.allowsForcePushes (Boolean)Are force pushes allowed on this branch.blocksCreations (Boolean)Is branch creation a protected operation.branchProtectionRuleId (ID!)The global relay id of the branch protection rule to be updated.bypassForcePushActorIds ([ID!])A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.bypassPullRequestActorIds ([ID!])A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.clientMutationId (String)A unique identifier for the client performing the mutation.dismissesStaleReviews (Boolean)Will new commits pushed to matching branches dismiss pull request review approvals.isAdminEnforced (Boolean)Can admins override branch protection.lockAllowsFetchAndMerge (Boolean)Whether users can pull changes from upstream when the branch is locked. Set to
true to allow fork syncing. Set to false to prevent fork syncing.lockBranch (Boolean)Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.pattern (String)The glob-like pattern used to determine matching branches.pushActorIds ([ID!])A list of User, Team, or App IDs allowed to push to matching branches.requireLastPushApproval (Boolean)Whether the most recent push must be approved by someone other than the person who pushed it.requiredApprovingReviewCount (Int)Number of approving reviews required to update matching branches.requiredDeploymentEnvironments ([String!])The list of required deployment environments.requiredStatusCheckContexts ([String!])List of required status check contexts that must pass for commits to be accepted to matching branches.requiredStatusChecks ([RequiredStatusCheckInput!])The list of required status checks.requiresApprovingReviews (Boolean)Are approving reviews required to update matching branches.requiresCodeOwnerReviews (Boolean)Are reviews from code owners required to update matching branches.requiresCommitSignatures (Boolean)Are commits required to be signed.requiresConversationResolution (Boolean)Are conversations required to be resolved before merging.requiresDeployments (Boolean)Are successful deployments required before merging.requiresLinearHistory (Boolean)Are merge commits prohibited from being pushed to this branch.requiresStatusChecks (Boolean)Are status checks required to update matching branches.requiresStrictStatusChecks (Boolean)Are branches required to be up to date before merging.restrictsPushes (Boolean)Is pushing to matching branches restricted.restrictsReviewDismissals (Boolean)Is dismissal of pull request reviews restricted.reviewDismissalActorIds ([ID!])A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.UpdateCheckRunInputAutogenerated input type of UpdateCheckRun.Input fields for UpdateCheckRunInputNameDescriptionactions ([CheckRunAction!])Possible further actions the integrator can perform, which a user may trigger.checkRunId (ID!)The node of the check.clientMutationId (String)A unique identifier for the client performing the mutation.completedAt (DateTime)The time that the check run finished.conclusion (CheckConclusionState)The final conclusion of the check.detailsUrl (URI)The URL of the integrator's site that has the full details of the check.externalId (String)A reference for the run on the integrator's system.name (String)The name of the check.output (CheckRunOutput)Descriptive details about the run.repositoryId (ID!)The node ID of the repository.startedAt (DateTime)The time that the check run began.status (RequestableCheckStatusState)The current status.UpdateCheckSuitePreferencesInputAutogenerated input type of UpdateCheckSuitePreferences.Input fields for UpdateCheckSuitePreferencesInputNameDescriptionautoTriggerPreferences ([CheckSuiteAutoTriggerPreference!]!)The check suite preferences to modify.clientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The Node ID of the repository.UpdateDiscussionCommentInputAutogenerated input type of UpdateDiscussionComment.Input fields for UpdateDiscussionCommentInputNameDescriptionbody (String!)The new contents of the comment body.clientMutationId (String)A unique identifier for the client performing the mutation.commentId (ID!)The Node ID of the discussion comment to update.UpdateDiscussionInputAutogenerated input type of UpdateDiscussion.Input fields for UpdateDiscussionInputNameDescriptionbody (String)The new contents of the discussion body.categoryId (ID)The Node ID of a discussion category within the same repository to change this discussion to.clientMutationId (String)A unique identifier for the client performing the mutation.discussionId (ID!)The Node ID of the discussion to update.title (String)The new discussion title.UpdateEnterpriseAdministratorRoleInputAutogenerated input type of UpdateEnterpriseAdministratorRole.Input fields for UpdateEnterpriseAdministratorRoleInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the Enterprise which the admin belongs to.login (String!)The login of a administrator whose role is being changed.role (EnterpriseAdministratorRole!)The new role for the Enterprise administrator.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInputAutogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting.Input fields for UpdateEnterpriseAllowPrivateRepositoryForkingSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the allow private repository forking setting.policyValue (EnterpriseAllowPrivateRepositoryForkingPolicyValue)The value for the allow private repository forking policy on the enterprise.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the allow private repository forking setting on the enterprise.UpdateEnterpriseDefaultRepositoryPermissionSettingInputAutogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting.Input fields for UpdateEnterpriseDefaultRepositoryPermissionSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the base repository permission setting.settingValue (EnterpriseDefaultRepositoryPermissionSettingValue!)The value for the base repository permission setting on the enterprise.UpdateEnterpriseDeployKeySettingInputAutogenerated input type of UpdateEnterpriseDeployKeySetting.Input fields for UpdateEnterpriseDeployKeySettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the deploy key setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the deploy key setting on the enterprise.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInputAutogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting.Input fields for UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can change repository visibility setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can change repository visibility setting on the enterprise.UpdateEnterpriseMembersCanCreateRepositoriesSettingInputAutogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting.Input fields for UpdateEnterpriseMembersCanCreateRepositoriesSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can create repositories setting.membersCanCreateInternalRepositories (Boolean)Allow members to create internal repositories. Defaults to current value.membersCanCreatePrivateRepositories (Boolean)Allow members to create private repositories. Defaults to current value.membersCanCreatePublicRepositories (Boolean)Allow members to create public repositories. Defaults to current value.membersCanCreateRepositoriesPolicyEnabled (Boolean)When false, allow member organizations to set their own repository creation member privileges.settingValue (EnterpriseMembersCanCreateRepositoriesSettingValue)Value for the members can create repositories setting on the enterprise. This
or the granular public/private/internal allowed fields (but not both) must be provided.UpdateEnterpriseMembersCanDeleteIssuesSettingInputAutogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting.Input fields for UpdateEnterpriseMembersCanDeleteIssuesSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can delete issues setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can delete issues setting on the enterprise.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInputAutogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting.Input fields for UpdateEnterpriseMembersCanDeleteRepositoriesSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can delete repositories setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can delete repositories setting on the enterprise.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInputAutogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting.Input fields for UpdateEnterpriseMembersCanInviteCollaboratorsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can invite collaborators setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can invite collaborators setting on the enterprise.UpdateEnterpriseMembersCanMakePurchasesSettingInputAutogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting.Input fields for UpdateEnterpriseMembersCanMakePurchasesSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can make purchases setting.settingValue (EnterpriseMembersCanMakePurchasesSettingValue!)The value for the members can make purchases setting on the enterprise.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInputAutogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting.Input fields for UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can update protected branches setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can update protected branches setting on the enterprise.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInputAutogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting.Input fields for UpdateEnterpriseMembersCanViewDependencyInsightsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the members can view dependency insights setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the members can view dependency insights setting on the enterprise.UpdateEnterpriseOrganizationProjectsSettingInputAutogenerated input type of UpdateEnterpriseOrganizationProjectsSetting.Input fields for UpdateEnterpriseOrganizationProjectsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the organization projects setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the organization projects setting on the enterprise.UpdateEnterpriseOwnerOrganizationRoleInputAutogenerated input type of UpdateEnterpriseOwnerOrganizationRole.Input fields for UpdateEnterpriseOwnerOrganizationRoleInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the Enterprise which the owner belongs to.organizationId (ID!)The ID of the organization for membership change.organizationRole (RoleInOrganization!)The role to assume in the organization.UpdateEnterpriseProfileInputAutogenerated input type of UpdateEnterpriseProfile.Input fields for UpdateEnterpriseProfileInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)The description of the enterprise.enterpriseId (ID!)The Enterprise ID to update.location (String)The location of the enterprise.name (String)The name of the enterprise.websiteUrl (String)The URL of the enterprise's website.UpdateEnterpriseRepositoryProjectsSettingInputAutogenerated input type of UpdateEnterpriseRepositoryProjectsSetting.Input fields for UpdateEnterpriseRepositoryProjectsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the repository projects setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the repository projects setting on the enterprise.UpdateEnterpriseTeamDiscussionsSettingInputAutogenerated input type of UpdateEnterpriseTeamDiscussionsSetting.Input fields for UpdateEnterpriseTeamDiscussionsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the team discussions setting.settingValue (EnterpriseEnabledDisabledSettingValue!)The value for the team discussions setting on the enterprise.UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInputAutogenerated input type of UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting.Input fields for UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the two-factor authentication disallowed methods setting.settingValue (EnterpriseDisallowedMethodsSettingValue!)The value for the two-factor authentication disallowed methods setting on the enterprise.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInputAutogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting.Input fields for UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enterpriseId (ID!)The ID of the enterprise on which to set the two factor authentication required setting.settingValue (EnterpriseEnabledSettingValue!)The value for the two factor authentication required setting on the enterprise.UpdateEnvironmentInputAutogenerated input type of UpdateEnvironment.Input fields for UpdateEnvironmentInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.environmentId (ID!)The node ID of the environment.preventSelfReview (Boolean)Whether deployments to this environment can be approved by the user who created the deployment.reviewers ([ID!])The ids of users or teams that can approve deployments to this environment.waitTimer (Int)The wait timer in minutes.UpdateIpAllowListEnabledSettingInputAutogenerated input type of UpdateIpAllowListEnabledSetting.Input fields for UpdateIpAllowListEnabledSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The ID of the owner on which to set the IP allow list enabled setting.settingValue (IpAllowListEnabledSettingValue!)The value for the IP allow list enabled setting.UpdateIpAllowListEntryInputAutogenerated input type of UpdateIpAllowListEntry.Input fields for UpdateIpAllowListEntryInputNameDescriptionallowListValue (String!)An IP address or range of addresses in CIDR notation.clientMutationId (String)A unique identifier for the client performing the mutation.ipAllowListEntryId (ID!)The ID of the IP allow list entry to update.isActive (Boolean!)Whether the IP allow list entry is active when an IP allow list is enabled.name (String)An optional name for the IP allow list entry.UpdateIpAllowListForInstalledAppsEnabledSettingInputAutogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting.Input fields for UpdateIpAllowListForInstalledAppsEnabledSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The ID of the owner.settingValue (IpAllowListForInstalledAppsEnabledSettingValue!)The value for the IP allow list configuration for installed GitHub Apps setting.UpdateIssueCommentInputAutogenerated input type of UpdateIssueComment.Input fields for UpdateIssueCommentInputNameDescriptionbody (String!)The updated text of the comment.clientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the IssueComment to modify.UpdateIssueInputAutogenerated input type of UpdateIssue.Input fields for UpdateIssueInputNameDescriptionassigneeIds ([ID!])An array of Node IDs of users for this issue.body (String)The body for the issue description.clientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the Issue to modify.issueTypeId (ID)The ID of the Issue Type for this issue.labelIds ([ID!])An array of Node IDs of labels for this issue.milestoneId (ID)The Node ID of the milestone for this issue.projectIds ([ID!])An array of Node IDs for projects associated with this issue.state (IssueState)The desired issue state.title (String)The title for the issue.UpdateIssueIssueTypeInputAutogenerated input type of UpdateIssueIssueType.Input fields for UpdateIssueIssueTypeInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.issueId (ID!)The ID of the issue to update.issueTypeId (ID)The ID of the issue type to update on the issue.UpdateIssueTypeInputAutogenerated input type of UpdateIssueType.Input fields for UpdateIssueTypeInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.color (IssueTypeColor)Color for the issue type.description (String)The description of the issue type.isEnabled (Boolean)Whether or not the issue type is enabled for the organization.issueTypeId (ID!)The ID of the issue type to update.name (String)The name of the issue type.UpdateLabelInputAutogenerated input type of UpdateLabel.Input fields for UpdateLabelInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.color (String)A 6 character hex code, without the leading #, identifying the updated color of the label.description (String)A brief description of the label, such as its purpose.id (ID!)The Node ID of the label to be updated.name (String)The updated name of the label.UpdateNotificationRestrictionSettingInputAutogenerated input type of UpdateNotificationRestrictionSetting.Input fields for UpdateNotificationRestrictionSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.ownerId (ID!)The ID of the owner on which to set the restrict notifications setting.settingValue (NotificationRestrictionSettingValue!)The value for the restrict notifications setting.UpdateOrganizationAllowPrivateRepositoryForkingSettingInputAutogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting.Input fields for UpdateOrganizationAllowPrivateRepositoryForkingSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.forkingEnabled (Boolean!)Enable forking of private repositories in the organization?.organizationId (ID!)The ID of the organization on which to set the allow private repository forking setting.UpdateOrganizationWebCommitSignoffSettingInputAutogenerated input type of UpdateOrganizationWebCommitSignoffSetting.Input fields for UpdateOrganizationWebCommitSignoffSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.organizationId (ID!)The ID of the organization on which to set the web commit signoff setting.webCommitSignoffRequired (Boolean!)Enable signoff on web-based commits for repositories in the organization?.UpdateParametersInputOnly allow users with bypass permission to update matching refs.Input fields for UpdateParametersInputNameDescriptionupdateAllowsFetchAndMerge (Boolean!)Branch can pull changes from its upstream repository.UpdatePatreonSponsorabilityInputAutogenerated input type of UpdatePatreonSponsorability.Input fields for UpdatePatreonSponsorabilityInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.enablePatreonSponsorships (Boolean!)Whether Patreon tiers should be shown on the GitHub Sponsors profile page,
allowing potential sponsors to make their payment through Patreon instead of GitHub.sponsorableLogin (String)The username of the organization with the GitHub Sponsors profile, if any.
Defaults to the GitHub Sponsors profile for the authenticated user if omitted.UpdateProjectCardInputAutogenerated input type of UpdateProjectCard.Input fields for UpdateProjectCardInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.isArchived (Boolean)Whether or not the ProjectCard should be archived.note (String)The note of ProjectCard.projectCardId (ID!)The ProjectCard ID to update.UpdateProjectColumnInputAutogenerated input type of UpdateProjectColumn.Input fields for UpdateProjectColumnInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.name (String!)The name of project column.projectColumnId (ID!)The ProjectColumn ID to update.UpdateProjectInputAutogenerated input type of UpdateProject.Input fields for UpdateProjectInputNameDescriptionbody (String)The description of project.clientMutationId (String)A unique identifier for the client performing the mutation.name (String)The name of project.projectId (ID!)The Project ID to update.public (Boolean)Whether the project is public or not.state (ProjectState)Whether the project is open or closed.UpdateProjectV2CollaboratorsInputAutogenerated input type of UpdateProjectV2Collaborators.Input fields for UpdateProjectV2CollaboratorsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.collaborators ([ProjectV2Collaborator!]!)The collaborators to update.projectId (ID!)The ID of the project to update the collaborators for.UpdateProjectV2DraftIssueInputAutogenerated input type of UpdateProjectV2DraftIssue.Input fields for UpdateProjectV2DraftIssueInputNameDescriptionassigneeIds ([ID!])The IDs of the assignees of the draft issue.body (String)The body of the draft issue.clientMutationId (String)A unique identifier for the client performing the mutation.draftIssueId (ID!)The ID of the draft issue to update.title (String)The title of the draft issue.UpdateProjectV2FieldInputAutogenerated input type of UpdateProjectV2Field.Input fields for UpdateProjectV2FieldInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.fieldId (ID!)The ID of the field to update.iterationConfiguration (ProjectV2IterationFieldConfigurationInput)Configuration for an iteration field.name (String)The name to update.singleSelectOptions ([ProjectV2SingleSelectFieldOptionInput!])Options for a field of type SINGLE_SELECT. If empty, no changes will be made
to the options. If values are present, they will overwrite the existing
options for the field.UpdateProjectV2InputAutogenerated input type of UpdateProjectV2.Input fields for UpdateProjectV2InputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.closed (Boolean)Set the project to closed or open.projectId (ID!)The ID of the Project to update.public (Boolean)Set the project to public or private.readme (String)Set the readme description of the project.shortDescription (String)Set the short description of the project.title (String)Set the title of the project.UpdateProjectV2ItemFieldValueInputAutogenerated input type of UpdateProjectV2ItemFieldValue.Input fields for UpdateProjectV2ItemFieldValueInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.fieldId (ID!)The ID of the field to be updated.itemId (ID!)The ID of the item to be updated.projectId (ID!)The ID of the Project.value (ProjectV2FieldValue!)The value which will be set on the field.UpdateProjectV2ItemPositionInputAutogenerated input type of UpdateProjectV2ItemPosition.Input fields for UpdateProjectV2ItemPositionInputNameDescriptionafterId (ID)The ID of the item to position this item after. If omitted or set to null the item will be moved to top.clientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The ID of the item to be moved.projectId (ID!)The ID of the Project.UpdateProjectV2StatusUpdateInputAutogenerated input type of UpdateProjectV2StatusUpdate.Input fields for UpdateProjectV2StatusUpdateInputNameDescriptionbody (String)The body of the status update.clientMutationId (String)A unique identifier for the client performing the mutation.startDate (Date)The start date of the status update.status (ProjectV2StatusUpdateStatus)The status of the status update.statusUpdateId (ID!)The ID of the status update to be updated.targetDate (Date)The target date of the status update.UpdatePullRequestBranchInputAutogenerated input type of UpdatePullRequestBranch.Input fields for UpdatePullRequestBranchInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.expectedHeadOid (GitObjectID)The head ref oid for the upstream branch.pullRequestId (ID!)The Node ID of the pull request.updateMethod (PullRequestBranchUpdateMethod)The update branch method to use. If omitted, defaults to 'MERGE'.UpdatePullRequestInputAutogenerated input type of UpdatePullRequest.Input fields for UpdatePullRequestInputNameDescriptionassigneeIds ([ID!])An array of Node IDs of users for this pull request.baseRefName (String)The name of the branch you want your changes pulled into. This should be an existing branch
on the current repository.body (String)The contents of the pull request.clientMutationId (String)A unique identifier for the client performing the mutation.labelIds ([ID!])An array of Node IDs of labels for this pull request.maintainerCanModify (Boolean)Indicates whether maintainers can modify the pull request.milestoneId (ID)The Node ID of the milestone for this pull request.projectIds ([ID!])An array of Node IDs for projects associated with this pull request.pullRequestId (ID!)The Node ID of the pull request.state (PullRequestUpdateState)The target state of the pull request.title (String)The title of the pull request.UpdatePullRequestReviewCommentInputAutogenerated input type of UpdatePullRequestReviewComment.Input fields for UpdatePullRequestReviewCommentInputNameDescriptionbody (String!)The text of the comment.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReviewCommentId (ID!)The Node ID of the comment to modify.UpdatePullRequestReviewInputAutogenerated input type of UpdatePullRequestReview.Input fields for UpdatePullRequestReviewInputNameDescriptionbody (String!)The contents of the pull request review body.clientMutationId (String)A unique identifier for the client performing the mutation.pullRequestReviewId (ID!)The Node ID of the pull request review to modify.UpdateRefInputAutogenerated input type of UpdateRef.Input fields for UpdateRefInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.force (Boolean)Permit updates of branch Refs that are not fast-forwards?.oid (GitObjectID!)The GitObjectID that the Ref shall be updated to target.refId (ID!)The Node ID of the Ref to be updated.UpdateRefsInputAutogenerated input type of UpdateRefs.Input fields for UpdateRefsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.refUpdates ([RefUpdate!]!)A list of ref updates.repositoryId (ID!)The Node ID of the repository.UpdateRepositoryInputAutogenerated input type of UpdateRepository.Input fields for UpdateRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)A new description for the repository. Pass an empty string to erase the existing description.hasDiscussionsEnabled (Boolean)Indicates if the repository should have the discussions feature enabled.hasIssuesEnabled (Boolean)Indicates if the repository should have the issues feature enabled.hasProjectsEnabled (Boolean)Indicates if the repository should have the project boards feature enabled.hasSponsorshipsEnabled (Boolean)Indicates if the repository displays a Sponsor button for financial contributions.hasWikiEnabled (Boolean)Indicates if the repository should have the wiki feature enabled.homepageUrl (URI)The URL for a web page about this repository. Pass an empty string to erase the existing URL.name (String)The new name of the repository.repositoryId (ID!)The ID of the repository to update.template (Boolean)Whether this repository should be marked as a template such that anyone who
can access it can create new repositories with the same files and directory structure.UpdateRepositoryRulesetInputAutogenerated input type of UpdateRepositoryRuleset.Input fields for UpdateRepositoryRulesetInputNameDescriptionbypassActors ([RepositoryRulesetBypassActorInput!])A list of actors that are allowed to bypass rules in this ruleset.clientMutationId (String)A unique identifier for the client performing the mutation.conditions (RepositoryRuleConditionsInput)The list of conditions for this ruleset.enforcement (RuleEnforcement)The enforcement level for this ruleset.name (String)The name of the ruleset.repositoryRulesetId (ID!)The global relay id of the repository ruleset to be updated.rules ([RepositoryRuleInput!])The list of rules for this ruleset.target (RepositoryRulesetTarget)The target of the ruleset.UpdateRepositoryWebCommitSignoffSettingInputAutogenerated input type of UpdateRepositoryWebCommitSignoffSetting.Input fields for UpdateRepositoryWebCommitSignoffSettingInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The ID of the repository to update.webCommitSignoffRequired (Boolean!)Indicates if the repository should require signoff on web-based commits.UpdateSponsorshipPreferencesInputAutogenerated input type of UpdateSponsorshipPreferences.Input fields for UpdateSponsorshipPreferencesInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.privacyLevel (SponsorshipPrivacy)Specify whether others should be able to see that the sponsor is sponsoring
the sponsorable. Public visibility still does not reveal which tier is used.receiveEmails (Boolean)Whether the sponsor should receive email updates from the sponsorable.sponsorId (ID)The ID of the user or organization who is acting as the sponsor, paying for
the sponsorship. Required if sponsorLogin is not given.sponsorLogin (String)The username of the user or organization who is acting as the sponsor, paying
for the sponsorship. Required if sponsorId is not given.sponsorableId (ID)The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.sponsorableLogin (String)The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.UpdateSubscriptionInputAutogenerated input type of UpdateSubscription.Input fields for UpdateSubscriptionInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.state (SubscriptionState!)The new state of the subscription.subscribableId (ID!)The Node ID of the subscribable object to modify.UpdateTeamDiscussionCommentInputAutogenerated input type of UpdateTeamDiscussionComment.Input fields for UpdateTeamDiscussionCommentInputNameDescriptionbody (String!)The updated text of the comment.bodyVersion (String)The current version of the body content.clientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the comment to modify.UpdateTeamDiscussionInputAutogenerated input type of UpdateTeamDiscussion.Input fields for UpdateTeamDiscussionInputNameDescriptionbody (String)The updated text of the discussion.bodyVersion (String)The current version of the body content. If provided, this update operation
will be rejected if the given version does not match the latest version on the server.clientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The Node ID of the discussion to modify.pinned (Boolean)If provided, sets the pinned state of the updated discussion.title (String)The updated title of the discussion.UpdateTeamReviewAssignmentInputAutogenerated input type of UpdateTeamReviewAssignment.Input fields for UpdateTeamReviewAssignmentInputNameDescriptionalgorithm (TeamReviewAssignmentAlgorithm)The algorithm to use for review assignment.clientMutationId (String)A unique identifier for the client performing the mutation.countMembersAlreadyRequested (Boolean)Count any members whose review has already been requested against the required number of members assigned to review.enabled (Boolean!)Turn on or off review assignment.excludedTeamMemberIds ([ID!])An array of team member IDs to exclude.id (ID!)The Node ID of the team to update review assignments of.includeChildTeamMembers (Boolean)Include the members of any child teams when assigning.notifyTeam (Boolean)Notify the entire team of the PR if it is delegated.removeTeamRequest (Boolean)Remove the team review request when assigning.teamMemberCount (Int)The number of team members to assign.UpdateTeamsRepositoryInputAutogenerated input type of UpdateTeamsRepository.Input fields for UpdateTeamsRepositoryInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.permission (RepositoryPermission!)Permission that should be granted to the teams.repositoryId (ID!)Repository ID being granted access to.teamIds ([ID!]!)A list of teams being granted access. Limit: 10.UpdateTopicsInputAutogenerated input type of UpdateTopics.Input fields for UpdateTopicsInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.repositoryId (ID!)The Node ID of the repository.topicNames ([String!]!)An array of topic names.UpdateUserListInputAutogenerated input type of UpdateUserList.Input fields for UpdateUserListInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.description (String)A description of the list.isPrivate (Boolean)Whether or not the list is private.listId (ID!)The ID of the list to update.name (String)The name of the list.UpdateUserListsForItemInputAutogenerated input type of UpdateUserListsForItem.Input fields for UpdateUserListsForItemInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.itemId (ID!)The item to add to the list.listIds ([ID!]!)The lists to which this item should belong.suggestedListIds ([ID!])The suggested lists to create and add this item to.UserStatusOrderOrdering options for user status connections.Input fields for UserStatusOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (UserStatusOrderField!)The field to order user statuses by.VerifiableDomainOrderOrdering options for verifiable domain connections.Input fields for VerifiableDomainOrderNameDescriptiondirection (OrderDirection!)The ordering direction.field (VerifiableDomainOrderField!)The field to order verifiable domains by.VerifyVerifiableDomainInputAutogenerated input type of VerifyVerifiableDomain.Input fields for VerifyVerifiableDomainInputNameDescriptionclientMutationId (String)A unique identifier for the client performing the mutation.id (ID!)The ID of the verifiable domain to verify.WorkflowFileReferenceInputA workflow that must run for this rule to pass.Input fields for WorkflowFileReferenceInputNameDescriptionpath (String!)The path to the workflow file.ref (String)The ref (branch or tag) of the workflow file to use.repositoryId (Int!)The ID of the repository where the workflow is defined.sha (String)The commit SHA of the workflow file to use.WorkflowRunOrderWays in which lists of workflow runs can be ordered upon return.Input fields for WorkflowRunOrderNameDescriptiondirection (OrderDirection!)The direction in which to order workflow runs by the specified field.field (WorkflowRunOrderField!)The field by which to order workflows.WorkflowsParametersInputRequire all changes made to a targeted branch to pass the specified workflows before they can be merged.Input fields for WorkflowsParametersInputNameDescriptiondoNotEnforceOnCreate (Boolean)Allow repositories and branches to be created if a check would otherwise prohibit it.workflows ([WorkflowFileReferenceInput!]!)Workflows that must pass for this rule to pass.\n\n\n\nGraphQL API/Reference/ScalarsScalarsScalars are primitive values Int, Float, String, Boolean, or ID.In this articleAbout scalarsBase64StringBigIntBooleanDateDateTimeFloatGitObjectIDGitRefnameGitSSHRemoteGitTimestampHTMLIDIntPreciseDateTimeStringURIX509CertificateAbout scalars
Scalars are primitive values: Int, Float, String, Boolean, or ID.
When calling the GraphQL API, you must specify nested subfields until you return only scalars.
For more information, see Introduction to GraphQL.Base64StringA (potentially binary) string encoded using base64.BigIntRepresents non-fractional signed whole numeric values. Since the value may
exceed the size of a 32-bit integer, it's encoded as a string.BooleanRepresents true or false values.DateAn ISO-8601 encoded date string.DateTimeAn ISO-8601 encoded UTC date string.FloatRepresents signed double-precision fractional values as specified by IEEE 754.GitObjectIDA Git object ID.GitRefnameA fully qualified reference name (e.g. refs/heads/master).GitSSHRemoteGit SSH string.GitTimestampAn ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.HTMLA string containing HTML code.IDRepresents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as "VXNlci0xMA==") or integer (such as 4) input value will be accepted as an ID.IntRepresents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.PreciseDateTimeAn ISO-8601 encoded UTC date string with millisecond precision.StringRepresents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.URIAn RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.X509CertificateA valid x509 certificate string.\n\n\n\nGraphQL API/Guides/Introduction to GraphQLIntroduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.In this articleGraphQL terminologySchemaFieldArgumentImplementationConnectionEdgeNodeDiscovering the GraphQL APIGraphQL terminology
The GitHub GraphQL API represents an architectural and conceptual shift from the GitHub REST API. You will likely encounter some new terminology in the GraphQL API reference docs.
Schema
A schema defines a GraphQL API's type system. It describes the complete set of possible data (objects, fields, relationships, everything) that a client can access. Calls from the client are validated and executed against the schema. A client can find information about the schema via introspection. A schema resides on the GraphQL API server. For more information, see Discovering the GraphQL API.
Field
A field is a unit of data you can retrieve from an object. As the official GraphQL docs say:
"The GraphQL query language is basically about selecting fields on objects."
The official spec also says about fields:

All GraphQL operations must specify their selections down to fields which return scalar values to ensure an unambiguously shaped response.

This means that if you try to return a field that is not a scalar, schema validation will throw an error. You must add nested subfields until all fields return scalars.
Argument
An argument is a set of key-value pairs attached to a specific field. Some fields require an argument. Mutations require an input object as an argument.
Implementation
A GraphQL schema may use the term implements to define how an object inherits from an interface.
Here's a contrived example of a schema that defines interface X and object Y:
interface X {
  some_field: String!
  other_field: String!
}

type Y implements X {
  some_field: String!
  other_field: String!
  new_field: String!
}

This means object Y requires the same fields/arguments/return types that interface X does, while adding new fields specific to object Y. (The ! means the field is required.)
In the reference docs, you'll find that:


Each object lists the interface(s) from which it inherits under Implements.


Each interface lists the objects that inherit from it under Implementations.


Connection
Connections let you query related objects as part of the same call. With connections, you can use a single GraphQL call where you would have to use multiple calls to a REST API. For more information, see Migrating from REST to GraphQL.
It's helpful to picture a graph: dots connected by lines. The dots are nodes, the lines are edges. A connection defines a relationship between nodes.
Edge
Edges represent connections between nodes. When you query a connection, you traverse its edges to get to its nodes. Every edges field has a node field and a cursor field. Cursors are used for pagination. For more information, see Using pagination in the GraphQL API.
Node
Node is a generic term for an object. You can look up a node directly, or you can access related nodes via a connection. If you specify a node that does not return a scalar, you must include subfields until all fields return scalars. For information on accessing node IDs via the REST API and using them in GraphQL queries, see Using global node IDs.
Discovering the GraphQL API
GraphQL is introspective. This means you can query a GraphQL schema for details about itself.


Query __schema to list all types defined in the schema and get details about each:
query {
  __schema {
    types {
      name
      kind
      description
      fields {
        name
      }
    }
  }
}



Query __type to get details about any type:
query {
  __type(name: "Repository") {
    name
    kind
    description
    fields {
      name
    }
  }
}



You can also run an introspection query of the schema via a GET request:
curl -H "Authorization: bearer TOKEN" https://api.github.com/graphql

Note

If you get the response "message": "Bad credentials" or 401 Unauthorized, check that you are using a valid token. If you receive a 403 error with Resource not accessible by personal access token, ensure that your fine-grained personal access token is targeted to the correct resource owner. For example, it must target the organization that owns the repository you are trying to access.

The results are in JSON, so we recommend pretty-printing them for easier reading and searching. You can use a command-line tool like jq or pipe the results into python -m json.tool for this purpose.
Alternatively, you can pass the idl media type to return the results in IDL format, which is a condensed version of the schema:
$ curl -H "Authorization: bearer TOKEN" -H "Accept: application/vnd.github.v4.idl" \
https://api.github.com/graphql

Note

The introspection query is probably the only GET request you'll run in GraphQL. If you're passing a body, the GraphQL request method is POST, whether it's a query or a mutation.

For more information about performing queries, see Forming calls with GraphQL.\n\n\n\nGraphQL API/Guides/Form calls with GraphQLForming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.In this articleAuthenticating with GraphQLThe GraphQL endpointCommunicating with GraphQLWorking with variablesExample queryExample mutationFurther readingAuthenticating with GraphQL
You can authenticate to the GraphQL API using a personal access token, GitHub App, or OAuth app.
Authenticating with a personal access token
To authenticate with a personal access token, follow the steps in Managing your personal access tokens. The data that you are requesting will dictate which scopes or permissions you will need.
For example, select the "issues:read" permission to read all of the issues in the repositories your token has access to.
All fine-grained personal access tokens include read access to public repositories. To access public repositories with a personal access token (classic), select the "public_repo" scope.
If your token does not have the required scopes or permissions to access a resource, the API will return an error message that states the scopes or permissions your token needs.
Authenticating with a GitHub App
If you want to use the API on behalf of an organization or another user, GitHub recommends that you use a GitHub App. In order to attribute activity to your app, you can make your app authenticate as an app installation. In order to attribute app activity to a user, you can make your app authenticate on behalf of a user. In both cases, you will generate a token that you can use to authenticate to the GraphQL API. For more information, see Registering a GitHub App and About authentication with a GitHub App.
Authenticating with a OAuth app
To authenticate with an OAuth token from an OAuth app, you must first authorize your OAuth app using either a web application flow or device flow. Then, you can use the access token that you received to access the API. For more information, see Creating an OAuth app and Authorizing OAuth apps.
The GraphQL endpoint
The REST API has numerous endpoints. With the GraphQL API, the endpoint remains constant, no matter what operation you perform. For GitHub.com, that endpoint is:
https://api.github.com/graphql
Communicating with GraphQL
Because GraphQL operations consist of multiline JSON, GitHub recommends using the Explorer to make GraphQL calls. You can also use curl or any other HTTP-speaking library.
In REST, HTTP verbs determine the operation performed. In GraphQL, you'll provide a JSON-encoded body whether you're performing a query or a mutation, so the HTTP verb is POST. The exception is an introspection query, which is a simple GET to the endpoint. For more information on GraphQL versus REST, see Migrating from REST to GraphQL.
To query GraphQL in a curl command, make a POST request with a JSON payload. The payload must contain a string called query:
curl -H "Authorization: bearer TOKEN" -X POST -d " \
 { \
   \"query\": \"query { viewer { login }}\" \
 } \
" https://api.github.com/graphql

Note

The string value of "query" must escape newline characters or the schema will not parse it correctly. For the POST body, use outer double quotes and escaped inner double quotes.

About query and mutation operations
The two types of allowed operations in GitHub's GraphQL API are queries and mutations. Comparing GraphQL to REST, queries operate like GET requests, while mutations operate like POST/PATCH/DELETE. The mutation name determines which modification is executed.
For information about rate limiting, see Rate limits and node limits for the GraphQL API.
Queries and mutations share similar forms, with some important differences.
About queries
GraphQL queries return only the data you specify. To form a query, you must specify fields within fields (also known as nested subfields) until you return only scalars.
Queries are structured like this:
query {
  JSON-OBJECT-TO-RETURN
}
For a real-world example, see Example query.
About mutations
To form a mutation, you must specify three things:

Mutation name. The type of modification you want to perform.
Input object. The data you want to send to the server, composed of input fields. Pass it as an argument to the mutation name.
Payload object. The data you want to return from the server, composed of return fields. Pass it as the body of the mutation name.

Mutations are structured like this:
mutation {
  MUTATION-NAME(input: {MUTATION-NAME-INPUT!}) {
    MUTATION-NAME-PAYLOAD
  }
}
The input object in this example is MutationNameInput, and the payload object is MutationNamePayload.
In the mutations reference, the listed input fields are what you pass as the input object. The listed return fields are what you pass as the payload object.
For a real-world example, see Example mutation.
Working with variables
Variables can make queries more dynamic and powerful, and they can reduce complexity when passing mutation input objects.
Note

If you're using the Explorer, make sure to enter variables in the separate Query Variables pane, and do not include the word variables before the JSON object.

Here's an example query with a single variable:
query($number_of_repos:Int!) {
  viewer {
    name
     repositories(last: $number_of_repos) {
       nodes {
         name
       }
     }
   }
}
variables {
   "number_of_repos": 3
}

There are three steps to using variables:


Define the variable outside the operation in a variables object:
variables {
   "number_of_repos": 3
}

The object must be valid JSON. This example shows a simple Int variable type, but it's possible to define more complex variable types, such as input objects. You can also define multiple variables here.


Pass the variable to the operation as an argument:
query($number_of_repos:Int!){

The argument is a key-value pair, where the key is the name starting with $ (e.g., $number_of_repos), and the value is the type (e.g., Int). Add a ! to indicate whether the type is required. If you've defined multiple variables, include them here as multiple arguments.


Use the variable within the operation:
repositories(last: $number_of_repos) {

In this example, we substitute the variable for the number of repositories to retrieve. We specify a type in step 2 because GraphQL enforces strong typing.


This process makes the query argument dynamic. We can now simply change the value in the variables object and keep the rest of the query the same.
Using variables as arguments lets you dynamically update values in the variables object without changing the query.
Example query
Let's walk through a more complex query and put this information in context.
The following query looks up the octocat/Hello-World repository, finds the 20 most recent closed issues, and returns each issue's title, URL, and first 5 labels:
query {
  repository(owner:"octocat", name:"Hello-World") {
    issues(last:20, states:CLOSED) {
      edges {
        node {
          title
          url
          labels(first:5) {
            edges {
              node {
                name
              }
            }
          }
        }
      }
    }
  }
}

Looking at the composition line by line:


query {
Because we want to read data from the server, not modify it, query is the root operation. (If you don't specify an operation, query is also the default.)


repository(owner:"octocat", name:"Hello-World") {
To begin the query, we want to find a repository object. The schema validation indicates this object requires an owner and a name argument.


issues(last:20, states:CLOSED) {
To account for all issues in the repository, we call the issues object. (We could query a single issue on a repository, but that would require us to know the number of the issue we want to return and provide it as an argument.)
Some details about the issues object:

The docs tell us this object has the type IssueConnection.
Schema validation indicates this object requires a last or first number of results as an argument, so we provide 20.
The docs also tell us this object accepts a states argument, which is an IssueState enum that accepts OPEN or CLOSED values. To find only closed issues, we give the states key a value of CLOSED.



edges {
We know issues is a connection because it has the IssueConnection type. To retrieve data about individual issues, we have to access the node via edges.


node {
Here we retrieve the node at the end of the edge. The IssueConnection docs indicate the node at the end of the IssueConnection type is an Issue object.


Now that we know we're retrieving an Issue object, we can look at the docs and specify the fields we want to return:
title
url
labels(first:5) {
  edges {
    node {
      name
    }
  }
}

Here we specify the title, url, and labels fields of the Issue object.
The labels field has the type LabelConnection. As with the issues object, because labels is a connection, we must travel its edges to a connected node: the label object. At the node, we can specify the label object fields we want to return, in this case, name.


You may notice that running this query on the Octocat's public Hello-World repository won't return many labels. Try running it on one of your own repositories that does use labels, and you'll likely see a difference.
Example mutation
Mutations often require information that you can only find out by performing a query first. This example shows two operations:

A query to get an issue ID.
A mutation to add an emoji reaction to the issue.

query FindIssueID {
  repository(owner:"octocat", name:"Hello-World") {
    issue(number:349) {
      id
    }
  }
}

mutation AddReactionToIssue {
  addReaction(input:{subjectId:"MDU6SXNzdWUyMzEzOTE1NTE=",content:HOORAY}) {
    reaction {
      content
    }
    subject {
      id
    }
  }
}

Tip

Although you can include a query and a mutation in the same Explorer window if you give them names (FindIssueID and AddReactionToIssue in this example), the operations will be executed as separate calls to the GraphQL endpoint. It's not possible to perform a query at the same time as a mutation, or vice versa.

Let's walk through the example. The task sounds simple: add an emoji reaction to an issue.
So how do we know to begin with a query? We don't, yet.
Because we want to modify data on the server (attach an emoji to an issue), we begin by searching the schema for a helpful mutation. The reference docs show the addReaction mutation, with this description: Adds a reaction to a subject. Perfect!
The docs for the mutation list three input fields:

clientMutationId (String)
subjectId (ID!)
content (ReactionContent!)

The !s indicate that subjectId and content are required fields. A required content makes sense: we want to add a reaction, so we'll need to specify which emoji to use.
But why is subjectId required? It's because the subjectId is the only way to identify which issue in which repository to react to.
This is why we start this example with a query: to get the ID.
Let's examine the query line by line:


query FindIssueID {
Here we're performing a query, and we name it FindIssueID. Note that naming a query is optional; we give it a name here so that we can include it in same Explorer window as the mutation.


repository(owner:"octocat", name:"Hello-World") {
We specify the repository by querying the repository object and passing owner and name arguments.


issue(number:349) {
We specify the issue to react to by querying the issue object and passing a number argument.


id
This is where we retrieve the id of https://github.com/octocat/Hello-World/issues/349 to pass as the subjectId.


When we run the query, we get the id: MDU6SXNzdWUyMzEzOTE1NTE=
Note

The id returned in the query is the value we'll pass as the subjectID in the mutation. Neither the docs nor schema introspection will indicate this relationship; you'll need to understand the concepts behind the names to figure this out.

With the ID known, we can proceed with the mutation:


mutation AddReactionToIssue {
Here we're performing a mutation, and we name it AddReactionToIssue. As with queries, naming a mutation is optional; we give it a name here so we can include it in the same Explorer window as the query.


addReaction(input:{subjectId:"MDU6SXNzdWUyMzEzOTE1NTE=",content:HOORAY}) {
Let's examine this line:

addReaction is the name of the mutation.
input is the required argument key. This will always be input for a mutation.
{subjectId:"MDU6SXNzdWUyMzEzOTE1NTE=",content:HOORAY} is the required argument value. This will always be an input object (hence the curly braces) composed of input fields (subjectId and content in this case) for a mutation.

How do we know which value to use for the content? The addReaction docs tell us the content field has the type ReactionContent, which is an enum because only certain emoji reactions are supported on GitHub issues. These are the allowed values for reactions (note some values differ from their corresponding emoji names):



Content
Emoji




+1
👍


-1
👎


laugh
😄


confused
😕


heart
❤️


hooray
🎉


rocket
🚀


eyes
👀





The rest of the call is composed of the payload object. This is where we specify the data we want the server to return after we've performed the mutation. These lines come from the addReaction docs, which three possible return fields:

clientMutationId (String)
reaction (Reaction!)
subject (Reactable!)

In this example, we return the two required fields (reaction and subject), both of which have required subfields (respectively, content and id).


When we run the mutation, this is the response:
{
  "data": {
    "addReaction": {
      "reaction": {
        "content": "HOORAY"
      },
      "subject": {
        "id": "MDU6SXNzdWUyMTc5NTQ0OTc="
      }
    }
  }
}

That's it! Check out your reaction to the issue by hovering over the 🎉 to find your username.
One final note: when you pass multiple fields in an input object, the syntax can get unwieldy. Moving the fields into a variable can help. Here's how you could rewrite the original mutation using a variable:
mutation($myVar:AddReactionInput!) {
  addReaction(input:$myVar) {
    reaction {
      content
    }
    subject {
      id
    }
  }
}
variables {
  "myVar": {
    "subjectId":"MDU6SXNzdWUyMTc5NTQ0OTc=",
    "content":"HOORAY"
  }
}

Note

You may notice that the content field value in the earlier example (where it's used directly in the mutation) does not have quotes around HOORAY, but it does have quotes when used in the variable. There's a reason for this:

When you use content directly in the mutation, the schema expects the value to be of type ReactionContent, which is an enum, not a string. Schema validation will throw an error if you add quotes around the enum value, as quotes are reserved for strings.
When you use content in a variable, the variables section must be valid JSON, so the quotes are required. Schema validation correctly interprets the ReactionContent type when the variable is passed into the mutation during execution.

For more information on the difference between enums and strings, see the official GraphQL spec.

Further reading
There is a lot more you can do when forming GraphQL calls. Here are some places to look next:

Using pagination in the GraphQL API
Fragments
Inline fragments
Directives\n\n\n\nGraphQL API/Guides/Using global node IDsUsing global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.In this articlePutting global node IDs to use1. Call a REST endpoint that returns an object's node ID2. Find the object type in GraphQL3. Do a direct node lookup in GraphQLUsing global node IDs in migrationsYou can access most objects in GitHub (users, issues, pull requests, etc.) using either the REST API or the GraphQL API. You can find the global node ID of many objects from within the REST API and use these IDs in your GraphQL operations. For more information, see Preview GraphQL API Node IDs in REST API resources.
Note

In REST, the global node ID field is named node_id. In GraphQL, it's an id field on the node interface. For a refresher on what "node" means in GraphQL, see Introduction to GraphQL.

Putting global node IDs to use
You can follow three steps to use global node IDs effectively:

Call a REST endpoint that returns an object's node_id.
Find the object's type in GraphQL.
Use the ID and type to do a direct node lookup in GraphQL.

Let's walk through an example.
1. Call a REST endpoint that returns an object's node ID
If you request the authenticated user:
curl -i --header "Authorization: Bearer YOUR-TOKEN" https://api.github.com/user

you'll get a response that includes the node_id of the authenticated user:
{
  "login": "octocat",
  "id": 1,
  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
  "gravatar_id": "",
  "url": "https://api.github.com/users/octocat",
  "html_url": "https://github.com/octocat",
  "followers_url": "https://api.github.com/users/octocat/followers",
  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
  "organizations_url": "https://api.github.com/users/octocat/orgs",
  "repos_url": "https://api.github.com/users/octocat/repos",
  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
  "received_events_url": "https://api.github.com/users/octocat/received_events",
  "type": "User",
  "site_admin": false,
  "name": "monalisa octocat",
  "company": "GitHub",
  "blog": "https://github.com/blog",
  "location": "San Francisco",
  "email": "octocat@github.com",
  "hireable": false,
  "bio": "There once was...",
  "public_repos": 2,
  "public_gists": 1,
  "followers": 20,
  "following": 0,
  "created_at": "2008-01-14T04:33:35Z",
  "updated_at": "2008-01-14T04:33:35Z",
  "private_gists": 81,
  "total_private_repos": 100,
  "owned_private_repos": 100,
  "disk_usage": 10000,
  "collaborators": 8,
  "two_factor_authentication": true,
  "plan": {
    "name": "Medium",
    "space": 400,
    "private_repos": 20,
    "collaborators": 0
  },
  "node_id": "MDQ6VXNlcjU4MzIzMQ=="
}

2. Find the object type in GraphQL
In this example, the node_id value is MDQ6VXNlcjU4MzIzMQ==. You can use this value to query the same object in GraphQL.
You'll need to know the object's type first, though. You can check the type with a simple GraphQL query:
query {
  node(id:"MDQ6VXNlcjU4MzIzMQ==") {
     __typename
  }
}

This type of query—that is, finding the node by ID—is known as a "direct node lookup."
When you run this query, you'll see that the __typename is User.
3. Do a direct node lookup in GraphQL
Once you've confirmed the type, you can use an inline fragment to access the object by its ID and return additional data. In this example, we define the fields on User that we'd like to query:
query {
  node(id:"MDQ6VXNlcjU4MzIzMQ==") {
   ... on User {
      name
      login
    }
  }
}

This type of query is the standard approach for looking up an object by its global node ID.
Using global node IDs in migrations
When building integrations that use either the REST API or the GraphQL API, it's best practice to persist the global node ID so you can easily reference objects across API versions. For more information on handling the transition between REST and GraphQL, see Migrating from REST to GraphQL.\n\n\n\nGraphQL API/Guides/Migrate from REST to GraphQLMigrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.In this articleDifferences in API logicExample: Getting the data you need and nothing moreExample: NestingExample: Strong typingDifferences in API logic
GitHub provides two APIs: a REST API and a GraphQL API. For more information about GitHub's APIs, see Comparing GitHub's REST API and GraphQL API.
Migrating from REST to GraphQL represents a significant shift in API logic. The differences between REST as a style and GraphQL as a specification make it difficult—and often undesirable—to replace REST API calls with GraphQL API queries on a one-to-one basis. We've included specific examples of migration below.
To migrate your code from the REST API to the GraphQL API:

Review the GraphQL spec
Review GitHub's GraphQL schema
Consider how any existing code you have currently interacts with the GitHub REST API
Use Global Node IDs to reference objects between API versions

Significant advantages of GraphQL include:

Getting the data you need and nothing more
Nested fields
Strong typing

Here are examples of each.
Example: Getting the data you need and nothing more
A single REST API call retrieves a list of your organization's members:
curl -v https://api.github.com/orgs/:org/members

The REST payload contains excessive data if your goal is to retrieve only member names and links to avatars. However, a GraphQL query returns only what you specify:
query {
    organization(login:"github") {
    membersWithRole(first: 100) {
      edges {
        node {
          name
          avatarUrl
        }
      }
    }
  }
}

Consider another example: retrieving a list of pull requests and checking if each one is mergeable. A call to the REST API retrieves a list of pull requests and their summary representations:
curl -v https://api.github.com/repos/:owner/:repo/pulls

Determining if a pull request is mergeable requires retrieving each pull request individually for its detailed representation (a large payload) and checking whether its mergeable attribute is true or false:
curl -v https://api.github.com/repos/:owner/:repo/pulls/:number

With GraphQL, you could retrieve only the number and mergeable attributes for each pull request:
query {
    repository(owner:"octocat", name:"Hello-World") {
    pullRequests(last: 10) {
      edges {
        node {
          number
          mergeable
        }
      }
    }
  }
}

Example: Nesting
Querying with nested fields lets you replace multiple REST calls with fewer GraphQL queries. For example, retrieving a pull request along with its commits, non-review comments, and reviews using the REST API requires four separate calls:
curl -v https://api.github.com/repos/:owner/:repo/pulls/:number
curl -v https://api.github.com/repos/:owner/:repo/pulls/:number/commits
curl -v https://api.github.com/repos/:owner/:repo/issues/:number/comments
curl -v https://api.github.com/repos/:owner/:repo/pulls/:number/reviews

Using the GraphQL API, you can retrieve the data with a single query using nested fields:
{
  repository(owner: "octocat", name: "Hello-World") {
    pullRequest(number: 1) {
      commits(first: 10) {
        edges {
          node {
            commit {
              oid
              message
            }
          }
        }
      }
      comments(first: 10) {
        edges {
          node {
            body
            author {
              login
            }
          }
        }
      }
      reviews(first: 10) {
        edges {
          node {
            state
          }
        }
      }
    }
  }
}

You can also extend the power of this query by substituting a variable for the pull request number.
Example: Strong typing
GraphQL schemas are strongly typed, making data handling safer.
Consider an example of adding a comment to an issue or pull request using a GraphQL mutation, and mistakenly specifying an integer rather than a string for the value of clientMutationId:
mutation {
  addComment(input:{clientMutationId: 1234, subjectId: "MDA6SXNzdWUyMjcyMDA2MTT=", body: "Looks good to me!"}) {
    clientMutationId
    commentEdge {
      node {
        body
        repository {
          id
          name
          nameWithOwner
        }
        issue {
          number
        }
      }
    }
  }
}

Executing this query returns errors specifying the expected types for the operation:
{
  "data": null,
  "errors": [
    {
      "message": "Argument 'input' on Field 'addComment' has an invalid value. Expected type 'AddCommentInput!'.",
      "locations": [
        {
          "line": 3,
          "column": 3
        }
      ]
    },
    {
      "message": "Argument 'clientMutationId' on InputObject 'AddCommentInput' has an invalid value. Expected type 'String'.",
      "locations": [
        {
          "line": 3,
          "column": 20
        }
      ]
    }
  ]
}

Wrapping 1234 in quotes transforms the value from an integer into a string, the expected type:
mutation {
  addComment(input:{clientMutationId: "1234", subjectId: "MDA6SXNzdWUyMjcyMDA2MTT=", body: "Looks good to me!"}) {
    clientMutationId
    commentEdge {
      node {
        body
        repository {
          id
          name
          nameWithOwner
        }
        issue {
          number
        }
      }
    }
  }
}\n\n\n\nGraphQL API/Guides/Using the ExplorerUsing the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.In this articleAbout the GraphQL ExplorerQuery autocompletionAccessing the sidebar docsUsing the variable paneUsing the Altair GraphQL Client IDERequesting supportTroubleshooting errorsAbout the GraphQL Explorer
GraphQL Explorer is an instance of GraphiQL, which is a "graphical interactive in-browser GraphQL IDE."
Query autocompletion
You can use query autocompletion to help you build queries. In the main pane, within the curly brackets of your query, use control+space or shift+space to display the autocomplete menu.
Accessing the sidebar docs
All types in a GraphQL schema include a description field compiled into documentation. The collapsible Docs pane on the right side of the Explorer page allows you to browse documentation about the type system. The docs are automatically updated and will drop fields that are closing down.
Note

The Docs sidebar contains the same content that is automatically generated from the schema under GitHub GraphQL API documentation, though it is formatted differently in places.

Using the variable pane
Some example calls include variables written like this:
query($number_of_repos:Int!){
  viewer {
    name
     repositories(last: $number_of_repos) {
       nodes {
         name
       }
     }
   }
}
variables {
   "number_of_repos": 3
}

This is the correct format to submit the call using a POST request in a curl command (as long as you escape newlines).
If you want to run the call in the Explorer, enter the query segment in the main pane and the variables in the Query Variables pane below it. Omit the word variables from the Explorer:
{
   "number_of_repos": 3
}

Using the Altair GraphQL Client IDE
There are many open source GraphQL client IDEs. For example, you can use Altair to access GitHub's GraphQL API. To access the GraphQL API with Altair, download and install it from altair-graphql/altair. Then, follow the configuration steps below.
Configuring Altair

Get an access token.
Launch Altair.
In the left sidebar, below the Altair logo, click Set Headers. A new window will open.
In the "Header key" field, enter Authorization.
In the "Header value" field, enter Bearer TOKEN, replacing TOKEN with your token from the first step.
Click Save in the bottom right corner of the window to save your authorization header.
In the "GraphQL Endpoint" field, enter your GraphQL URL, such as https://api.github.com/graphql.
To load the GitHub GraphQL schema, download the public schema.
In Altair, click on Docs on the top right, then the three dots and Load Schema...
Select the file public schema that you downloaded in an earlier step.

Note

For more information about why POST is the method, see Forming calls with GraphQL.

You can test your access by querying yourself:
query {
  viewer {
    login
  }
}

If everything worked correctly, this will display your login. You're all set to start making queries.
Requesting support
For questions, bug reports, and discussions about GitHub Apps, OAuth apps, and API development, explore the API and Webhooks category in GitHub's Community Discussions. The discussions are moderated and maintained by GitHub staff, and answered by the GitHub community.
Consider reaching out to GitHub Support directly using the contact form for:

Guaranteed response from GitHub staff
Support requests involving sensitive data or private concerns
Feature requests
Feedback about GitHub products

Troubleshooting errors
Because GraphQL is introspective, the Explorer supports:

Intelligent typeaheads aware of the current schema
Validation error previews as you type

If you enter a query that is not well-formed or does not pass schema validation, a popup warns you of an error. If you run the query, the error returns in the response pane.
A GraphQL response contains several keys: a data hash and an errors array.
{
  "data": null,
  "errors": [
    {
      "message": "Objects must have selections (field 'nodes' returns Repository but has no selections)",
      "locations": [
        {
          "line": 5,
          "column": 8
        }
      ]
    }
  ]
}

It's possible you might run into an unexpected error that is not related to the schema. If this happens, the message will include a reference code you can use when reporting the issue:
{
  "data": null,
  "errors": [
    {
      "message": "Something went wrong while executing your query. This is most likely a GitHub bug. Please include \"7571:3FF6:552G94B:69F45B7:5913BBEQ\" when reporting this issue."
    }
  ]
}

Note

GitHub recommends checking for errors before using data in a production environment. In GraphQL, failure is not total: portions of GraphQL queries may succeed while others fail.\n\n\n\nGraphQL API/Guides/PaginationUsing pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.In this articleAbout paginationRequesting a cursor in your queryChanging the number of items per pageTraversing the data set using paginationNext stepsAbout pagination
GitHub's GraphQL API limits the number of items that you can fetch in a single request in order to protect against excessive or abusive requests to GitHub's servers. When you use the GraphQL API, you must supply a first or last argument on any connection. The value of these arguments must be between 1 and 100. The GraphQL API will return the number of connections specified by the first or last argument.
If the data that you are accessing has more connections than the number of items specified by the first or last argument, the response is divided into smaller "pages" of the specified size. These pages can be fetched one at a time until the entire data set has been retrieved. Each page contains the number of items specified by the first or last argument, unless it is the last page, which may contain a lower number of items.
This guide demonstrates how to request additional pages of results for paginated responses, how to change the number of results returned on each page, and how to write a script to fetch multiple pages of results.
Requesting a cursor in your query
When using the GraphQL API, you use cursors to traverse through a paginated data set. The cursor represents a specific position in the data set. You can get the first and last cursor on a page by querying the pageInfo object. For example:
query($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    pullRequests(first: 100, after: null) {
      nodes {
        createdAt
        number
        title
      }
      pageInfo {
        endCursor
        startCursor
        hasNextPage
        hasPreviousPage
      }
    }
  }
}

In this example, pageInfo.startCursor gives the cursor for the first item on the page. pageInfo.endCursor gives the cursor for the last item on the page. pageInfo.hasNextPage and pageInfo.hasPreviousPage indicate whether there is a page before and after the page that was returned.
Changing the number of items per page
The first and last arguments control how many items are returned. The maximum number of items you can fetch using the first or last argument is 100. You may need to request fewer than 100 items if your query touches a lot of data in order to avoid hitting a rate or node limit. For more information, see Rate limits and node limits for the GraphQL API.
Traversing the data set using pagination
Once you return a cursor from a query, you can use the cursor to request the next page of results. To do so, you will use the after or before argument and the cursor.
For example, assuming the pageInfo.endCursor value from the previous example was Y3Vyc29yOnYyOpHOUH8B7g==, you can use this query to request the next page of results:
query($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    pullRequests(first: 1, after: "Y3Vyc29yOnYyOpHOUH8B7g==") {
      nodes {
        createdAt
        number
        title
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
      }
    }
  }
}

You can continue to send queries with the new pageInfo.endCursor value returned in the response until there are no pages left to traverse, indicated by pageInfo.hasNextPage returning false.
If you specified the last instead of the first argument, the last page of results will be returned first. In this case, you will use the pageInfo.startCursor value and the before argument to get the previous page of results. Once pageInfo.hasPreviousPage returns false, you have reached the last page. For example:
query($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    pullRequests(last: 1, before: "R3Vyc29yOnYyOpHOHcfoOg==") {
      nodes {
        createdAt
        number
        title
      }
      pageInfo {
        startCursor
        hasPreviousPage
      }
    }
  }
}

Next steps
You can use GitHub's Octokit SDK and the octokit/plugin-paginate-graphql plugin to support pagination in your scripts. For more information, see plugin-paginate-graphql.js.\n\n\n\nGraphQL API/Guides/Use GraphQL for DiscussionsUsing the GraphQL API for DiscussionsLearn how to use the GitHub Discussions GraphQL API.In this articleFieldsObjectsInterfacesMutationsSearchThe GitHub Discussions GraphQL API allows you to get, create, edit, and delete discussion posts. For more information about GitHub Discussions, see About discussions.
This API is available for authenticated users, OAuth apps, and GitHub Apps. Access tokens require the repo scope for private repositories and the public_repo scope for public repositories. For more information, see Scopes for OAuth apps.
Fields
Repository.discussions
List the discussions within a repository. If categoryId is specified, only results within that category will be returned. If answered is not specified, both answered and unanswered discussions will be returned.
Signature:
discussions(
  after: String,
  before: String,
  first: Int,
  last: Int,
  categoryId: ID = null,
  
  answered: Boolean = null,
  
  orderBy: DiscussionOrder = {field: UPDATED_AT, direction: DESC}
) : Discussion

DiscussionOrder
"""
Ways in which discussions can be ordered.
"""
input DiscussionOrder {
  """
  The field by which to order discussions.
  """
  field: DiscussionOrderField!

  """
  The direction in which to order discussions by the specified field.
  """
  direction: OrderDirection!
}

"""
Properties by which discussion connections can be ordered.
"""
enum DiscussionOrderField {
  """
  Order discussions by creation time.
  """
  CREATED_AT

  """
  Order discussions by most recent modification time.
  """
  UPDATED_AT
}

Repository.discussionCategories
Return the available discussion categories defined within this repository. Each repository may have up to 25 categories. For more information about discussion categories, see About discussions.
Signature:
discussionCategories(
  after: String,
  before: String,
  first: Int,
  last: Int,
) : DiscussionCategoryConnection!

Repository.discussion
Get a discussion. Returns null if discussion with the specified ID does not exist.
Signature:
discussion(number: Int!) : Discussion

Repository.pinnedDiscussions
Return discussions pinned to this repository, ordered by pin position.
Signature:
pinnedDiscussions(
  after: String,
  before: String,
  first: Int,
  last: Int,
) : PinnedDiscussionConnection!

Objects
Note: For brevity, connection types are not expanded here. Each connection type mentioned in the schema follows the same pattern as other connections in the GraphQL API. For more information, see Introduction to GraphQL.
query {
  repository(owner: "github", name: "some-repo") {
    discussions(first: 10) {
      # type: DiscussionConnection
      totalCount # Int!

      pageInfo {
        # type: PageInfo (from the public schema)
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }

      edges {
        # type: DiscussionEdge
        cursor
        node {
          # type: Discussion
          id
        }
      }

      nodes {
        # type: Discussion
        id
      }
    }
  }
}

Discussion

Fields:
"""
A discussion in a repository.
"""
type Discussion implements Comment & Deletable & Lockable & Node & Reactable & RepositoryNode & Subscribable & Updatable {
  """
  Reason that the conversation was locked.
  """
  activeLockReason: LockReason

  
  """
  Check if this discussion has been answered
  """
  isAnswered: Boolean!
  

  """
  The comment chosen as this discussion's answer, if any.
  """
  answer: DiscussionComment

  """
  The time when a user chose this discussion's answer, if answered.
  """
  answerChosenAt: DateTime

  """
  The user who chose this discussion's answer, if answered.
  """
  answerChosenBy: Actor

  """
  The actor who authored the comment.
  """
  author: Actor

  """
  Author's association with the subject of the comment.
  """
  authorAssociation: CommentAuthorAssociation!

  """
  The main text of the discussion post.
  """
  body: String!

  """
  The body rendered to HTML.
  """
  bodyHTML: HTML!

  """
  The body rendered to text.
  """
  bodyText: String!

  """
  The category for this discussion.
  """
  category: DiscussionCategory!

  """
  The replies to the discussion.
  """
  comments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): DiscussionCommentConnection!

  """
  Identifies the date and time when the object was created.
  """
  createdAt: DateTime!

  """
  Check if this comment was created via an email reply.
  """
  createdViaEmail: Boolean!

  """
  Identifies the primary key from the database.
  """
  databaseId: Int

  """
  The actor who edited the comment.
  """
  editor: Actor
  id: ID!

  """
  Check if this comment was edited and includes an edit with the creation data
  """
  includesCreatedEdit: Boolean!

  """
  The moment the editor made the last edit
  """
  lastEditedAt: DateTime

  """
  `true` if the object is locked
  """
  locked: Boolean!

  """
  The number identifying this discussion within the repository.
  """
  number: Int!

  """
  Identifies when the comment was published at.
  """
  publishedAt: DateTime

  """
  A list of reactions grouped by content left on the subject.
  """
  reactionGroups: [ReactionGroup!]

  """
  A list of Reactions left on the Issue.
  """
  reactions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Allows filtering Reactions by emoji.
    """
    content: ReactionContent

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Allows specifying the order in which reactions are returned.
    """
    orderBy: ReactionOrder
  ): ReactionConnection!

  """
  The repository associated with this node.
  """
  repository: Repository!

  """
  The path for this discussion.
  """
  resourcePath: URI!

  """
  The title of this discussion.
  """
  title: String!

  """
  Identifies the date and time when the object was last updated.
  """
  updatedAt: DateTime!

  """
  The URL for this discussion.
  """
  url: URI!

  """
  A list of edits to this content.
  """
  userContentEdits(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserContentEditConnection

  """
  Check if the current viewer can delete this object.
  """
  viewerCanDelete: Boolean!

  """
  Can user react to this subject
  """
  viewerCanReact: Boolean!

  """
  Check if the viewer is able to change their subscription status for the repository.
  """
  viewerCanSubscribe: Boolean!

  """
  Check if the current viewer can update this object.
  """
  viewerCanUpdate: Boolean!

  """
  Did the viewer author this comment.
  """
  viewerDidAuthor: Boolean!

  """
  Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
  """
  viewerSubscription: SubscriptionState
}


DiscussionComment

Fields
"""
A comment on a discussion.
"""
type DiscussionComment implements Comment & Deletable & Minimizable & Node & Reactable & Updatable & UpdatableComment {
  """
  The actor who authored the comment.
  """
  author: Actor

  """
  Author's association with the subject of the comment.
  """
  authorAssociation: CommentAuthorAssociation!

  """
  The body as Markdown.
  """
  body: String!

  """
  The body rendered to HTML.
  """
  bodyHTML: HTML!

  """
  The body rendered to text.
  """
  bodyText: String!

  """
  Identifies the date and time when the object was created.
  """
  createdAt: DateTime!

  """
  Check if this comment was created via an email reply.
  """
  createdViaEmail: Boolean!

  """
  Identifies the primary key from the database.
  """
  databaseId: Int

  """
  The time when this replied-to comment was deleted
  """
  deletedAt: DateTime

  """
  The discussion this comment was created in
  """
  discussion: Discussion

  """
  The actor who edited the comment.
  """
  editor: Actor
  id: ID!

  """
  Check if this comment was edited and includes an edit with the creation data
  """
  includesCreatedEdit: Boolean!

  """
  Has this comment been chosen as the answer of its discussion?
  """
  isAnswer: Boolean!

  """
  Returns whether or not a comment has been minimized.
  """
  isMinimized: Boolean!

  """
  The moment the editor made the last edit
  """
  lastEditedAt: DateTime

  """
  Returns why the comment was minimized.
  """
  minimizedReason: String

  """
  Identifies when the comment was published at.
  """
  publishedAt: DateTime

  """
  A list of reactions grouped by content left on the subject.
  """
  reactionGroups: [ReactionGroup!]

  """
  A list of Reactions left on the Issue.
  """
  reactions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Allows filtering Reactions by emoji.
    """
    content: ReactionContent

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Allows specifying the order in which reactions are returned.
    """
    orderBy: ReactionOrder
  ): ReactionConnection!

  """
  The threaded replies to this comment.
  """
  replies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): DiscussionCommentConnection!

  """
  The discussion comment this comment is a reply to
  """
  replyTo: DiscussionComment

  """
  The path for this discussion comment.
  """
  resourcePath: URI!

  """
  Identifies the date and time when the object was last updated.
  """
  updatedAt: DateTime!

  """
  The URL for this discussion comment.
  """
  url: URI!

  """
  A list of edits to this content.
  """
  userContentEdits(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserContentEditConnection

  """
  Check if the current viewer can delete this object.
  """
  viewerCanDelete: Boolean!

  """
  Can the current user mark this comment as an answer?
  """
  viewerCanMarkAsAnswer: Boolean!

  """
  Check if the current viewer can minimize this object.
  """
  viewerCanMinimize: Boolean!

  """
  Can user react to this subject
  """
  viewerCanReact: Boolean!

  """
  Can the current user unmark this comment as an answer?
  """
  viewerCanUnmarkAsAnswer: Boolean!

  """
  Check if the current viewer can update this object.
  """
  viewerCanUpdate: Boolean!

  """
  Reasons why the current viewer can not update this comment.
  """
  viewerCannotUpdateReasons: [CommentCannotUpdateReason!]!

  """
  Did the viewer author this comment.
  """
  viewerDidAuthor: Boolean!
}


DiscussionCategory

Fields
"""
A category for discussions in a repository.
"""
type DiscussionCategory implements Node & RepositoryNode {
  """
  Identifies the date and time when the object was created.
  """
  createdAt: DateTime!

  """
  A description of this category.
  """
  description: String

  """
  An emoji representing this category.
  """
  emoji: String!

  """
  This category's emoji rendered as HTML.
  """
  emojiHTML: HTML!
  id: ID!

  """
  Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.
  """
  isAnswerable: Boolean!

  """
  The name of this category.
  """
  name: String!

  """
  The repository associated with this node.
  """
  repository: Repository!

  """
  Identifies the date and time when the object was last updated.
  """
  updatedAt: DateTime!
}


PinnedDiscussion

Fields:
"""
A Pinned discussion is a discussion pinned to a repository's index page.
"""
type PinnedDiscussion implements Node & RepositoryNode {
  """
  Identifies the date and time when the object was created.
  """
  createdAt: DateTime!

  """
  Identifies the primary key from the database.
  """
  databaseId: Int

  """
  The discussion that was pinned.
  """
  discussion: Discussion!

  """
  Color stops of the chosen gradient
  """
  gradientStopColors: [String!]!
  id: ID!

  """
  Background texture pattern
  """
  pattern: PinnedDiscussionPattern!

  """
  The actor that pinned this discussion.
  """
  pinnedBy: Actor!

  """
  Preconfigured background gradient option
  """
  preconfiguredGradient: PinnedDiscussionGradient

  """
  The repository associated with this node.
  """
  repository: Repository!

  """
  Identifies the date and time when the object was last updated.
  """
  updatedAt: DateTime!
}


PinnedDiscussionPattern

Values
"""
Preconfigured background patterns that may be used to style discussions pinned within a repository.
"""
enum PinnedDiscussionPattern {
  """
  An upward-facing chevron pattern
  """
  CHEVRON_UP

  """
  A hollow dot pattern
  """
  DOT

  """
  A solid dot pattern
  """
  DOT_FILL

  """
  A heart pattern
  """
  HEART_FILL

  """
  A friendly octocat face pattern
  """
  OCTOFACE

  """
  A plus sign pattern
  """
  PLUS
}


PinnedDiscussionGradient

Values
"""
Preconfigured gradients that may be used to style discussions pinned within a repository.
"""
enum PinnedDiscussionGradient {
  """
  A gradient of blue to mint
  """
  BLUE_MINT

  """
  A gradient of blue to purple
  """
  BLUE_PURPLE

  """
  A gradient of pink to blue
  """
  PINK_BLUE

  """
  A gradient of purple to coral
  """
  PURPLE_CORAL

  """
  A gradient of red to orange
  """
  RED_ORANGE
}


Interfaces
RepositoryDiscussionAuthor
Implemented by the User and Organization types. Note: An Organization will only have discussions associated with it if it was converted from a User.

Fields
"""
Represents an author of discussions in repositories.
"""
interface RepositoryDiscussionAuthor {
  """
  Discussions this user has started.
  """
  repositoryDiscussions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Filter discussions to only those that have been answered or not. Defaults to
    including both answered and unanswered discussions.
    """
    answered: Boolean = null

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for discussions returned from the connection.
    """
    orderBy: DiscussionOrder = {field: CREATED_AT, direction: DESC}

    """
    Filter discussions to only those in a specific repository.
    """
    repositoryId: ID
  ): DiscussionConnection!
}


RepositoryDiscussionCommentAuthor
Also implemented by the User and Organization types.

Fields
"""
Represents an author of discussion comments in repositories.
"""
interface RepositoryDiscussionCommentAuthor {
  """
  Discussion comments this user has authored.
  """
  repositoryDiscussionComments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter discussion comments to only those that were marked as the answer
    """
    onlyAnswers: Boolean = false

    """
    Filter discussion comments to only those in a specific repository.
    """
    repositoryId: ID
  ): DiscussionCommentConnection!
}


Mutations
These mutations follow the same implementation pattern that other mutations in the GraphQL API. Each mutation accepts a single argument of an Input type, named after the mutation, and returns a Payload type containing the fields specified.
For example, this is a basic createDiscussion mutation that will create a new discussion:
mutation {
  # input type: CreateDiscussionInput
  createDiscussion(input: {repositoryId: "1234", categoryId: "5678", body: "The body", title: "The title"}) {

    # response type: CreateDiscussionPayload
    discussion {
      id
    }
  }
}

createDiscussion
Input fields:

body: String! The body of the new discussion.
title: String! The title of the new discussion.
repositoryId: ID! The ID of a repository in which to create the discussion.
categoryId: ID! The ID of a DiscussionCategory within this repository.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
discussion: Discussion The discussion that was created.

updateDiscussion
Input fields:

discussionId: ID! The node ID of the discussion to update.
body: String The new contents of the discussion body.
title: String The new discussion title.
categoryId: ID The node ID of a DiscussionCategory within the same repository to change this discussion to.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
discussion: Discussion The discussion that was modified.

deleteDiscussion
Input fields:

id: ID! The node ID of the discussion to delete.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
discussion: Discussion The discussion that was deleted.

addDiscussionComment
Input fields:

body: String! The contents of the comment.
discussionId: ID! The node ID of the discussion to comment on.
replyToId: ID The node ID of the discussion comment to reply to. If absent, the created comment will be a top-level comment.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
comment: DiscussionComment The discussion comment that was created.

updateDiscussionComment
Input fields:

body: String! The new contents of the comment body.
commentId: ID! The node ID of the discussion comment to update.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
comment: DiscussionComment The discussion comment that was updated.

deleteDiscussionComment
Input fields:

id: ID! The node ID of the discussion comment to delete.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
comment: DiscussionComment The discussion comment that was deleted.

markDiscussionCommentAsAnswer
Input fields:

id: ID! The node ID of the discussion comment to mark as an answer.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
discussion: Discussion The discussion that includes the chosen comment.

unmarkDiscussionCommentAsAnswer
Input fields:

id: ID! The node ID of the discussion comment to unmark as an answer.
clientMutationId: String A unique identifier for the client performing the mutation.

Return type fields:

clientMutationId: String The unique identifier provided as an input.
discussion: Discussion The discussion that includes the unmarked comment.

Search
Discussion may be returned from the top-level search field. To search for discussion, specify type as DISCUSSION. The SearchResultItemConnection type has a discussionCount field to report the number of returned discussions, and the Discussion type is added to the SearchResultItem union. For more information, see Queries and Searching discussions.\n\n\n\nGraphQL API/Guides/Migrating global node IDsMigrating GraphQL global node IDsLearn about the two global node ID formats and how to migrate from the legacy format to the new format.In this articleBackgroundDetermining if you need to take actionMigrating to the new global IDsSharing feedbackBackground
The GitHub GraphQL API currently supports two types of global node ID formats. The legacy format will be closing down and replaced with a new format. This guide shows you how to migrate to the new format, if necessary.
By migrating to the new format, you ensure that the response times of your requests remain consistent and small. You also ensure that your application continues to work once the legacy IDs are closing down.
To learn more about why the legacy global node ID format will be closing down, see New global ID format coming to GraphQL.
Determining if you need to take action
You only need to follow the migration steps if you store references to GraphQL global node IDs. These IDs correspond to the id field for any object in the schema. If you don't store any global node IDs, then you can continue to interact with the API with no change.
Additionally, if you currently decode the legacy IDs to extract type information (for example, if you use the first two characters of PR_kwDOAHz1OX4uYAah to determine if the object is a pull request), your service will break since the format of the IDs has changed. You should migrate your service to treat these IDs as opaque strings. These IDs will be unique, therefore you can rely on them directly as references.
Migrating to the new global IDs
To facilitate migration to the new ID format, you can use the X-Github-Next-Global-ID header in your GraphQL API requests. The value of the X-Github-Next-Global-ID header can be 1 or 0. Setting the value to 1 will force the response payload to always use the new ID format for any object that you requested the id field for. Setting the value to 0 will revert to default behavior, which is to show the legacy ID or new ID depending on the object creation date.
Here is an example request using a curl command:
$ curl \
  -H "Authorization: Bearer $GITHUB_TOKEN" \
  -H "X-Github-Next-Global-ID: 1" \
  https://api.github.com/graphql \
  -d '{ "query": "{ node(id: \"MDQ6VXNlcjM0MDczMDM=\") { id } }" }'

Even though the legacy ID MDQ6VXNlcjM0MDczMDM= was used in the query, the response will contain the new ID format:
{"data":{"node":{"id":"U_kgDOADP9xw"}}}

With the X-Github-Next-Global-ID header, you can find the new ID format for legacy IDs that you reference in your application. You can then update those references with the ID received in the response. You should update all references to legacy IDs and use the new ID format for any subsequent requests to the API.
To perform bulk operations, you can use aliases to submit multiple node queries in one API call. For more information, see the GraphQL docs.
You can also get the new ID for a collection of items. For example, if you wanted to get the new ID for the last 10 repositories in your organization, you could use a query like this:
{
  organization(login: "github") {
    repositories(last: 10) {
      edges {
        cursor
        node {
          name
          id
        }
      }
    }
  }
}

Note that setting X-Github-Next-Global-ID to 1 will affect the return value of every id field in your query. This means that even when you submit a non-node query, you will get back the new format ID if you requested the id field.
Sharing feedback
If you have any concerns about the rollout of this change impacting your app, please contact us through the GitHub Support portal and include information such as your app name so that we can better assist you.\n\n\n\nGraphQL API/GuidesGuidesLearn about getting started with GraphQL, migrating from REST to GraphQL, and how to use the GitHub GraphQL API for a variety of tasks.Introduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.Forming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.Using global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.Migrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.Using the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.Using pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.Using the GraphQL API for DiscussionsLearn how to use the GitHub Discussions GraphQL API.Migrating GraphQL global node IDsLearn about the two global node ID formats and how to migrate from the legacy format to the new format.\n\n\n\nGitHub GraphQL API documentation To create integrations, retrieve data, and automate your workflows, use the GitHub GraphQL API. The GitHub GraphQL API offers more precise and flexible queries than the GitHub REST API.Overview Start hereView all Forming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.Introduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.Using the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.PopularExplorerPublic schemaDownload the public schema for the GitHub GraphQL API.Using pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.What's newView all Check if private vulnerability reporting is enabled via REST APIMarch 08New limits on scoped token creation for GitHub AppsFebruary 23Upcoming changes to repository insightsNovember 29GuidesMigrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.@GitHubManaging enterprise accountsYou can manage your enterprise account and the organizations it owns with the GraphQL API.@GitHubUsing global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.@GitHubExplore guides All GraphQL API docsOverviewAbout the GraphQL APIPublic schemaBreaking changesChangelogExplorerRate limits and node limits for the GraphQL APIReferenceQueriesMutationsObjectsInterfacesEnumsUnionsInput objectsScalarsGuidesIntroduction to GraphQLForming calls with GraphQLUsing global node IDsMigrating from REST to GraphQLUsing the ExplorerUsing pagination in the GraphQL APIUsing the GraphQL API for DiscussionsMigrating GraphQL global node IDs\n\n\n\nGraphQL API/Guides/Manage enterprise accountsManaging enterprise accountsYou can manage your enterprise account and the organizations it owns with the GraphQL API.In this articleAbout managing enterprise accounts with GraphQLGetting started using GraphQL for enterprise accountsAn example query using the Enterprise Accounts APIQuery each organization separatelyGraphQL fields and types for the Enterprise Accounts APIAbout managing enterprise accounts with GraphQL
To help you monitor and make changes in your organizations and maintain compliance, you can use the Enterprise Accounts API and the Audit Log API, which are only available as GraphQL APIs.
The enterprise account endpoints work for both GitHub Enterprise Cloud and for GitHub Enterprise Server.
GraphQL allows you to request and return just the data you specify. For example, you can create a GraphQL query, or request for information, to see all the new organization members added to your organization. Or you can make a mutation, or change, to invite an administrator to your enterprise account.
With the Audit Log API, you can monitor when someone:

Accesses your organization or repository settings.
Changes permissions.
Adds or removes users in an organization, repository, or team.
Promotes users to admin.
Changes permissions of a GitHub App.

The Audit Log API enables you to keep copies of your audit log data. For queries made with the Audit Log API, the GraphQL response can include data for up to 90 to 120 days. For a list of the fields available with the Audit Log API, see the Interfaces.
With the Enterprise Accounts API, you can:

List and review all of the organizations and repositories that belong to your enterprise account.
Change Enterprise account settings.
Configure policies for settings on your enterprise account and its organizations.
Invite administrators to your enterprise account.
Create new organizations in your enterprise account.

For a list of the fields available with the Enterprise Accounts API, see Managing enterprise accounts.
Getting started using GraphQL for enterprise accounts
Follow these steps to get started using GraphQL to manage your enterprise accounts:

Authenticating with a personal access token
Choosing a GraphQL client or using the GraphQL Explorer
Setting up Insomnia to use the GraphQL API

For some example queries, see An example query using the Enterprise Accounts API.
1. Authenticate with your personal access token


To authenticate with GraphQL, you need to generate a personal access token from developer settings. For more information, see Managing your personal access tokens.


Grant admin and full control permissions to your personal access token for areas of your enterprise you'd like to access. For full permission to private repositories, organizations, teams, user data, and access to enterprise billing and profile data, we recommend you select these scopes for your personal access token:

repo
admin:org
user
admin:enterprise

The enterprise account specific scopes are:

admin:enterprise: Gives full control of enterprises (includes manage_runners:enterprise, manage_billing:enterprise and read:enterprise)
manage_billing:enterprise: Read and write enterprise billing data.
read:enterprise: Read enterprise profile data.



Copy your personal access token and keep it in a secure place until you add it to your GraphQL client.


2. Choose a GraphQL client
We recommend you use GraphiQL or another standalone GraphQL client that lets you configure the base URL.
You may also consider using these GraphQL clients:

Insomnia
GraphiQL
Postman

The next steps will use Insomnia.
3. Setting up Insomnia to use the GitHub GraphQL API with enterprise accounts


Add the base url and POST method to your GraphQL client. When using GraphQL to request information (queries), change information (mutations), or transfer data using the GitHub API, the default HTTP method is POST and the base url follows this syntax:

For your enterprise instance: https://<HOST>/api/graphql
For GitHub Enterprise Cloud: https://api.github.com/graphql



Select the "Auth" menu and click Bearer Token. If you've previously selected a different authentication method, the menu will be labeled with that method, such as "Basic Auth", instead.



In the "TOKEN" field, enter your personal access token from an earlier step.



Click Headers.



Under the Headers tab, click Add.


In the "header" field, enter Content-Type.


In the "value" field, enter application/json.


Now you are ready to start making queries.
An example query using the Enterprise Accounts API
This GraphQL query requests the total number of public repositories in each of your appliance's organizations using the Enterprise Accounts API. To customize this query, replace <enterprise-account-name> with the handle for your enterprise account. For example, if your enterprise account is located at https://github.com/enterprises/octo-enterprise, replace <enterprise-account-name> with octo-enterprise.
query publicRepositoriesByOrganization($slug: String!) {
  enterprise(slug: $slug) {
    ...enterpriseFragment
  }
}

fragment enterpriseFragment on Enterprise {
  ... on Enterprise{
    name
    organizations(first: 100){
      nodes{
        name
        ... on Organization{
          name
          repositories(privacy: PUBLIC){
            totalCount
          }
        }
      }
    }
  }
}

# Passing our Enterprise Account as a variable
variables {
  "slug": "<enterprise-account-name>"
}

The next GraphQL query example shows how challenging it is to retrieve the number of public repositories in each organization without using the Enterprise Account API. Notice that the GraphQL Enterprise Accounts API has made this task simpler for enterprises since you only need to customize a single variable. To customize this query, replace <name-of-organization-one> and <name-of-organization-two>, etc. with the organization names on your instance.
# Each organization is queried separately
{
  organizationOneAlias: organization(login: "nameOfOrganizationOne") {
    # How to use a fragment
    ...repositories
  }
  organizationTwoAlias: organization(login: "nameOfOrganizationTwo") {
    ...repositories
  }
  # organizationThreeAlias ... and so on up-to lets say 100
}

## How to define a fragment
fragment repositories on Organization {
  name
  repositories(privacy: PUBLIC){
    totalCount
  }
}

Query each organization separately
query publicRepositoriesByOrganization {
  organizationOneAlias: organization(login: "<name-of-organization-one>") {
    # How to use a fragment
    ...repositories
  }
  organizationTwoAlias: organization(login: "<name-of-organization-two>") {
    ...repositories
  }
  # organizationThreeAlias ... and so on up-to lets say 100
}
# How to define a fragment
fragment repositories on Organization {
  name
  repositories(privacy: PUBLIC){
    totalCount
  }
}

This GraphQL query requests the last 5 log entries for an enterprise organization. To customize this query, replace <org-name> and <user-name>.
{
  organization(login: "<org-name>") {
    auditLog(last: 5, query: "actor:<user-name>") {
      edges {
        node {
          ... on AuditEntry {
# Get Audit Log Entry by 'Action'
            action
            actorLogin
            createdAt
# User 'Action' was performed on
           user{
              name
                email
            }
          }
        }
      }
    }
  }
}

For more information about getting started with GraphQL, see Introduction to GraphQL and Forming calls with GraphQL.
GraphQL fields and types for the Enterprise Accounts API
For more details about the new queries, mutations, and schema defined types available for use with the Enterprise Accounts API, see the sidebar with detailed GraphQL definitions from any GraphQL reference page.
You can access the reference docs from within the GraphQL explorer on GitHub. For more information, see Using the Explorer.
For other information, such as authentication and rate limit details, check out the guides.\n\n\n\nGitHub GraphQL API documentation To create integrations, retrieve data, and automate your workflows, use the GitHub GraphQL API. The GitHub GraphQL API offers more precise and flexible queries than the GitHub REST API.Overview Start hereView all Forming calls with GraphQLLearn how to authenticate to the GraphQL API, then learn how to create and run queries and mutations.Introduction to GraphQLLearn useful terminology and concepts for using the GitHub GraphQL API.Using the ExplorerYou can run queries on real GitHub data using the GraphQL Explorer, an integrated development environment in your browser that includes docs, syntax highlighting, and validation errors.PopularExplorerPublic schemaDownload the public schema for the GitHub GraphQL API.Using pagination in the GraphQL APILearn how to traverse data sets using cursor based pagination with the GraphQL API.What's newView all Check if private vulnerability reporting is enabled via REST APIMarch 08New limits on scoped token creation for GitHub AppsFebruary 23Upcoming changes to repository insightsNovember 29GuidesMigrating from REST to GraphQLLearn best practices and considerations for migrating from GitHub's REST API to GitHub's GraphQL API.@GitHubManaging enterprise accountsYou can manage your enterprise account and the organizations it owns with the GraphQL API.@GitHubUsing global node IDsYou can get global node IDs of objects via the REST API and use them in GraphQL operations.@GitHubExplore guides All GraphQL API docsOverviewAbout the GraphQL APIPublic schemaBreaking changesChangelogExplorerRate limits and node limits for the GraphQL APIReferenceQueriesMutationsObjectsInterfacesEnumsUnionsInput objectsScalarsGuidesIntroduction to GraphQLForming calls with GraphQLUsing global node IDsMigrating from REST to GraphQLUsing the ExplorerUsing pagination in the GraphQL APIUsing the GraphQL API for DiscussionsMigrating GraphQL global node IDs\n\n\n\nGraphQL API/OverviewOverviewLearn about the GitHub GraphQL API, previews for upcoming changes, breaking changes, and limitations. You can also use the GraphQL Explorer to interact with the API on real GitHub data.About the GraphQL APIThe GitHub GraphQL API offers flexibility and the ability to define precisely the data you want to fetch.Public schemaDownload the public schema for the GitHub GraphQL API.Breaking changesLearn about recent and upcoming breaking changes to the GitHub GraphQL API.ChangelogThe GraphQL schema changelog is a list of recent and upcoming changes to our GraphQL API schema. It includes backwards-compatible changes and upcoming breaking changes.ExplorerRate limits and node limits for the GraphQL APIThe GitHub GraphQL API has limitations in place to protect against excessive or abusive calls to GitHub's servers.\n\n\n\nGraphQL API/ReferenceReferenceView reference documentation to learn about the data types available in the GitHub GraphQL API schema.QueriesThe query type defines GraphQL operations that retrieve data from the server.MutationsThe mutation type defines GraphQL operations that change data on the server.ObjectsObjects in GraphQL represent the resources you can access.InterfacesInterfaces serve as parent objects from which other objects can inherit.EnumsEnums represent possible sets of values for a field.UnionsA union is a type of object representing many objects.Input objectsInput objects can be described as "composable objects" because they include a set of input fields that define the object.ScalarsScalars are primitive values Int, Float, String, Boolean, or ID.\n\n\n\nSite policy/Privacy Policies/GitHub General Privacy StatementGitHub General Privacy StatementIn this articleGitHub Privacy StatementPersonal Data We CollectProcessing Purposes: How We Use Your Personal DataSharing of Personal DataPrivate repositories: GitHub AccessLawful Bases for Processing Personal Data (Applicable to EEA and UK End Users)Your Privacy RightsInternational data transfersData Privacy Framework (DPF)Security and RetentionSecurityContact UsInformation for MinorsChanges to Our Privacy StatementTranslationsOur use of cookies and tracking technologiesUS State Specific InformationGitHub Privacy Statement
Effective date: February 1, 2024
Welcome to the GitHub Privacy Statement. This is where we describe how we handle your “Personal Data”, which is information that is directly linked or can be linked to you. It applies to the Personal Data that GitHub, Inc. or GitHub B.V., processes as the “Data Controller” when you interact with websites, applications, and services that display this Statement (collectively, “Services”). This Statement does not apply to services or products that do not display this Statement, such as Previews, where relevant.
End User Notice: Organization-Provided GitHub Accounts
When a school or employer supplies your GitHub account, they assume the role of Data Controller for most Personal Data used in our Services. This enables them to:

Manage and administer your GitHub account, including adjusting privacy settings.
Access and utilize your Personal Data, which includes details on how you use the Services, as well as your content and files.

Should you access a GitHub Service through an account provided by an organization, such as your employer or school, the organization becomes the Data Controller, and this Privacy Statement's direct applicability to you changes. Even so, GitHub remains dedicated to preserving your privacy rights. In such circumstances, GitHub functions as a Data Processor, adhering to the Data Controller's instructions regarding your Personal Data's processing. A Data Protection Agreement governs the relationship between GitHub and the Data Controller. For further details regarding their privacy practices, please refer to the privacy statement of the organization providing your account.
In cases where your organization grants access to GitHub products, GitHub acts as the Data Controller solely for specific processing activities. These activities are clearly defined in a contractual agreement with your organization, known as a Data Protection Agreement. You can review our standard Data Protection Agreement at GitHub Data Protection Agreement. For those limited purposes, this Statement governs the handling of your Personal Data. For all other aspects of GitHub product usage, your organization's policies apply.
Third Party Access and Data Protection
When you use third-party extensions, integrations, or follow references and links within our Services, the privacy policies of these third parties apply to any Personal Data you provide or consent to share with them. Their privacy statements will govern how this data is processed.
Personal Data We Collect
Personal Data is collected from you directly, automatically from your device, and also from third parties. The Personal Data GitHub processes when you use the Services depends on variables like how you interact with our Services (such as through web interfaces, desktop or mobile applications), the features you use (such as pull requests, Codespaces, or GitHub Copilot) and your method of accessing the Services (your preferred IDE). Below, we detail the information we collect through each of these channels:
From You

Account Data: We collect certain information when you open an account such as your GitHub handle, name, email address, password, payment information and transaction information.
User Content and Files: When you use our Services, we collect Personal Data included as part of the information you provide such as code, inputs, text, documents, images, or feedback.
Demographic information: In some cases, you provide us with ethnicity, gender, or similar demographic details.
Feedback Data: This consists of information you submit through surveys, reviews, or interactive features.
Payment Information: For paid subscriptions, we collect details like name, billing address, and payment specifics.
Profile Information: We collect information to create a user profile, which may include a photo, additional email addresses, job title, or biography.
Sales and Marketing Data: This includes information provided for promotional communications, such as name, email address, and company name.
Support Data: When you seek customer support, we collect details like code, text, or multimedia files.

Automatically

Buttons, Tools, and Content from Other Companies: Our Services may contain links or buttons that lead to third-party services like Twitter or LinkedIn. Use of these features may result in data collection. Engaging with these buttons, tools, or content may automatically send certain browser information to these companies. Please review the privacy statements of these companies for more information.
Essential Cookies and Similar Tracking Technologies: We use cookies and similar technologies to provide essential functionality like storing settings and recognizing you while using our Services.
Non-essential Cookies: Depending on your jurisdiction, we may use online analytics products that use cookies to help us analyze how de-identified users use our Services and to enhance your experience when you use the Services. We may also employ third-party Cookies to gather data for interest-based advertising. In some jurisdictions, we only use non-essential cookies after obtaining your consent. See this section for more details and control options.
Email Marketing Interactions: Our emails may have web beacons that offer information on your device type, email client, email reception, opens, and link clicks.
Geolocation Information: Depending on the Service's functionality, we collect regional geolocation data.
Service Usage Information: We collect data about your interactions with the Services, such as IP address, device information, session details, date and time of requests, device type and ID, operating system and application version, information related to your contributions to repositories, and performance of specific features or Services.
Website Usage Data: We automatically log data about your Website interactions, including the referring site, date and time of visit, pages viewed, and links clicked.

From Third Parties

Information from Other Users of the Services: Other users may share information about you when they submit issues and comments. We may also receive information about you if you are identified as a representative or administrator on your company's account.
Publicly Available Sources: We may acquire information about you from publicly available sources like public GitHub repositories.
Services you linked to your GitHub account: When you or your administrator integrate third-party apps or services with our Services, we receive information based on your settings with those services. This can include details like your name and email from services like Google for authentication. The information we receive depends on the third-party's settings and privacy policies. Always review these to understand what data is shared with our Services.
Vendors, Partners, and Affiliates: We may receive information about you from third parties, like vendors, resellers, partners, or affiliates for the purposes outlined in this statement.

Processing Purposes: How We Use Your Personal Data
The Personal Data we process depends on your interaction and access methods with our Services, including the interfaces (web, desktop, mobile apps), features used (pull requests, Codespaces, GitHub Copilot), and your preferred access tools (like your IDE). This section details all the potential ways GitHub may process your Personal Data:

Business Operations: We use Personal Data for activities like billing, accounting, and compensation. This includes creating aggregated statistical data for internal reporting, financial reporting, revenue planning, capacity planning, and forecast modeling (including product strategy).
Communication: We use Personal Data to inform you about new Services, features, offers, promotions, and other pertinent information. This also includes sending confirmations, invoices, technical notices, updates, security alerts, and administrative messages.
Inference: We generate new information from other data we collect to derive likely preferences or other characteristics. For instance, we infer your general geographic location based on your IP address.
Personalization: We use Personal Data to customize the Service to your preferences, to evaluate the effectiveness of enterprise business ads and promotional communications, and to ensure a seamless and consistent user experience.
Safety and Security: To promote safety, integrity, and security across our Services, we process Personal Data, using both automated and, at times, manual techniques for abuse detection, prevention, and violations of terms of service.
Service Provision: We use Personal Data to deliver and update our Services as configured and used by You, and to make ongoing personalized experiences and recommendations.
Troubleshooting: We use Personal Data to identify and resolve technical issues.
Ongoing Service Performance: Personal Data helps us keep the Services up to date and performant, and meet user productivity, reliability, efficacy, quality, privacy, accessibility and security needs.
Complying with and resolving legal obligations: including responding to Data Subject Requests for Personal Data processed by GitHub as Controller (for example website data), tax requirements, agreements and disputes.
Delivering Professional Services: We use Personal Data to deliver training, consulting or implementation (“Professional Services”). This includes providing technical support, professional planning, advice, guidance, data migration, deployment, and solution/software development services.
Improving Professional Services: Enhancing delivery, efficacy, quality, and security of Professional Services and the underlying product(s) based on issues identified while providing Professional Services, including fixing software defects, and otherwise keeping the Professional Services up to date and performant.

When carrying out these activities, GitHub practices data minimization and uses the minimum amount of Personal Information required.
Sharing of Personal Data
We may share Personal Data with the following recipients:

Abuse and Fraud Prevention Entities: We may disclose Personal Data based on a good faith belief it is needed to prevent fraud, abuse, or attacks on our Services, or to protect the safety of GitHub and our users.
Affiliates: Personal Data may be shared with GitHub affiliates, including Microsoft, to facilitate customer service, marketing and advertising, order fulfillment, billing, technical support, and legal and compliance obligations. Our affiliates may only use the Personal Data in a manner consistent with this Privacy Statement.
GitHub Organization Accounts: If an organization adds you to their GitHub account, we might share Personal Data with that organization to fulfill the commercial relationship. In such a case, your use of the Services is protected by a data protection agreement and terms between your organization and GitHub
Competent Authorities: We may disclose Personal Data to authorized law enforcement, regulators, courts, or other public authorities in response to lawful requests or to protect our rights and safety. Please refer to our Guidelines for Legal Requests of User Data for more information.
Corporate Transaction Entities: we might disclose Personal Data within the limits of the law and in accordance with this Privacy Statement for strategic business transactions such as sales or a merger.
Partners and Resellers: We cooperate with third-parties that offer sales, consulting, support, and technical services for our Services. We may share your data with these partners and resellers where allowed, and with your consent when required.
Subprocessors and Service Providers: We may use vendors to provide services on our behalf, including hosting, marketing, advertising, social, analytics, support ticketing, credit card processing, or security services. They are bound by contractual obligations to ensure the security, privacy, and confidentiality of your information. Please visit https://docs.github.com/en/site-policy/privacy-policies/github-subprocessors to see our list of Subprocessors.
Visual Studio Code (GitHub Codespaces): GitHub Codespaces and github.dev offer Visual Studio Code in a web browser, where some telemetry is collected by default. Details on telemetry collection are on the VS Code website. To opt out, go to File > Preferences > Settings in the top left menu of VS Code. Opting out will sync this preference across all future web sessions in GitHub Codespaces and github.dev.
Other Third-party Applications: Upon your instruction, we may share Personal Data with third-party applications available on our Marketplace. You are responsible for the data you instruct us to share with these applications.
Other Users and the Public: Depending on your account settings, we may share Personal Data with other users of the Services and the public. You control what information is made public. To adjust your settings, visit User Settings in your profile. Please be aware that any information you share in a collaborative context may become publicly accessible.

Private repositories: GitHub Access
If your GitHub account has private repositories, you control the access to that information. GitHub personnel does not access private repository information without your consent except as provided in this Privacy Statement and for:

security purposes
automated scanning or manual review for known vulnerabilities, active malware, or other content known to violate our Terms of Service
to assist the repository owner with a support matter
to maintain the integrity of the Services, or
to comply with our legal obligations if we have reason to believe the contents are in violation of the law.

GitHub will provide you with notice regarding private repository access unless doing so is prohibited by law or if GitHub acted in response to a security threat or other risk to security.
Lawful Bases for Processing Personal Data (Applicable to EEA and UK End Users)
GitHub processes Personal Data in compliance with the GDPR, ensuring a lawful basis for each processing activity. The basis varies depending on the data type and the context, including how you access the services. Our processing activities typically fall under these lawful bases:

Contractual Necessity: Processing is required to fulfill our contractual duties to you, in accordance with the GitHub Terms of Service.
Legal Obligation: We process data when it's necessary to comply with applicable laws or to protect the rights, safety, and property of GitHub, our affiliates, users, or third parties.
Legitimate Interests: We process data for purposes that are in our legitimate interests, such as securing our Services, communicating with you, and improving our Services. This is done only when these interests are not overridden by your data protection rights or your fundamental rights and freedoms.
Consent: We process data when you have explicitly consented to such processing. When we rely on consent as the legal basis, you have the right to withdraw your consent for data processing at any time. The procedures for withdrawal are detailed in this Statement and available on our website.

Your Privacy Rights
Depending on your residence location, you may have specific legal rights regarding your Personal Data:

The right to access the data collected about you
The right to request detailed information about the specific types of Personal Data we've collected over the past 12 months, including data disclosed for business purposes
The right to rectify or update inaccurate or incomplete Personal Data under certain circumstances
The right to erase or limit the processing of your Personal Data under specific conditions
The right to object to the processing of your Personal Data, as allowed by applicable law
The right to withdraw consent, where processing is based on your consent
The right to receive your collected Personal Data in a structured, commonly used, and machine-readable format to facilitate its transfer to another company, where technically feasible

To exercise these rights, please send an email to privacy[at]github[dot]com and follow the instructions provided. To verify your identity for security, we may request extra information before addressing your data-related request. Please contact our Data Protection Officer at dpo[at]github[dot]com for any feedback or concerns. Depending on your region, you have the right to complain to your local Data Protection Authority. European users can find authority contacts on the European Data Protection Board website, and UK users on the Information Commissioner’s Office website.
We aim to promptly respond to requests in compliance with legal requirements. Please note that we may retain certain data as necessary for legal obligations or for establishing, exercising, or defending legal claims.
International data transfers
GitHub stores and processes Personal Data in a variety of locations, including your local region, the United States, and other countries where GitHub, its affiliates, subsidiaries, or subprocessors have operations. We transfer Personal Data from the European Union, the United Kingdom, and Switzerland to countries that the European Commission has not recognized as having an adequate level of data protection. When we engage in such transfers, we generally rely on the standard contractual clauses published by the European Commission under Commission Implementing Decision 2021/914, to help protect your rights and enable these protections to travel with your data. To learn more about the European Commission’s decisions on the adequacy of the protection of personal data in the countries where GitHub processes personal data, see this article on the European Commission website.
Data Privacy Framework (DPF)
GitHub also complies with the EU-U.S. Data Privacy Framework (EU-U.S. DPF), the UK Extension to the EU-U.S. DPF, and the Swiss-U.S. Data Privacy Framework (Swiss-U.S. DPF) as set forth by the U.S. Department of Commerce. GitHub has certified to the U.S. Department of Commerce that it adheres to the EU-U.S. Data Privacy Framework Principles (EU-U.S. DPF Principles) with regard to the processing of personal data received from the European Union in reliance on the EU-U.S. DPF and from the United Kingdom (and Gibraltar) in reliance on the UK Extension to the EU-U.S. DPF. GitHub has certified to the U.S. Department of Commerce that it adheres to the Swiss-U.S. Data Privacy Framework Principles (Swiss-U.S. DPF Principles) with regard to the processing of personal data received from Switzerland in reliance on the Swiss-U.S. DPF. If there is any conflict between the terms in this privacy statement and the EU-U.S. DPF Principles and/or the Swiss-U.S. DPF Principles, the Principles shall govern. To learn more about the Data Privacy Framework (DPF) program, and to view our certification, please visit https://www.dataprivacyframework.gov/.
GitHub has the responsibility for the processing of Personal Data it receives under the Data Privacy Framework (DPF) Principles and subsequently transfers to a third party acting as an agent on GitHub’s behalf. GitHub shall remain liable under the DPF Principles if its agent processes such Personal Data in a manner inconsistent with the DPF Principles, unless the organization proves that it is not responsible for the event giving rise to the damage.
Dispute resolution process
In compliance with the EU-U.S. DPF, the UK Extension to the EU-U.S. DPF, and the Swiss-U.S. DPF, GitHub commits to resolve DPF Principles-related complaints about our collection and use of your personal information. EU, UK, and Swiss individuals with inquiries or complaints regarding our handling of personal data received in reliance on the EU-U.S. DPF, the UK Extension, and the Swiss-U.S. DPF should first contact GitHub at: dpo[at]github[dot]com.
If you do not receive timely acknowledgment of your DPF Principles-related complaint from us, or if we have not addressed your DPF Principles-related complaint to your satisfaction, please visit https://go.adr.org/dpf_irm.html for more information or to file a complaint. The services of the International Centre for Dispute Resolution are provided at no cost to you.
An individual has the possibility, under certain conditions, to invoke binding arbitration for complaints regarding DPF compliance not resolved by any of the other DPF mechanisms. For additional information visit https://www.dataprivacyframework.gov/s/article/ANNEX-I-introduction-dpf?tabset-35584=2.
Government Enforcement
GitHub is subject to the investigatory and enforcement powers of the Federal Trade Commission (FTC). Under Section 5 of the Federal Trade Commission Act (15 U.S.C. § 45), an organization's failure to abide by commitments to implement the DPF Principles may be challenged as deceptive by the FTC. The FTC has the power to prohibit such misrepresentations through administrative orders or by seeking court orders.
Security and Retention
GitHub uses appropriate administrative, technical, and physical security controls to protect your Personal Data. We’ll retain your Personal Data as long as your account is active and as needed to fulfill contractual obligations, comply with legal requirements, resolve disputes, and enforce agreements. The retention duration depends on the purpose of data collection and any legal obligations.
Security
GitHub uses administrative, technical, and physical security controls where appropriate to protect your Personal Data.
Contact Us
Contact us via our contact form or by emailing our Data Protection Officer at dpo[at]github[dot]com.
Our addresses are:
GitHub B.V.
Prins Bernhardplein 200, Amsterdam
1097JB
The Netherlands
GitHub, Inc.
88 Colin P. Kelly Jr. St.
San Francisco, CA 94107
United States
Information for Minors
Our Services are not intended for individuals under the age of 13. We do not intentionally gather Personal Data from such individuals. If you become aware that a minor has provided us with Personal Data, please notify us.
Changes to Our Privacy Statement
GitHub may periodically revise this Privacy Statement. If there are material changes to the statement, we will provide at least 30 days prior notice by updating our website or sending an email to your primary email address associated with your GitHub account.
Translations
Below are translations of this document into other languages. In the event of any conflict, uncertainty, or apparent inconsistency between any of those versions and the English version, this English version is the controlling version.
French
Cliquez ici pour obtenir la version française: Déclaration de confidentialité de GitHub (PDF).
Other translations
For translations of this statement into other languages, please visit https://docs.github.com/ and select a language from the drop-down menu under “English.”
Our use of cookies and tracking technologies
Cookies and tracking technologies
GitHub uses cookies to provide, secure and improve our Service or to develop new features and functionality of our Service. For example, we use them to (i) keep you logged in, (ii) remember your preferences, (iii) identify your device for security and fraud purposes, including as needed to maintain the integrity of our Service, (iv) compile statistical reports, and (v) provide information and insight for future development of GitHub. We provide more information about cookies on GitHub that describes the cookies we set, the needs we have for those cookies, and the expiration of such cookies.
For Enterprise Marketing Pages, we may also use non-essential cookies to (i) gather information about enterprise users’ interests and online activities to personalize their experiences, including by making the ads, content, recommendations, and marketing seen or received more relevant and (ii) serve and measure the effectiveness of targeted advertising and other marketing efforts. If you disable the non-essential cookies on the Enterprise Marketing Pages, the ads, content, and marketing you see may be less relevant.
Our emails to users may contain a pixel tag, which is a small, clear image that can tell us whether or not you have opened an email and what your IP address is. We use this pixel tag to make our email communications more effective and to make sure we are not sending you unwanted email.
The length of time a cookie will stay on your browser or device depends on whether it is a “persistent” or “session” cookie. Session cookies will only stay on your device until you stop browsing. Persistent cookies stay until they expire or are deleted. The expiration time or retention period applicable to persistent cookies depends on the purpose of the cookie collection and tool used. You may be able to delete cookie data. For more information, see GitHub General Privacy Statement.
What are cookies and similar technologies?
We use cookies and similar technologies, such as web beacons, local storage, and mobile analytics, to operate and provide our Services. When visiting Enterprise Marketing Pages, like resources.github.com, these and additional cookies, like advertising IDs, may be used for sales and marketing purposes.
Cookies are small text files stored by your browser on your device. A cookie can later be read when your browser connects to a web server in the same domain that placed the cookie. The text in a cookie contains a string of numbers and letters that may uniquely identify your device and can contain other information as well. This allows the web server to recognize your browser over time, each time it connects to that web server.
Web beacons are electronic images (also called “single-pixel” or “clear GIFs”) that are contained within a website or email. When your browser opens a webpage or email that contains a web beacon, it automatically connects to the web server that hosts the image (typically operated by a third party). This allows that web server to log information about your device and to set and read its own cookies. In the same way, third-party content on our websites (such as embedded videos, plug-ins, or ads) results in your browser connecting to the third-party web server that hosts that content.
Mobile identifiers for analytics can be accessed and used by apps on mobile devices in much the same way that websites access and use cookies. When visiting Enterprise Marketing pages, like resources.github.com, on a mobile device these may allow us and our third-party analytics and advertising partners to collect data for sales and marketing purposes.
We may also use so-called “flash cookies” (also known as “Local Shared Objects” or “LSOs”) to collect and store information about your use of our Services. Flash cookies are commonly used for advertisements and videos.
How do we and our partners use cookies and similar technologies?
The GitHub Services use cookies and similar technologies for a variety of purposes, including to store your preferences and settings, enable you to sign-in, analyze how our Services perform, track your interaction with the Services, develop inferences, combat fraud, and fulfill other legitimate purposes. Some of these cookies and technologies may be provided by third parties, including service providers and advertising partners. For example, our analytics and advertising partners may use these technologies in our Services to collect personal information (such as the pages you visit, the links you click on, and similar usage information, identifiers, and device information) related to your online activities over time and across Services for various purposes, including targeted advertising. GitHub will place non-essential cookies on pages where we market products and services to enterprise customers, for example, on resources.github.com.
We and/or our partners also share the information we collect or infer with third parties for these purposes.
The table below provides additional information about how we use different types of cookies:

























PurposeDescriptionRequired CookiesGitHub uses required cookies to perform essential website functions and to provide the services. For example, cookies are used to log you in, save your language preferences, provide a shopping cart experience, improve performance, route traffic between web servers, detect the size of your screen, determine page load times, improve user experience, and for audience measurement. These cookies are necessary for our websites to work.AnalyticsWe allow third parties to use analytics cookies to understand how you use our websites so we can make them better. For example, cookies are used to gather information about the pages you visit and how many clicks you need to accomplish a task. We also use some analytics cookies to provide personalized advertising.Social MediaGitHub and third parties use social media cookies to show you ads and content based on your social media profiles and activity on GitHub’s websites. This ensures that the ads and content you see on our websites and on social media will better reflect your interests. This also enables third parties to develop and improve their products, which they may use on websites that are not owned or operated by GitHub.AdvertisingIn addition, GitHub and third parties use advertising cookies to show you new ads based on ads you've already seen. Cookies also track which ads you click or purchases you make after clicking an ad. This is done both for payment purposes and to show you ads that are more relevant to you. For example, cookies are used to detect when you click an ad and to show you ads based on your social media interests and website browsing history.
What are your cookie choices and controls?
You have several options to disable non-essential cookies:


Specifically on GitHub Enterprise Marketing Pages
Any GitHub page that serves non-essential cookies will have a link in the page’s footer to cookie settings. You can express your preferences at any time by clicking on that linking and updating your settings.
Some users will also be able to manage non-essential cookies via a cookie consent banner, including the options to accept, manage, and reject all non-essential cookies.


Generally for all websites
You can control the cookies you encounter on the web using a variety of widely-available tools. For example:



If your browser sends a Do Not Track (DNT) signal, GitHub will not set non-essential cookies and will not load third party resources which set non-essential cookies.
Many browsers provide cookie controls which may limit the types of cookies you encounter online. Check out the documentation for your browser to learn more.
If you enable a browser extension designed to block tracking, such as Privacy Badger, non-essential cookies set by a website or third parties may be disabled.
If you enable a browser extension designed to block unwanted content, such as uBlock Origin, non-essential cookies will be disabled to the extent that content that sets non-essential cookies will be blocked.
You may use the Global Privacy Control (GPC) to communicate your privacy preferences. If GitHub detects the GPC signal from your device, GitHub will not share your data (we do not sell your data). To learn more, visit Global Privacy Control — Take Control Of Your Privacy
Advertising controls. Our advertising partners may participate in associations that provide simple ways to opt out of ad targeting, which you can access at:
United States: NAI and DAA
Canada: Digital Advertising Alliance of Canada
Europe: European Digital Advertising Alliance

These choices are specific to the browser you are using. If you access our Services from other devices or browsers, take these actions from those systems to ensure your choices apply to the data collected when you use those systems.
US State Specific Information
This section provides extra information specifically for residents of certain US states that have distinct data privacy laws and regulations. These laws may grant specific rights to residents of these states when the laws come into effect. This section uses the term “personal information” as an equivalent to the term “Personal Data.”
Privacy Rights
These rights are common to the US State privacy laws:

Right to Knowledge and Correction: You have the right to request details on the specific personal information we’ve collected about you and the right to correct inaccurate information. You can exercise this right by contacting us. You can also access and edit basic account information in your settings.
Right to Know Data Recipients: We share your information with service providers for legitimate business operations, such as data storage and hosting. For more details, please see “Sharing Your Information” below.
Right to request Deletion: You reserve the right to request the deletion of your data, barring a few exceptions. Such exceptions include circumstances where we are required to retain data to comply with legal obligations, detect fraudulent activity, investigate reports of abuse or other violations of our Terms of Service, or rectify security issues. Upon receiving your verified request, we will promptly delete your personal information (unless an exception applies), and instruct our service providers to do the same. We employ brief retention terms by design.
Right to a Timely Response: You are allowed to make two free requests in any 12-month period. We commit to responding to your request within 45 days. In complex cases, we may extend our response time by an additional 45 days.
Non-Discrimination: We will not hold it against you when you exercise any of your rights. On the contrary, we encourage you to review your privacy settings closely and contact us with any questions.

Notice of Collection of Personal Information
We may collect various categories of personal information about our website visitors and users of "Services" which includes GitHub applications, software, products, or services. That information includes identifiers/contact information, demographic information, payment information, commercial information, internet or electronic network activity information, geolocation data, audio, electronic, visual, or similar information, and inferences drawn from such information.
We collect this information for various purposes. This includes identifying accessibility gaps and offering targeted support, fostering diversity and representation, providing services, troubleshooting, conducting business operations such as billing and security, improving products and supporting research, communicating important information, ensuring personalized experiences, and promoting safety and security.
Exercising your Privacy Rights
To make an access, deletion, correction, or opt-out request, please send an email to privacy[at]github[dot]com and follow the instructions provided. We may need to verify your identity before processing your request. If you choose to use an authorized agent to submit a request on your behalf, please ensure they have your signed permission or power of attorney as required.
To opt out of the sharing of your personal information, you can click on the "Do Not Share My Personal Information" link on the footer of our Websites or use the Global Privacy Control ("GPC") if available. Authorized agents can also submit opt-out requests on your behalf.
California
Mandatory Disclosures
We also make the following disclosures for purposes of compliance with California privacy law:

We collected the following categories of personal information in the last 12 months: identifiers/contact information, demographic information (such as gender), payment card information associated with you, commercial information, Internet or other electronic network activity information, geolocation data, audio, electronic, visual or similar information, and inferences drawn from the above.
The sources of personal information from whom we collected are: directly from you, automatically or from third parties.
The business or commercial purposes of collecting personal information are as summarized above and in our Privacy Statement under Processing Purposes.
We disclosed the following categories of personal information for a business purpose in the last 12 months: identifiers/contact information, demographic information (such as gender and rough geographic location), payment information, commercial information, Internet or other electronic network activity information, geolocation data, audio, electronic, visual or similar information, and inferences drawn from the above. We disclosed each category to third-party business partners and service providers, third-party sites or platforms such as social networking sites, and other third parties as described in the Sharing of Personal Data section of our Privacy Statement.
As defined by applicable law, we “shared” the following categories of personal information in the last 12 months: identifiers/contact information, Internet or other electronic network activity information, and inferences drawn from the above. We shared each category to or with advertising networks, data analytics providers, and social networks.
The business or commercial purpose of sharing personal information is to assist us with marketing, advertising, and audience measurement.
We do not “sell” or “share” the personal information of known minors under 16 years of age.

Shine the Light Act
Under California Civil Code section 1798.83, also known as the “Shine the Light” law, California residents who have provided personal information to a business with which the individual has established a business relationship for personal, family, or household purposes (“California Customers”) may request information about whether the business has disclosed personal information to any third parties for the third parties’ direct marketing purposes. Please be aware that we do not disclose personal information to any third parties for their direct marketing purposes as defined by this law. California Customers may request further information about our compliance with this law by emailing (privacy[at]github[dot]com). Please note that businesses are required to respond to one request per California Customer each year and may not be required to respond to requests made by means other than through the designated email address.
Removal of Content
California residents under the age of 18 who are registered users of online sites, services, or applications have a right under California Business and Professions Code Section 22581 to remove, or request and obtain removal of, content or information they have publicly posted. To remove content or information you have publicly posted, please submit a Private Information Removal request. Alternatively, to request that we remove such content or information, please send a detailed description of the specific content or information you wish to have removed to GitHub support. Please be aware that your request does not guarantee complete or comprehensive removal of content or information posted online and that the law may not permit or require removal in certain circumstances. If you have any questions about our privacy practices with respect to California residents, please send an email to privacy[at]github[dot]com.
We value the trust you place in us and are committed to handling your personal information with care and respect. If you have any questions or concerns about our privacy practices, please email our Data Protection Officer at dpo[at]github[dot]com.
Colorado/Connecticut/Virginia
If you live in Colorado, Connecticut, or Virginia you have some additional rights:

If we deny your rights request, you have the right to appeal that decision. We will provide you with the necessary information to submit an appeal at that time.
You have the right to opt out of profiling in furtherance of decisions that produce legal or similarly significant effects concerning the consumer. GitHub does not engage in such profiling as defined by Colorado law, so there’s no need to opt out.

Nevada
We do not sell your covered information, as defined under Chapter 603A of the Nevada Revised Statutes. If you still have questions about your covered information or anything else in our Privacy Statement, please send an email to privacy[at]github[dot]com.\n\n\n\nContributing to GitHub Docs documentation Learn about how the GitHub Docs team creates documentation and how you can contribute.Start hereBest practices for GitHub DocsFollow these best practices to create documentation that's user-friendly and easy to understand.Style guideFollow this guide to make sure GitHub's documentation stays consistent and follows clear patterns that our readers can understand.About the content modelThe content model describes the structure and types of content that we publish.About contributing to GitHub DocsYou can contribute to GitHub Docs content in several ways.What's newView all Contributing to GitHub DocsOctober 02Docs are being translated to French, German, Korean, and RussianDecember 05Webhook docs generated from the OpenAPI schemaNovember 16All Contribute to GitHub Docs docsWriting for GitHub DocsBest practices for GitHub DocsAbout GitHub's documentation philosophyAbout GitHub's documentation fundamentalsContent design principlesWriting content to be translatedMaking content findable in searchVersioning documentationUsing Markdown and Liquid in GitHub DocsUsing YAML frontmatterUsing videos in GitHub DocsCreating reusable contentCreating screenshotsCreating diagrams for GitHub DocsCreating tool switchers in articlesConfiguring redirectsChanging an article's titleAnnotating code examplesTemplatesStyle guide and content modelStyle guideAbout the content modelContents of a GitHub Docs articleAbout topicsConceptual content typeReferential content typeProcedural content typeTroubleshooting content typeRelease note content typeQuickstart content typeTutorial content typeAbout combining multiple content typesCollaborating on GitHub DocsAbout contributing to GitHub DocsUsing Git on GitHub DocsUsing the TODOCS placeholder to leave notesUsing the content linterLabel referenceSetting up your environment to work on GitHub DocsWorking on GitHub Docs in a codespaceCreating a local environmentTroubleshooting your environment\n\n\n\nSite policy/GitHub Terms/GitHub Terms of ServiceGitHub Terms of ServiceIn this articleSummaryThe GitHub Terms of ServiceA. DefinitionsB. Account TermsC. Acceptable UseD. User-Generated ContentE. Private RepositoriesF. Copyright Infringement and DMCA PolicyG. Intellectual Property NoticeH. API TermsI. GitHub Additional Product TermsJ. Beta PreviewsK. PaymentL. Cancellation and TerminationM. Communications with GitHubN. Disclaimer of WarrantiesO. Limitation of LiabilityP. Release and IndemnificationQ. Changes to These TermsR. MiscellaneousThank you for using GitHub! We're happy you're here. Please read this Terms of Service agreement carefully before accessing or using GitHub. Because it is such an important contract between us and our users, we have tried to make it as clear as possible. For your convenience, we have presented these terms in a short non-binding summary followed by the full legal terms.
Summary

















































































SectionWhat can you find there?A. DefinitionsSome basic terms, defined in a way that will help you understand this agreement. Refer back up to this section for clarification.B. Account TermsThese are the basic requirements of having an Account on GitHub.C. Acceptable UseThese are the basic rules you must follow when using your GitHub Account.D. User-Generated ContentYou own the content you post on GitHub. However, you have some responsibilities regarding it, and we ask you to grant us some rights so we can provide services to you.E. Private RepositoriesThis section talks about how GitHub will treat content you post in private repositories.F. Copyright & DMCA PolicyThis section talks about how GitHub will respond if you believe someone is infringing your copyrights on GitHub.G. Intellectual Property NoticeThis describes GitHub's rights in the website and service.H. API TermsThese are the rules for using GitHub's APIs, whether you are using the API for development or data collection.I. Additional Product TermsWe have a few specific rules for GitHub's features and products.J. Beta PreviewsThese are some of the additional terms that apply to GitHub's features that are still in development.K. PaymentYou are responsible for payment. We are responsible for billing you accurately.L. Cancellation and TerminationYou may cancel this agreement and close your Account at any time.M. Communications with GitHubWe only use email and other electronic means to stay in touch with our users. We do not provide phone support.N. Disclaimer of WarrantiesWe provide our service as is, and we make no promises or guarantees about this service. Please read this section carefully; you should understand what to expect.O. Limitation of LiabilityWe will not be liable for damages or losses arising from your use or inability to use the service or otherwise arising under this agreement. Please read this section carefully; it limits our obligations to you.P. Release and IndemnificationYou are fully responsible for your use of the service.Q. Changes to these Terms of ServiceWe may modify this agreement, but we will give you 30 days' notice of material changes.R. MiscellaneousPlease see this section for legal details including our choice of law.
The GitHub Terms of Service
Effective date: November 16, 2020
A. Definitions
Short version: We use these basic terms throughout the agreement, and they have specific meanings. You should know what we mean when we use each of the terms. There's not going to be a test on it, but it's still useful information.

An "Account" represents your legal relationship with GitHub. A “Personal Account” represents an individual User’s authorization to log in to and use the Service and serves as a User’s identity on GitHub. “Organizations” are shared workspaces that may be associated with a single entity or with one or more Users where multiple Users can collaborate across many projects at once. A Personal Account can be a member of any number of Organizations.
The “Agreement” refers, collectively, to all the terms, conditions, notices contained or referenced in this document (the “Terms of Service” or the "Terms") and all other operating rules, policies (including the GitHub Privacy Statement, available at github.com/site/privacy) and procedures that we may publish from time to time on the Website. Most of our site policies are available at docs.github.com/categories/site-policy.
"Beta Previews" mean software, services, or features identified as alpha, beta, preview, early access, or evaluation, or words or phrases with similar meanings.
“Content” refers to content featured or displayed through the Website, including without limitation code, text, data, articles, images, photographs, graphics, software, applications, packages, designs, features, and other materials that are available on the Website or otherwise available through the Service. "Content" also includes Services. “User-Generated Content” is Content, written or otherwise, created or uploaded by our Users. "Your Content" is Content that you create or own.
“GitHub,” “We,” and “Us” refer to GitHub, Inc., as well as our affiliates, directors, subsidiaries, contractors, licensors, officers, agents, and employees.
The “Service” refers to the applications, software, products, and services provided by GitHub, including any Beta Previews.
“The User,” “You,” and “Your” refer to the individual person, company, or organization that has visited or is using the Website or Service; that accesses or uses any part of the Account; or that directs the use of the Account in the performance of its functions. A User must be at least 13 years of age. Special terms may apply for business or government Accounts (See Section B(5): Additional Terms).
The “Website” refers to GitHub’s website located at github.com, and all content, services, and products provided by GitHub at or through the Website. It also refers to GitHub-owned subdomains of github.com, such as education.github.com and pages.github.com. These Terms also govern GitHub’s conference websites, such as githubuniverse.com, and product websites, such as electronjs.org. Occasionally, websites owned by GitHub may provide different or additional terms of service. If those additional terms conflict with this Agreement, the more specific terms apply to the relevant page or service.

B. Account Terms
Short version: Personal Accounts and Organizations have different administrative controls; a human must create your Account; you must be 13 or over; you must provide a valid email address; and you may not have more than one free Account. You alone are responsible for your Account and anything that happens while you are signed in to or using your Account. You are responsible for keeping your Account secure.
1. Account Controls


Users. Subject to these Terms, you retain ultimate administrative control over your Personal Account and the Content within it.


Organizations. The "owner" of an Organization that was created under these Terms has ultimate administrative control over that Organization and the Content within it. Within the Service, an owner can manage User access to the Organization’s data and projects. An Organization may have multiple owners, but there must be at least one Personal Account designated as an owner of an Organization. If you are the owner of an Organization under these Terms, we consider you responsible for the actions that are performed on or through that Organization.


2. Required Information
You must provide a valid email address in order to complete the signup process. Any other information requested, such as your real name, is optional, unless you are accepting these terms on behalf of a legal entity (in which case we need more information about the legal entity) or if you opt for a paid Account, in which case additional information will be necessary for billing purposes.
3. Account Requirements
We have a few simple rules for Personal Accounts on GitHub's Service.

You must be a human to create an Account. Accounts registered by "bots" or other automated methods are not permitted. We do permit machine accounts:
A machine account is an Account set up by an individual human who accepts the Terms on behalf of the Account, provides a valid email address, and is responsible for its actions. A machine account is used exclusively for performing automated tasks. Multiple users may direct the actions of a machine account, but the owner of the Account is ultimately responsible for the machine's actions. You may maintain no more than one free machine account in addition to your free Personal Account.
One person or legal entity may maintain no more than one free Account (if you choose to control a machine account as well, that's fine, but it can only be used for running a machine).
You must be age 13 or older. While we are thrilled to see brilliant young coders get excited by learning to program, we must comply with United States law. GitHub does not target our Service to children under 13, and we do not permit any Users under 13 on our Service. If we learn of any User under the age of 13, we will terminate that User’s Account immediately. If you are a resident of a country outside the United States, your country’s minimum age may be older; in such a case, you are responsible for complying with your country’s laws.
Your login may only be used by one person — i.e., a single login may not be shared by multiple people. A paid Organization may only provide access to as many Personal Accounts as your subscription allows.
You may not use GitHub in violation of export control or sanctions laws of the United States or any other applicable jurisdiction. You may not use GitHub if you are or are working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions administered by a U.S. government agency. GitHub may allow persons in certain sanctioned countries or territories to access certain GitHub services pursuant to U.S. government authorizations. For more information, please see our Export Controls policy.

4. Account Security
You are responsible for keeping your Account secure while you use our Service. We offer tools such as two-factor authentication to help you maintain your Account's security, but the content of your Account and its security are up to you.

You are responsible for all content posted and activity that occurs under your Account (even when content is posted by others who have Accounts under your Account).
You are responsible for maintaining the security of your Account and password. GitHub cannot and will not be liable for any loss or damage from your failure to comply with this security obligation.
You will promptly notify GitHub by contacting us through the GitHub Support portal if you become aware of any unauthorized use of, or access to, our Service through your Account, including any unauthorized use of your password or Account.

5. Additional Terms
In some situations, third parties' terms may apply to your use of GitHub. For example, you may be a member of an organization on GitHub with its own terms or license agreements; you may download an application that integrates with GitHub; or you may use GitHub to authenticate to another service. Please be aware that while these Terms are our full agreement with you, other parties' terms govern their relationships with you.
If you are a government User or otherwise accessing or using any GitHub Service in a government capacity, this Government Amendment to GitHub Terms of Service applies to you, and you agree to its provisions.
If you have signed up for GitHub Enterprise Cloud, the Enterprise Cloud Addendum applies to you, and you agree to its provisions.
C. Acceptable Use
Short version: GitHub hosts a wide variety of collaborative projects from all over the world, and that collaboration only works when our users are able to work together in good faith. While using the service, you must follow the terms of this section, which include some restrictions on content you can post, conduct on the service, and other limitations. In short, be excellent to each other.
Your use of the Website and Service must not violate any applicable laws, including copyright or trademark laws, export control or sanctions laws, or other laws in your jurisdiction. You are responsible for making sure that your use of the Service is in compliance with laws and any applicable regulations.
You agree that you will not under any circumstances violate our Acceptable Use Policies or Community Guidelines.
D. User-Generated Content
Short version: You own content you create, but you allow us certain rights to it, so that we can display and share the content you post. You still have control over your content, and responsibility for it, and the rights you grant us are limited to those we need to provide the service. We have the right to remove content or close Accounts if we need to.
1. Responsibility for User-Generated Content
You may create or upload User-Generated Content while using the Service. You are solely responsible for the content of, and for any harm resulting from, any User-Generated Content that you post, upload, link to or otherwise make available via the Service, regardless of the form of that Content. We are not responsible for any public display or misuse of your User-Generated Content.
2. GitHub May Remove Content
We have the right to refuse or remove any User-Generated Content that, in our sole discretion, violates any laws or GitHub terms or policies. User-Generated Content displayed on GitHub Mobile may be subject to mobile app stores' additional terms.
3. Ownership of Content, Right to Post, and License Grants
You retain ownership of and responsibility for Your Content. If you're posting anything you did not create yourself or do not own the rights to, you agree that you are responsible for any Content you post; that you will only submit Content that you have the right to post; and that you will fully comply with any third party licenses relating to Content you post.
Because you retain ownership of and responsibility for Your Content, we need you to grant us — and other GitHub Users — certain legal permissions, listed in Sections D.4 — D.7. These license grants apply to Your Content. If you upload Content that already comes with a license granting GitHub the permissions we need to run our Service, no additional license is required. You understand that you will not receive any payment for any of the rights granted in Sections D.4 — D.7. The licenses you grant to us will end when you remove Your Content from our servers, unless other Users have forked it.
4. License Grant to Us
We need the legal right to do things like host Your Content, publish it, and share it. You grant us and our legal successors the right to store, archive, parse, and display Your Content, and make incidental copies, as necessary to provide the Service, including improving the Service over time. This license includes the right to do things like copy it to our database and make backups; show it to you and other users; parse it into a search index or otherwise analyze it on our servers; share it with other users; and perform it, in case Your Content is something like music or video.
This license does not grant GitHub the right to sell Your Content. It also does not grant GitHub the right to otherwise distribute or use Your Content outside of our provision of the Service, except that as part of the right to archive Your Content, GitHub may permit our partners to store and archive Your Content in public repositories in connection with the GitHub Arctic Code Vault and GitHub Archive Program.
5. License Grant to Other Users
Any User-Generated Content you post publicly, including issues, comments, and contributions to other Users' repositories, may be viewed by others. By setting your repositories to be viewed publicly, you agree to allow others to view and "fork" your repositories (this means that others may make their own copies of Content from your repositories in repositories they control).
If you set your pages and repositories to be viewed publicly, you grant each User of GitHub a nonexclusive, worldwide license to use, display, and perform Your Content through the GitHub Service and to reproduce Your Content solely on GitHub as permitted through GitHub's functionality (for example, through forking). You may grant further rights if you adopt a license. If you are uploading Content you did not create or own, you are responsible for ensuring that the Content you upload is licensed under terms that grant these permissions to other GitHub Users.
6. Contributions Under Repository License
Whenever you add Content to a repository containing notice of a license, you license that Content under the same terms, and you agree that you have the right to license that Content under those terms. If you have a separate agreement to license that Content under different terms, such as a contributor license agreement, that agreement will supersede.
Isn't this just how it works already? Yep. This is widely accepted as the norm in the open-source community; it's commonly referred to by the shorthand "inbound=outbound". We're just making it explicit.
7. Moral Rights
You retain all moral rights to Your Content that you upload, publish, or submit to any part of the Service, including the rights of integrity and attribution. However, you waive these rights and agree not to assert them against us, to enable us to reasonably exercise the rights granted in Section D.4, but not otherwise.
To the extent this agreement is not enforceable by applicable law, you grant GitHub the rights we need to use Your Content without attribution and to make reasonable adaptations of Your Content as necessary to render the Website and provide the Service.
E. Private Repositories
Short version: We treat the content of private repositories as confidential, and we only access it as described in our Privacy Statement—for security purposes, to assist the repository owner with a support matter, to maintain the integrity of the Service, to comply with our legal obligations, if we have reason to believe the contents are in violation of the law, or with your consent.
1. Control of Private Repositories
Some Accounts may have private repositories, which allow the User to control access to Content.
2. Confidentiality of Private Repositories
GitHub considers the contents of private repositories to be confidential to you. GitHub will protect the contents of private repositories from unauthorized use, access, or disclosure in the same manner that we would use to protect our own confidential information of a similar nature and in no event with less than a reasonable degree of care.
3. Access
GitHub personnel may only access the content of your private repositories in the situations described in our Privacy Statement.
You may choose to enable additional access to your private repositories. For example:

You may enable various GitHub services or features that require additional rights to Your Content in private repositories. These rights may vary depending on the service or feature, but GitHub will continue to treat your private repository Content as confidential. If those services or features require rights in addition to those we need to provide the GitHub Service, we will provide an explanation of those rights.

Additionally, we may be compelled by law to disclose the contents of your private repositories.
GitHub will provide notice regarding our access to private repository content, unless for legal disclosure, to comply with our legal obligations, or where otherwise bound by requirements under law, for automated scanning, or if in response to a security threat or other risk to security.
F. Copyright Infringement and DMCA Policy
If you believe that content on our website violates your copyright, please contact us in accordance with our Digital Millennium Copyright Act Policy. If you are a copyright owner and you believe that content on GitHub violates your rights, please contact us via our convenient DMCA form or by emailing copyright@github.com. There may be legal consequences for sending a false or frivolous takedown notice. Before sending a takedown request, you must consider legal uses such as fair use and licensed uses.
We will terminate the Accounts of repeat infringers of this policy.
G. Intellectual Property Notice
Short version: We own the service and all of our content. In order for you to use our content, we give you certain rights to it, but you may only use our content in the way we have allowed.
1. GitHub's Rights to Content
GitHub and our licensors, vendors, agents, and/or our content providers retain ownership of all intellectual property rights of any kind related to the Website and Service. We reserve all rights that are not expressly granted to you under this Agreement or by law. The look and feel of the Website and Service is copyright © GitHub, Inc. All rights reserved. You may not duplicate, copy, or reuse any portion of the HTML/CSS, JavaScript, or visual design elements or concepts without express written permission from GitHub.
2. GitHub Trademarks and Logos
If you’d like to use GitHub’s trademarks, you must follow all of our trademark guidelines, including those on our logos page: https://github.com/logos.
3. License to GitHub Policies
This Agreement is licensed under this Creative Commons Zero license. For details, see our site-policy repository.
H. API Terms
Short version: You agree to these Terms of Service, plus this Section H, when using any of GitHub's APIs (Application Provider Interface), including use of the API through a third party product that accesses GitHub.
Abuse or excessively frequent requests to GitHub via the API may result in the temporary or permanent suspension of your Account's access to the API. GitHub, in our sole discretion, will determine abuse or excessive usage of the API. We will make a reasonable attempt to warn you via email prior to suspension.
You may not share API tokens to exceed GitHub's rate limitations.
You may not use the API to download data or Content from GitHub for spamming purposes, including for the purposes of selling GitHub users' personal information, such as to recruiters, headhunters, and job boards.
All use of the GitHub API is subject to these Terms of Service and the GitHub Privacy Statement.
GitHub may offer subscription-based access to our API for those Users who require high-throughput access or access that would result in resale of GitHub's Service.
I. GitHub Additional Product Terms
Short version: You need to follow certain specific terms and conditions for GitHub's various features and products, and you agree to the Supplemental Terms and Conditions when you agree to this Agreement.
Some Service features may be subject to additional terms specific to that feature or product as set forth in the GitHub Additional Product Terms. By accessing or using the Services, you also agree to the GitHub Additional Product Terms.
J. Beta Previews
Short version: Beta Previews may not be supported or may change at any time. You may receive confidential information through those programs that must remain confidential while the program is private. We'd love your feedback to make our Beta Previews better.
1. Subject to Change
Beta Previews may not be supported and may be changed at any time without notice. In addition, Beta Previews are not subject to the same security measures and auditing to which the Service has been and is subject. By using a Beta Preview, you use it at your own risk.
2. Confidentiality
As a user of Beta Previews, you may get access to special information that isn’t available to the rest of the world. Due to the sensitive nature of this information, it’s important for us to make sure that you keep that information secret.
Confidentiality Obligations. You agree that any non-public Beta Preview information we give you, such as information about a private Beta Preview, will be considered GitHub’s confidential information (collectively, “Confidential Information”), regardless of whether it is marked or identified as such. You agree to only use such Confidential Information for the express purpose of testing and evaluating the Beta Preview (the “Purpose”), and not for any other purpose. You should use the same degree of care as you would with your own confidential information, but no less than reasonable precautions to prevent any unauthorized use, disclosure, publication, or dissemination of our Confidential Information. You promise not to disclose, publish, or disseminate any Confidential Information to any third party, unless we don’t otherwise prohibit or restrict such disclosure (for example, you might be part of a GitHub-organized group discussion about a private Beta Preview feature).
Exceptions. Confidential Information will not include information that is: (a) or becomes publicly available without breach of this Agreement through no act or inaction on your part (such as when a private Beta Preview becomes a public Beta Preview); (b) known to you before we disclose it to you; (c) independently developed by you without breach of any confidentiality obligation to us or any third party; or (d) disclosed with permission from GitHub. You will not violate the terms of this Agreement if you are required to disclose Confidential Information pursuant to operation of law, provided GitHub has been given reasonable advance written notice to object, unless prohibited by law.
3. Feedback
We’re always trying to improve of products and services, and your feedback as a Beta Preview user will help us do that. If you choose to give us any ideas, know-how, algorithms, code contributions, suggestions, enhancement requests, recommendations or any other feedback for our products or services (collectively, “Feedback”), you acknowledge and agree that GitHub will have a royalty-free, fully paid-up, worldwide, transferable, sub-licensable, irrevocable and perpetual license to implement, use, modify, commercially exploit and/or incorporate the Feedback into our products, services, and documentation.
K. Payment
Short version: You are responsible for any fees associated with your use of GitHub. We are responsible for communicating those fees to you clearly and accurately, and letting you know well in advance if those prices change.
1. Pricing
Our pricing and payment terms are available at github.com/pricing. If you agree to a subscription price, that will remain your price for the duration of the payment term; however, prices are subject to change at the end of a payment term.
2. Upgrades, Downgrades, and Changes

We will immediately bill you when you upgrade from the free plan to any paying plan.
If you change from a monthly billing plan to a yearly billing plan, GitHub will bill you for a full year at the next monthly billing date.
If you upgrade to a higher level of service, we will bill you for the upgraded plan immediately.
You may change your level of service at any time by choosing a plan option or going into your Billing settings. If you choose to downgrade your Account, you may lose access to Content, features, or capacity of your Account. Please see our section on Cancellation for information on getting a copy of that Content.

3. Billing Schedule; No Refunds
Payment Based on Plan For monthly or yearly payment plans, the Service is billed in advance on a monthly or yearly basis respectively and is non-refundable. There will be no refunds or credits for partial months of service, downgrade refunds, or refunds for months unused with an open Account; however, the service will remain active for the length of the paid billing period. In order to treat everyone equally, no exceptions will be made.
Payment Based on Usage Some Service features are billed based on your usage. A limited quantity of these Service features may be included in your plan for a limited term without additional charge. If you choose to use paid Service features beyond the quantity included in your plan, you pay for those Service features based on your actual usage in the preceding month. Monthly payment for these purchases will be charged on a periodic basis in arrears. See GitHub Additional Product Terms for Details.
Invoicing For invoiced Users, User agrees to pay the fees in full, up front without deduction or setoff of any kind, in U.S. Dollars. User must pay the fees within thirty (30) days of the GitHub invoice date. Amounts payable under this Agreement are non-refundable, except as otherwise provided in this Agreement. If User fails to pay any fees on time, GitHub reserves the right, in addition to taking any other action at law or equity, to (i) charge interest on past due amounts at 1.0% per month or the highest interest rate allowed by law, whichever is less, and to charge all expenses of recovery, and (ii) terminate the applicable order form. User is solely responsible for all taxes, fees, duties and governmental assessments (except for taxes based on GitHub's net income) that are imposed or become due in connection with this Agreement.
4. Authorization
By agreeing to these Terms, you are giving us permission to charge your on-file credit card, PayPal account, or other approved methods of payment for fees that you authorize for GitHub.
5. Responsibility for Payment
You are responsible for all fees, including taxes, associated with your use of the Service. By using the Service, you agree to pay GitHub any charge incurred in connection with your use of the Service. If you dispute the matter, contact us through the GitHub Support portal. You are responsible for providing us with a valid means of payment for paid Accounts. Free Accounts are not required to provide payment information.
L. Cancellation and Termination
Short version: You may close your Account at any time. If you do, we'll treat your information responsibly.
1. Account Cancellation
It is your responsibility to properly cancel your Account with GitHub. You can cancel your Account at any time by going into your Settings in the global navigation bar at the top of the screen. The Account screen provides a simple, no questions asked cancellation link. We are not able to cancel Accounts in response to an email or phone request.
2. Upon Cancellation
We will retain and use your information as necessary to comply with our legal obligations, resolve disputes, and enforce our agreements, but barring legal requirements, we will delete your full profile and the Content of your repositories within 90 days of cancellation or termination (though some information may remain in encrypted backups). This information cannot be recovered once your Account is canceled.
We will not delete Content that you have contributed to other Users' repositories or that other Users have forked.
Upon request, we will make a reasonable effort to provide an Account owner with a copy of your lawful, non-infringing Account contents after Account cancellation, termination, or downgrade. You must make this request within 90 days of cancellation, termination, or downgrade.
3. GitHub May Terminate
GitHub has the right to suspend or terminate your access to all or any part of the Website at any time, with or without cause, with or without notice, effective immediately. GitHub reserves the right to refuse service to anyone for any reason at any time.
4. Survival
All provisions of this Agreement which, by their nature, should survive termination will survive termination — including, without limitation: ownership provisions, warranty disclaimers, indemnity, and limitations of liability.
M. Communications with GitHub
Short version: We use email and other electronic means to stay in touch with our users.
1. Electronic Communication Required
For contractual purposes, you (1) consent to receive communications from us in an electronic form via the email address you have submitted or via the Service; and (2) agree that all Terms of Service, agreements, notices, disclosures, and other communications that we provide to you electronically satisfy any legal requirement that those communications would satisfy if they were on paper. This section does not affect your non-waivable rights.
2. Legal Notice to GitHub Must Be in Writing
Communications made through email or GitHub Support's messaging system will not constitute legal notice to GitHub or any of its officers, employees, agents or representatives in any situation where notice to GitHub is required by contract or any law or regulation. Legal notice to GitHub must be in writing and served on GitHub's legal agent.
3. No Phone Support
GitHub only offers support via email, in-Service communications, and electronic messages. We do not offer telephone support.
N. Disclaimer of Warranties
Short version: We provide our service as is, and we make no promises or guarantees about this service. Please read this section carefully; you should understand what to expect.
GitHub provides the Website and the Service “as is” and “as available,” without warranty of any kind. Without limiting this, we expressly disclaim all warranties, whether express, implied or statutory, regarding the Website and the Service including without limitation any warranty of merchantability, fitness for a particular purpose, title, security, accuracy and non-infringement.
GitHub does not warrant that the Service will meet your requirements; that the Service will be uninterrupted, timely, secure, or error-free; that the information provided through the Service is accurate, reliable or correct; that any defects or errors will be corrected; that the Service will be available at any particular time or location; or that the Service is free of viruses or other harmful components. You assume full responsibility and risk of loss resulting from your downloading and/or use of files, information, content or other material obtained from the Service.
O. Limitation of Liability
Short version: We will not be liable for damages or losses arising from your use or inability to use the service or otherwise arising under this agreement. Please read this section carefully; it limits our obligations to you.
You understand and agree that we will not be liable to you or any third party for any loss of profits, use, goodwill, or data, or for any incidental, indirect, special, consequential or exemplary damages, however arising, that result from

the use, disclosure, or display of your User-Generated Content;
your use or inability to use the Service;
any modification, price change, suspension or discontinuance of the Service;
the Service generally or the software or systems that make the Service available;
unauthorized access to or alterations of your transmissions or data;
statements or conduct of any third party on the Service;
any other user interactions that you input or receive through your use of the Service; or
any other matter relating to the Service.

Our liability is limited whether or not we have been informed of the possibility of such damages, and even if a remedy set forth in this Agreement is found to have failed of its essential purpose. We will have no liability for any failure or delay due to matters beyond our reasonable control.
P. Release and Indemnification
Short version: You are responsible for your use of the service. If you harm someone else or get into a dispute with someone else, we will not be involved.
If you have a dispute with one or more Users, you agree to release GitHub from any and all claims, demands and damages (actual and consequential) of every kind and nature, known and unknown, arising out of or in any way connected with such disputes.
You agree to indemnify us, defend us, and hold us harmless from and against any and all claims, liabilities, and expenses, including attorneys’ fees, arising out of your use of the Website and the Service, including but not limited to your violation of this Agreement, provided that GitHub (1) promptly gives you written notice of the claim, demand, suit or proceeding; (2) gives you sole control of the defense and settlement of the claim, demand, suit or proceeding (provided that you may not settle any claim, demand, suit or proceeding unless the settlement unconditionally releases GitHub of all liability); and (3) provides to you all reasonable assistance, at your expense.
Q. Changes to These Terms
Short version: We want our users to be informed of important changes to our terms, but some changes aren't that important — we don't want to bother you every time we fix a typo. So while we may modify this agreement at any time, we will notify users of any material changes and give you time to adjust to them.
We reserve the right, at our sole discretion, to amend these Terms of Service at any time and will update these Terms of Service in the event of any such amendments. We will notify our Users of material changes to this Agreement, such as price increases, at least 30 days prior to the change taking effect by posting a notice on our Website or sending email to the primary email address specified in your GitHub account. Customer's continued use of the Service after those 30 days constitutes agreement to those revisions of this Agreement. For any other modifications, your continued use of the Website constitutes agreement to our revisions of these Terms of Service. You can view all changes to these Terms in our Site Policy repository.
We reserve the right at any time and from time to time to modify or discontinue, temporarily or permanently, the Website (or any part of it) with or without notice.
R. Miscellaneous
1. Governing Law
Except to the extent applicable law provides otherwise, this Agreement between you and GitHub and any access to or use of the Website or the Service are governed by the federal laws of the United States of America and the laws of the State of California, without regard to conflict of law provisions. You and GitHub agree to submit to the exclusive jurisdiction and venue of the courts located in the City and County of San Francisco, California.
2. Non-Assignability
GitHub may assign or delegate these Terms of Service and/or the GitHub Privacy Statement, in whole or in part, to any person or entity at any time with or without your consent, including the license grant in Section D.4. You may not assign or delegate any rights or obligations under the Terms of Service or Privacy Statement without our prior written consent, and any unauthorized assignment and delegation by you is void.
3. Section Headings and Summaries
Throughout this Agreement, each section includes titles and brief summaries of the following terms and conditions. These section titles and brief summaries are not legally binding.
4. Severability, No Waiver, and Survival
If any part of this Agreement is held invalid or unenforceable, that portion of the Agreement will be construed to reflect the parties’ original intent. The remaining portions will remain in full force and effect. Any failure on the part of GitHub to enforce any provision of this Agreement will not be considered a waiver of our right to enforce such provision. Our rights under this Agreement will survive any termination of this Agreement.
5. Amendments; Complete Agreement
This Agreement may only be modified by a written amendment signed by an authorized representative of GitHub, or by the posting by GitHub of a revised version in accordance with Section Q. Changes to These Terms. These Terms of Service, together with the GitHub Privacy Statement, represent the complete and exclusive statement of the agreement between you and us. This Agreement supersedes any proposal or prior agreement oral or written, and any other communications between you and GitHub relating to the subject matter of these terms including any confidentiality or nondisclosure agreements.
6. Questions
Questions about the Terms of Service? Contact us through the GitHub Support portal.\n\n\n\nGitHub DocsHelp for wherever you are on your GitHub journey.Get startedGet startedMigrationsAccount and profileAuthenticationBilling and paymentsSite policyCollaborative codingCodespacesRepositoriesPull requestsGitHub DiscussionsGitHub CopilotGitHub CopilotGet code suggestionsPrompt engineeringChat in GitHubCopilot Chat CookbookExtensions quickstartCI/CD and DevOpsGitHub ActionsGitHub PackagesGitHub PagesSecuritySecure codingSecret scanningSupply chain securityDependabotCode scanningSecurity advisoriesClient appsGitHub CLIGitHub MobileGitHub DesktopProject managementGitHub IssuesProjectsSearch on GitHubEnterprise and TeamsOrganizationsSecure your organizationEnterprise onboardingEnterprise administratorsGitHub Well-ArchitectedDevelopersAppsREST APIGraphQL APIWebhooksBuild Copilot ExtensionsGitHub ModelsCommunityBuilding communitiesGitHub SponsorsGitHub EducationGitHub for NonprofitsGitHub SupportContribute to GitHub DocsMore docsCodeQL query writingElectronnpmGetting startedSet up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.Connecting to GitHub with SSHYou can connect to GitHub using the Secure Shell Protocol (SSH), which provides a secure channel over an unsecured network.Creating and managing repositoriesYou can create a repository on GitHub to store and collaborate on your project's files, then manage the repository's name and location.Basic writing and formatting syntaxCreate sophisticated formatting for your prose and code on GitHub with simple syntax.PopularAbout pull requestsLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.Authentication documentationKeep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Managing remote repositoriesLearn to work with your local repositories on your computer and remote repositories hosted on GitHub.\n\n\n\nGet started with GitHub documentation Learn how to start building, shipping, and maintaining software with GitHub. Explore our products, sign up for an account, and connect with the world's largest development community.Quickstart Start hereAbout GitHub and GitYou can use GitHub and Git to collaborate on work.GitHub’s plansAn overview of GitHub's pricing plans.Getting started with your GitHub accountWith a personal account on GitHub, you can import or create repositories, collaborate with others, and connect with the GitHub community.Getting started with GitHub TeamWith GitHub Team groups of people can collaborate across many projects at the same time in an organization account.PopularCreating an account on GitHubCreate a personal account to get started with GitHub.Hello WorldFollow this Hello World exercise to learn GitHub's pull request workflow.Set up GitAt the heart of GitHub is an open-source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.About versions of GitHub DocsYou can read documentation that reflects the GitHub product you're currently using.GuidesTypes of GitHub accountsAccounts on GitHub allow you to organize and control access to code.@GitHubFinding ways to contribute to open source on GitHubYou can find ways to contribute to open source projects on GitHub that are relevant to you.@GitHubTroubleshooting connectivity problemsIf you're having trouble connecting to GitHub, you can troubleshoot your connection, then use the GitHub Debug tool to diagnose problems.@GitHubAll Get started docsStart your journeyAbout GitHub and GitCreating an account on GitHubHello WorldSetting up your profileFinding inspiration on GitHubDownloading files from GitHubUploading a project to GitHubGit and GitHub learning resourcesOnboardingGetting started with your GitHub accountGetting started with GitHub TeamGetting started with the GitHub Enterprise Cloud trialGetting started with GitHub Enterprise CloudUsing GitHubGitHub flowConnecting to GitHubCommunicating on GitHubExploring early access releases with feature previewSupported browsersGitHub MobileAllowing access to GitHub's services from a restricted networkTroubleshooting connectivity problemsLearning about GitHubGitHub’s plansGitHub language supportTypes of GitHub accountsAccess permissions on GitHubAbout GitHub Advanced SecurityFAQ about changes to GitHub’s plansGitHub glossaryLearning to codeGetting started with GitFinding and understanding example codeReusing other people's code in your projectsSetting up Copilot for learning to codeLearning to debug with GitHub CopilotStoring your secrets safelyAccessibilityManaging your theme settingsKeyboard shortcutsGitHub Command PaletteWriting on GitHubGetting started with writing and formatting on GitHub • 3 articlesWorking with advanced formatting • 10 articlesWorking with saved replies • 5 articlesEditing and sharing content with gists • 4 articlesExploring projects on GitHubFinding ways to contribute to open source on GitHubUsing GitHub Copilot to explore projectsContributing to a projectSaving repositories with starsFollowing peopleFollowing organizationsGit basicsSet up GitSetting your username in GitCaching your GitHub credentials in GitWhy is Git always asking for my password?Updating credentials from the macOS KeychainGit workflowsAbout remote repositoriesManaging remote repositoriesAssociating text editors with GitConfiguring Git to handle line endingsIgnoring filesGit cheatsheetUsing GitAbout GitPushing commits to a remote repositoryGetting changes from a remote repositoryDealing with non-fast-forward errorsSplitting a subfolder out into a new repositoryAbout Git subtree mergesAbout Git rebaseUsing Git rebase on the command lineResolving merge conflicts after a Git rebaseDealing with special characters in branch and tag namesTroubleshooting the 2 GB push limitExploring integrationsAbout using integrationsAbout building integrationsFeatured GitHub integrationsGitHub Developer ProgramArchiving your GitHub personal account and public repositoriesRequesting an archive of your personal account’s dataOpting into or out of the GitHub Archive Program for your public repositoryUsing GitHub DocsAbout versions of GitHub DocsUsing hover cards on GitHub DocsShowcase your expertise with GitHub CertificationsAbout GitHub CertificationsRegistering for a GitHub Certifications exam\n\n\n\nMigrations documentation If you're moving to GitHub from another code hosting platform or moving between GitHub products, learn how to use our migration tooling to bring your work with you.Overview Plan your migration Start hereAbout GitHub ImporterIf your source code is stored on another Git-based hosting service, you can move the code to GitHub.com using GitHub Importer.About GitHub Enterprise ImporterWith GitHub Enterprise Importer, you can migrate your enterprise to GitHub Enterprise Cloud from various sources.Automating migration with GitHub Actions ImporterUse GitHub Actions Importer to plan and automate your migration to GitHub Actions.PopularImporting a repository with GitHub ImporterIf you have a project hosted on another Git-based hosting service, you can quickly import it to GitHub using the GitHub Importer tool.Adding locally hosted code to GitHubIf your code is stored locally on your computer and is tracked by Git or not tracked by any version control system (VCS), you can import the code to GitHub using GitHub CLI or Git commands.Migrating repositories from GitHub Enterprise Server to GitHub Enterprise CloudYou can migrate repositories from GitHub Enterprise Server to GitHub Enterprise Cloud, using the GitHub CLI or API.GuidesReclaiming mannequins for GitHub Enterprise ImporterAfter your migration, you can assign the history of a placeholder identity, or mannequin, to a member of your organization.@GitHubTroubleshooting your migration with GitHub Enterprise ImporterIf your migration fails or produces unexpected results, you can try common troubleshooting steps.@GitHubAll Migrations docsOverviewAbout GitHub's migration toolingPlanning your migration to GitHubMigration paths to GitHubAbout locked repositoriesProgrammatically importing repositoriesImporting source codeUsing GitHub Importer • 2 articlesUsing the command line to import source code • 6 articlesUsing GitHub Enterprise ImporterUnderstanding GitHub Enterprise Importer • 1 articlesMigrating from Azure DevOps to GitHub Enterprise Cloud • 4 articlesMigrating from Bitbucket Server to GitHub Enterprise Cloud • 4 articlesMigrating between GitHub products • 6 articlesCompleting your migration with GitHub Enterprise Importer • 3 articlesUsing ghe-migratorAbout ghe-migratorExporting migration data from GitHub Enterprise ServerExporting migration data from GitHub.comMigrating data to GitHub Enterprise Server\n\n\n\nAccount and profile documentation Make GitHub work best for you by adjusting the settings for your personal account, personalizing your profile page, and managing the notifications you receive.Quickstart Start hereChanging your GitHub usernameYou can change the username for your account on GitHub.Managing your profile READMEYou can add a README to your GitHub profile to tell other people about yourself.About notificationsNotifications provide updates about the activity on GitHub that you've subscribed to. You can use the notifications inbox to customize, triage, and manage your updates.PopularSetting your commit email addressYou can set the email address that is used to author commits on GitHub and on your computer.Inviting collaborators to a personal repositoryYou can invite users to become collaborators to your personal repository.Configuring notificationsChoose the type of activity on GitHub that you want to receive notifications for and how you want these updates delivered.What's newView all Sunset notice for automatic watching of repositories and teamsApril 15GitHub Actions workflow notifications in Slack and Microsoft TeamsDecember 06Local timezones available on profilesSeptember 23GuidesWhy are my contributions not showing up on my profile?Learn common reasons that contributions may be missing from your contributions graph.@GitHubManaging notifications from your inboxUse your inbox to quickly triage and sync your notifications across email and mobile.@GitHubBlocking command line pushes that expose your personal email addressIf you've chosen to keep your email address private when performing web-based operations, you can also choose to block command line pushes that may expose your personal email address.@GitHubAll Account and profile docsSetting up and managing your personal account on GitHubManaging user account settings • 9 articlesManaging your personal account • 6 articlesManaging email preferences • 9 articlesManaging access to your personal repositories • 4 articlesManaging your membership in organizations • 7 articlesSetting up and managing your GitHub profileCustomizing your profile • 7 articlesManaging contribution settings on your profile • 6 articlesManaging subscriptions and notifications on GitHubSetting up notifications • 2 articlesViewing and triaging notifications • 3 articlesManaging subscriptions for activity on GitHub • 2 articles\n\n\n\nAuthentication documentation Keep your account and data secure with features like two-factor authentication, SSH, and commit signature verification.Overview Start hereGenerating a new SSH key and adding it to the ssh-agentAfter you've checked for existing SSH keys, you can generate a new SSH key to use for authentication, then add it to the ssh-agent.Managing your personal access tokensYou can use a personal access token in place of a password when authenticating to GitHub in the command line or with the API.Configuring two-factor authenticationYou can choose among multiple options to add a second source of authentication to your account.PopularTroubleshooting SSHWhen using SSH to connect and authenticate to GitHub, you may need to troubleshoot unexpected issues that may arise.Checking for existing SSH keysBefore you generate an SSH key, you can check to see if you have any existing SSH keys.Adding a new SSH key to your GitHub accountTo configure your account on GitHub.com to use your new (or existing) SSH key, you'll also need to add the key to your account.Authenticating with SAML single sign-onYou can authenticate to GitHub with SAML single sign-on (SSO) and view your active sessions.What's newView all SSH CA support for enterprise-owned user accountsMarch 29New SSH CAs must sign expiring certificatesMarch 20You can pick your account during device flow loginJanuary 05GuidesRecovering your account if you lose your 2FA credentialsIf you lose access to your two-factor authentication credentials, you can use your recovery codes, or another recovery option, to regain access to your account.@GitHubError: Permission denied (publickey)A "Permission denied" error means that the server rejected your connection. There could be several reasons why, and the most common examples are explained below.@GitHubCreating a strong passwordSecure your account on GitHub with a strong and unique password using a password manager.@GitHubAll Authentication docsKeeping your account and data secureAbout authentication to GitHubCreating a strong passwordSwitching between accountsVerifying new devices when signing inUpdating your GitHub access credentialsManaging your personal access tokensReviewing your SSH keysReviewing your deploy keysToken expiration and revocationReviewing your security logSecurity log eventsRemoving sensitive data from a repositoryAbout anonymized URLsAbout GitHub's IP addressesGitHub's SSH key fingerprintsSudo modePreventing unauthorized accessViewing and managing your sessionsSecuring your account with two-factor authentication (2FA)About two-factor authenticationConfiguring two-factor authenticationConfiguring two-factor authentication recovery methodsAccessing GitHub using two-factor authenticationRecovering your account if you lose your 2FA credentialsChanging your two-factor authentication methodAbout mandatory two-factor authenticationCountries where SMS authentication is supportedDisabling two-factor authentication for your personal accountAuthenticating with a passkeyAbout passkeysManaging your passkeysSigning in with a passkeyConnecting to GitHub with SSHAbout SSHUsing SSH agent forwardingManaging deploy keysChecking for existing SSH keysGenerating a new SSH key and adding it to the ssh-agentAdding a new SSH key to your GitHub accountTesting your SSH connectionWorking with SSH key passphrasesTroubleshooting SSHUsing SSH over the HTTPS portRecovering your SSH key passphraseDeleted or missing SSH keysError: Host key verification failedError: Permission denied (publickey)Error: Bad file numberError: Key already in useError: Permission to user/repo denied to other-userError: Permission to user/repo denied to user/other-repoError: Agent admitted failure to signError: ssh-add: illegal option -- apple-use-keychainError: SSL certificate problem, verify that the CA cert is OKError: Unknown key typeError: We're doing an SSH key auditManaging commit signature verificationAbout commit signature verificationDisplaying verification statuses for all of your commitsChecking for existing GPG keysGenerating a new GPG keyAdding a GPG key to your GitHub accountTelling Git about your signing keyAssociating an email with your GPG keySigning commitsSigning tagsTroubleshooting commit signature verificationChecking your commit and tag signature verification statusUsing a verified email address in your GPG key\n\n\n\nBilling and payments documentation Learn about the different components of your bill, and how you can view and manage those components.Overview Start hereAbout the new billing platformLearn about the billing platform's key functionalities, and how it can help you manage your spending more effectively.Managing your payment and billing informationLearn how to manage your payment information and history, and update your billing contacts using the new billing platform.About the billing cycleLearn about the billing cycle for the new billing platform.Preventing overspendingLearn how to set budgets and track when they are nearing or above a threshold to prevent overspending.PopularDowngrading your account's planYou can downgrade the plan for any type of account on GitHub at any time.About billing for GitHub ActionsIf you want to use GitHub Actions beyond the storage or minutes included in your account, you will be billed for additional usage.About billing for GitHub CodespacesLearn about the costs for using GitHub Codespaces, and the monthly usage quotas included with GitHub personal accounts.GuidesHow does upgrading or downgrading affect the billing process?When you upgrade the subscription for your personal account or organization, changes are applied immediately. When you downgrade your subscription, changes are applied at the end of your current billing cycle.@GitHubUpgrading Git Large File StorageYou can purchase additional data packs to increase your monthly bandwidth quota and total storage capacity for Git LFS.@GitHubAll Billing and payments docsManaging your billingAbout billing on GitHubAbout the new billing platformAbout the billing cycleAdding licenses to an organizationRoles for the new billing platformEstimating spendingGathering insights on your spendingPreventing overspendingManaging your payment and billing informationRedeeming a couponTroubleshooting a declined credit card chargeUnlocking a locked accountManaging the plan for your GitHub accountAbout billing for plansAbout per-user pricingUpgrading your account's planViewing and managing pending changes to your planDowngrading your account's planConnecting an Azure subscriptionHow does upgrading or downgrading affect the billing process?One-time payments for customers in IndiaDiscounted plans for GitHub accountsManaging billing for your productsManaging billing for GitHub Actions • 3 articlesManaging billing for GitHub Codespaces • 3 articlesManaging billing for GitHub Packages • 3 articlesManaging billing for GitHub Copilot • 1 articlesManaging billing for GitHub Advanced Security products • 4 articlesManaging billing for GitHub Sponsors • 4 articlesManaging billing for GitHub Marketplace apps • 4 articlesManaging billing for Git Large File Storage • 4 articlesSetting up paid accounts for procurement companiesSetting up paid organizations for procurement companies • 4 articlesSetting up enterprise accounts for procurement companies • 4 articles\n\n\n\nSite policySite policy documentationGitHub TermsAcceptable Use PoliciesPrivacy PoliciesOther Site PoliciesContent Removal PoliciesSecurity PoliciesGitHub Company Policies\n\n\n\nCodespaces documentation Create a codespace to start developing in a secure, configurable, and dedicated development environment that works how and where you want it to.Overview Quickstart View video transcript Start hereView all Enabling or disabling GitHub Codespaces for your organizationYou can control which users can use GitHub Codespaces in your organization's private repositories.Understanding the codespace lifecycleLearn how to develop in a GitHub Codespaces environment, and maintain your data throughout the entire codespace lifecycle.Introduction to dev containersWhen you work in a codespace, the environment you are working in is created using a development container, or dev container, hosted on a virtual machine.Managing access to other repositories within your codespaceYou can manage the repositories that GitHub Codespaces can access.Set up your projectSetting up a Node.js project for GitHub CodespacesGet started with a Node.js, JavaScript, or TypeScript project in GitHub Codespaces by creating a custom dev container configuration.Setting up a Python project for GitHub CodespacesGet started with a Python project in GitHub Codespaces by creating a custom dev container configuration.Setting up a Java project for GitHub CodespacesGet started with a Java project in GitHub Codespaces by creating a custom dev container configuration.Setting up a C# (.NET) project for GitHub CodespacesGet started with a C# (.NET) project in GitHub Codespaces by creating a custom dev container configuration.What's newView all Enhanced Codespaces ConnectionFebruary 12Codespaces host image upgradeJanuary 17Codespaces host image upgrades Docker and composeDecember 21GuidesDeep dive into GitHub CodespacesExplore more detail about how GitHub Codespaces work.@GitHubCreating a codespace for a repositoryYou can create a codespace for a branch in a repository to develop online.@GitHubCreating a codespace from a templateIf you're starting a new project, you can create a codespace from a blank template or choose a template specially designed for the type of work you want to do.@GitHubOpening an existing codespaceYou can reopen a codespace that you have closed or stopped and return to your work.@GitHubExplore guides All Codespaces docsGetting started with GitHub CodespacesWhat are GitHub Codespaces?GitHub Codespaces featuresUnderstanding the codespace lifecycleDeep dive into GitHub CodespacesDeveloping in a codespaceDeveloping in a codespaceCreating a codespace for a repositoryCreating a codespace from a templateDeleting a codespaceOpening an existing codespaceWorking collaboratively in a codespaceUsing source control in your codespaceUsing GitHub Codespaces for pull requestsStopping and starting a codespaceForwarding ports in your codespaceRebuilding the container in a codespaceDefault environment variables for your codespacePersisting environment variables and temporary filesConnecting to a private networkGetting started with GitHub Codespaces for machine learningUsing GitHub Codespaces in Visual Studio CodeUsing GitHub Codespaces with GitHub CLICustomizing your codespaceRenaming a codespaceChanging the shell in a codespaceChanging the machine type for your codespaceSetting your user preferencesPersonalizing GitHub Codespaces for your accountSetting your default editor for GitHub CodespacesSetting your default region for GitHub CodespacesSetting your timeout period for GitHub CodespacesConfiguring automatic deletion of your codespacesChoosing the stable or beta host imageSetting up your project for GitHub CodespacesAdding a dev container configuration to your repository • 6 articlesConfiguring dev containers • 4 articlesSetting up your repository for GitHub Codespaces • 2 articlesPrebuilding your codespacesAbout GitHub Codespaces prebuildsConfiguring prebuildsAllowing a prebuild to access other repositoriesManaging prebuildsTesting dev container configuration changes on a prebuild-enabled branchManaging your codespacesManaging your account-specific secrets for GitHub CodespacesManaging access to other repositories within your codespaceReviewing your security logs for GitHub CodespacesManaging GPG verification for GitHub CodespacesManaging GitHub Codespaces for your organizationEnabling or disabling GitHub Codespaces for your organizationChoosing who owns and pays for codespaces in your organizationListing the codespaces in your organizationManaging the cost of GitHub Codespaces in your organizationManaging development environment secrets for your repository or organizationReviewing your organization's audit logs for GitHub CodespacesRestricting access to machine typesRestricting the number of organization-billed codespaces a user can createRestricting the base image for codespacesRestricting the visibility of forwarded portsRestricting the idle timeout periodRestricting the retention period for codespacesReferenceAllowing your codespace to access a private registryUsing GitHub Copilot in GitHub CodespacesUsing the Visual Studio Code Command Palette in GitHub CodespacesSecurity in GitHub CodespacesDisaster recovery for GitHub CodespacesTroubleshooting GitHub CodespacesGitHub Codespaces logsTroubleshooting GitHub Codespaces clientsGetting the most out of your included usageExporting changes to a branchTroubleshooting creation and deletion of codespacesTroubleshooting authentication to a repositoryTroubleshooting your connection to GitHub CodespacesTroubleshooting prebuildsTroubleshooting personalization options for GitHub CodespacesTroubleshooting port forwarding for GitHub CodespacesTroubleshooting GPG verification for GitHub CodespacesWorking with support for GitHub Codespaces\n\n\n\nRepositories documentation Learn to use and manage the repositories that allow you to store and collaborate on your project's code.Quickstart Overview Start hereCloning a repositoryWhen you create a repository on GitHub, it exists as a remote repository. You can clone your repository to create a local copy on your computer and sync between the two locations.Restoring a deleted repositoryYou can restore some deleted repositories to recover their contents.Adding a file to a repositoryYou can upload and commit an existing file to a repository on GitHub or by using the command line.Licensing a repositoryPublic repositories on GitHub are often used to share open source software. For your repository to truly be open source, you'll need to license it so that others are free to use, change, and distribute the software.PopularAbout protected branchesYou can protect important branches by setting branch protection rules, which define whether collaborators can delete or force push to the branch and set requirements for any pushes to the branch, such as passing status checks or a linear commit history.About releasesYou can create a release to package software, along with release notes and links to binary files, for other people to use.About READMEsYou can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it.About code ownersYou can use a CODEOWNERS file to define individuals or teams that are responsible for code in a repository.What's newView all Updates to repository pagesDecember 06New Organization Repositories List Feature PreviewDecember 06Upcoming changes to repository insightsNovember 29GuidesDeleting a repositoryYou can delete any repository or fork if you're either an organization owner or have admin permissions for the repository or fork. Deleting a forked repository does not delete the upstream repository.@GitHubManaging a branch protection ruleYou can create a branch protection rule to enforce certain workflows for one or more branches, such as requiring an approving review or passing status checks for all pull requests merged into the protected branch.@GitHubSetting repository visibilityYou can choose who can view your repository.@GitHubAll Repositories docsCreating and managing repositoriesAbout repositoriesBest practices for repositoriesQuickstart for repositoriesRepository limitsCreating a new repositoryCreating a repository from a templateCreating a template repositoryCreating an issues-only repositoryDuplicating a repositoryCloning a repositoryTroubleshooting cloning errorsRenaming a repositoryTransferring a repositoryDeleting a repositoryRestoring a deleted repositoryManaging your repository’s settings and featuresCustomizing your repository • 8 articlesEnabling features for your repository • 5 articlesManaging repository settings • 10 articlesConfiguring branches and merges in your repositoryManaging branches in your repository • 4 articlesConfiguring pull request merges • 8 articlesManaging protected branches • 2 articlesManaging rulesets for a repository • 5 articlesWorking with filesManaging files • 7 articlesUsing files • 5 articlesManaging large files • 9 articlesReleasing projects on GitHubAbout releasesManaging releases in a repositoryViewing your repository's releases and tagsSearching a repository's releasesLinking to releasesComparing releasesAutomatically generated release notesAutomation for release forms with query parametersViewing activity and data for your repositoryViewing deployment activity for your repositoryAbout repository graphsUsing Pulse to view a summary of repository activityViewing traffic to a repositoryViewing a project's contributorsAnalyzing changes to a repository's contentUnderstanding connections between repositoriesUsing the activity view to see changes to a repositoryArchiving a GitHub repositoryArchiving repositoriesAbout archiving content and data on GitHubReferencing and citing contentBacking up a repository\n\n\n\nPull requests documentation Learn how to use pull requests to suggest changes to a project, receive suggested changes to your own projects, and address issues in pull requests, such as merge conflicts.Overview Start hereChanging a commit messageIf a commit message contains unclear, incorrect, or sensitive information, you can amend it locally and push a new commit with a new message to GitHub. You can also change a commit message to add missing information.Resolving a merge conflict using the command lineYou can resolve merge conflicts using the command line and a text editor.Creating and deleting branches within your repositoryYou can create or delete branches directly on GitHub.Creating a pull requestCreate a pull request to propose and collaborate on changes to a repository. These changes are proposed in a branch, which ensures that the default branch only contains finished and approved work.PopularAbout pull request reviewsReviews allow collaborators to comment on the changes proposed in pull requests, approve the changes, or request further changes before the pull request is merged. Repository administrators can require that all pull requests are approved before being merged.Resolving a merge conflict on GitHubYou can resolve simple merge conflicts that involve competing line changes on GitHub, using the conflict editor.Syncing a forkSync a fork of a repository to keep it up-to-date with the upstream repository.Merging a pull requestMerge a pull request into the upstream branch when work is completed. Anyone with push access to the repository can complete the merge.What's newView all The Comment Box Becomes More Consistent and AccessibleOctober 31Repository Rules –  Public Beta – History, Import, ExportOctober 12GitHub Repository Custom Properties BetaOctober 12GuidesApproving a pull request with required reviewsIf your repository requires reviews, pull requests must have a specific number of approving reviews from people with write or admin permissions in the repository before they can be merged.@GitHubReverting a pull requestYou can revert a pull request after it's been merged to the upstream branch.@GitHubWhy are my commits linked to the wrong user?GitHub uses the email address in the commit header to link the commit to a GitHub user. If your commits are being linked to another user, or not linked to a user at all, you may need to change your local Git configuration settings, add an email address to your account email settings, or do both.@GitHubAll Pull requests docsCommitting changes to your projectCreating and editing commits • 4 articlesViewing and comparing commits • 2 articlesTroubleshooting commits • 3 articlesCollaborating with pull requestsGetting started • 3 articlesWorking with forks • 8 articlesCollaborating on repositories with code quality features • 2 articlesProposing changes to your work with pull requests • 12 articlesAddressing merge conflicts • 3 articlesReviewing changes in pull requests • 11 articlesIncorporating changes from a pull request • 6 articles\n\n\n\nGitHub Discussions documentation GitHub Discussions is a collaborative communication forum for the community around an open source or internal project. Community members can ask and answer questions, share updates, have open-ended conversations, and follow along on decisions affecting the community's way of working.Quickstart Start hereView all About discussionsUse discussions to ask and answer questions, share information, make announcements, and conduct or participate in a conversation about a project.Participating in a discussionYou can converse with the community and maintainers in a forum within the repository for a project on GitHub.Moderating discussionsYou can promote healthy collaboration by marking comments as answers, locking or unlocking discussions, converting issues to discussions, and editing or deleting comments, discussions, and categories that don't align with your community's code of conduct.PopularGranting higher permissions to top contributorsRepository administrators can promote any community member to a moderator and maintainer.Best practices for community conversations on GitHubYou can use discussions to brainstorm with your team, and eventually move the conversation to an issue when you are ready to scope out the work.Finding your discussionsYou can easily access every discussion you've created or participated in.Collaborating with maintainers using discussionsYou can contribute to the goals, plans, health, and community for a project on GitHub by communicating with the maintainers of the project in a discussion.What's newView all The Comment Box Becomes More Consistent and AccessibleOctober 31Filter answered discussions through the GraphQL APIOctober 10More secure private attachmentsMay 09Communities on GitHub.com using discussionsvercel/next.jsThe React Frameworkgatsbyjs/gatsbyBuild blazing fast, modern apps and websites with Reactnodejs/nodeNode.js JavaScript runtime ✨🐢🚀✨tailwindlabs/tailwindcssA utility-first CSS framework for rapid UI development.laravel/frameworkLaravel is a web application framework with expressive, elegant syntax.prisma/prismaModern database access (ORM alternative) for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB & SQLitedotnet/csharplangThe official repo for the design of the C# programming languagehome-assistant/frontend🍭 Frontend for Home Assistantjspsych/jsPsychA JavaScript library for creating and running behavioral experiments in a web browseradonisjs/core🚀 The Node.js Framework highly focused on developer ergonomics, stability and confidenceImageMagick/ImageMagick🧙‍♂️ ImageMagick 7react-hook-form/react-hook-form📋 React Hooks for forms validation (Web + React Native)GuidesAbout discussionsUse discussions to ask and answer questions, share information, make announcements, and conduct or participate in a conversation about a project.@GitHubParticipating in a discussionYou can converse with the community and maintainers in a forum within the repository for a project on GitHub.@GitHubModerating discussionsYou can promote healthy collaboration by marking comments as answers, locking or unlocking discussions, converting issues to discussions, and editing or deleting comments, discussions, and categories that don't align with your community's code of conduct.@GitHubExplore guides All GitHub Discussions docsDiscussions guidesBest practices for community conversations on GitHubFinding your discussionsGranting higher permissions to top contributorsCollaborating with your community using discussionsAbout discussionsParticipating in a discussionCollaborating with maintainers using discussionsManaging discussions for your communityManaging discussionsManaging categories for discussionsModerating discussionsViewing insights for your discussionsCreating discussion category formsSyntax for discussion category forms\n\n\n\nGitHub Copilot documentation You can use GitHub Copilot to get autocomplete-style suggestions from an AI pair programmer as you code.Overview Quickstart Start hereWhat is GitHub Copilot?Learn what GitHub Copilot is and what you can do with it.Quickstart for GitHub CopilotQuickly learn how to use GitHub Copilot.Quickstart for GitHub Copilot Extensions using agentsBuild and try out GitHub's Blackbeard extension to learn about the development process for GitHub Copilot Extensions.PopularBest practices for using GitHub CopilotLearn how to get the most out of Copilot.Copilot Chat CookbookFind examples of prompts to use with GitHub Copilot Chat.Getting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Asking GitHub Copilot questions in your IDEUse Copilot Chat in your editor to give you code suggestions, explain code, generate unit tests, and suggest code fixes.What's newView all Copilot Edits for JetBrains IDEs is generally availableApril 29GitHub Copilot code review now supports C, C++, Kotlin, and SwiftApril 23GitHub Copilot for Xcode adds @workspace and support for Claude 3.7 Sonnet and GPT-4.5April 19All GitHub Copilot docsAbout GitHub CopilotWhat is GitHub Copilot?GitHub Copilot featuresPlans for GitHub CopilotSetting up GitHub CopilotSetting up GitHub Copilot for your organizationSetting up GitHub Copilot for yourselfUsing GitHub CopilotBest practices for using GitHub CopilotGetting code suggestions in your IDE with GitHub CopilotCopilot Chat • 7 articlesAsking GitHub Copilot questions in Windows TerminalCode review • 3 articlesUsing GitHub Copilot in the command lineUsing extensions to integrate external tools with Copilot ChatAI models for Copilot • 9 articlesFinding public code that matches GitHub Copilot suggestionsUsing GitHub Copilot for pull requests • 2 articlesGuides on using GitHub Copilot • 4 articlesCopilot Chat CookbookDebugging errors • 2 articlesFunctionality analysis and feature suggestions • 2 articlesRefactoring code • 10 articlesDocumenting code • 5 articlesTesting code • 3 articlesSecurity analysis • 1 articlesManaging CopilotManaging Copilot as an individual subscriber • 3 articlesManaging GitHub Copilot in your organization • 5 articlesManaging GitHub Copilot in your enterprise • 1 articlesMonitoring usage and entitlements • 2 articlesConfiguring personal settings • 6 articlesConfiguring and auditing content exclusion • 2 articlesRolling out GitHub Copilot at scalePlanning a rollout of GitHub Copilot • 1 articlesAssigning GitHub Copilot licenses in your enterprise • 3 articlesEnabling developers to use GitHub Copilot • 1 articlesMeasuring adoption and usage of GitHub Copilot • 1 articlesCustomizing CopilotExtending the capabilities of GitHub Copilot in your organizationAbout customizing GitHub Copilot Chat responsesAdding personal custom instructions for GitHub CopilotAdding repository custom instructions for GitHub CopilotExtending Copilot Chat with the Model Context Protocol (MCP)Building Copilot ExtensionsAbout building Copilot ExtensionsQuickstart for GitHub Copilot Extensions using agentsSetting up Copilot ExtensionsCreating a Copilot Extension • 3 articlesBuilding a Copilot agent for your Copilot Extension • 5 articlesBuilding a Copilot skillset for your Copilot Extension • 2 articlesUsing OIDC with GitHub Copilot ExtensionsDebugging your GitHub Copilot ExtensionManaging the availability of your Copilot ExtensionCopilot Extensions FAQCopilot Extensions GlossaryTroubleshooting GitHub CopilotTroubleshooting common issues with GitHub CopilotViewing logs for GitHub Copilot in your environmentTroubleshooting firewall settings for GitHub CopilotTroubleshooting network errors for GitHub CopilotTroubleshooting issues with GitHub Copilot ChatResponsible use of GitHub Copilot featuresResponsible use of GitHub Copilot Chat in your IDEResponsible use of GitHub Copilot Chat in GitHubResponsible use of GitHub Copilot Chat in GitHub MobileResponsible use of GitHub Copilot in the CLIResponsible use of GitHub Copilot in Windows TerminalResponsible use of GitHub Copilot in GitHub DesktopResponsible use of GitHub Copilot pull request summariesResponsible use of GitHub Copilot text completionResponsible use of GitHub Copilot code review\n\n\n\nGitHub Copilot/Use GitHub Copilot/Get code suggestionsGetting code suggestions in your IDE with GitHub CopilotUse GitHub Copilot to get code suggestions in your editor.Tool navigationAzure Data StudioEclipseJetBrains IDEsVim/NeovimVisual StudioVisual Studio CodeXcodeIn this articleAbout GitHub Copilot and JetBrains IDEsPrerequisitesGetting code suggestionsShowing alternative suggestionsShowing multiple suggestions in a new tabAccepting partial suggestionsAbout GitHub Copilot and Visual StudioPrerequisitesGetting code suggestionsShowing alternative suggestionsGetting comment suggestionsAbout GitHub Copilot and Visual Studio CodePrerequisitesGetting code suggestionsShowing alternative suggestionsShowing multiple suggestions in a new tabAccepting partial suggestionsAbout next edit suggestionsChanging the AI modelAbout GitHub Copilot and Vim/NeovimPrerequisitesLearning to use GitHub Copilot in Vim/NeovimAbout GitHub Copilot and Azure Data StudioPrerequisitesGetting code suggestionsShowing alternative suggestionsAccepting partial suggestionsAbout GitHub Copilot in XcodePrerequisitesGetting code suggestionsAbout GitHub Copilot and EclipsePrerequisitesGetting code suggestionsManually triggering code completionAccepting partial suggestionsNext steps

    
        Get started for free 
    
    
    
        Open in Visual Studio Code 
    
    


About GitHub Copilot and JetBrains IDEs
This guide demonstrates how to get coding suggestions from GitHub Copilot in a JetBrains IDE. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
The examples in this guide use Java, however other languages will work similarly. GitHub Copilot provides suggestions for numerous languages and a wide variety of frameworks, but works especially well for Python, JavaScript, TypeScript, Ruby, Go, C# and C++. GitHub Copilot can also assist in query generation for databases, generating suggestions for APIs and frameworks, and can help with infrastructure as code development.
Prerequisites


Access to Copilot. To use GitHub Copilot in JetBrains, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


Compatible JetBrains IDE. To use GitHub Copilot in JetBrains, you must have a compatible JetBrains IDE installed. GitHub Copilot is compatible with the following IDEs:

IntelliJ IDEA (Ultimate, Community, Educational)
Android Studio
AppCode
CLion
Code With Me Guest
DataGrip
DataSpell
GoLand
JetBrains Client
MPS
PhpStorm
PyCharm (Professional, Community, Educational)
Rider
RubyMine
RustRover
WebStorm
Writerside

See the JetBrains IDEs tool finder to download.


GitHub Copilot plugin. See the GitHub Copilot plugin in the JetBrains Marketplace. For installation instructions, see Installing the GitHub Copilot extension in your environment.


Log in to GitHub in your JetBrains IDE. For authentication instructions, see Installing the GitHub Copilot extension in your environment.


Getting code suggestions
GitHub Copilot offers coding suggestions as you type. For example, in a Java file, create a class by typing class Test.
GitHub Copilot will automatically suggest a class body in grayed text. To accept the suggestion, press Tab.
You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal. For example, type this comment in a Java file:
Java// find all images without alternate text
// and give them a red border
void process () {
// find all images without alternate text
// and give them a red border
void process () {

GitHub Copilot will automatically suggest code. To accept the suggestion, press Tab.
GitHub Copilot will attempt to match the context and style of your code. You can always edit the suggested code.
Tip

If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information about duplication detection, see Managing Copilot policies as an individual subscriber.

Showing alternative suggestions
For any given input, GitHub Copilot may offer multiple suggestions. You can select which suggestion to use, or reject all suggestions.
For example, type the following line in a Java file, and press Enter:
Javaprivate int calculateDaysBetweenDates(Date date1,
private int calculateDaysBetweenDates(Date date1,

GitHub Copilot will show you a suggestion.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To display next or previous suggestions, click the forward or back arrow button in the control.
You can also use keyboard shortcuts to show alternative suggestions:




















OSSee next suggestionSee previous suggestionmacOSOption+]Option+[Windows or LinuxAlt+]Alt+[
To accept a suggestion, click "Accept" in the Copilot command palette, or press Tab. To reject all suggestions, press Esc.
Showing multiple suggestions in a new tab
If you don't want to use any of the initial suggestions GitHub Copilot offers, you can show multiple suggestions in a new tab.
For example, type the following line in a Java file:
Javaprivate int calculateDaysBetweenDates(Date date1,
private int calculateDaysBetweenDates(Date date1,

GitHub Copilot will show you a suggestion.
To open a new tab with multiple additional suggestions, use the following keyboard shortcut, then click Open GitHub Copilot:

















OSOpen multiple suggestionsmacOSCommand+Shift+AWindows or LinuxCtrl+Enter
To accept a suggestion, below the suggestion, click Accept suggestion NUMBER. To reject all suggestions, close the tab.
Accepting partial suggestions
If you don't want to accept an entire suggestion from GitHub Copilot, you can accept the next word or the next line of a suggestion.
For example, type the following line in a Java file:
Javaprivate int calculateDaysBetweenDates(Date date1,
private int calculateDaysBetweenDates(Date date1,

GitHub Copilot will show a suggestion in grayed text. The exact suggestion may vary.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To accept only the next word of the suggestion, click Accept Word in the control.
Alternatively, you can use a keyboard shortcut to accept the next word of a suggestion:




















OSAccept Next WordAccept Next LinemacOSCommand+→Command+Control+→Windows or LinuxControl+→Control+Alt+→
If you want to accept the next line of a suggestion, you will need to set a custom keyboard shortcut for the command editor.action.inlineSuggest.acceptNextLine. For more information on setting custom keyboard shortcuts, see Configuring GitHub Copilot in your environment.


About GitHub Copilot and Visual Studio
This guide demonstrates how to get coding suggestions from GitHub Copilot in Visual Studio for Windows. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
The examples in this guide use C#, however other languages will work similarly. GitHub Copilot provides suggestions for numerous languages and a wide variety of frameworks, but works especially well for Python, JavaScript, TypeScript, Ruby, Go, C# and C++. GitHub Copilot can also assist in query generation for databases, generating suggestions for APIs and frameworks, and can help with infrastructure as code development.
Prerequisites


Access to Copilot. To use GitHub Copilot in GitHub Copilot in Visual Studio, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


Compatible version of Visual Studio. To use GitHub Copilot in Visual Studio, you must have version 2022 17.8 or later of Visual Studio for Windows installed. For more information, see Install Visual Studio in the Microsoft documentation.


GitHub Copilot extension for Visual Studio. For instructions on how to install the Copilot extension, see Install GitHub Copilot in Visual Studio in the Microsoft documentation.


Add your GitHub account to Visual Studio. See Add your GitHub accounts to your Visual Studio keychain in the Microsoft documentation.


Getting code suggestions
GitHub Copilot offers coding suggestions as you type. For example, type this function
signature in a C# file:
C#int CalculateDaysBetweenDates(
int CalculateDaysBetweenDates(

GitHub Copilot will automatically suggest an entire function body in grayed text. To accept the suggestion, press Tab.
You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal. For example, type this comment in the C# file:
C#using System.Xml.Linq;

var doc = XDocument.Load("index.xhml");

// find all images
using System.Xml.Linq;

var doc = XDocument.Load("index.xhml");

// find all images

GitHub Copilot will suggest an implementation of the function. To accept the suggestion, press Tab.
Tip

If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information about duplication detection, see Managing Copilot policies as an individual subscriber.

Showing alternative suggestions
For any given input, GitHub Copilot may offer multiple suggestions. You can select which suggestion to use, or reject all suggestions.
For example, type this function signature in a C# file:
C#int CalculateDaysBetweenDates(
int CalculateDaysBetweenDates(

GitHub Copilot will show you a suggestion.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To display next or previous suggestions, click the forward or back arrow button in the control.
Alternatively, you can show alternate suggestions by pressing Alt+. (or Alt+,) on your keyboard.
To accept a suggestion, click "Accept" in the Copilot command palette, or press Tab. To reject all suggestions, press Esc.
Getting comment suggestions
Note


Comment suggestions are currently in public preview and are subject to change.
Comment suggestions are available in Visual Studio 17.14 Preview 2 and later.


GitHub Copilot can suggest comments for your code, by analyzing the code you write and generating comments that describe what the code does. For Copilot Free users, comment suggestions count towards your monthly Copilot Chat usage, not your code suggestions usage.
Comment suggestions are available in the following languages:

C#
C++

Enabling comment suggestions
To enable comment suggestions, you need to configure the comment style in Visual Studio.
For C++

In Visual Studio, in the Tools menu, click Options.
In the left-side panel, click Text Editor.
Click C++, then Code Style, then General.
Under "Comments", select Xml Doc Comments from the dropdown.
Select Insert existing comment style at the start of new lines when writing comments and Continue single line comments.

For C#

In Visual Studio, in the Tools menu, click Options.
In the left-side panel, click Text Editor.
Click C#, then Advanced.
Under "Comments", select Generate XML documentation comments for ///, Insert // at the start of new lines when writing // comments, and Insert * at the start of new lines when writing /* */ comments.

Using comment suggestions
To initiate comment suggestions, type the standard comment initiator for the language you are writing in (for example, ///), before the code you want to comment, and wait for the suggestion to appear.
To accept the suggestion, press Tab. To modify the suggestion, press Alt+/. To reject the suggestion, press Esc.


About GitHub Copilot and Visual Studio Code
This guide demonstrates how to get coding suggestions from GitHub Copilot in Visual Studio Code. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
Copilot in VS Code provides two kinds of suggestions:

Code completions. Copilot offers coding suggestions as you type. You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal.
Next edit suggestions (public preview). Based on the edits you are making, Copilot will predict the location of the next edit you are likely to make and suggest a completion for it.

The examples in this guide use JavaScript, however other languages will work similarly. GitHub Copilot provides suggestions for numerous languages and a wide variety of frameworks, but works especially well for Python, JavaScript, TypeScript, Ruby, Go, C# and C++. GitHub Copilot can also assist in query generation for databases, generating suggestions for APIs and frameworks, and can help with infrastructure as code development.
Prerequisites


Access to Copilot. To use GitHub Copilot in Visual Studio Code, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


Sign in to GitHub in Visual Studio Code. See Set up GitHub Copilot in Visual Studio Code in the VS Code documentation..


Visual Studio Code. To use GitHub Copilot in Visual Studio Code, you must have Visual Studio Code installed. For more information, see the Visual Studio Code download page.


Copilot in Visual Studio Code. When you set up GitHub Copilot in Visual Studio Code for the first time, the required extensions are installed automatically. You don't need to download or install them manually. For detailed instructions, see Set up GitHub Copilot in Visual Studio Code in the Visual Studio Code documentation.


Getting code suggestions
GitHub Copilot offers coding suggestions as you type. For example, type this function header in a JavaScript file:
JavaScriptfunction calculateDaysBetweenDates(begin, end) {
function calculateDaysBetweenDates(begin, end) {

GitHub Copilot will automatically suggest the rest of the function. To accept the suggestion, press Tab.
You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal. For example, type this comment in a JavaScript file:
JavaScript// write a function to
// find all images without alternate text
// and give them a red border
// write a function to
// find all images without alternate text
// and give them a red border

GitHub Copilot will automatically suggest code. To accept the suggestion, press Tab.
Tip

If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information about duplication detection, see Managing Copilot policies as an individual subscriber.

Showing alternative suggestions
For any given input, GitHub Copilot may offer multiple suggestions. You can select which suggestion to use, or reject all suggestions.
For example, type this function header in a JavaScript file, and press Enter:
JavaScriptfunction calculateDaysBetweenDates(begin, end) {
function calculateDaysBetweenDates(begin, end) {

GitHub Copilot will show you a suggestion.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To display next or previous suggestions, click the forward or back arrow button in the control.
You can also use keyboard shortcuts to show alternative suggestions:




















OSSee next suggestionSee previous suggestionmacOSOption (⌥) or Alt+]Option (⌥) or Alt+[Windows or LinuxAlt+]Alt+[
To accept a suggestion, click "Accept" in the Copilot command palette, or press Tab. To reject all suggestions, press Esc.
Showing multiple suggestions in a new tab
If you don't want to use any of the initial suggestions GitHub Copilot offers, you can show multiple suggestions in a new tab.
For example, type this function header in a JavaScript file, and press Enter:
JavaScriptfunction calculateDaysBetweenDates(begin, end) {
function calculateDaysBetweenDates(begin, end) {

GitHub Copilot will show you a suggestion. Now press Ctrl+Enter to open a new tab with multiple additional options.
To accept a suggestion, below the suggestion, click Accept suggestion NUMBER. To reject all suggestions, close the tab.
Accepting partial suggestions
If you don't want to accept an entire suggestion from GitHub Copilot, you can accept the next word or the next line of a suggestion.
For example, type this function header in a JavaScript file, and press Enter:
JavaScriptfunction calculateDaysBetweenDates(begin, end) {
function calculateDaysBetweenDates(begin, end) {

GitHub Copilot will automatically suggest an entire function body in grayed text. The exact suggestion may vary.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To accept only the next word of the suggestion, click Accept Word in the control.
Alternatively, you can use a keyboard shortcut to accept the next word of a suggestion:

















OSAccept Next WordmacOSCommand+→Windows or LinuxControl+→
If you want to accept the next line of a suggestion, you will need to set a custom keyboard shortcut for the command editor.action.inlineSuggest.acceptNextLine. For more information on setting custom keyboard shortcuts, see Configuring GitHub Copilot in your environment.
About next edit suggestions
Inline suggestions autocomplete code, but many development tasks involve editing existing code. Next edit suggestions assists with edits both at the cursor and in other relevant parts of the code, helping maintain consistency and streamline changes.
Next edit suggestions predicts where and what edits may be needed based on ongoing changes. Suggestions may span a single symbol, an entire line, or multiple lines, depending on the scope of the potential change.
To enable next edit suggestions, see Configuring GitHub Copilot in your environment.
Navigating and accepting suggestions
You can navigate suggested code changes using Tab, making it easier to find the next relevant edit without manually searching through files or references. Press Tab again to accept a suggestion.
An arrow in the gutter indicates an available edit suggestion. Hover over the arrow to access the edit suggestion menu, which provides keyboard shortcuts and settings options. If an edit suggestion is outside the current editor view, the arrow will point up or down to indicate where the next suggestion is.

For more details and examples, see Code completions with GitHub Copilot in VS Code in the Visual Studio Code documentation.
Changing the AI model
You can change the large language model that's used to generate code completion suggestions. For more information, see Changing the AI model for Copilot code completion.


About GitHub Copilot and Vim/Neovim
This guide demonstrates how to get coding suggestions from GitHub Copilot in Vim/Neovim. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
Prerequisites


Access to Copilot. To use GitHub Copilot in Vim/Neovim, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


Compatible version of Vim/Neovim. To use GitHub Copilot in Vim/Neovim you must have Vim version 9.0.0185 / Neovim version 0.6 or above and Node.js version 18 or above installed. For more information, see the Vim / Neovim documentation and the Node.js website.


GitHub Copilot extension for Vim/Neovim. To use GitHub Copilot in Vim/Neovim, you must install the GitHub Copilot plugin. For more information, see Installing the GitHub Copilot extension in your environment.


Learning to use GitHub Copilot in Vim/Neovim
GitHub Copilot provides suggestions inline as you type in Vim/Neovim. To accept a suggestion, press the tab key.
For more information and guidance on using GitHub Copilot in Vim/Neovim run the following command to view the plugin documentation:
Shell:help copilot
:help copilot



About GitHub Copilot and Azure Data Studio
This guide demonstrates how to get coding suggestions from GitHub Copilot in Azure Data Studio. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
Prerequisites


Access to Copilot. To use GitHub Copilot in Azure Data Studio, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


Compatible version of Azure Data Studio. To use GitHub Copilot in Azure Data Studio, you must have Azure Data Studio version 1.44.0 or later installed. For more information, see the Azure Data Studio download page in the Azure Data Studio documentation.


GitHub Copilot extension for Azure Data Studio. To use GitHub Copilot in Azure Data Studio, you must install the GitHub Copilot extension. For more information, see Installing the GitHub Copilot extension in your environment.


Getting code suggestions
GitHub Copilot can provide you with inline suggestions as you create SQL databases in Azure Data Studio. For example, if you're writing a query that joins two tables, Copilot may suggest the join condition from columns in the open editor, other files in the workspace, and common syntax patterns.
In a SQL file, type the following query:
SQLSELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN
SELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN

GitHub Copilot will automatically suggest a join condition in grayed text. The exact suggestion may vary. To accept the suggestion, press Tab.
You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal. For example, type this comment in a SQL file:
SQLSELECT TokenColor, COUNT(UserID) AS UserCount
FROM Tag.Users
GROUP BY TokenColor
-- pivot that query on tokencolor for Purple, Blue, Green, Yellow, Orange, Red
-- and rename the columns to match the colors
SELECT [Purple], [Blue], [Green], [Yellow], [Orange], [Red]
SELECT TokenColor, COUNT(UserID) AS UserCount
FROM Tag.Users
GROUP BY TokenColor
-- pivot that query on tokencolor for Purple, Blue, Green, Yellow, Orange, Red
-- and rename the columns to match the colors
SELECT [Purple], [Blue], [Green], [Yellow], [Orange], [Red]

GitHub Copilot will automatically suggest code. To accept the suggestion, press Tab.
Tip

If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information on duplication detection, see Managing Copilot policies as an individual subscriber.

Showing alternative suggestions
For some suggestions, GitHub Copilot may provide multiple alternatives. You can select which suggestion you want to use, or reject all suggestions.
For example, type this query in a SQL file:
SQLSELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN
SELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN

GitHub Copilot will show you a suggestion.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To display next or previous suggestions, click the forward or back arrow button in the control.
You can also use keyboard shortcuts to show alternative suggestions:




















OSSee next suggestionSee previous suggestionmacOSOption+[Option+]Windows or LinuxAlt+[Alt+]
To accept a suggestion, click "Accept" in the Copilot control, or press Tab. To reject all suggestions, press Esc.
Accepting partial suggestions
If you don't want to accept an entire suggestion from GitHub Copilot, you can accept the next word or the next line of a suggestion.
For example, type this query in a SQL file:
SQLSELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN
SELECT [UserId], [Red], [Orange], [Yellow], [Green], [Blue], [Purple], [Rainbow]
FROM [Tag].[Scoreboard]
INNER JOIN

GitHub Copilot will show you a suggestion in grayed text. The exact suggestion may vary.
Now hover over the suggestion to show the GitHub Copilot control for choosing suggestions. To accept only the next word of the suggestion, click Accept Word in the control.
Alternatively, you can use a keyboard shortcut to accept the next word of a suggestion:

















OSAccept Next WordmacOSCommand+→Windows or LinuxControl+→
If you want to accept the next line of the suggestion, you will need to set a custom keyboard shortcut for the command editor.action.inlineSuggest.acceptNextLine. For more information on setting custom keyboard shortcuts, see Keyboard shortcuts in Azure Data Studio in the Microsoft documentation.


About GitHub Copilot in Xcode
This guide demonstrates how to get coding suggestions from GitHub Copilot in Xcode. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
Prerequisites


Access to Copilot. To use GitHub Copilot in Xcode, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


GitHub Copilot extension for Xcode. To use GitHub Copilot for Xcode, you must install the GitHub Copilot for Xcode extension. See Installing the GitHub Copilot extension in your environment.


Getting code suggestions
GitHub Copilot offers coding suggestions as you type. For example, type this function
signature in a Swift file:
Swiftfunc calculateDaysBetweenDates(
func calculateDaysBetweenDates(

GitHub Copilot will automatically suggest an entire function body in grayed text. To accept the first line of a suggestion, press Tab. To view the full suggestion, hold Option, and to accept the full suggestion, press Option+Tab.
Improving code suggestions
If you encounter issues with code suggestions, such as conflicting or missing suggestions, you can try the following:

Disable Xcode's native predictive text completion: To avoid receiving two sets of code suggestions, you can disable Xcode's native predictive text completion. You can find this setting in the Xcode settings in the "Editing" tab under "Text Editing".
Check for duplication detection in Copilot: If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information on duplication detection, see Managing Copilot policies as an individual subscriber.
Check for updates and restart Xcode: Ensure you have the latest version of Copilot for Xcode in the extension application and restart Xcode.

You can also open an issue in the Copilot for Xcode repository.


About GitHub Copilot and Eclipse
This guide demonstrates how to get coding suggestions from GitHub Copilot in Eclipse. To see instructions for other popular coding environments, use the tool switcher at the top of the page.
Prerequisites


Access to Copilot. To use GitHub Copilot in Eclipse, you need either limited access through Copilot Free or a paid Copilot plan for full access. For information about how to get access to Copilot, see What is GitHub Copilot?.


GitHub Copilot extension for Eclipse.To use GitHub Copilot in Eclipse, you must install the GitHub Copilot extension. See Installing the GitHub Copilot extension in your environment.


Getting code suggestions
GitHub Copilot offers coding suggestions as you type. For example, type this function header in a Java file:
Javapublic int getDiff(int a, int b)
public int getDiff(int a, int b)

GitHub Copilot will automatically suggest the rest of the function. To accept the suggestion, press Tab.
To discard the suggestion, press Esc.
You can also describe something you want to do using natural language within a comment, and Copilot will suggest the code to accomplish your goal. For example, type this comment in a Java file:
Java/*
 * Return the difference between two different integers.
 */
/*
 * Return the difference between two different integers.
 */

GitHub Copilot will automatically suggest code.
Tip

If you receive limited or no suggestions from Copilot, you may have duplication detection enabled. For more information about duplication detection, see Managing Copilot policies as an individual subscriber.

Manually triggering code completion
You can also use keyboard shortcuts to trigger code completion.

















OSTrigger code completionmacOSOption+Command+/Windows or LinuxCtrl+Alt+/
Accepting partial suggestions
If you don't want to accept an entire suggestion from Copilot, you can accept the next word of a suggestion.

















OSAccept next wordmacOSCommand+→Windows or LinuxCtrl+→

Next steps

Learn how to write effective prompts - See Prompt engineering for Copilot Chat.
Configure Copilot in your editor - You can enable or disable GitHub Copilot from within your editor, and create your own preferred keyboard shortcuts for Copilot. See Configuring GitHub Copilot in your environment.
Get started with GitHub Copilot Chat - Learn how to ask Copilot for information and assistance, using GitHub Copilot Chat. See Asking GitHub Copilot questions in your IDE.
Troubleshoot issues - Learn more about how to troubleshoot common issues with GitHub Copilot. See Troubleshooting GitHub Copilot.\n\n\n\nGitHub Copilot/Use GitHub Copilot/Copilot Chat/Prompt engineeringPrompt engineering for Copilot ChatFollow these strategies to improve your Copilot results.In this articleStart general, then get specificGive examplesBreak complex tasks into simpler tasksAvoid ambiguityIndicate relevant codeExperiment and iterateKeep history relevantFollow good coding practicesFurther readingA prompt is a request that you make to GitHub Copilot. For example, a question that you ask Copilot Chat, or a code snippet that you ask Copilot to complete. In addition to your prompt, Copilot uses additional context, like the code in your current file and the chat history, to generate a response.
Follow the tips in this article to write prompts that generate better responses from Copilot.
Start general, then get specific
When writing a prompt for Copilot, first give Copilot a broad description of the goal or scenario. Then list any specific requirements.
For example:

Write a function that tells me if a number is prime
The function should take an integer and return true if the integer is prime
The function should error if the input is not a positive integer

Give examples
Use examples to help Copilot understand what you want. You can provide example input data, example outputs, and example implementations.
For example:

Write a function that finds all dates in a string and returns them in an array. Dates can be formatted like:

05/02/24
05/02/2024
5/2/24
5/2/2024
05-02-24
05-02-2024
5-2-24
5-2-2024

Example:
findDates("I have a dentist appointment on 11/14/2023 and book club on 12-1-23")
Returns: ["11/14/2023", "12-1-23"]

Unit tests can also serve as examples. Before writing your function, you can use Copilot to write unit tests for the function. Then, you can ask Copilot to write a function described by those unit tests.
Break complex tasks into simpler tasks
If you want Copilot to complete a complex or large task, break the task into multiple simple, small tasks.
For example, instead of asking Copilot to generate a word search puzzle, break the process down into smaller tasks, and ask Copilot to accomplish them one by one:

Write a function to generate a 10 by 10 grid of letters.
Write a function to find all words in a grid of letters, given a list of valid words.
Write a function that uses the previous functions to generate a 10 by 10 grid of letters that contains at least 10 words.
Update the previous function to print the grid of letters and 10 random words from the grid.

Avoid ambiguity
Avoid ambiguous terms. For example, don’t ask "what does this do" if "this" could be the current file, the last Copilot response, or a specific code block. Instead, be specific:

What does the createUser function do?
What does the code in your last response do?

Ambiguity can also apply to libraries:

If you are using an uncommon library, describe what the library does.
If you want to use a specific library, set the import statements at the top of the file or specify what library you want to use.

Indicate relevant code
If you are using Copilot in your IDE to get suggestions as you code, open any relevant files and close irrelevant files. Copilot will use the open files to understand your request.
If you are using Copilot Chat in your IDE, open the file or highlight the code that you want Copilot to reference. You can also use keywords to manually supply context to Copilot Chat. For example, you can add the @workspace chat participant in VS Code, or @project in JetBrains IDEs. See GitHub Copilot Chat cheat sheet.
Experiment and iterate
If you don’t get the result that you want, iterate on your prompt and try again.
If you are using Copilot to get suggestions as you code, you can delete the suggestion entirely and start over. Or you can keep the suggestion and request modifications.
If you are using Copilot Chat, you can reference the previous response in your next request. Or, you can delete the previous response and start over.
Keep history relevant
Copilot Chat uses the chat history to get context about your request. To give Copilot only the relevant history:

Use threads to start a new conversation for a new task
Delete requests that are no longer relevant or that didn’t give you the desired result

Follow good coding practices
If you aren't getting the responses you want when you ask Copilot for suggestions or explanations in your codebase, make sure that your existing code follows best practices and is easy to read. For example:

Use a consistent code style and patterns
Use descriptive names for variables and functions
Comment your code
Structure your code into modular, scoped components
Include unit tests

Tip

Use Copilot to help your code follow best practices. For example, ask Copilot to add comments or to break a large function into smaller functions.

Further reading

How to use GitHub Copilot: Prompts, tips, and use cases in the GitHub blog
Using GitHub Copilot in your IDE: Tips, tricks, and best practices in the GitHub blog
A developer’s guide to prompt engineering and LLMs in the GitHub blog
Prompting GitHub Copilot Chat to become your personal AI assistant for accessibility in the GitHub blog\n\n\n\nGitHub Copilot/Use GitHub Copilot/Copilot Chat/Chat in GitHubAsking GitHub Copilot questions in GitHubYou can use GitHub Copilot Chat in GitHub to answer general questions about software development, or specific questions about the issues or code in a repository.In this articleOverviewPowered by skillsCustomizing Copilot Chat responsesAI models for Copilot ChatSubmitting a question to Copilot ChatAsking Copilot Chat questions in different contextsAsking Copilot Chat questions in a repositoryAsking Copilot Chat questions about a specific file or symbolAsking Copilot Chat questions about specific pieces of codeAsking questions about alerts from GitHub Advanced Security productsAsking questions about a specific pull requestAsking a question about a specific issue or discussionAsking a question about a specific commitUsing images in Copilot ChatAccessing Copilot Chat from the search barAccessing Copilot Chat from the dashboardExtending Copilot Chat in GitHubSharing Copilot Chat conversationsSharing feedback about GitHub Copilot Chat in GitHubFurther readingOverview
GitHub Copilot Chat in GitHub is a chat interface that lets you ask and receive answers to coding-related questions on the GitHub website.
Copilot Chat can help you with a variety of coding-related tasks, like offering you code suggestions, providing natural language descriptions of a piece of code's functionality and purpose, generating unit tests for your code, and proposing fixes for bugs in your code. For more information, see Asking GitHub Copilot questions in GitHub.
On GitHub, you can use Copilot Chat to ask different questions in different contexts. For example, you can ask about a specific repository, a specific issue, or a specific pull request. You can also ask general questions about software development, or about a specific programming language.
Limitations
The quality of the results from Copilot Chat may, in some situations, be degraded if very large files, or a large number of files, are used as a context for a question.
Viewing and editing generated files within Copilot Chat
Note

This feature is currently in public preview and subject to change.

When you ask a question, Copilot may generate one or more files as part of its response. In the Copilot Chat panel, the files are displayed inline, within the chat response. In immersive view (that is, at https://github.com/copilot), the generated files are displayed in a side panel. You can view and edit the files in the panel, or download them to your computer.
For example, asking Generate a simple calculator using HTML, CSS, and JavaScript may generate multiple files, such as index.html, styles.css, and script.js.
In immersive view, you can also preview how some file formats, such as Markdown, render by toggling to the "Preview" tab in the side panel.
Powered by skills
When using the GPT-4o and Claude Sonnet models, Copilot has access to a collection of skills to fetch data from GitHub, which are dynamically selected based on the question you ask. You can tell which skill Copilot used by clicking  to expand the status information in the chat window.

You can explicitly ask GitHub Copilot Chat in GitHub to use a particular skill - for example, Use the Bing skill to find the latest GPT4 model from OpenAI.
You can generate a list of currently available skills by asking Copilot: What skills are available?
Customizing Copilot Chat responses
GitHub Copilot can provide chat responses that are tailored to the way your team works, the tools you use, the specifics of your project, or your personal preferences, if you provide it with enough context to do so. Instead of repeating instructions in each prompt, you can create and save instructions for Copilot Chat to customize what responses you receive.
There are two types of custom instructions you can add for Copilot Chat:

Repository instructions: You can create a custom instructions file for a repository, so that all prompts asked in the context of the repository automatically include the instructions you've defined
Personal instructions: You can add personal instructions so that all the chat responses you, as a user, receive are tailored to your preferences

For more information, see Adding repository custom instructions for GitHub Copilot and Adding personal custom instructions for GitHub Copilot.
AI models for Copilot Chat
You can change the large language model that Copilot uses to generate responses to chat prompts, including premium models with advanced capabilities. You may find that different models perform better, or provide more useful responses, depending on the type of questions you ask. For more information see Changing the AI model for Copilot Chat.
Submitting a question to Copilot Chat
You can open Copilot Chat from any page on GitHub. Certain questions may require you to be in a specific context, such as a repository, issue, or pull request. The following procedure describes how to ask a general software related question, and demonstrates the core functionality of Copilot Chat on GitHub. For more information on other scenarios, see Asking Copilot Chat questions in different contexts.
Depending on the question you ask, and your enterprise and organization settings, Copilot may respond using information based on the results of a Bing search. By using Bing search, Copilot can answer a broad range of tech-related questions with up-to-date details based on information currently available on the internet. For information on how to enable or disable Bing search integration, see Managing Copilot policies as an individual subscriber and Managing policies and features for Copilot in your enterprise.


At the top right of any page on GitHub, click  beside the  icon and click Immersive in the dropdown menu.



At the bottom of the page, in the "Ask Copilot" box, type a question and press Enter.
Some examples of general questions you could ask are:

What are the advantages of the Go programming language?
What is Agile software development?
What is the most popular JavaScript framework?
Give me some examples of regular expressions.
Write a bash script to output today's date.



Optionally, after submitting a question, you can click  in the text box to stop the response.


If Copilot uses a Bing search to answer your question, "Using web search results for 'SEARCH QUERY'" is displayed above the response. Click this to see the search results that Copilot used to answer your question.


Within a conversation thread, you can ask follow-up questions. Copilot will answer within the context of the conversation. For example, you could type "tell me more" to get Copilot to expand on its last comment.
You can use your initial question as a foundation for follow-up questions. A detailed foundational prompt can help Copilot provide more relevant answers to your follow-up questions. For more information, see Prompting GitHub Copilot Chat to become your personal AI assistant for accessibility on the GitHub Blog.


To start a new conversation, click  at the top left of the page.


To see a list of your previous conversations, click  at the top left of the page.


Regenerating a response with a different model
Note

This feature is currently in public preview and is subject to change.

After Copilot responds to your question, you can regenerate the same prompt using a different model by clicking the retry icon () below the response. The new response will use your selected model and maintain the full context of the conversation.
You can switch between responses to compare the results from different models.
For help deciding which model to use, see Choosing the right AI model for your task.
Using subthreads in a conversation
Note

Subthreading in Copilot Chat is currently in public preview and is subject to change.

Subthreads are branches of a conversation that are created from a point in a conversation where you asked a question. Subthreads offer more control and flexibility for exploring aspects of a topic, or new topics, all within the same thread.
You can create and navigate through subthreads in Copilot Chat's immersive view. In the Copilot Chat panel, if you open a conversation that contains subthreads, only the most recently edited subthread is displayed.
You can create a subthread in immersive mode by either editing or retrying any of your questions in the conversation.
To edit a question:


Hover over the question you want to edit.


Click the  button that's displayed.



Edit the question, then click Send.


Note

You can only edit the text of a question. You can't edit any attachments.

To retry a question:


Hover over the response to a question you want to retry. Resubmitting a question to Copilot may generate a different response.


Click the  button.



The response to your edited or retried question is displayed in a new subthread.
To navigate between subthreads:


If you have retried a question, a retry counter is displayed under the response, alongside the retry button.

Click  or  to navigate to the previous or next subthread.


If you have edited a question, an edit counter is added below the question.

Hover over the counter to display the edit and navigation buttons, then click  or  to navigate to the previous or next subthread.


Asking Copilot Chat questions in different contexts
You can ask Copilot Chat different types of questions depending on where you are on GitHub. For example, to ask a question about a specific repository, you must be in the context of that repository. The following sections describe how to access the different contexts.
For examples of the types of questions you can ask in different contexts, see Getting started with prompts for Copilot Chat.
Asking Copilot Chat questions in a repository
To ask a question about a specific repository, you must be viewing the repository on GitHub.


Navigate to a repository on GitHub.


At the top right of the page, click the  GitHub Copilot icon next to the search bar.
Copilot Chat will open a new conversation, with the repository you are viewing selected as the context for your question.



At the bottom of the panel, in the "Ask Copilot" box, type a question and press Enter.
Note

Copilot's ability to answer natural language questions in a repository context is improved when the repository has been indexed for semantic code search. The indexing status of the repository is displayed when you start a conversation that has a repository context. For more information, see Indexing repositories for Copilot Chat.



Asking Copilot Chat questions about a specific file or symbol
You can ask Copilot about a specific file, folder, or symbol within a repository.
Note
 A "symbol" is a named entity in code. This could be a variable, function, class, module, or any other identifier that's part of a codebase.



At the top right of the page, click the  GitHub Copilot icon next to the search bar.


To select a repository for context, click  at the bottom of the chat panel, then select "Repositories".



Once the repository has been attached, click  again, then select "Files, folders, and symbols".


Search for and select one or more files, folders, or symbols.


In the "Ask Copilot" box, type a question and press Enter.
Copilot replies in the chat panel.
Tip

Copilot's ability to answer natural language questions like these in a repository context is optimized when the semantic code search index for the repository is up to date. For more information, see Indexing repositories for Copilot Chat.



Asking Copilot Chat questions about specific pieces of code
You can chat with Copilot about a file in your repository, or about specific lines of code within a file.


On GitHub, navigate to a repository and open a file.


Do one of the following:


To ask a question about the entire file, click the Copilot icon () at the top right of the file view.



To ask a question about specific lines within the file:

Select the lines by clicking the line number for the first line you want to select, holding down Shift and clicking the line number for the last line you want to select.
To ask your own question about the selected lines, click the Copilot icon () to the right of your selection.
This displays the GitHub Copilot Chat panel with the selected lines indicated as the context of your question.
To ask a predefined question, click the downward-pointing button beside the Copilot icon, then choose one of the options.






If you clicked the Copilot icon, type a question in the "Ask Copilot" box at the bottom of the chat panel and press Enter.
Copilot responds to your request in the panel.



Asking questions about alerts from GitHub Advanced Security products
Copilot allows you to use natural language questions to ask about security alerts in repositories in your organization when these alerts are generated by GitHub Advanced Security features (code scanning, secret scanning, and Dependabot alerts).


At the top right of any page on GitHub, click  beside the  icon and click Immersive in the dropdown menu.



To select a repository for context, click  at the bottom of the chat panel, then select "Repositories".



In the "Search repositories" box, type the name of the repository you want to ask about, then click the repository in the list of search results.


In the "Ask Copilot" box, type a question and press Enter.

Tip

Copilot's ability to answer natural language questions like these in a repository context is optimized when the semantic code search index for the repository is up to date. For more information, see Indexing repositories for Copilot Chat.



Asking questions about a specific pull request
You can ask Copilot different questions about a pull request, from different views within the pull request. For example, you can ask Copilot to summarize a pull request, or explain what has changed within specific files or lines of code in a pull request.
Get a summary of a pull request

On GitHub, navigate to a pull request in a repository.
At the top right of the page, click the  GitHub Copilot icon next to the search bar.
If the panel contains a previous conversation you had with Copilot, click the  plus sign icon at the top right of the Copilot panel to start a new conversation.
At the bottom of the Copilot Chat panel, in the "Ask Copilot" box, type a question and press Enter.

Ask about changes to a specific file in a pull request

On GitHub, navigate to a pull request in a repository.
Click the Files changed tab.
Click  at the top right of the file, then click Ask Copilot about this diff.
Type a question in the "Ask Copilot" box at the bottom of the chat panel and press Enter.

Ask about specific lines within a file in a pull request

On GitHub, navigate to a pull request in a repository.
Click the Files changed tab.
Click the line number for the first line you want to select, then hold down Shift and click the line number for the last line you want to select.
Ask Copilot a question, or choose from a list of predefined questions.

To ask your own question about the selected lines, to the right of your selection, click the  Copilot icon.
This displays the GitHub Copilot Chat panel with the selected lines indicated as the context of your question.



Ask why a workflow has failed

On GitHub, navigate to a pull request in a repository.
Scroll to the bottom of the page, then, next to one of the failing checks, click Details.
At the top right of the page, click the  GitHub Copilot icon next to the search bar.
If the panel contains a previous conversation you had with Copilot, click the  plus sign icon at the top right of the Copilot panel to start a new conversation.
At the bottom of the Copilot Chat panel, in the "Ask Copilot" box, ask Copilot why the pull request has failed and press Enter.

Copilot will respond with information about why the pull request failed. Copilot may also provide suggestions for how to fix the issue.

If Copilot has provided steps to fix the issue, you can follow the steps to resolve the problem.

Asking a question about a specific issue or discussion
You can ask Copilot to summarize or answer questions about a specific issue or discussion.
Note
 The quality of Copilot Chat's responses may be degraded when working with issues or discussions that have very long bodies or a large number of comments. For example, this may occur if you ask Copilot to summarize a long-running discussion. Where this happens, Copilot will warn you so you can double check its output.



Navigate to an issue or discussion on GitHub.


At the top right of the page, click the  GitHub Copilot icon next to the search bar.


If the panel contains a previous conversation you had with Copilot, click the  plus sign icon at the top right of the Copilot panel to start a new conversation.


At the bottom of the Copilot chat panel, in the "Ask Copilot" box, type a question and press Enter.
Copilot responds to your request in the panel.
Tip
 Instead of navigating to an issue or discussion in your browser to ask a question, you can include the relevant URL in your message. For example, Summarize https://github.com/monalisa/octokit/issues/1.



Asking a question about a specific commit
You can ask Copilot to explain the changes in a commit.


Navigate to a commit on GitHub.


At the top right of the page, click the  GitHub Copilot icon next to the search bar.


If the panel contains a previous conversation you had with Copilot, click the  plus sign icon at the top right of the Copilot panel to start a new conversation.


At the bottom of the Copilot chat panel, in the "Ask Copilot" box, type a question and press Enter.
Tip

If you know the SHA for a commit, instead of navigating to the commit, you can ask Copilot about the commit from any page in the repository on GitHub by including the SHA in your message. For example, What changed in commit a778e0eab?



Optionally, after submitting a question, you can click  in the text box to stop the response.


Using images in Copilot Chat
Note


Attaching images to chat prompts is currently in public preview and is subject to change.
You can only attach an image in the immersive view of Copilot Chat (https://github.com/copilot), not in the chat panel.


You can attach an image to Copilot and then ask about the image. For example, you can attach:

A screenshot of a code snippet and ask Copilot to explain the code.
A mockup of the user interface for an application and ask Copilot to generate the code.
A flowchart and ask Copilot to describe the processes shown in the image.
A screenshot of a web page and ask Copilot to generate HTML for a similar page.

Note

The following types of image file are supported: JPEG (.jpg, .jpeg), PNG (.png), GIF (.gif), or WEBP (.webp).

Attaching an image to your chat prompt


Go to the immersive view of Copilot Chat (https://github.com/copilot).


If you see the AI model picker at the top of the page, select one of the models that supports adding images to prompts:

GPT-4o (the default that's used if you don't see a model picker)
Claude 3.5 Sonnet
Claude 3.7 Sonnet
Gemini 2.0 Flash
Gemini 2.5 Pro




Do one of the following:

Copy an image and paste it into the prompt box at the bottom of the page.
Click  in the prompt box, then click Image. Browse to the image file you want to attach, select it and click Open.
Drag and drop an image file from your operating system's file explorer into the prompt box.



Type your prompt into the chat view to accompany the image. For example, explain this diagram, describe each of these images in detail, what does this error message mean.


Accessing Copilot Chat from the search bar
You can ask Copilot a question about an entire repository by typing your question in the main search box of the repository.


Navigate to a repository on GitHub.


Press /, or click in the main search box at the top of the page.


In the search box, after repo:OWNER/REPO, type the question you want to ask Copilot.
For example, you could enter:

What does this repo do?
Where is authentication implemented in this codebase?
How does license file detection work in this repo?



Click Ask Copilot.

The GitHub Copilot Chat panel is displayed and Copilot responds to your request.


Optionally, after submitting a question, you can click  in the text box to stop the response.


Accessing Copilot Chat from the dashboard
You can access Copilot's immersive view from the dashboard. The dashboard is your personalized overview of your activity on GitHub, seen when you visit https://github.com while logged in.


Go to the dashboard at https://github.com.


In the "Ask Copilot" box, type a question and press Enter.

You will be taken to the immersive view where Copilot will respond to your request.


Extending Copilot Chat in GitHub
GitHub Copilot Extensions integrate the power of external tools into Copilot Chat, helping you reduce context switching and receive responses with domain-specific context. You can install Copilot Extensions from the GitHub Marketplace or build private ones within your organization, then type @ in a chat window to see a list of your available extensions. To use an extension, select the extension from the list or type the full slug name, then type your prompt.
To learn more, see Using extensions to integrate external tools with Copilot Chat.
Sharing Copilot Chat conversations
Note
 This feature is currently in public preview and subject to change. During the public preview, this feature is only available to users without enterprise or team memberships.

You can share Copilot Chat conversations from the immersive view (https://github.com/copilot). Shared conversations are public or private (i.e. permission-based), depending on the referenced content, for example, a conversation about a private repository. If you share a private conversation, the recipient must have the necessary permissions to view the content.
Once you share a conversation, the recipient can view the conversation, and continue it from the point you shared it. Any changes made to the conversation after you share it are not included in the shared link.


In the top right of any page on GitHub, click the  GitHub Copilot icon next to the search bar.


To view a conversation in immersive mode, click  Immersive.


Once you submit your first prompt, a share button will appear in the upper right corner. Click  Share to open the share dialog.



To share the conversation, click Share. This will generate a link to the conversation.


To copy the conversation link, click the  copy icon. The link is copied to your clipboard.


Sharing feedback about GitHub Copilot Chat in GitHub
Note
 The ability to provide feedback to GitHub about Copilot pull request summaries is dependent on enterprise settings. For more information, see Managing policies and features for Copilot in your enterprise.

To give feedback about a particular Copilot Chat response, click either the thumbs up or thumbs down icon at the bottom of each chat response.
To give feedback about Copilot Chat in general, click the ellipsis (...) at the top right of the chat panel, then click  Give feedback.
Further reading

Asking GitHub Copilot questions in your IDE.
Asking GitHub Copilot questions in GitHub Mobile.\n\n\n\nGitHub Copilot/Copilot Chat CookbookCopilot Chat CookbookFind examples of prompts to use with GitHub Copilot Chat.SpotlightGenerate unit testsCopilot Chat can help with generating unit tests for a function.Improving code readability and maintainabilityLearn how to improve your code readability and maintainability.Debugging invalid JSONCopilot can identify and resolve syntax errors or structural issues in JSON data.Explore 23 prompt articlesCategory: AllComplexity: AllReset filtersDebugging invalid JSONCopilot Chat can identify and resolve syntax errors or structural issues in JSON data.Debugging codeIntermediateHandling API rate limitsCopilot Chat can help handle API  rate limits by suggesting code that detects implements retry logic.Debugging codeIntermediateExploring potential feature implementationsCopilot Chat can help explore different approaches for implementing a single feature.Functionality analysisIntermediateAnalyzing and incorporating user feedbackCopilot Chat can enhance the process of incorporating user feedback into your project.Functionality analysisIntermediateImproving code readability and maintainabilityCopilot Chat can suggest ways to make your code easier to understand and maintain.Refactoring codeSimpleFixing lint errorsCopilot Chat can suggest ways to fix issues identified by a code linter.Refactoring codeIntermediateRefactoring for performance optimizationCopilot Chat can suggest ways to speed up slow-running code.Refactoring codeSimpleRefactoring to implement a design patternCopilot Chat can suggest design patterns that you can use to improve your code.Refactoring codeIntermediateRefactoring data access layersCopilot Chat can suggest ways to decouple your data access code from your business logic, making an application easier to maintain and scale.Refactoring codeAdvancedDecoupling business logic from UI componentsCopilot Chat can help you separate your business logic from your user interface code, making it easier to maintain and scale your application.Refactoring codeAdvancedHandling cross-cutting concernsCopilot Chat can help you avoid code that relates to a concern other than the core concern of the method or function in which the code is located.Refactoring codeIntermediateSimplifying complex inheritance hierarchiesCopilot Chat can help you to refactor code to avoid classes with multiple layers of inheritance.Refactoring codeIntermediateFixing database deadlocks or data integrity issuesCopilot Chat can help you avoid code that causes slow or blocked database operations, or tables with missing or incorrect data.Refactoring codeAdvancedTranslating code to a different programming languageCopilot Chat can help you rewrite code to perform the same operations but in a different programming language.Refactoring codeSimpleDocumenting legacy codeCopilot Chat can help with documenting legacy code.Documenting codeSimpleExplaining legacy codeCopilot Chat can help with explaining unfamiliar code.Documenting codeSimpleExplaining complex algorithms or logicCopilot Chat can help add clear and concise documentation on complex algorithms or logic.Documenting codeIntermediateSyncing documentation with code changesCopilot Chat can help with keeping code documentation up-to-date.Documenting codeIntermediateWriting discussions or blog postsCopilot Chat can help you generate ideas, outline, or draft discussions or blog posts.Documenting codeSimpleGenerate unit testsCopilot Chat can help with generating unit tests for a function.Testing codeIntermediateCreate mock objects to abstract layersCopilot Chat can help with creating mock objects that you can use for unit tests.Testing codeIntermediateCreate end-to-end tests for a webpageCopilot Chat can help with generating end-to-end tests.Testing codeAdvancedFinding existing vulnerabilities in codeCopilot Chat can help find common vulnerabilities in your code and suggest fixes.Security analysisIntermediate\n\n\n\nGitHub Copilot/Build Copilot Extensions/Extensions quickstartQuickstart for GitHub Copilot Extensions using agentsBuild and try out GitHub's Blackbeard extension to learn about the development process for GitHub Copilot Extensions.Tool navigationBashCodespacesVisual Studio CodeIn this article1. Create and install a GitHub App2. Clone and host the Blackbeard agent locally3. Integrate and test the Blackbeard extension2. Clone and host the Blackbeard agent in a codespace3. Integrate and test the Blackbeard extension2. Clone and start the Blackbeard agent locally3. Expose your local server4. Integrate and test the Blackbeard extensionNext stepsThe Blackbeard extension is a GitHub Copilot Extension that comprises a GitHub App and a Copilot agent. The agent responds to chat requests in the style of a pirate, using Copilot's large language model (LLM) API and special system prompts. See About Copilot agents.
This guide uses a simple agent implementation, but the process is similar for skillsets. For information about the difference between agents and skillsets, see About building Copilot Extensions.
This quickstart is designed to help you build and chat with the Blackbeard extension as quickly as possible, so you can develop and test your extension without deploying infrastructure. For production, you'll need to host the application for your agent or skillset's endpoints on a publicly accessible server. To instead learn how to create a new GitHub Copilot Extension, see Setting up Copilot Extensions.
1. Create and install a GitHub App
In the developer settings for your GitHub account, create a GitHub App. Your GitHub App must have:

A name
A homepage URL
Webhooks deselected

After you create your app, click Install App in the sidebar, then install your app on your account.
For detailed instructions, see Creating a GitHub App for your Copilot Extension.

2. Clone and host the Blackbeard agent locally
Rather than deploying the Blackbeard agent as a web app, you can host your agent locally for a significantly faster build process.

Using the Terminal built into VS Code, clone the copilot-extensions/blackbeard-extension repository.
In the same Terminal, run npm install to install the necessary dependencies, then run npm start to start the Blackbeard agent on port 3000.
In the "Ports" tab of the VS Code panel, click Forward a port or Add port, then add port 3000.
Right-click the port and set the visibility to "Public," then copy the local address.

3. Integrate and test the Blackbeard extension
After you set up your GitHub App and Blackbeard agent, you can integrate the agent with your app and test the Blackbeard extension. You need to make the following changes to your GitHub App settings:

In the "General" settings, in the "Callback URL" field, paste the local address for your agent.
In the "Permissions & events" settings, grant read-only permissions to Copilot Chat.
In the "Copilot" settings, set your app type to "Agent," then fill out the remaining fields.

After you update your GitHub App settings, you can start chatting with your extension by typing @YOUR-EXTENSION-NAME in the Copilot Chat window, then sending a prompt as normal.
For more detailed instructions, see Configuring your GitHub App for your Copilot extension.


2. Clone and host the Blackbeard agent in a codespace
Rather than deploying the Blackbeard agent as a web app, you can host your agent in a codespace for a significantly faster build process.

Navigate to the copilot-extensions/blackbeard-extension repository. Select the  Code  dropdown menu, then click Create codespace on main.
To find your new codespace, select the  Code  dropdown menu. Next to your new codespace, select , then click  Open in Browser.
In the integrated Terminal, run npm start to start the Blackbeard agent on port 3000.
In the "Ports" tab of the VS Code panel, click Forward a port, then add port 3000.
Right-click the port and set the visibility to "Public," then copy the local address.

3. Integrate and test the Blackbeard extension
After you set up your GitHub App and Blackbeard agent, you can integrate the agent with your app and test the Blackbeard extension. You need to make the following changes to your GitHub App settings:

In the "General" settings, in the "Callback URL" field, paste the forwarded address for your agent.
In the "Permissions & events" settings, grant read-only permissions to Copilot Chat.
In the "Copilot" settings, set your app type to "Agent," then fill out the remaining fields.

After you update your GitHub App settings, you can start chatting with your extension by typing @YOUR-EXTENSION-NAME in the Copilot Chat window of a supported client or IDE, then sending a prompt as normal. For a list of supported clients and IDEs, see About building Copilot Extensions.
Note
 Chatting with GitHub Copilot Extensions in GitHub Codespaces is not supported.

For more detailed instructions, see Configuring your GitHub App for your Copilot extension.


2. Clone and start the Blackbeard agent locally
Rather than deploying the Blackbeard agent as a web app, you can host your agent locally for a significantly faster build process.

Using your command line application, clone the copilot-extensions/blackbeard-extension repository.
Run npm install to install the necessary dependencies, then run npm start to start the Blackbeard agent on port 3000.

3. Expose your local server
To make the Blackbeard agent accessible to the Copilot platform and GitHub, you need to expose your local server so it's reachable by HTTP requests. You can use any port forwarding or tunneling service to achieve this. For the following steps, we'll use ngrok.


Navigate to ngrok's download page, then install the appropriate version of ngrok for your operating system.


Navigate to the ngrok setup and installation page, then log in or sign up for an ngrok account.


To expose your local server, in a new window of your command line application, run the following command:
Shellngrok http http://localhost:3000
ngrok http http://localhost:3000



In your command line application, next to "Forwarding," copy the URL that ngrok assigned to your server.


4. Integrate and test the Blackbeard extension
To integrate your GitHub App with the Blackbeard agent, you need to make the following changes to your app settings:

In the "General" settings, in the "Callback URL" field, paste the URL for your exposed server.
In the "Permissions & events" settings, grant read-only permissions to Copilot Chat.
In the "Copilot" settings, set your app type to "Agent," then fill out the remaining fields.

After you update your GitHub App settings, you can start chatting with your extension by typing @YOUR-EXTENSION-NAME in the Copilot Chat window, then sending a prompt as normal.
For more detailed instructions, see Configuring your GitHub App for your Copilot extension.

Next steps
Now that you have a working GitHub Copilot Extension, you can try building on the Blackbeard agent to experiment with agent development.
To learn about more complex agent implementations, you can also review the following example agents and software development kit (SDK), all of which are available in the copilot-extensions organization:

GitHub Models: A more complex agent that lets you ask about and interact with various LLMs listed on the GitHub Marketplace through Copilot Chat. The GitHub Models agent makes use of function calling.
Function Calling: An example agent written in Go that demonstrates function calling and confirmation dialogs.
RAG Extension: An example agent written in Go that demonstrates a simple implementation of retrieval augmented generation.
Preview SDK: An SDK that streamlines the development of Copilot Extensions by handling request verification, payload parsing, and response formatting automatically. This SDK allows extension builders to focus more on creating core functionality and less on boilerplate code.\n\n\n\nGitHub Actions documentation Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you'd like, including CI/CD, and combine actions in a completely customized workflow.Overview Quickstart Start hereView all Writing workflowsGitHub Actions workflows can automate tasks throughout the software development lifecycle.Use cases and examplesExample workflows that demonstrate the features of GitHub Actions.About continuous integration with GitHub ActionsYou can create custom continuous integration (CI) workflows directly in your GitHub repository with GitHub Actions.Deploying with GitHub ActionsLearn how to control deployments with features like environments and concurrency.PopularWorkflow syntax for GitHub ActionsA workflow is a configurable automated process made up of one or more jobs. You must create a YAML file to define your workflow configuration.Writing workflowsGitHub Actions workflows can automate tasks throughout the software development lifecycle.Use cases and examplesExample workflows that demonstrate the features of GitHub Actions.What's newView all Upcoming breaking changes and releases for GitHub ActionsApril 15Windows arm64 hosted runners now available in public previewApril 14GitHub Actions: macOS 15 and Windows 2025 images are now generally availableApril 10GuidesUsing workflow templatesGitHub provides workflow templates for a variety of languages and tooling.@GitHubPublishing Node.js packagesYou can publish Node.js packages to a registry as part of your continuous integration (CI) workflow.@GitHubBuilding and testing PowerShellYou can create a continuous integration (CI) workflow to build and test your PowerShell project.@potatoqualiteeExplore guides All GitHub Actions docsAbout GitHub ActionsUnderstanding GitHub ActionsAbout continuous integration with GitHub ActionsAbout continuous deployment with GitHub ActionsWriting workflowsQuickstart for GitHub ActionsAbout workflowsUsing workflow templatesChoosing when your workflow runs • 3 articlesChoosing where your workflow runs • 2 articlesChoosing what your workflow does • 16 articlesWorkflow syntax for GitHub ActionsManaging workflow runs and deploymentsManaging workflow runs • 10 articlesManaging deployments • 5 articlesSharing automationsAvoiding duplicationCreating actions • 10 articlesReusing workflowsCreating workflow templates for your organizationSharing actions and workflows from your private repositorySharing actions and workflows with your organizationMonitoring and troubleshooting workflowsMonitoring workflows • 7 articlesTroubleshooting workflows • 4 articlesUsing GitHub-hosted runnersUsing GitHub-hosted runners • 3 articlesUsing larger runners • 4 articlesConnecting to a private network with GitHub-hosted runners • 3 articlesHosting your own runnersManaging self-hosted runners • 15 articlesManaging self-hosted runners with Actions Runner Controller • 7 articlesSecurity for GitHub ActionsSecurity guides • 5 articlesUsing artifact attestations • 4 articlesSecurity hardening your deployments • 9 articlesUse cases and examplesCreating an example workflowBuilding and testing • 12 articlesDeploying • 12 articlesPublishing packages • 5 articlesManaging projects • 5 articlesUsing containerized services • 3 articlesMigrating to GitHub ActionsUsing GitHub Actions Importer to automate migrations • 10 articlesManually migrating to GitHub Actions • 5 articlesAdministering GitHub ActionsUsage limits, billing, and administrationViewing GitHub Actions metricsSharing workflows, secrets, and runners with your organization\n\n\n\nGitHub Packages documentation Learn to safely publish and consume packages, store your packages alongside your code, and share your packages privately with your team or publicly with the open source community. You can also automate your packages with GitHub Actions.Quickstart Reference Start hereLearn GitHub PackagesYou can find out more about using packages in GitHub, including publishing new packages to GitHub Packages, view and install existing packages, and, in special circumstances, delete existing packages.Managing GitHub packages using GitHub Actions workflowsYou can safely publish and consume packages by building custom workflows that can also build, test, and deploy your code.Installing a packageYou can install a package from GitHub Packages and use the package as a dependency in your own project.PopularWorking with the npm registryYou can configure npm to publish packages to GitHub Packages and to use packages stored on GitHub Packages as dependencies in an npm project.Learn GitHub PackagesYou can find out more about using packages in GitHub, including publishing new packages to GitHub Packages, view and install existing packages, and, in special circumstances, delete existing packages.Working with the Apache Maven registryYou can configure Apache Maven to publish packages to GitHub Packages and to use packages stored on GitHub Packages as dependencies in a Java project.What's newView all Changes to token permission on packagesSeptember 26Fine-grained permissions and organization-level publishing are now available for the GitHub Packages RubyGems registryJanuary 10Fine-grained permissions and organization-level publishing are now available for the GitHub Packages NuGet registryDecember 09GuidesWorking with the Container registryYou can store and manage Docker and OCI images in the Container registry.@GitHubWorking with the npm registryYou can configure npm to publish packages to GitHub Packages and to use packages stored on GitHub Packages as dependencies in an npm project.@GitHubWorking with the RubyGems registryYou can configure RubyGems to publish a package to GitHub Packages and to use packages stored on GitHub Packages as dependencies in a Ruby project with Bundler.@GitHubAll GitHub Packages docsLearn GitHub PackagesIntroduction to GitHub PackagesAbout permissions for GitHub PackagesConfiguring a package's access control and visibilityConnecting a repository to a packagePublishing a packageViewing packagesInstalling a packageDeleting and restoring a packageWorking with a GitHub Packages registryWorking with the Container registryWorking with the Docker registryWorking with the RubyGems registryWorking with the npm registryWorking with the Apache Maven registryWorking with the Gradle registryWorking with the NuGet registryMigrating to the Container registry from the Docker registryManaging GitHub packages using GitHub Actions workflowsPublishing and installing a package with GitHub ActionsExample workflows for publishing a packageAbout GitHub Packages and GitHub Actions\n\n\n\nGitHub Pages documentation Learn how to create a website directly from a repository on GitHub. Explore website building tools like Jekyll and troubleshoot issues with your GitHub Pages site.Quickstart Overview Start hereConfiguring a publishing source for your GitHub Pages siteYou can configure your GitHub Pages site to publish when changes are pushed to a specific branch, or you can write a GitHub Actions workflow to publish your site.Creating a GitHub Pages siteYou can create a GitHub Pages site in a new or existing repository.Managing a custom domain for your GitHub Pages siteYou can set up or update certain DNS records and your repository settings to point the default domain for your GitHub Pages site to a custom domain.PopularAbout custom domains and GitHub PagesGitHub Pages supports using custom domains, or changing the root of your site's URL from the default, like octocat.github.io, to any domain you own.About GitHub Pages and JekyllJekyll is a static site generator with built-in support for GitHub Pages.Troubleshooting custom domains and GitHub PagesYou can check for common errors to resolve issues with custom domains or HTTPS for your GitHub Pages site.Securing your GitHub Pages site with HTTPSHTTPS adds a layer of encryption that prevents others from snooping on or tampering with traffic to your site. You can enforce HTTPS for your GitHub Pages site to transparently redirect all HTTP requests to HTTPS.What's newView all GitHub Pages with Custom GitHub Actions Workflows are now generally availableMarch 25GitHub Pages: Deprecating symlinks in non-Actions buildsFebruary 21GitHub Pages: Deprecating the theme pickerAugust 23GuidesCreating a custom 404 page for your GitHub Pages siteYou can display a custom 404 error page when people try to access nonexistent pages on your site.@GitHubAdding a theme to your GitHub Pages site using JekyllYou can personalize your Jekyll site by adding and customizing a theme.@GitHubTroubleshooting Jekyll build errors for GitHub Pages sitesYou can use Jekyll build error messages to troubleshoot problems with your GitHub Pages site.@GitHubAll GitHub Pages docsGetting started with GitHub PagesWhat is GitHub Pages?Creating a GitHub Pages siteGitHub Pages limitsUsing custom workflows with GitHub PagesConfiguring a publishing source for your GitHub Pages siteDeleting a GitHub Pages siteUnpublishing a GitHub Pages siteCreating a custom 404 page for your GitHub Pages siteSecuring your GitHub Pages site with HTTPSUsing submodules with GitHub PagesTroubleshooting 404 errors for GitHub Pages sitesSetting up a GitHub Pages site with JekyllAbout GitHub Pages and JekyllCreating a GitHub Pages site with JekyllTesting your GitHub Pages site locally with JekyllAdding content to your GitHub Pages site using JekyllSetting a Markdown processor for your GitHub Pages site using JekyllAdding a theme to your GitHub Pages site using JekyllAbout Jekyll build errors for GitHub Pages sitesTroubleshooting Jekyll build errors for GitHub Pages sitesConfiguring a custom domain for your GitHub Pages siteAbout custom domains and GitHub PagesManaging a custom domain for your GitHub Pages siteVerifying your custom domain for GitHub PagesTroubleshooting custom domains and GitHub Pages\n\n\n\nSecure coding documentation Build security into your GitHub workflow to secure your software supply chain, automatically find and fix vulnerabilities in your codebase, and prevent data leaks.Overview Run a point-in-time scan to assess your organization's exposure to secret leaks Start hereQuickstart for securing your repositoryManage access to your code. Find and fix vulnerable code and dependencies automatically.Working with secret scanning and push protectionAvoid leaking sensitive data by blocking pushes containing tokens and other secrets.Dependabot quickstart guideFind and fix vulnerable dependencies you rely on with Dependabot.Configuring default setup for code scanningQuickly set up code scanning to find and fix vulnerable code automatically.PopularAbout the secret risk assessmentLearn why it's so important to understand your organization's exposure to data leaks and how the secret risk assessment report gives an overview of your organization’s secret leak footprint.About coordinated disclosure of security vulnerabilitiesVulnerability disclosure is a coordinated effort between security reporters and repository maintainers.Best practices for preventing data leaks in your organizationLearn guidance and recommendations to help you avoid private or sensitive data present in your organization from being exposed.Best practices for fixing security alerts at scaleGuidance on how to create successful security campaigns that engage developers and help them grow their understanding of secure coding.What's newView all Transitive dependencies are now available for MavenMarch 26CodeQL adds support for Java 24 and other improvements in version 2.20.6March 11Dependabot grouped security updates generally availableMarch 28GuidesPlanning a trial of GitHub Advanced SecurityMake the most of your trial so you can decide whether Advanced Security products meet your business needs.@GitHubEnabling secret scanning featuresLearn how to enable secret scanning to detect secrets that are already visible in a repository, as well as push protection to proactively secure you against leaking additional secrets by blocking pushes containing secrets.@GitHubConfiguring default setup for code scanningQuickly set up code scanning to find and fix vulnerable code automatically.@GitHubConfiguring Dependabot security updatesYou can use Dependabot security updates or manual pull requests to easily update vulnerable dependencies.@GitHubAll Secure coding docsGetting started with secure codingGitHub security featuresDependabot quickstart guideQuickstart for securing your repositoryAdding a security policy to your repositoryAuditing security alertsBest practices for preventing data leaks in your organizationUnderstanding GitHub secret typesTrialing GitHub Advanced SecurityPlanning a trial of GitHub Advanced SecurityEnabling security features in your trial enterpriseExploring your enterprise trial of GitHub Secret ProtectionExploring your enterprise trial of GitHub Code SecuritySecuring your organizationIntroduction to securing your organization at scale • 2 articlesEnabling security features in your organization • 5 articlesManaging the security of your organization • 7 articlesUnderstanding your organization's exposure to leaked secrets • 4 articlesFixing security alerts at scale • 4 articlesTroubleshooting security configurations • 2 articlesKeeping secrets secure with secret scanningIntroduction to secret scanning • 4 articlesEnabling secret scanning features • 3 articlesManaging alerts from secret scanning • 5 articlesWorking with secret scanning and push protection • 4 articlesUsing advanced secret scanning and push protection features • 5 articlesEnhance your secret detection capabilities with Copilot secret scanning • 4 articlesTroubleshooting secret scanning and push protection • 1 articlesSecret scanning partnership program • 1 articlesFinding security vulnerabilities and errors in your code with code scanningIntroduction to code scanning • 2 articlesEnabling code scanning • 3 articlesCreating an advanced setup for code scanning • 6 articlesManaging code scanning alerts • 8 articlesManaging your code scanning configuration • 15 articlesIntegrating with code scanning • 4 articlesTroubleshooting code scanning • 21 articlesTroubleshooting SARIF uploads • 6 articlesUse the CodeQL CLI to secure your codeGetting started with the CodeQL CLI • 6 articlesUsing the advanced functionality of the CodeQL CLI • 15 articlesCodeQL CLI commands manual • 75 articlesUse CodeQL inside Visual Studio CodeGetting started with the CodeQL for Visual Studio Code extension • 6 articlesUsing the advanced functionality of the CodeQL for VS Code extension • 9 articlesTroubleshooting CodeQL for VS Code • 2 articlesWorking with security advisoriesWorking with global security advisories from the GitHub Advisory Database • 4 articlesWorking with repository security advisories • 12 articlesGuidance on reporting and writing information about vulnerabilities • 4 articlesSecuring your software supply chainUnderstanding your software supply chain • 13 articlesEnd-to-end supply chain • 4 articlesKeeping your supply chain secure with DependabotEcosystems supported by Dependabot • 2 articlesIdentifying vulnerabilities in your project's dependencies with Dependabot alerts • 4 articlesPrioritizing Dependabot alerts with Dependabot auto-triage rules • 4 articlesAutomatically updating dependencies with known vulnerabilities with Dependabot security updates • 3 articlesKeeping your dependencies updated automatically with Dependabot version updates • 5 articlesWorking with Dependabot • 8 articlesMaintaining dependencies at scale • 3 articlesTroubleshooting Dependabot • 6 articlesViewing security information for your organization or enterpriseAbout security overviewViewing security insightsAssessing adoption of security featuresAssessing the security risk of your codeFiltering alerts in security overviewExporting data from security overviewViewing metrics for secret scanning push protectionViewing metrics for pull request alertsReviewing requests to bypass push protection\n\n\n\nSecure coding/Secret scanningKeeping secrets secure with secret scanningLet GitHub do the hard work of ensuring that tokens, private keys, and other code secrets are not exposed in your repository.Who can use this feature?Secret scanning is available for the following repository types:

Public repositories on GitHub.com
Organization-owned repositories on GitHub Team with GitHub Secret Protection enabled
Introduction to secret scanningAbout secret scanningAbout push protectionAbout secret scanning for partnersSupported secret scanning patternsEnabling secret scanning featuresEnabling secret scanning for your repositoryEnabling push protection for your repositoryEnabling validity checks for your repositoryManaging alerts from secret scanningAbout secret scanning alertsViewing and filtering alerts from secret scanningEvaluating alerts from secret scanningResolving alerts from secret scanningMonitoring alerts from secret scanningWorking with secret scanning and push protectionPush protection for usersWorking with push protection from the command lineWorking with push protection from the REST APIWorking with push protection in the GitHub UIUsing advanced secret scanning and push protection featuresExcluding folders and files from secret scanningNon-provider patternsCustom patternsDelegated bypass for push protectionEnabling delegated alert dismissal for secret scanningEnhance your secret detection capabilities with Copilot secret scanningResponsible detection of generic secrets with Copilot secret scanningEnabling Copilot secret scanning's generic secret detectionResponsible generation of regular expressions with Copilot secret scanningGenerating regular expressions for custom patterns with Copilot secret scanningTroubleshooting secret scanning and push protectionTroubleshooting secret scanningSecret scanning partnership programSecret scanning partner program\n\n\n\nSecure coding/Supply chain securitySecuring your software supply chainVisualize, maintain, and secure the dependencies in your software supply chain.Understanding your software supply chainAbout supply chain securityAbout the dependency graphDependency graph supported package ecosystemsConfiguring the dependency graphConfiguring automatic dependency submission for your repositoryExporting a software bill of materials for your repositoryUsing the dependency submission APIAbout dependency reviewConfiguring the dependency review actionCustomizing your dependency review action configurationEnforcing dependency review across an organizationExploring the dependencies of a repositoryTroubleshooting the dependency graphEnd-to-end supply chainSecuring your end-to-end supply chainBest practices for securing accountsBest practices for securing code in your supply chainBest practices for securing your build system\n\n\n\nSecure coding/DependabotKeeping your supply chain secure with DependabotMonitor vulnerabilities in dependencies used in your project and keep your dependencies up-to-date with Dependabot.Ecosystems supported by DependabotDependabot supported ecosystems and repositoriesOptimizing Java packages for Dependabot updatesIdentifying vulnerabilities in your project's dependencies with Dependabot alertsAbout Dependabot alertsConfiguring Dependabot alertsViewing and updating Dependabot alertsConfiguring notifications for Dependabot alertsPrioritizing Dependabot alerts with Dependabot auto-triage rulesAbout Dependabot auto-triage rulesUsing GitHub preset rules to prioritize Dependabot alertsCustomizing auto-triage rules to prioritize Dependabot alertsManaging alerts that have been automatically dismissed by a Dependabot auto-triage ruleAutomatically updating dependencies with known vulnerabilities with Dependabot security updatesAbout Dependabot security updatesConfiguring Dependabot security updatesCustomizing pull requests for Dependabot security updatesKeeping your dependencies updated automatically with Dependabot version updatesAbout Dependabot version updatesConfiguring Dependabot version updatesOptimizing the creation of pull requests for Dependabot version updatesCustomizing Dependabot pull requests to fit your processesControlling which dependencies are updated by DependabotWorking with DependabotManaging pull requests for dependency updatesAbout Dependabot on GitHub Actions runnersAutomating Dependabot with GitHub ActionsKeeping your actions up to date with DependabotConfiguring access to private registries for DependabotGuidance for the configuration of private registries for DependabotDependabot options referenceSetting up Dependabot to run on self-hosted action runners using the Actions Runner ControllerMaintaining dependencies at scaleBest practices for maintaining dependenciesManaging Dependabot on self-hosted runnersRemoving Dependabot access to public registriesTroubleshooting DependabotListing dependencies configured for version updatesViewing Dependabot job logsDependabot update pull requests no longer generatedTroubleshooting Dependabot errorsTroubleshooting Dependabot on GitHub ActionsTroubleshooting the detection of vulnerable dependencies\n\n\n\n