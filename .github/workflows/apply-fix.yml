# .github/workflows/apply-fix.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: Apply Fix on Fail
concurrency:
  issue-worker
  branch-main
run-name: "Apply Fix on Fail [${{ github.ref_name }}]"

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'The source file whose content is used in the resolution prompt. e.g. "src/lib/main.js"'
        required: false
        type: string
        default: 'src/lib/main.js'
      testFile:
        description: 'The test file to run to validate the resolution. e.g. "tests/unit/main.test.js"'
        required: false
        type: string
        default: 'tests/unit/main.test.js'
      applyFixEvenIfTestsPass:
        description: 'Apply the fix even if the tests pass. e.g. true'
        required: false
        type: boolean
        default: true
  workflow_run:
    workflows:
      - "Tests"
    types:
      - completed
    branches:
      - issue-*
      - apply-formatting
      - apply-update
  schedule:
    - cron: '15 */2 * * *' # Run every 1 hour at 0 minutes past
    #- cron: '15 2 * * *' # Run at 2:15am

jobs:

  npm-test:
    name: 'npm test with coverage'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test

  npm-build:
    name: 'npm run build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  npm-run:
    name: 'npm run start'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: ${{ vars.MAIN_SCRIPT || 'npm run start' }}

  needs-fix:
    needs:
      - npm-test
      - npm-build
      - npm-run
    if: >
      ${{ always() && 
        (
          needs.npm-test.result != 'success' ||
          needs.npm-build.result != 'success' ||
          needs.npm-run.result != 'success' ||
          inputs.applyFixEvenIfTestsPass == true
        )
      }}
    runs-on: ubuntu-latest
    steps:
    - name: set-needs-fix
      id: set-needs-fix
      uses: actions/github-script@v7
      with:
        script: |
          core.info('needs.npm-test.result:${{ needs.npm-test.result }}');
          core.info('needs.npm-build.result:${{ needs.npm-build.result }}');
          core.info('needs.npm-run.result:${{ needs.npm-run.result }}');
          core.info('inputs.applyFixEvenIfTestsPass:${{ inputs.applyFixEvenIfTestsPass }}');
      
          const npmTestResult = '${{ needs.npm-test.result }}';
          const npmBuildResult = '${{ needs.npm-build.result }}';
          const npmRunResult = '${{ needs.npm-run.result }}';
          const applyFixEvenIfTestsPass = '${{ inputs.applyFixEvenIfTestsPass }}' === 'true';
      
          core.info(`npmTestResult: ${npmTestResult}`);
          core.info(`npmBuildResult: ${npmBuildResult}`);
          core.info(`npmRunResult: ${npmRunResult}`);
          core.info(`applyFixEvenIfTestsPass: ${applyFixEvenIfTestsPass}`);
      
          const needsFix = npmTestResult !== 'success' || npmBuildResult !== 'success' || npmRunResult !== 'success' || applyFixEvenIfTestsPass;
          core.info(`Needs Fix: ${needsFix}`);
      
          core.setOutput('needsFix', `${needsFix}`);
    outputs:
      needsFix: ${{ steps.set-needs-fix.outputs.needsFix }}

  apply-fix:
    needs:
      - needs-fix
    if: ${{ always() && needs.needs-fix.outputs.needsFix == 'true' }}
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-apply-fix.yml@1.9.2'
    with:
      target: ${{ inputs.target || 'src/lib/main.js' }}
      testFile: ${{ inputs.testFile || 'tests/unit/main.test.js' }}
      readmeFile: 'README.md'
      contributingFile: 'CONTRIBUTING.md'
      dependenciesFile: 'package.json'
      formattingFile: '.prettierrc'
      lintingFile: 'eslint.config.js'
      buildScript: 'npm run build'
      testScript: 'npm test'
      mainScript: ${{ vars.MAIN_SCRIPT || 'npm run start' }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o3-mini' }}
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  npm-test-after-fix:
    needs:
      - apply-fix
    name: 'npm test with coverage'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test

  npm-build-after-fix:
    needs:
      - apply-fix
    name: 'npm run build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  npm-run-after-fix:
    needs:
      - apply-fix
    name: 'npm run start'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: ${{ vars.MAIN_SCRIPT || 'npm run start' }}

  create-pr:
    needs:
      - apply-fix
      - npm-test-after-fix
      - npm-build-after-fix
      - npm-run-after-fix
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      checks: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-create-pr.yml@1.9.2'
    with:
      branch: '${{ github.ref_name }}'
      baseBranch: 'main'
      gitCommitMessage: 'Fix applied for failing tests'
      label: 'automerge'
