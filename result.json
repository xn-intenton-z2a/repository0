{
  "message": "Add refreshed CLI documentation in sandbox/docs/README.md",
  "updatedFile01Filepath": "sandbox/docs/README.md",
  "updatedFile01Contents": "# CLI Sandbox Tool\n\n[MISSION.md](../../MISSION.md) | [CONTRIBUTING.md](../../CONTRIBUTING.md) | [LICENSE.md](../../LICENSE.md)\n\n## Overview\n\nThis repository provides a CLI sandbox tool implemented in `sandbox/source/main.js` for commands such as `help`, `mission`, `version`, `echo`, and more.\n\n## Whatâ€™s Inside\n\n- **CLI entrypoint:** `sandbox/source/main.js`\n- **Feature documentation:** files under `sandbox/features/`\n- **Tests:** files under `sandbox/tests/` and `tests/unit/`\n- **Additional docs:** `sandbox/docs/CLI_USAGE.md`\n\n## Getting Started\n\n1. Install dependencies:\n   ```bash\n   npm install\n   ```\n2. Run the test suite:\n   ```bash\n   npm test\n   ```\n3. Invoke the CLI:\n   ```bash\n   npm run start -- <command> [options]\n   ```\n\n## Commands\n\n**help**\n\nDisplay help message.\n\nExample:  \n```bash\nnpm run start -- help\n```\n\n**mission**\n\nPrint the mission statement.\n\nExample:  \n```bash\nnpm run start -- mission\n```\n\n**version**\n\nPrint the current version.\n\nExample:  \n```bash\nnpm run start -- version\n```\n\n**echo**\n\nEcho the provided arguments.\n\nExample:  \n```bash\nnpm run start -- echo Hello World\n```\n\n**features**\n\nList feature document headings.\n\nExample:  \n```bash\nnpm run start -- features\n```\n\n**mission-features**\n\nPrint mission then list features.\n\nExample:  \n```bash\nnpm run start -- mission-features\n```\n\n**csv-import**\n\nImport a CSV file and output a JSON array.\n\nExample:  \n```bash\nnpm run start -- csv-import data.csv\n```\n\n**render**\n\nRender an EJS template with optional JSON data.\n\nExample:  \n```bash\nnpm run start -- render template.ejs data.json\n```\n\n**replace / text-replace**\n\nSearch-and-replace in text files (literal or regex).\n\nExample:  \n```bash\nnpm run start -- replace file.txt --search foo --replace bar --all\n```\n\n**convert**\n\nConvert between `.env`, JSON, and YAML formats.\n\nExample:  \n```bash\nnpm run start -- convert config.env --to-json\n```\n\n**validate**\n\nValidate JSON syntax and optionally against a schema.\n\nExample:  \n```bash\nnpm run start -- validate data.json --schema schema.json\n```\n\n**markdown**\n\nConvert a Markdown file to HTML.\n\nExample:  \n```bash\nnpm run start -- markdown file.md --output file.html\n```\n\n**import-data**\n\nImport structured data into a SQLite database.\n\nExample:  \n```bash\nnpm run start -- import-data data.csv --db my.db --table users\n```",
  "updatedFile02Filepath": "unused",
  "updatedFile02Contents": "unused",
  "updatedFile03Filepath": "unused",
  "updatedFile03Contents": "unused",
  "updatedFile04Filepath": "unused",
  "updatedFile04Contents": "unused",
  "updatedFile05Filepath": "unused",
  "updatedFile05Contents": "unused",
  "updatedFile06Filepath": "unused",
  "updatedFile06Contents": "unused",
  "updatedFile07Filepath": "unused",
  "updatedFile07Contents": "unused",
  "updatedFile08Filepath": "unused",
  "updatedFile08Contents": "unused",
  "updatedFile09Filepath": "unused",
  "updatedFile09Contents": "unused",
  "updatedFile10Filepath": "unused",
  "updatedFile10Contents": "unused",
  "updatedFile11Filepath": "unused",
  "updatedFile11Contents": "unused",
  "updatedFile12Filepath": "unused",
  "updatedFile12Contents": "unused",
  "updatedFile13Filepath": "unused",
  "updatedFile13Contents": "unused",
  "updatedFile14Filepath": "unused",
  "updatedFile14Contents": "unused",
  "updatedFile15Filepath": "unused",
  "updatedFile15Contents": "unused",
  "updatedFile16Filepath": "unused",
  "updatedFile16Contents": "unused"
}